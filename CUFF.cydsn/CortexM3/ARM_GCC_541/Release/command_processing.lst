ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 40
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8AB0     		sub	sp, sp, #40
  44              		.cfi_def_cfa_offset 48
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E34B     		ldr	r3, .L51
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82730 		strb	r3, [r7, #39]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E14B     		ldr	r3, .L51
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DD48     		ldr	r0, .L51
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DB4B     		ldr	r3, .L51
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e D94A     		ldr	r2, .L51
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D74B     		ldr	r3, .L51
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 53E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
  78 0044 A72B     		cmp	r3, #167
  79 0046 00F24E82 		bhi	.L50
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 75030000 		.word	.L5+1
  85 0054 57030000 		.word	.L7+1
  86 0058 E7040000 		.word	.L50+1
  87 005c 7B030000 		.word	.L8+1
  88 0060 81030000 		.word	.L9+1
  89 0064 A5030000 		.word	.L10+1
  90 0068 3F030000 		.word	.L11+1
  91 006c E7040000 		.word	.L50+1
  92 0070 E7040000 		.word	.L50+1
  93 0074 D9030000 		.word	.L12+1
  94 0078 BF030000 		.word	.L13+1
  95 007c E7040000 		.word	.L50+1
  96 0080 5D030000 		.word	.L14+1
  97 0084 FB030000 		.word	.L15+1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 4


  98 0088 E7040000 		.word	.L50+1
  99 008c E7040000 		.word	.L50+1
 100 0090 E7040000 		.word	.L50+1
 101 0094 E7040000 		.word	.L50+1
 102 0098 E7040000 		.word	.L50+1
 103 009c E7040000 		.word	.L50+1
 104 00a0 E7040000 		.word	.L50+1
 105 00a4 E7040000 		.word	.L50+1
 106 00a8 E7040000 		.word	.L50+1
 107 00ac E7040000 		.word	.L50+1
 108 00b0 E7040000 		.word	.L50+1
 109 00b4 E7040000 		.word	.L50+1
 110 00b8 E7040000 		.word	.L50+1
 111 00bc E7040000 		.word	.L50+1
 112 00c0 E7040000 		.word	.L50+1
 113 00c4 E7040000 		.word	.L50+1
 114 00c8 E7040000 		.word	.L50+1
 115 00cc E7040000 		.word	.L50+1
 116 00d0 E7040000 		.word	.L50+1
 117 00d4 E7040000 		.word	.L50+1
 118 00d8 E7040000 		.word	.L50+1
 119 00dc E7040000 		.word	.L50+1
 120 00e0 E7040000 		.word	.L50+1
 121 00e4 E7040000 		.word	.L50+1
 122 00e8 E7040000 		.word	.L50+1
 123 00ec E7040000 		.word	.L50+1
 124 00f0 E7040000 		.word	.L50+1
 125 00f4 E7040000 		.word	.L50+1
 126 00f8 E7040000 		.word	.L50+1
 127 00fc E7040000 		.word	.L50+1
 128 0100 E7040000 		.word	.L50+1
 129 0104 E7040000 		.word	.L50+1
 130 0108 E7040000 		.word	.L50+1
 131 010c E7040000 		.word	.L50+1
 132 0110 E7040000 		.word	.L50+1
 133 0114 E7040000 		.word	.L50+1
 134 0118 E7040000 		.word	.L50+1
 135 011c E7040000 		.word	.L50+1
 136 0120 E7040000 		.word	.L50+1
 137 0124 E7040000 		.word	.L50+1
 138 0128 E7040000 		.word	.L50+1
 139 012c E7040000 		.word	.L50+1
 140 0130 E7040000 		.word	.L50+1
 141 0134 E7040000 		.word	.L50+1
 142 0138 E7040000 		.word	.L50+1
 143 013c E7040000 		.word	.L50+1
 144 0140 E7040000 		.word	.L50+1
 145 0144 E7040000 		.word	.L50+1
 146 0148 E7040000 		.word	.L50+1
 147 014c E7040000 		.word	.L50+1
 148 0150 E7040000 		.word	.L50+1
 149 0154 E7040000 		.word	.L50+1
 150 0158 E7040000 		.word	.L50+1
 151 015c E7040000 		.word	.L50+1
 152 0160 E7040000 		.word	.L50+1
 153 0164 E7040000 		.word	.L50+1
 154 0168 E7040000 		.word	.L50+1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 5


 155 016c E7040000 		.word	.L50+1
 156 0170 E7040000 		.word	.L50+1
 157 0174 E7040000 		.word	.L50+1
 158 0178 E7040000 		.word	.L50+1
 159 017c E7040000 		.word	.L50+1
 160 0180 E7040000 		.word	.L50+1
 161 0184 E7040000 		.word	.L50+1
 162 0188 E7040000 		.word	.L50+1
 163 018c E7040000 		.word	.L50+1
 164 0190 E7040000 		.word	.L50+1
 165 0194 E7040000 		.word	.L50+1
 166 0198 E7040000 		.word	.L50+1
 167 019c E7040000 		.word	.L50+1
 168 01a0 E7040000 		.word	.L50+1
 169 01a4 E7040000 		.word	.L50+1
 170 01a8 E7040000 		.word	.L50+1
 171 01ac E7040000 		.word	.L50+1
 172 01b0 E7040000 		.word	.L50+1
 173 01b4 E7040000 		.word	.L50+1
 174 01b8 E7040000 		.word	.L50+1
 175 01bc E7040000 		.word	.L50+1
 176 01c0 E7040000 		.word	.L50+1
 177 01c4 E7040000 		.word	.L50+1
 178 01c8 E7040000 		.word	.L50+1
 179 01cc E7040000 		.word	.L50+1
 180 01d0 E7040000 		.word	.L50+1
 181 01d4 E7040000 		.word	.L50+1
 182 01d8 E7040000 		.word	.L50+1
 183 01dc E7040000 		.word	.L50+1
 184 01e0 E7040000 		.word	.L50+1
 185 01e4 E7040000 		.word	.L50+1
 186 01e8 E7040000 		.word	.L50+1
 187 01ec E7040000 		.word	.L50+1
 188 01f0 E7040000 		.word	.L50+1
 189 01f4 E7040000 		.word	.L50+1
 190 01f8 E7040000 		.word	.L50+1
 191 01fc E7040000 		.word	.L50+1
 192 0200 E7040000 		.word	.L50+1
 193 0204 E7040000 		.word	.L50+1
 194 0208 E7040000 		.word	.L50+1
 195 020c E7040000 		.word	.L50+1
 196 0210 E7040000 		.word	.L50+1
 197 0214 E7040000 		.word	.L50+1
 198 0218 E7040000 		.word	.L50+1
 199 021c E7040000 		.word	.L50+1
 200 0220 E7040000 		.word	.L50+1
 201 0224 E7040000 		.word	.L50+1
 202 0228 E7040000 		.word	.L50+1
 203 022c E7040000 		.word	.L50+1
 204 0230 E7040000 		.word	.L50+1
 205 0234 E7040000 		.word	.L50+1
 206 0238 E7040000 		.word	.L50+1
 207 023c E7040000 		.word	.L50+1
 208 0240 E7040000 		.word	.L50+1
 209 0244 E7040000 		.word	.L50+1
 210 0248 E7040000 		.word	.L50+1
 211 024c E7040000 		.word	.L50+1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 6


 212 0250 F1020000 		.word	.L16+1
 213 0254 2D030000 		.word	.L17+1
 214 0258 F7020000 		.word	.L18+1
 215 025c 39030000 		.word	.L19+1
 216 0260 FD020000 		.word	.L20+1
 217 0264 09030000 		.word	.L21+1
 218 0268 03030000 		.word	.L22+1
 219 026c E7040000 		.word	.L50+1
 220 0270 27030000 		.word	.L23+1
 221 0274 15030000 		.word	.L24+1
 222 0278 E7040000 		.word	.L50+1
 223 027c 1B030000 		.word	.L25+1
 224 0280 0F030000 		.word	.L26+1
 225 0284 E7040000 		.word	.L50+1
 226 0288 E7040000 		.word	.L50+1
 227 028c E7040000 		.word	.L50+1
 228 0290 33030000 		.word	.L27+1
 229 0294 E7040000 		.word	.L50+1
 230 0298 21030000 		.word	.L28+1
 231 029c E7040000 		.word	.L50+1
 232 02a0 E7040000 		.word	.L50+1
 233 02a4 E7040000 		.word	.L50+1
 234 02a8 E7040000 		.word	.L50+1
 235 02ac E7040000 		.word	.L50+1
 236 02b0 E7040000 		.word	.L50+1
 237 02b4 E7040000 		.word	.L50+1
 238 02b8 E7040000 		.word	.L50+1
 239 02bc E7040000 		.word	.L50+1
 240 02c0 E7040000 		.word	.L50+1
 241 02c4 E7040000 		.word	.L50+1
 242 02c8 E7040000 		.word	.L50+1
 243 02cc E7040000 		.word	.L50+1
 244 02d0 E7040000 		.word	.L50+1
 245 02d4 99040000 		.word	.L29+1
 246 02d8 9F040000 		.word	.L30+1
 247 02dc B7040000 		.word	.L31+1
 248 02e0 BD040000 		.word	.L32+1
 249 02e4 C3040000 		.word	.L33+1
 250 02e8 C9040000 		.word	.L34+1
 251 02ec CF040000 		.word	.L35+1
 252              		.p2align 1
 253              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 254              		.loc 1 78 0
 255 02f0 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 256              		.loc 1 79 0
 257 02f4 F8E0     		b	.L1
 258              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 7


 259              		.loc 1 84 0
 260 02f6 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 261              		.loc 1 85 0
 262 02fa F5E0     		b	.L1
 263              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 264              		.loc 1 90 0
 265 02fc FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 266              		.loc 1 91 0
 267 0300 F2E0     		b	.L1
 268              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 269              		.loc 1 96 0
 270 0302 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 271              		.loc 1 97 0
 272 0306 EFE0     		b	.L1
 273              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 274              		.loc 1 102 0
 275 0308 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 276              		.loc 1 103 0
 277 030c ECE0     		b	.L1
 278              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 279              		.loc 1 108 0
 280 030e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 281              		.loc 1 109 0
 282 0312 E9E0     		b	.L1
 283              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 284              		.loc 1 114 0
 285 0314 FFF7FEFF 		bl	cmd_get_velocities
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 8


 115:..\src/command_processing.c ****             break;
 286              		.loc 1 115 0
 287 0318 E6E0     		b	.L1
 288              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 289              		.loc 1 120 0
 290 031a FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 291              		.loc 1 121 0
 292 031e E3E0     		b	.L1
 293              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 294              		.loc 1 126 0
 295 0320 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 296              		.loc 1 127 0
 297 0324 E0E0     		b	.L1
 298              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 299              		.loc 1 132 0
 300 0326 FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 301              		.loc 1 133 0
 302 032a DDE0     		b	.L1
 303              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 304              		.loc 1 138 0
 305 032c FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 306              		.loc 1 139 0
 307 0330 DAE0     		b	.L1
 308              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 309              		.loc 1 144 0
 310 0332 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
 311              		.loc 1 145 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 9


 312 0336 D7E0     		b	.L1
 313              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 314              		.loc 1 150 0
 315 0338 FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 316              		.loc 1 151 0
 317 033c D4E0     		b	.L1
 318              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 319              		.loc 1 156 0
 320 033e 164B     		ldr	r3, .L51+4
 321 0340 1B88     		ldrh	r3, [r3]
 322 0342 7B61     		str	r3, [r7, #20]
 323              	.LBB10:
 324              	.LBB11:
 325              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 10


  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 11


  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 12


 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 13


 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 14


 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 15


 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 16


 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 17


 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 18


 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 19


 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 20


 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 21


 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 22


 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 23


 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 326              		.loc 2 792 0
 327 0344 7B69     		ldr	r3, [r7, #20]
 328              		.syntax unified
 329              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 330 0346 5BBA     		rev16 r3, r3
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334 0348 3B61     		str	r3, [r7, #16]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 335              		.loc 2 793 0
 336 034a 3B69     		ldr	r3, [r7, #16]
 337              	.LBE11:
 338              	.LBE10:
 339              		.loc 1 156 0
 340 034c 9BB2     		uxth	r3, r3
 341 034e 1846     		mov	r0, r3
 342 0350 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 343              		.loc 1 157 0
 344 0354 C8E0     		b	.L1
 345              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 346              		.loc 1 162 0
 347 0356 FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 348              		.loc 1 163 0
 349 035a C5E0     		b	.L1
 350              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 24


 351              		.loc 1 168 0
 352 035c 0E4B     		ldr	r3, .L51+4
 353 035e 1B88     		ldrh	r3, [r3]
 354 0360 3B62     		str	r3, [r7, #32]
 355              	.LBB12:
 356              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 357              		.loc 2 792 0
 358 0362 3B6A     		ldr	r3, [r7, #32]
 359              		.syntax unified
 360              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 361 0364 5BBA     		rev16 r3, r3
 362              	@ 0 "" 2
 363              		.thumb
 364              		.syntax unified
 365 0366 FB60     		str	r3, [r7, #12]
 366              		.loc 2 793 0
 367 0368 FB68     		ldr	r3, [r7, #12]
 368              	.LBE13:
 369              	.LBE12:
 370              		.loc 1 168 0
 371 036a 9BB2     		uxth	r3, r3
 372 036c 1846     		mov	r0, r3
 373 036e FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 374              		.loc 1 169 0
 375 0372 B9E0     		b	.L1
 376              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 377              		.loc 1 174 0
 378 0374 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 379              		.loc 1 175 0
 380 0378 B6E0     		b	.L1
 381              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 382              		.loc 1 180 0
 383 037a FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 384              		.loc 1 181 0
 385 037e B3E0     		b	.L1
 386              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 387              		.loc 1 186 0
 388 0380 3220     		movs	r0, #50
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 25


 389 0382 FFF7FEFF 		bl	memStore
 390 0386 0346     		mov	r3, r0
 391 0388 002B     		cmp	r3, #0
 392 038a 07D0     		beq	.L38
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 393              		.loc 1 187 0
 394 038c 0120     		movs	r0, #1
 395 038e FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 396              		.loc 1 190 0
 397 0392 A9E0     		b	.L1
 398              	.L52:
 399              		.align	2
 400              	.L51:
 401 0394 00000000 		.word	g_rx
 402 0398 01000000 		.word	g_rx+1
 403              	.L38:
 189:..\src/command_processing.c ****             break;
 404              		.loc 1 189 0
 405 039c 0020     		movs	r0, #0
 406 039e FFF7FEFF 		bl	sendAcknowledgment
 407              		.loc 1 190 0
 408 03a2 A1E0     		b	.L1
 409              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 410              		.loc 1 195 0
 411 03a4 FFF7FEFF 		bl	memRestore
 412 03a8 0346     		mov	r3, r0
 413 03aa 002B     		cmp	r3, #0
 414 03ac 03D0     		beq	.L40
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 415              		.loc 1 196 0
 416 03ae 0120     		movs	r0, #1
 417 03b0 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 418              		.loc 1 199 0
 419 03b4 98E0     		b	.L1
 420              	.L40:
 198:..\src/command_processing.c ****             break;
 421              		.loc 1 198 0
 422 03b6 0020     		movs	r0, #0
 423 03b8 FFF7FEFF 		bl	sendAcknowledgment
 424              		.loc 1 199 0
 425 03bc 94E0     		b	.L1
 426              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 26


 204:..\src/command_processing.c ****             if(memInit())
 427              		.loc 1 204 0
 428 03be FFF7FEFF 		bl	memInit
 429 03c2 0346     		mov	r3, r0
 430 03c4 002B     		cmp	r3, #0
 431 03c6 03D0     		beq	.L42
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 432              		.loc 1 205 0
 433 03c8 0120     		movs	r0, #1
 434 03ca FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 435              		.loc 1 208 0
 436 03ce 8BE0     		b	.L1
 437              	.L42:
 207:..\src/command_processing.c ****             break;
 438              		.loc 1 207 0
 439 03d0 0020     		movs	r0, #0
 440 03d2 FFF7FEFF 		bl	sendAcknowledgment
 441              		.loc 1 208 0
 442 03d6 87E0     		b	.L1
 443              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 444              		.loc 1 214 0
 445 03d8 0120     		movs	r0, #1
 446 03da FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 215 0
 448 03de 4FF47A70 		mov	r0, #1000
 449 03e2 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 450              		.loc 1 216 0
 451 03e6 0020     		movs	r0, #0
 452 03e8 FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 453              		.loc 1 217 0
 454 03ec 4FF47A70 		mov	r0, #1000
 455 03f0 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 456              		.loc 1 218 0
 457 03f4 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 458              		.loc 1 219 0
 459 03f8 76E0     		b	.L1
 460              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 461              		.loc 1 224 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 27


 462 03fa 3D4B     		ldr	r3, .L53
 463 03fc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 464 03fe 1B02     		lsls	r3, r3, #8
 465 0400 1AB2     		sxth	r2, r3
 466 0402 3B4B     		ldr	r3, .L53
 467 0404 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 468 0406 1BB2     		sxth	r3, r3
 469 0408 1343     		orrs	r3, r3, r2
 470 040a 1AB2     		sxth	r2, r3
 471 040c 394B     		ldr	r3, .L53+4
 472 040e 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 473              		.loc 1 225 0
 474 0410 374B     		ldr	r3, .L53
 475 0412 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 476 0414 1B02     		lsls	r3, r3, #8
 477 0416 1AB2     		sxth	r2, r3
 478 0418 354B     		ldr	r3, .L53
 479 041a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 480 041c 1BB2     		sxth	r3, r3
 481 041e 1343     		orrs	r3, r3, r2
 482 0420 1AB2     		sxth	r2, r3
 483 0422 344B     		ldr	r3, .L53+4
 484 0424 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 485              		.loc 1 227 0
 486 0426 334B     		ldr	r3, .L53+4
 487 0428 B3F90230 		ldrsh	r3, [r3, #2]
 488 042c B3F1FF3F 		cmp	r3, #-1
 489 0430 0FD1     		bne	.L44
 490              		.loc 1 227 0 is_stmt 0 discriminator 1
 491 0432 304B     		ldr	r3, .L53+4
 492 0434 B3F90430 		ldrsh	r3, [r3, #4]
 493 0438 B3F1FF3F 		cmp	r3, #-1
 494 043c 09D1     		bne	.L44
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 495              		.loc 1 228 0 is_stmt 1
 496 043e 2D4B     		ldr	r3, .L53+4
 497 0440 0022     		movs	r2, #0
 498 0442 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 499              		.loc 1 229 0
 500 0444 2B4B     		ldr	r3, .L53+4
 501 0446 0022     		movs	r2, #0
 502 0448 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 503              		.loc 1 230 0
 504 044a 2A4B     		ldr	r3, .L53+4
 505 044c 0022     		movs	r2, #0
 506 044e 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 507              		.loc 1 231 0
 508 0450 4AE0     		b	.L1
 509              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             // Speed & repetitions saturations
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 28


 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 510              		.loc 1 234 0
 511 0452 284B     		ldr	r3, .L53+4
 512 0454 B3F90230 		ldrsh	r3, [r3, #2]
 513 0458 002B     		cmp	r3, #0
 514 045a 03DA     		bge	.L45
 235:..\src/command_processing.c ****                 calib.speed = 0;
 515              		.loc 1 235 0
 516 045c 254B     		ldr	r3, .L53+4
 517 045e 0022     		movs	r2, #0
 518 0460 5A80     		strh	r2, [r3, #2]	@ movhi
 519 0462 07E0     		b	.L46
 520              	.L45:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 521              		.loc 1 236 0
 522 0464 234B     		ldr	r3, .L53+4
 523 0466 B3F90230 		ldrsh	r3, [r3, #2]
 524 046a C82B     		cmp	r3, #200
 525 046c 02DD     		ble	.L46
 237:..\src/command_processing.c ****                 calib.speed = 200;
 526              		.loc 1 237 0
 527 046e 214B     		ldr	r3, .L53+4
 528 0470 C822     		movs	r2, #200
 529 0472 5A80     		strh	r2, [r3, #2]	@ movhi
 530              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 531              		.loc 1 239 0
 532 0474 1F4B     		ldr	r3, .L53+4
 533 0476 B3F90430 		ldrsh	r3, [r3, #4]
 534 047a 002B     		cmp	r3, #0
 535 047c 02DA     		bge	.L47
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 536              		.loc 1 240 0
 537 047e 1D4B     		ldr	r3, .L53+4
 538 0480 0022     		movs	r2, #0
 539 0482 9A80     		strh	r2, [r3, #4]	@ movhi
 540              	.L47:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 541              		.loc 1 245 0
 542 0484 1C4B     		ldr	r3, .L53+8
 543 0486 0022     		movs	r2, #0
 544 0488 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 545              		.loc 1 246 0
 546 048a 1A4B     		ldr	r3, .L53+4
 547 048c 0122     		movs	r2, #1
 548 048e 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 549              		.loc 1 248 0
 550 0490 0120     		movs	r0, #1
 551 0492 FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 29


 249:..\src/command_processing.c ****             break;
 552              		.loc 1 249 0
 553 0496 27E0     		b	.L1
 554              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 555              		.loc 1 254 0
 556 0498 FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 557              		.loc 1 255 0
 558 049c 24E0     		b	.L1
 559              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 560              		.loc 1 260 0
 561 049e 174B     		ldr	r3, .L53+12
 562 04a0 1B88     		ldrh	r3, [r3]
 563 04a2 FB61     		str	r3, [r7, #28]
 564              	.LBB14:
 565              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 566              		.loc 2 792 0
 567 04a4 FB69     		ldr	r3, [r7, #28]
 568              		.syntax unified
 569              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 570 04a6 5BBA     		rev16 r3, r3
 571              	@ 0 "" 2
 572              		.thumb
 573              		.syntax unified
 574 04a8 BB60     		str	r3, [r7, #8]
 575              		.loc 2 793 0
 576 04aa BB68     		ldr	r3, [r7, #8]
 577              	.LBE15:
 578              	.LBE14:
 579              		.loc 1 260 0
 580 04ac 9BB2     		uxth	r3, r3
 581 04ae 1846     		mov	r0, r3
 582 04b0 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 583              		.loc 1 261 0
 584 04b4 18E0     		b	.L1
 585              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 586              		.loc 1 266 0
 587 04b6 FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
 588              		.loc 1 267 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 30


 589 04ba 15E0     		b	.L1
 590              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 591              		.loc 1 272 0
 592 04bc FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 593              		.loc 1 273 0
 594 04c0 12E0     		b	.L1
 595              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 596              		.loc 1 278 0
 597 04c2 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 598              		.loc 1 279 0
 599 04c6 0FE0     		b	.L1
 600              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 601              		.loc 1 284 0
 602 04c8 FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 603              		.loc 1 285 0
 604 04cc 0CE0     		b	.L1
 605              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_FILESYSTEM
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 606              		.loc 1 290 0
 607 04ce 0B4B     		ldr	r3, .L53+12
 608 04d0 1B88     		ldrh	r3, [r3]
 609 04d2 BB61     		str	r3, [r7, #24]
 610              	.LBB16:
 611              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 612              		.loc 2 792 0
 613 04d4 BB69     		ldr	r3, [r7, #24]
 614              		.syntax unified
 615              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 616 04d6 5BBA     		rev16 r3, r3
 617              	@ 0 "" 2
 618              		.thumb
 619              		.syntax unified
 620 04d8 7B60     		str	r3, [r7, #4]
 621              		.loc 2 793 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 31


 622 04da 7B68     		ldr	r3, [r7, #4]
 623              	.LBE17:
 624              	.LBE16:
 625              		.loc 1 290 0
 626 04dc 9BB2     		uxth	r3, r3
 627 04de 1846     		mov	r0, r3
 628 04e0 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;             
 629              		.loc 1 291 0
 630 04e4 00E0     		b	.L1
 631              	.L50:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c ****             
 294:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 295:..\src/command_processing.c ****         default:
 296:..\src/command_processing.c ****             break;
 632              		.loc 1 296 0
 633 04e6 00BF     		nop
 634              	.L1:
 297:..\src/command_processing.c **** 
 298:..\src/command_processing.c ****     }
 299:..\src/command_processing.c **** }  
 635              		.loc 1 299 0
 636 04e8 2837     		adds	r7, r7, #40
 637              		.cfi_def_cfa_offset 8
 638 04ea BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 04ec 80BD     		pop	{r7, pc}
 642              	.L54:
 643 04ee 00BF     		.align	2
 644              	.L53:
 645 04f0 00000000 		.word	g_rx
 646 04f4 00000000 		.word	calib
 647 04f8 00000000 		.word	g_refNew
 648 04fc 01000000 		.word	g_rx+1
 649              		.cfi_endproc
 650              	.LFE64:
 651              		.size	commProcess, .-commProcess
 652              		.section	.text.infoSend,"ax",%progbits
 653              		.align	2
 654              		.global	infoSend
 655              		.thumb
 656              		.thumb_func
 657              		.type	infoSend, %function
 658              	infoSend:
 659              	.LFB65:
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                                     INFO SEND
 303:..\src/command_processing.c **** //==============================================================================
 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoSend(void){
 660              		.loc 1 305 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 1504
 663              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 32


 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 ADF5BC6D 		sub	sp, sp, #1504
 669              		.cfi_def_cfa_offset 1512
 670 0006 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 306:..\src/command_processing.c ****     char packet_string[1500];
 307:..\src/command_processing.c ****     
 308:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 672              		.loc 1 308 0
 673 0008 3B1D     		adds	r3, r7, #4
 674 000a 1846     		mov	r0, r3
 675 000c FFF7FEFF 		bl	prepare_generic_info
 309:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 676              		.loc 1 309 0
 677 0010 3B1D     		adds	r3, r7, #4
 678 0012 1846     		mov	r0, r3
 679 0014 FFF7FEFF 		bl	UART_RS485_PutString
 310:..\src/command_processing.c **** }
 680              		.loc 1 310 0
 681 0018 00BF     		nop
 682 001a 07F5BC67 		add	r7, r7, #1504
 683              		.cfi_def_cfa_offset 8
 684 001e BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0020 80BD     		pop	{r7, pc}
 688              		.cfi_endproc
 689              	.LFE65:
 690              		.size	infoSend, .-infoSend
 691 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 692              		.align	2
 693              		.global	infoGet
 694              		.thumb
 695              		.thumb_func
 696              		.type	infoGet, %function
 697              	infoGet:
 698              	.LFB66:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** 
 313:..\src/command_processing.c **** //==============================================================================
 314:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 315:..\src/command_processing.c **** //==============================================================================
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 699              		.loc 1 317 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 24008
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 ADF5BB4D 		sub	sp, sp, #23936
 708              		.cfi_def_cfa_offset 23944
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 33


 709 0006 92B0     		sub	sp, sp, #72
 710              		.cfi_def_cfa_offset 24016
 711 0008 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 000a 0246     		mov	r2, r0
 714 000c 07F14803 		add	r3, r7, #72
 715 0010 423B     		subs	r3, r3, #66
 716 0012 1A80     		strh	r2, [r3]	@ movhi
 318:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 717              		.loc 1 318 0
 718 0014 07F59C43 		add	r3, r7, #19968
 719 0018 03F12803 		add	r3, r3, #40
 720 001c 0022     		movs	r2, #0
 721 001e 1A60     		str	r2, [r3]
 722 0020 0433     		adds	r3, r3, #4
 723 0022 40F69C72 		movw	r2, #3996
 724 0026 0021     		movs	r1, #0
 725 0028 1846     		mov	r0, r3
 726 002a FFF7FEFF 		bl	memset
 319:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 727              		.loc 1 319 0
 728 002e 07F14803 		add	r3, r7, #72
 729 0032 403B     		subs	r3, r3, #64
 730 0034 0022     		movs	r2, #0
 731 0036 1A60     		str	r2, [r3]
 732 0038 0433     		adds	r3, r3, #4
 733 003a 44F61C62 		movw	r2, #19996
 734 003e 0021     		movs	r1, #0
 735 0040 1846     		mov	r0, r3
 736 0042 FFF7FEFF 		bl	memset
 320:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c ****     switch (info_type) {
 737              		.loc 1 322 0
 738 0046 07F14803 		add	r3, r7, #72
 739 004a 423B     		subs	r3, r3, #66
 740 004c 1B88     		ldrh	r3, [r3]
 741 004e 052B     		cmp	r3, #5
 742 0050 66D8     		bhi	.L66
 743 0052 01A2     		adr	r2, .L59
 744 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 745              		.p2align 2
 746              	.L59:
 747 0058 71000000 		.word	.L58+1
 748 005c 93000000 		.word	.L60+1
 749 0060 B5000000 		.word	.L61+1
 750 0064 DD000000 		.word	.L62+1
 751 0068 FF000000 		.word	.L63+1
 752 006c 1D010000 		.word	.L64+1
 753              		.p2align 1
 754              	.L58:
 323:..\src/command_processing.c ****         case INFO_ALL:
 324:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 755              		.loc 1 324 0
 756 0070 07F59C43 		add	r3, r7, #19968
 757 0074 03F12803 		add	r3, r3, #40
 758 0078 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 34


 759 007a FFF7FEFF 		bl	prepare_generic_info
 325:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 760              		.loc 1 325 0
 761 007e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 326:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 762              		.loc 1 326 0
 763 0082 07F59C43 		add	r3, r7, #19968
 764 0086 03F12803 		add	r3, r3, #40
 765 008a 1846     		mov	r0, r3
 766 008c FFF7FEFF 		bl	UART_RS485_PutString
 327:..\src/command_processing.c ****             break;
 767              		.loc 1 327 0
 768 0090 47E0     		b	.L65
 769              	.L60:
 328:..\src/command_processing.c ****         case CYCLES_INFO:
 329:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 770              		.loc 1 329 0
 771 0092 07F59C43 		add	r3, r7, #19968
 772 0096 03F12803 		add	r3, r3, #40
 773 009a 1846     		mov	r0, r3
 774 009c FFF7FEFF 		bl	prepare_counter_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 775              		.loc 1 330 0
 776 00a0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 777              		.loc 1 331 0
 778 00a4 07F59C43 		add	r3, r7, #19968
 779 00a8 03F12803 		add	r3, r3, #40
 780 00ac 1846     		mov	r0, r3
 781 00ae FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 782              		.loc 1 332 0
 783 00b2 36E0     		b	.L65
 784              	.L61:
 333:..\src/command_processing.c ****         case GET_SD_PARAM:
 334:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 785              		.loc 1 334 0
 786 00b4 07F59C43 		add	r3, r7, #19968
 787 00b8 03F12803 		add	r3, r3, #40
 788 00bc 4FF47A62 		mov	r2, #4000
 789 00c0 1946     		mov	r1, r3
 790 00c2 1B48     		ldr	r0, .L67
 791 00c4 FFF7FEFF 		bl	Read_SD_Closed_File
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 792              		.loc 1 335 0
 793 00c8 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 794              		.loc 1 336 0
 795 00cc 07F59C43 		add	r3, r7, #19968
 796 00d0 03F12803 		add	r3, r3, #40
 797 00d4 1846     		mov	r0, r3
 798 00d6 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 799              		.loc 1 337 0
 800 00da 22E0     		b	.L65
 801              	.L62:
 338:..\src/command_processing.c ****         case GET_SD_DATA:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 35


 339:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 802              		.loc 1 339 0
 803 00dc 07F14803 		add	r3, r7, #72
 804 00e0 403B     		subs	r3, r3, #64
 805 00e2 44F62061 		movw	r1, #20000
 806 00e6 1846     		mov	r0, r3
 807 00e8 FFF7FEFF 		bl	Read_SD_Current_Data
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 808              		.loc 1 340 0
 809 00ec FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 810              		.loc 1 341 0
 811 00f0 07F14803 		add	r3, r7, #72
 812 00f4 403B     		subs	r3, r3, #64
 813 00f6 1846     		mov	r0, r3
 814 00f8 FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 815              		.loc 1 342 0
 816 00fc 11E0     		b	.L65
 817              	.L63:
 343:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 344:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 818              		.loc 1 344 0
 819 00fe 07F14803 		add	r3, r7, #72
 820 0102 403B     		subs	r3, r3, #64
 821 0104 1846     		mov	r0, r3
 822 0106 FFF7FEFF 		bl	Get_SD_FS
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 823              		.loc 1 345 0
 824 010a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 825              		.loc 1 346 0
 826 010e 07F14803 		add	r3, r7, #72
 827 0112 403B     		subs	r3, r3, #64
 828 0114 1846     		mov	r0, r3
 829 0116 FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 830              		.loc 1 347 0
 831 011a 02E0     		b	.L65
 832              	.L64:
 348:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 349:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 350:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 833              		.loc 1 350 0
 834 011c FFF7FEFF 		bl	Read_SD_EMG_History_Data
 835              	.L66:
 351:..\src/command_processing.c ****         default:
 352:..\src/command_processing.c ****             break;
 836              		.loc 1 352 0
 837 0120 00BF     		nop
 838              	.L65:
 353:..\src/command_processing.c ****     }
 354:..\src/command_processing.c **** }
 839              		.loc 1 354 0 discriminator 1
 840 0122 00BF     		nop
 841 0124 07F5BB47 		add	r7, r7, #23936
 842 0128 4837     		adds	r7, r7, #72
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 36


 843              		.cfi_def_cfa_offset 8
 844 012a BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 012c 80BD     		pop	{r7, pc}
 848              	.L68:
 849 012e 00BF     		.align	2
 850              	.L67:
 851 0130 00000000 		.word	sdParam
 852              		.cfi_endproc
 853              	.LFE66:
 854              		.size	infoGet, .-infoGet
 855              		.global	__aeabi_i2f
 856              		.global	__aeabi_fdiv
 857              		.section	.rodata
 858              		.align	2
 859              	.LC88:
 860 0000 20557362 		.ascii	" Usb\000"
 860      00
 861 0005 000000   		.align	2
 862              	.LC89:
 863 0008 2048616E 		.ascii	" Handle\000"
 863      646C6500 
 864              		.align	2
 865              	.LC90:
 866 0010 20454D47 		.ascii	" EMG proportional\000"
 866      2070726F 
 866      706F7274 
 866      696F6E61 
 866      6C00
 867 0022 0000     		.align	2
 868              	.LC91:
 869 0024 20454D47 		.ascii	" EMG integral\000"
 869      20696E74 
 869      65677261 
 869      6C00
 870 0032 0000     		.align	2
 871              	.LC92:
 872 0034 20454D47 		.ascii	" EMG FCFS\000"
 872      20464346 
 872      5300
 873 003e 0000     		.align	2
 874              	.LC93:
 875 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 875      20464346 
 875      53204164 
 875      76616E63 
 875      656400
 876 0053 00       		.align	2
 877              	.LC94:
 878 0054 204A6F79 		.ascii	" Joystick\000"
 878      73746963 
 878      6B00
 879 005e 0000     		.align	2
 880              	.LC95:
 881 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 881      2070726F 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 37


 881      706F7274 
 881      696F6E61 
 881      6C204E6F 
 882 0082 0000     		.align	2
 883              	.LC96:
 884 0084 20506F73 		.ascii	" Position\000"
 884      6974696F 
 884      6E00
 885 008e 0000     		.align	2
 886              	.LC97:
 887 0090 2050574D 		.ascii	" PWM\000"
 887      00
 888 0095 000000   		.align	2
 889              	.LC98:
 890 0098 20437572 		.ascii	" Current\000"
 890      72656E74 
 890      00
 891 00a1 000000   		.align	2
 892              	.LC99:
 893 00a4 20506F73 		.ascii	" Position and Current\000"
 893      6974696F 
 893      6E20616E 
 893      64204375 
 893      7272656E 
 894 00ba 0000     		.align	2
 895              	.LC100:
 896 00bc 20594553 		.ascii	" YES\000\000"
 896      0000
 897 00c2 0000     		.align	2
 898              	.LC101:
 899 00c4 204E4F00 		.ascii	" NO\000\000"
 899      00
 900 00c9 000000   		.align	2
 901              	.LC102:
 902 00cc 20526967 		.ascii	" Right\000\000"
 902      68740000 
 903              		.align	2
 904              	.LC103:
 905 00d4 204C6566 		.ascii	" Left\000\000"
 905      740000
 906 00db 00       		.align	2
 907              	.LC104:
 908 00dc 204F4646 		.ascii	" OFF\000\000"
 908      0000
 909 00e2 0000     		.align	2
 910              	.LC105:
 911 00e4 204F4E00 		.ascii	" ON\000\000"
 911      00
 912 00e9 000000   		.align	2
 913              	.LC106:
 914 00ec 204E6F6E 		.ascii	" None\000\000"
 914      650000
 915 00f3 00       		.align	2
 916              	.LC107:
 917 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 917      52544320 
 917      626F6172 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 38


 917      640000
 918 0103 00       		.align	2
 919              	.LC108:
 920 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 920      6920626F 
 920      61726420 
 920      5B4E2F41 
 920      5D0000
 921 0117 00       		.align	2
 922              	.LC109:
 923 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 923      6572205B 
 923      4E2F415D 
 923      0000
 924 0126 0000     		.align	2
 925              	.LC110:
 926 0128 204C6F77 		.ascii	" Low\000\000"
 926      0000
 927 012e 0000     		.align	2
 928              	.LC111:
 929 0130 20486967 		.ascii	" High\000\000"
 929      680000
 930 0137 00       		.align	2
 931              	.LC112:
 932 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 932      45524943 
 932      20555345 
 932      520000
 933 0147 00       		.align	2
 934              	.LC113:
 935 0148 204D4152 		.ascii	" MARIA\000\000"
 935      49410000 
 936              		.align	2
 937              	.LC114:
 938 0150 20524F5A 		.ascii	" ROZA\000\000"
 938      410000
 939 0157 00       		.align	2
 940              	.LC115:
 941 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 941      33383837 
 941      20285374 
 941      616E6461 
 941      72642900 
 942 016d 000000   		.align	2
 943              	.LC116:
 944 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 944      35303139 
 944      20284869 
 944      67682070 
 944      6F776572 
 945 0187 00       		.align	2
 946              	.LC117:
 947 0188 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 947      5448414E 
 947      44205052 
 947      4F0000
 948 0197 00       		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 39


 949              	.LC118:
 950 0198 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 950      45524943 
 950      2032204D 
 950      4F544F52 
 950      530000
 951 01ab 00       		.align	2
 952              	.LC119:
 953 01ac 20414952 		.ascii	" AIR CHAMBERS\000\000"
 953      20434841 
 953      4D424552 
 953      530000
 954 01bb 00       		.align	2
 955              	.LC120:
 956 01bc 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 956      4F424F43 
 956      4B205752 
 956      49535400 
 956      00
 957 01cd 000000   		.align	2
 958              	.LC121:
 959 01d0 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 959      5448414E 
 959      44203220 
 959      4D4F544F 
 959      52530000 
 960              		.align	2
 961              	.LC122:
 962 01e4 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 962      743A7379 
 962      6E322C20 
 962      536C6F77 
 962      3A73796E 
 963 01fb 00       		.align	2
 964              	.LC123:
 965 01fc 20466173 		.ascii	" Fast:wrist, Slow:hand\000\000"
 965      743A7772 
 965      6973742C 
 965      20536C6F 
 965      773A6861 
 966              		.align	2
 967              	.LC124:
 968 0214 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 968      773A7379 
 968      6E322C20 
 968      46617374 
 968      3A73796E 
 969 022b 00       		.align	2
 970              	.LC125:
 971 022c 20536C6F 		.ascii	" Slow:wrist, Fast:hand\000\000"
 971      773A7772 
 971      6973742C 
 971      20466173 
 971      743A6861 
 972              		.align	2
 973              	.LC126:
 974 0244 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 40


 974      73653A43 
 974      572C204F 
 974      70656E3A 
 974      43435700 
 975 0259 000000   		.align	2
 976              	.LC127:
 977 025c 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 977      73653A43 
 977      43572C20 
 977      4F70656E 
 977      3A435700 
 978              		.section	.text.get_param_list,"ax",%progbits
 979              		.align	2
 980              		.global	get_param_list
 981              		.thumb
 982              		.thumb_func
 983              		.type	get_param_list, %function
 984              	get_param_list:
 985              	.LFB67:
 355:..\src/command_processing.c **** 
 356:..\src/command_processing.c **** 
 357:..\src/command_processing.c **** //==============================================================================
 358:..\src/command_processing.c **** //                                                                GET PARAM LIST
 359:..\src/command_processing.c **** //==============================================================================
 360:..\src/command_processing.c **** 
 361:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 362:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 363:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 364:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 986              		.loc 1 364 0
 987              		.cfi_startproc
 988              		@ args = 16, pretend = 0, frame = 5656
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              		.cfi_def_cfa_offset 20
 992              		.cfi_offset 4, -20
 993              		.cfi_offset 5, -16
 994              		.cfi_offset 6, -12
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 ADF5B05D 		sub	sp, sp, #5632
 998              		.cfi_def_cfa_offset 5652
 999 0006 87B0     		sub	sp, sp, #28
 1000              		.cfi_def_cfa_offset 5680
 1001 0008 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 000a 07F11804 		add	r4, r7, #24
 1004 000e 0C3C     		subs	r4, r4, #12
 1005 0010 2060     		str	r0, [r4]
 1006 0012 07F11800 		add	r0, r7, #24
 1007 0016 1038     		subs	r0, r0, #16
 1008 0018 0160     		str	r1, [r0]
 1009 001a 07F11801 		add	r1, r7, #24
 1010 001e 1439     		subs	r1, r1, #20
 1011 0020 0A60     		str	r2, [r1]
 1012 0022 07F11802 		add	r2, r7, #24
 1013 0026 183A     		subs	r2, r2, #24
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 41


 1014 0028 1360     		str	r3, [r2]
 365:..\src/command_processing.c ****     
 366:..\src/command_processing.c ****     //Package to be sent variables
 367:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1015              		.loc 1 367 0
 1016 002a 07F15803 		add	r3, r7, #88
 1017 002e 043B     		subs	r3, r3, #4
 1018 0030 0022     		movs	r2, #0
 1019 0032 1A60     		str	r2, [r3]
 1020 0034 0433     		adds	r3, r3, #4
 1021 0036 41F2AA52 		movw	r2, #5546
 1022 003a 0021     		movs	r1, #0
 1023 003c 1846     		mov	r0, r3
 1024 003e FFF7FEFF 		bl	memset
 368:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1025              		.loc 1 368 0
 1026 0042 41F2AE53 		movw	r3, #5550
 1027 0046 07F5B052 		add	r2, r7, #5632
 1028 004a 02F11002 		add	r2, r2, #16
 1029 004e 1380     		strh	r3, [r2]	@ movhi
 369:..\src/command_processing.c **** 
 370:..\src/command_processing.c ****     //Auxiliary variables
 371:..\src/command_processing.c ****     uint8 CYDATA i, j;
 372:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1030              		.loc 1 372 0
 1031 0050 0023     		movs	r3, #0
 1032 0052 07F5B052 		add	r2, r7, #5632
 1033 0056 02F11502 		add	r2, r2, #21
 1034 005a 1370     		strb	r3, [r2]
 373:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1035              		.loc 1 373 0
 1036 005c 0023     		movs	r3, #0
 1037 005e 07F5B052 		add	r2, r7, #5632
 1038 0062 02F11402 		add	r2, r2, #20
 1039 0066 1370     		strb	r3, [r2]
 374:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1040              		.loc 1 374 0
 1041 0068 0023     		movs	r3, #0
 1042 006a 07F5B052 		add	r2, r7, #5632
 1043 006e 02F11302 		add	r2, r2, #19
 1044 0072 1370     		strb	r3, [r2]
 375:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 376:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1045              		.loc 1 376 0
 1046 0074 07F13803 		add	r3, r7, #56
 1047 0078 183B     		subs	r3, r3, #24
 1048 007a 0022     		movs	r2, #0
 1049 007c 1A60     		str	r2, [r3]
 1050 007e 0433     		adds	r3, r3, #4
 1051 0080 2E22     		movs	r2, #46
 1052 0082 0021     		movs	r1, #0
 1053 0084 1846     		mov	r0, r3
 1054 0086 FFF7FEFF 		bl	memset
 377:..\src/command_processing.c ****     float aux_float;
 378:..\src/command_processing.c ****     int16 aux_int16;
 379:..\src/command_processing.c ****     uint16 aux_uint16;
 380:..\src/command_processing.c ****     int32 aux_int32;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 42


 381:..\src/command_processing.c ****     uint32 aux_uint32;
 382:..\src/command_processing.c **** 
 383:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1055              		.loc 1 383 0
 1056 008a 0023     		movs	r3, #0
 1057 008c 07F5B052 		add	r2, r7, #5632
 1058 0090 02F10F02 		add	r2, r2, #15
 1059 0094 1370     		strb	r3, [r2]
 384:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1060              		.loc 1 384 0
 1061 0096 0123     		movs	r3, #1
 1062 0098 07F5B052 		add	r2, r7, #5632
 1063 009c 02F10E02 		add	r2, r2, #14
 1064 00a0 1370     		strb	r3, [r2]
 385:..\src/command_processing.c ****   
 386:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1065              		.loc 1 386 0
 1066 00a2 07F11803 		add	r3, r7, #24
 1067 00a6 0C3B     		subs	r3, r3, #12
 1068 00a8 1B68     		ldr	r3, [r3]
 1069 00aa 1B68     		ldr	r3, [r3]
 1070 00ac 07F5B052 		add	r2, r7, #5632
 1071 00b0 02F10802 		add	r2, r2, #8
 1072 00b4 1360     		str	r3, [r2]
 387:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1073              		.loc 1 387 0
 1074 00b6 07F5B053 		add	r3, r7, #5632
 1075 00ba 03F10803 		add	r3, r3, #8
 1076 00be 1B68     		ldr	r3, [r3]
 1077 00c0 07F5B052 		add	r2, r7, #5632
 1078 00c4 02F10402 		add	r2, r2, #4
 1079 00c8 1360     		str	r3, [r2]
 388:..\src/command_processing.c ****         
 389:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1080              		.loc 1 389 0
 1081 00ca 07F15803 		add	r3, r7, #88
 1082 00ce 043B     		subs	r3, r3, #4
 1083 00d0 0C22     		movs	r2, #12
 1084 00d2 1A70     		strb	r2, [r3]
 390:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1085              		.loc 1 390 0
 1086 00d4 07F15803 		add	r3, r7, #88
 1087 00d8 043B     		subs	r3, r3, #4
 1088 00da 4D22     		movs	r2, #77
 1089 00dc 5A70     		strb	r2, [r3, #1]
 391:..\src/command_processing.c ****     
 392:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1090              		.loc 1 392 0
 1091 00de 0023     		movs	r3, #0
 1092 00e0 07F5B052 		add	r2, r7, #5632
 1093 00e4 02F11502 		add	r2, r2, #21
 1094 00e8 1370     		strb	r3, [r2]
 1095 00ea 02F0EABF 		b	.L70
 1096              	.L272:
 393:..\src/command_processing.c ****         
 394:..\src/command_processing.c ****         // Assign m_addr memory address
 395:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 43


 1097              		.loc 1 395 0
 1098 00ee 07F5B053 		add	r3, r7, #5632
 1099 00f2 03F11503 		add	r3, r3, #21
 1100 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 00f8 9A00     		lsls	r2, r3, #2
 1102 00fa 07F11803 		add	r3, r7, #24
 1103 00fe 0C3B     		subs	r3, r3, #12
 1104 0100 1B68     		ldr	r3, [r3]
 1105 0102 1344     		add	r3, r3, r2
 1106 0104 1B68     		ldr	r3, [r3]
 1107 0106 07F5B052 		add	r2, r7, #5632
 1108 010a 02F10802 		add	r2, r2, #8
 1109 010e 1360     		str	r3, [r2]
 396:..\src/command_processing.c ****         
 397:..\src/command_processing.c ****         // Add parameter type and size to packet
 398:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1110              		.loc 1 398 0
 1111 0110 07F5B053 		add	r3, r7, #5632
 1112 0114 03F11503 		add	r3, r3, #21
 1113 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114 011a 3222     		movs	r2, #50
 1115 011c 02FB03F3 		mul	r3, r2, r3
 1116 0120 9A1C     		adds	r2, r3, #2
 1117 0122 07F5B053 		add	r3, r7, #5632
 1118 0126 03F11503 		add	r3, r3, #21
 1119 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1120 012c 07F11803 		add	r3, r7, #24
 1121 0130 103B     		subs	r3, r3, #16
 1122 0132 1B68     		ldr	r3, [r3]
 1123 0134 0B44     		add	r3, r3, r1
 1124 0136 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1125 0138 07F15803 		add	r3, r7, #88
 1126 013c 043B     		subs	r3, r3, #4
 1127 013e 9954     		strb	r1, [r3, r2]
 399:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1128              		.loc 1 399 0
 1129 0140 07F5B053 		add	r3, r7, #5632
 1130 0144 03F11503 		add	r3, r3, #21
 1131 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1132 014a 3222     		movs	r2, #50
 1133 014c 02FB03F3 		mul	r3, r2, r3
 1134 0150 DA1C     		adds	r2, r3, #3
 1135 0152 07F5B053 		add	r3, r7, #5632
 1136 0156 03F11503 		add	r3, r3, #21
 1137 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1138 015c 07F11803 		add	r3, r7, #24
 1139 0160 143B     		subs	r3, r3, #20
 1140 0162 1B68     		ldr	r3, [r3]
 1141 0164 0B44     		add	r3, r3, r1
 1142 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1143 0168 07F15803 		add	r3, r7, #88
 1144 016c 043B     		subs	r3, r3, #4
 1145 016e 9954     		strb	r1, [r3, r2]
 400:..\src/command_processing.c ****         
 401:..\src/command_processing.c ****         // Find size of data
 402:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1146              		.loc 1 402 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 44


 1147 0170 07F5B053 		add	r3, r7, #5632
 1148 0174 03F11503 		add	r3, r3, #21
 1149 0178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1150 017a 07F11803 		add	r3, r7, #24
 1151 017e 103B     		subs	r3, r3, #16
 1152 0180 1B68     		ldr	r3, [r3]
 1153 0182 1344     		add	r3, r3, r2
 1154 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1155 0186 092B     		cmp	r3, #9
 1156 0188 2BD8     		bhi	.L71
 1157 018a 01A2     		adr	r2, .L73
 1158 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1159              		.p2align 2
 1160              	.L73:
 1161 0190 B9010000 		.word	.L72+1
 1162 0194 B9010000 		.word	.L72+1
 1163 0198 B9010000 		.word	.L72+1
 1164 019c C7010000 		.word	.L74+1
 1165 01a0 C7010000 		.word	.L74+1
 1166 01a4 D5010000 		.word	.L75+1
 1167 01a8 D5010000 		.word	.L75+1
 1168 01ac D5010000 		.word	.L75+1
 1169 01b0 E3010000 		.word	.L71+1
 1170 01b4 B9010000 		.word	.L72+1
 1171              		.p2align 1
 1172              	.L72:
 403:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 404:..\src/command_processing.c ****                 sod = 1; break;
 1173              		.loc 1 404 0
 1174 01b8 0123     		movs	r3, #1
 1175 01ba 07F5B052 		add	r2, r7, #5632
 1176 01be 02F11302 		add	r2, r2, #19
 1177 01c2 1370     		strb	r3, [r2]
 1178 01c4 0DE0     		b	.L71
 1179              	.L74:
 405:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 406:..\src/command_processing.c ****                 sod = 2; break;
 1180              		.loc 1 406 0
 1181 01c6 0223     		movs	r3, #2
 1182 01c8 07F5B052 		add	r2, r7, #5632
 1183 01cc 02F11302 		add	r2, r2, #19
 1184 01d0 1370     		strb	r3, [r2]
 1185 01d2 06E0     		b	.L71
 1186              	.L75:
 407:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 408:..\src/command_processing.c ****                 sod = 4; break;
 1187              		.loc 1 408 0
 1188 01d4 0423     		movs	r3, #4
 1189 01d6 07F5B052 		add	r2, r7, #5632
 1190 01da 02F11302 		add	r2, r2, #19
 1191 01de 1370     		strb	r3, [r2]
 1192 01e0 00BF     		nop
 1193              	.L71:
 409:..\src/command_processing.c ****         }
 410:..\src/command_processing.c ****             
 411:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1194              		.loc 1 411 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 45


 1195 01e2 07F5B053 		add	r3, r7, #5632
 1196 01e6 03F11503 		add	r3, r3, #21
 1197 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1198 01ec 07F5B152 		add	r2, r7, #5664
 1199 01f0 02F11802 		add	r2, r2, #24
 1200 01f4 1268     		ldr	r2, [r2]
 1201 01f6 1344     		add	r3, r3, r2
 1202 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 01fa 002B     		cmp	r3, #0
 1204 01fc 40F0DA83 		bne	.L76
 412:..\src/command_processing.c ****             
 413:..\src/command_processing.c ****             // Add parameter data to packet
 414:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1205              		.loc 1 414 0
 1206 0200 07F5B053 		add	r3, r7, #5632
 1207 0204 03F11503 		add	r3, r3, #21
 1208 0208 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1209 020a 07F11803 		add	r3, r7, #24
 1210 020e 103B     		subs	r3, r3, #16
 1211 0210 1B68     		ldr	r3, [r3]
 1212 0212 1344     		add	r3, r3, r2
 1213 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1214 0216 092B     		cmp	r3, #9
 1215 0218 02F23381 		bhi	.L110
 1216 021c 01A2     		adr	r2, .L79
 1217 021e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1218 0222 00BF     		.p2align 2
 1219              	.L79:
 1220 0224 4D020000 		.word	.L78+1
 1221 0228 09030000 		.word	.L80+1
 1222 022c 4D020000 		.word	.L78+1
 1223 0230 C5030000 		.word	.L81+1
 1224 0234 F7040000 		.word	.L82+1
 1225 0238 23060000 		.word	.L83+1
 1226 023c 53070000 		.word	.L84+1
 1227 0240 83080000 		.word	.L85+1
 1228 0244 83240000 		.word	.L110+1
 1229 0248 4D020000 		.word	.L78+1
 1230              		.p2align 1
 1231              	.L78:
 415:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 416:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1232              		.loc 1 416 0
 1233 024c 0023     		movs	r3, #0
 1234 024e 07F5B052 		add	r2, r7, #5632
 1235 0252 02F11702 		add	r2, r2, #23
 1236 0256 1370     		strb	r3, [r2]
 1237 0258 42E0     		b	.L86
 1238              	.L87:
 417:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1239              		.loc 1 417 0 discriminator 3
 1240 025a 07F5B053 		add	r3, r7, #5632
 1241 025e 03F11703 		add	r3, r3, #23
 1242 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 0264 07F5B052 		add	r2, r7, #5632
 1244 0268 02F11302 		add	r2, r2, #19
 1245 026c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 46


 1246 026e 02FB03F3 		mul	r3, r2, r3
 1247 0272 1A46     		mov	r2, r3
 1248 0274 07F5B053 		add	r3, r7, #5632
 1249 0278 03F10803 		add	r3, r3, #8
 1250 027c 1B68     		ldr	r3, [r3]
 1251 027e 1344     		add	r3, r3, r2
 1252 0280 07F5B052 		add	r2, r7, #5632
 1253 0284 02F10402 		add	r2, r2, #4
 1254 0288 1360     		str	r3, [r2]
 418:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1255              		.loc 1 418 0 discriminator 3
 1256 028a 07F5B053 		add	r3, r7, #5632
 1257 028e 03F11503 		add	r3, r3, #21
 1258 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1259 0294 3222     		movs	r2, #50
 1260 0296 02FB03F3 		mul	r3, r2, r3
 1261 029a 1A1D     		adds	r2, r3, #4
 1262 029c 07F5B053 		add	r3, r7, #5632
 1263 02a0 03F11703 		add	r3, r3, #23
 1264 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 02a6 07F5B051 		add	r1, r7, #5632
 1266 02aa 01F11301 		add	r1, r1, #19
 1267 02ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1268 02b0 01FB03F3 		mul	r3, r1, r3
 1269 02b4 1A44     		add	r2, r2, r3
 1270 02b6 07F5B053 		add	r3, r7, #5632
 1271 02ba 03F10403 		add	r3, r3, #4
 1272 02be 1B68     		ldr	r3, [r3]
 1273 02c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1274 02c2 07F15803 		add	r3, r7, #88
 1275 02c6 043B     		subs	r3, r3, #4
 1276 02c8 9954     		strb	r1, [r3, r2]
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1277              		.loc 1 416 0 discriminator 3
 1278 02ca 07F5B053 		add	r3, r7, #5632
 1279 02ce 03F11703 		add	r3, r3, #23
 1280 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1281 02d4 0133     		adds	r3, r3, #1
 1282 02d6 07F5B052 		add	r2, r7, #5632
 1283 02da 02F11702 		add	r2, r2, #23
 1284 02de 1370     		strb	r3, [r2]
 1285              	.L86:
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1286              		.loc 1 416 0 is_stmt 0 discriminator 1
 1287 02e0 07F5B053 		add	r3, r7, #5632
 1288 02e4 03F11503 		add	r3, r3, #21
 1289 02e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1290 02ea 07F11803 		add	r3, r7, #24
 1291 02ee 143B     		subs	r3, r3, #20
 1292 02f0 1B68     		ldr	r3, [r3]
 1293 02f2 1344     		add	r3, r3, r2
 1294 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1295 02f6 07F5B052 		add	r2, r7, #5632
 1296 02fa 02F11702 		add	r2, r2, #23
 1297 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1298 0300 9A42     		cmp	r2, r3
 1299 0302 AAD3     		bcc	.L87
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 47


 419:..\src/command_processing.c ****                     }
 420:..\src/command_processing.c ****                     break;                
 1300              		.loc 1 420 0 is_stmt 1
 1301 0304 02F0BDB8 		b	.L110
 1302              	.L80:
 421:..\src/command_processing.c ****                 case TYPE_INT8:
 422:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1303              		.loc 1 422 0
 1304 0308 0023     		movs	r3, #0
 1305 030a 07F5B052 		add	r2, r7, #5632
 1306 030e 02F11702 		add	r2, r2, #23
 1307 0312 1370     		strb	r3, [r2]
 1308 0314 42E0     		b	.L88
 1309              	.L89:
 423:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1310              		.loc 1 423 0 discriminator 3
 1311 0316 07F5B053 		add	r3, r7, #5632
 1312 031a 03F11703 		add	r3, r3, #23
 1313 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 0320 07F5B052 		add	r2, r7, #5632
 1315 0324 02F11302 		add	r2, r2, #19
 1316 0328 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1317 032a 02FB03F3 		mul	r3, r2, r3
 1318 032e 1A46     		mov	r2, r3
 1319 0330 07F5B053 		add	r3, r7, #5632
 1320 0334 03F10803 		add	r3, r3, #8
 1321 0338 1B68     		ldr	r3, [r3]
 1322 033a 1344     		add	r3, r3, r2
 1323 033c 07F5B052 		add	r2, r7, #5632
 1324 0340 02F10402 		add	r2, r2, #4
 1325 0344 1360     		str	r3, [r2]
 424:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1326              		.loc 1 424 0 discriminator 3
 1327 0346 07F5B053 		add	r3, r7, #5632
 1328 034a 03F11503 		add	r3, r3, #21
 1329 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 0350 3222     		movs	r2, #50
 1331 0352 02FB03F3 		mul	r3, r2, r3
 1332 0356 1A1D     		adds	r2, r3, #4
 1333 0358 07F5B053 		add	r3, r7, #5632
 1334 035c 03F11703 		add	r3, r3, #23
 1335 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1336 0362 07F5B051 		add	r1, r7, #5632
 1337 0366 01F11301 		add	r1, r1, #19
 1338 036a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1339 036c 01FB03F3 		mul	r3, r1, r3
 1340 0370 1A44     		add	r2, r2, r3
 1341 0372 07F5B053 		add	r3, r7, #5632
 1342 0376 03F10403 		add	r3, r3, #4
 1343 037a 1B68     		ldr	r3, [r3]
 1344 037c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1345 037e 07F15803 		add	r3, r7, #88
 1346 0382 043B     		subs	r3, r3, #4
 1347 0384 9954     		strb	r1, [r3, r2]
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1348              		.loc 1 422 0 discriminator 3
 1349 0386 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 48


 1350 038a 03F11703 		add	r3, r3, #23
 1351 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 0390 0133     		adds	r3, r3, #1
 1353 0392 07F5B052 		add	r2, r7, #5632
 1354 0396 02F11702 		add	r2, r2, #23
 1355 039a 1370     		strb	r3, [r2]
 1356              	.L88:
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1357              		.loc 1 422 0 is_stmt 0 discriminator 1
 1358 039c 07F5B053 		add	r3, r7, #5632
 1359 03a0 03F11503 		add	r3, r3, #21
 1360 03a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1361 03a6 07F11803 		add	r3, r7, #24
 1362 03aa 143B     		subs	r3, r3, #20
 1363 03ac 1B68     		ldr	r3, [r3]
 1364 03ae 1344     		add	r3, r3, r2
 1365 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1366 03b2 07F5B052 		add	r2, r7, #5632
 1367 03b6 02F11702 		add	r2, r2, #23
 1368 03ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1369 03bc 9A42     		cmp	r2, r3
 1370 03be AAD3     		bcc	.L89
 425:..\src/command_processing.c ****                     }
 426:..\src/command_processing.c ****                     break;
 1371              		.loc 1 426 0 is_stmt 1
 1372 03c0 02F05FB8 		b	.L110
 1373              	.L81:
 427:..\src/command_processing.c ****                 case TYPE_INT16:
 428:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1374              		.loc 1 428 0
 1375 03c4 0023     		movs	r3, #0
 1376 03c6 07F5B052 		add	r2, r7, #5632
 1377 03ca 02F11702 		add	r2, r2, #23
 1378 03ce 1370     		strb	r3, [r2]
 1379 03d0 7CE0     		b	.L90
 1380              	.L93:
 429:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1381              		.loc 1 429 0
 1382 03d2 07F5B053 		add	r3, r7, #5632
 1383 03d6 03F11703 		add	r3, r3, #23
 1384 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1385 03dc 07F5B052 		add	r2, r7, #5632
 1386 03e0 02F11302 		add	r2, r2, #19
 1387 03e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1388 03e6 02FB03F3 		mul	r3, r2, r3
 1389 03ea 1A46     		mov	r2, r3
 1390 03ec 07F5B053 		add	r3, r7, #5632
 1391 03f0 03F10803 		add	r3, r3, #8
 1392 03f4 1B68     		ldr	r3, [r3]
 1393 03f6 1344     		add	r3, r3, r2
 1394 03f8 07F5B052 		add	r2, r7, #5632
 1395 03fc 02F10402 		add	r2, r2, #4
 1396 0400 1360     		str	r3, [r2]
 430:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1397              		.loc 1 430 0
 1398 0402 07F5B053 		add	r3, r7, #5632
 1399 0406 03F10403 		add	r3, r3, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 49


 1400 040a 1B68     		ldr	r3, [r3]
 1401 040c B3F90020 		ldrsh	r2, [r3]
 1402 0410 07F13803 		add	r3, r7, #56
 1403 0414 1E3B     		subs	r3, r3, #30
 1404 0416 1A80     		strh	r2, [r3]	@ movhi
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1405              		.loc 1 431 0
 1406 0418 0023     		movs	r3, #0
 1407 041a 07F5B052 		add	r2, r7, #5632
 1408 041e 02F11602 		add	r2, r2, #22
 1409 0422 1370     		strb	r3, [r2]
 1410 0424 3BE0     		b	.L91
 1411              	.L92:
 432:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1412              		.loc 1 432 0 discriminator 3
 1413 0426 07F5B053 		add	r3, r7, #5632
 1414 042a 03F11503 		add	r3, r3, #21
 1415 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1416 0430 3222     		movs	r2, #50
 1417 0432 02FB03F3 		mul	r3, r2, r3
 1418 0436 1A1D     		adds	r2, r3, #4
 1419 0438 07F5B053 		add	r3, r7, #5632
 1420 043c 03F11703 		add	r3, r3, #23
 1421 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 0442 07F5B051 		add	r1, r7, #5632
 1423 0446 01F11301 		add	r1, r1, #19
 1424 044a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1425 044c 01FB03F3 		mul	r3, r1, r3
 1426 0450 1A44     		add	r2, r2, r3
 1427 0452 07F5B053 		add	r3, r7, #5632
 1428 0456 03F11303 		add	r3, r3, #19
 1429 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1430 045c 1A44     		add	r2, r2, r3
 1431 045e 07F5B053 		add	r3, r7, #5632
 1432 0462 03F11603 		add	r3, r3, #22
 1433 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1434 0468 D31A     		subs	r3, r2, r3
 1435 046a 5A1E     		subs	r2, r3, #1
 1436 046c 07F5B053 		add	r3, r7, #5632
 1437 0470 03F11603 		add	r3, r3, #22
 1438 0474 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1439 0476 07F13803 		add	r3, r7, #56
 1440 047a 1E3B     		subs	r3, r3, #30
 1441 047c 0B44     		add	r3, r3, r1
 1442 047e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1443 0480 07F15803 		add	r3, r7, #88
 1444 0484 043B     		subs	r3, r3, #4
 1445 0486 9954     		strb	r1, [r3, r2]
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1446              		.loc 1 431 0 discriminator 3
 1447 0488 07F5B053 		add	r3, r7, #5632
 1448 048c 03F11603 		add	r3, r3, #22
 1449 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 0492 0133     		adds	r3, r3, #1
 1451 0494 07F5B052 		add	r2, r7, #5632
 1452 0498 02F11602 		add	r2, r2, #22
 1453 049c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 50


 1454              	.L91:
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1455              		.loc 1 431 0 is_stmt 0 discriminator 1
 1456 049e 07F5B053 		add	r3, r7, #5632
 1457 04a2 03F11603 		add	r3, r3, #22
 1458 04a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1459 04a8 07F5B053 		add	r3, r7, #5632
 1460 04ac 03F11303 		add	r3, r3, #19
 1461 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 04b2 9A42     		cmp	r2, r3
 1463 04b4 B7D3     		bcc	.L92
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1464              		.loc 1 428 0 is_stmt 1 discriminator 2
 1465 04b6 07F5B053 		add	r3, r7, #5632
 1466 04ba 03F11703 		add	r3, r3, #23
 1467 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 04c0 0133     		adds	r3, r3, #1
 1469 04c2 07F5B052 		add	r2, r7, #5632
 1470 04c6 02F11702 		add	r2, r2, #23
 1471 04ca 1370     		strb	r3, [r2]
 1472              	.L90:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1473              		.loc 1 428 0 is_stmt 0 discriminator 1
 1474 04cc 07F5B053 		add	r3, r7, #5632
 1475 04d0 03F11503 		add	r3, r3, #21
 1476 04d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1477 04d6 07F11803 		add	r3, r7, #24
 1478 04da 143B     		subs	r3, r3, #20
 1479 04dc 1B68     		ldr	r3, [r3]
 1480 04de 1344     		add	r3, r3, r2
 1481 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 04e2 07F5B052 		add	r2, r7, #5632
 1483 04e6 02F11702 		add	r2, r2, #23
 1484 04ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1485 04ec 9A42     		cmp	r2, r3
 1486 04ee FFF470AF 		bcc	.L93
 433:..\src/command_processing.c ****                         }
 434:..\src/command_processing.c ****                     }
 435:..\src/command_processing.c ****                     break;
 1487              		.loc 1 435 0 is_stmt 1
 1488 04f2 01F0C6BF 		b	.L110
 1489              	.L82:
 436:..\src/command_processing.c ****                 case TYPE_UINT16:
 437:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1490              		.loc 1 437 0
 1491 04f6 0023     		movs	r3, #0
 1492 04f8 07F5B052 		add	r2, r7, #5632
 1493 04fc 02F11702 		add	r2, r2, #23
 1494 0500 1370     		strb	r3, [r2]
 1495 0502 79E0     		b	.L94
 1496              	.L97:
 438:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1497              		.loc 1 438 0
 1498 0504 07F5B053 		add	r3, r7, #5632
 1499 0508 03F11703 		add	r3, r3, #23
 1500 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 050e 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 51


 1502 0512 02F11302 		add	r2, r2, #19
 1503 0516 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1504 0518 02FB03F3 		mul	r3, r2, r3
 1505 051c 1A46     		mov	r2, r3
 1506 051e 07F5B053 		add	r3, r7, #5632
 1507 0522 03F10803 		add	r3, r3, #8
 1508 0526 1B68     		ldr	r3, [r3]
 1509 0528 1344     		add	r3, r3, r2
 1510 052a 07F5B052 		add	r2, r7, #5632
 1511 052e 02F10402 		add	r2, r2, #4
 1512 0532 1360     		str	r3, [r2]
 439:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1513              		.loc 1 439 0
 1514 0534 07F5B053 		add	r3, r7, #5632
 1515 0538 03F10403 		add	r3, r3, #4
 1516 053c 1B68     		ldr	r3, [r3]
 1517 053e 1A88     		ldrh	r2, [r3]
 1518 0540 07F11803 		add	r3, r7, #24
 1519 0544 1A80     		strh	r2, [r3]	@ movhi
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1520              		.loc 1 440 0
 1521 0546 0023     		movs	r3, #0
 1522 0548 07F5B052 		add	r2, r7, #5632
 1523 054c 02F11602 		add	r2, r2, #22
 1524 0550 1370     		strb	r3, [r2]
 1525 0552 3AE0     		b	.L95
 1526              	.L96:
 441:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1527              		.loc 1 441 0 discriminator 3
 1528 0554 07F5B053 		add	r3, r7, #5632
 1529 0558 03F11503 		add	r3, r3, #21
 1530 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 055e 3222     		movs	r2, #50
 1532 0560 02FB03F3 		mul	r3, r2, r3
 1533 0564 1A1D     		adds	r2, r3, #4
 1534 0566 07F5B053 		add	r3, r7, #5632
 1535 056a 03F11703 		add	r3, r3, #23
 1536 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1537 0570 07F5B051 		add	r1, r7, #5632
 1538 0574 01F11301 		add	r1, r1, #19
 1539 0578 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1540 057a 01FB03F3 		mul	r3, r1, r3
 1541 057e 1A44     		add	r2, r2, r3
 1542 0580 07F5B053 		add	r3, r7, #5632
 1543 0584 03F11303 		add	r3, r3, #19
 1544 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1545 058a 1A44     		add	r2, r2, r3
 1546 058c 07F5B053 		add	r3, r7, #5632
 1547 0590 03F11603 		add	r3, r3, #22
 1548 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1549 0596 D31A     		subs	r3, r2, r3
 1550 0598 5A1E     		subs	r2, r3, #1
 1551 059a 07F5B053 		add	r3, r7, #5632
 1552 059e 03F11603 		add	r3, r3, #22
 1553 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 05a4 07F11801 		add	r1, r7, #24
 1555 05a8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 52


 1556 05aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1557 05ac 07F15803 		add	r3, r7, #88
 1558 05b0 043B     		subs	r3, r3, #4
 1559 05b2 9954     		strb	r1, [r3, r2]
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1560              		.loc 1 440 0 discriminator 3
 1561 05b4 07F5B053 		add	r3, r7, #5632
 1562 05b8 03F11603 		add	r3, r3, #22
 1563 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1564 05be 0133     		adds	r3, r3, #1
 1565 05c0 07F5B052 		add	r2, r7, #5632
 1566 05c4 02F11602 		add	r2, r2, #22
 1567 05c8 1370     		strb	r3, [r2]
 1568              	.L95:
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1569              		.loc 1 440 0 is_stmt 0 discriminator 1
 1570 05ca 07F5B053 		add	r3, r7, #5632
 1571 05ce 03F11603 		add	r3, r3, #22
 1572 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1573 05d4 07F5B053 		add	r3, r7, #5632
 1574 05d8 03F11303 		add	r3, r3, #19
 1575 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1576 05de 9A42     		cmp	r2, r3
 1577 05e0 B8D3     		bcc	.L96
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1578              		.loc 1 437 0 is_stmt 1 discriminator 2
 1579 05e2 07F5B053 		add	r3, r7, #5632
 1580 05e6 03F11703 		add	r3, r3, #23
 1581 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 05ec 0133     		adds	r3, r3, #1
 1583 05ee 07F5B052 		add	r2, r7, #5632
 1584 05f2 02F11702 		add	r2, r2, #23
 1585 05f6 1370     		strb	r3, [r2]
 1586              	.L94:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1587              		.loc 1 437 0 is_stmt 0 discriminator 1
 1588 05f8 07F5B053 		add	r3, r7, #5632
 1589 05fc 03F11503 		add	r3, r3, #21
 1590 0600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1591 0602 07F11803 		add	r3, r7, #24
 1592 0606 143B     		subs	r3, r3, #20
 1593 0608 1B68     		ldr	r3, [r3]
 1594 060a 1344     		add	r3, r3, r2
 1595 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 060e 07F5B052 		add	r2, r7, #5632
 1597 0612 02F11702 		add	r2, r2, #23
 1598 0616 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1599 0618 9A42     		cmp	r2, r3
 1600 061a FFF473AF 		bcc	.L97
 442:..\src/command_processing.c ****                         }
 443:..\src/command_processing.c ****                     }
 444:..\src/command_processing.c ****                     break;
 1601              		.loc 1 444 0 is_stmt 1
 1602 061e 01F030BF 		b	.L110
 1603              	.L83:
 445:..\src/command_processing.c ****                 case TYPE_INT32: 
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 53


 1604              		.loc 1 446 0
 1605 0622 0023     		movs	r3, #0
 1606 0624 07F5B052 		add	r2, r7, #5632
 1607 0628 02F11702 		add	r2, r2, #23
 1608 062c 1370     		strb	r3, [r2]
 1609 062e 7BE0     		b	.L98
 1610              	.L101:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1611              		.loc 1 447 0
 1612 0630 07F5B053 		add	r3, r7, #5632
 1613 0634 03F11703 		add	r3, r3, #23
 1614 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 063a 07F5B052 		add	r2, r7, #5632
 1616 063e 02F11302 		add	r2, r2, #19
 1617 0642 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1618 0644 02FB03F3 		mul	r3, r2, r3
 1619 0648 1A46     		mov	r2, r3
 1620 064a 07F5B053 		add	r3, r7, #5632
 1621 064e 03F10803 		add	r3, r3, #8
 1622 0652 1B68     		ldr	r3, [r3]
 1623 0654 1344     		add	r3, r3, r2
 1624 0656 07F5B052 		add	r2, r7, #5632
 1625 065a 02F10402 		add	r2, r2, #4
 1626 065e 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1627              		.loc 1 448 0
 1628 0660 07F5B053 		add	r3, r7, #5632
 1629 0664 03F10403 		add	r3, r3, #4
 1630 0668 1B68     		ldr	r3, [r3]
 1631 066a 1A68     		ldr	r2, [r3]
 1632 066c 07F11803 		add	r3, r7, #24
 1633 0670 043B     		subs	r3, r3, #4
 1634 0672 1A60     		str	r2, [r3]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1635              		.loc 1 449 0
 1636 0674 0023     		movs	r3, #0
 1637 0676 07F5B052 		add	r2, r7, #5632
 1638 067a 02F11602 		add	r2, r2, #22
 1639 067e 1370     		strb	r3, [r2]
 1640 0680 3BE0     		b	.L99
 1641              	.L100:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1642              		.loc 1 450 0 discriminator 3
 1643 0682 07F5B053 		add	r3, r7, #5632
 1644 0686 03F11503 		add	r3, r3, #21
 1645 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 068c 3222     		movs	r2, #50
 1647 068e 02FB03F3 		mul	r3, r2, r3
 1648 0692 1A1D     		adds	r2, r3, #4
 1649 0694 07F5B053 		add	r3, r7, #5632
 1650 0698 03F11703 		add	r3, r3, #23
 1651 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1652 069e 07F5B051 		add	r1, r7, #5632
 1653 06a2 01F11301 		add	r1, r1, #19
 1654 06a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1655 06a8 01FB03F3 		mul	r3, r1, r3
 1656 06ac 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 54


 1657 06ae 07F5B053 		add	r3, r7, #5632
 1658 06b2 03F11303 		add	r3, r3, #19
 1659 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 06b8 1A44     		add	r2, r2, r3
 1661 06ba 07F5B053 		add	r3, r7, #5632
 1662 06be 03F11603 		add	r3, r3, #22
 1663 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1664 06c4 D31A     		subs	r3, r2, r3
 1665 06c6 5A1E     		subs	r2, r3, #1
 1666 06c8 07F5B053 		add	r3, r7, #5632
 1667 06cc 03F11603 		add	r3, r3, #22
 1668 06d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1669 06d2 07F11803 		add	r3, r7, #24
 1670 06d6 043B     		subs	r3, r3, #4
 1671 06d8 0B44     		add	r3, r3, r1
 1672 06da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1673 06dc 07F15803 		add	r3, r7, #88
 1674 06e0 043B     		subs	r3, r3, #4
 1675 06e2 9954     		strb	r1, [r3, r2]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1676              		.loc 1 449 0 discriminator 3
 1677 06e4 07F5B053 		add	r3, r7, #5632
 1678 06e8 03F11603 		add	r3, r3, #22
 1679 06ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1680 06ee 0133     		adds	r3, r3, #1
 1681 06f0 07F5B052 		add	r2, r7, #5632
 1682 06f4 02F11602 		add	r2, r2, #22
 1683 06f8 1370     		strb	r3, [r2]
 1684              	.L99:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1685              		.loc 1 449 0 is_stmt 0 discriminator 1
 1686 06fa 07F5B053 		add	r3, r7, #5632
 1687 06fe 03F11603 		add	r3, r3, #22
 1688 0702 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1689 0704 07F5B053 		add	r3, r7, #5632
 1690 0708 03F11303 		add	r3, r3, #19
 1691 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1692 070e 9A42     		cmp	r2, r3
 1693 0710 B7D3     		bcc	.L100
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1694              		.loc 1 446 0 is_stmt 1 discriminator 2
 1695 0712 07F5B053 		add	r3, r7, #5632
 1696 0716 03F11703 		add	r3, r3, #23
 1697 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 071c 0133     		adds	r3, r3, #1
 1699 071e 07F5B052 		add	r2, r7, #5632
 1700 0722 02F11702 		add	r2, r2, #23
 1701 0726 1370     		strb	r3, [r2]
 1702              	.L98:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1703              		.loc 1 446 0 is_stmt 0 discriminator 1
 1704 0728 07F5B053 		add	r3, r7, #5632
 1705 072c 03F11503 		add	r3, r3, #21
 1706 0730 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1707 0732 07F11803 		add	r3, r7, #24
 1708 0736 143B     		subs	r3, r3, #20
 1709 0738 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 55


 1710 073a 1344     		add	r3, r3, r2
 1711 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1712 073e 07F5B052 		add	r2, r7, #5632
 1713 0742 02F11702 		add	r2, r2, #23
 1714 0746 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1715 0748 9A42     		cmp	r2, r3
 1716 074a FFF471AF 		bcc	.L101
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;
 1717              		.loc 1 453 0 is_stmt 1
 1718 074e 01F098BE 		b	.L110
 1719              	.L84:
 454:..\src/command_processing.c ****                 case TYPE_UINT32: 
 455:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1720              		.loc 1 455 0
 1721 0752 0023     		movs	r3, #0
 1722 0754 07F5B052 		add	r2, r7, #5632
 1723 0758 02F11702 		add	r2, r2, #23
 1724 075c 1370     		strb	r3, [r2]
 1725 075e 7BE0     		b	.L102
 1726              	.L105:
 456:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1727              		.loc 1 456 0
 1728 0760 07F5B053 		add	r3, r7, #5632
 1729 0764 03F11703 		add	r3, r3, #23
 1730 0768 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1731 076a 07F5B052 		add	r2, r7, #5632
 1732 076e 02F11302 		add	r2, r2, #19
 1733 0772 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1734 0774 02FB03F3 		mul	r3, r2, r3
 1735 0778 1A46     		mov	r2, r3
 1736 077a 07F5B053 		add	r3, r7, #5632
 1737 077e 03F10803 		add	r3, r3, #8
 1738 0782 1B68     		ldr	r3, [r3]
 1739 0784 1344     		add	r3, r3, r2
 1740 0786 07F5B052 		add	r2, r7, #5632
 1741 078a 02F10402 		add	r2, r2, #4
 1742 078e 1360     		str	r3, [r2]
 457:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1743              		.loc 1 457 0
 1744 0790 07F5B053 		add	r3, r7, #5632
 1745 0794 03F10403 		add	r3, r3, #4
 1746 0798 1B68     		ldr	r3, [r3]
 1747 079a 1A68     		ldr	r2, [r3]
 1748 079c 07F11803 		add	r3, r7, #24
 1749 07a0 083B     		subs	r3, r3, #8
 1750 07a2 1A60     		str	r2, [r3]
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1751              		.loc 1 458 0
 1752 07a4 0023     		movs	r3, #0
 1753 07a6 07F5B052 		add	r2, r7, #5632
 1754 07aa 02F11602 		add	r2, r2, #22
 1755 07ae 1370     		strb	r3, [r2]
 1756 07b0 3BE0     		b	.L103
 1757              	.L104:
 459:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 56


 1758              		.loc 1 459 0 discriminator 3
 1759 07b2 07F5B053 		add	r3, r7, #5632
 1760 07b6 03F11503 		add	r3, r3, #21
 1761 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1762 07bc 3222     		movs	r2, #50
 1763 07be 02FB03F3 		mul	r3, r2, r3
 1764 07c2 1A1D     		adds	r2, r3, #4
 1765 07c4 07F5B053 		add	r3, r7, #5632
 1766 07c8 03F11703 		add	r3, r3, #23
 1767 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 07ce 07F5B051 		add	r1, r7, #5632
 1769 07d2 01F11301 		add	r1, r1, #19
 1770 07d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1771 07d8 01FB03F3 		mul	r3, r1, r3
 1772 07dc 1A44     		add	r2, r2, r3
 1773 07de 07F5B053 		add	r3, r7, #5632
 1774 07e2 03F11303 		add	r3, r3, #19
 1775 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 07e8 1A44     		add	r2, r2, r3
 1777 07ea 07F5B053 		add	r3, r7, #5632
 1778 07ee 03F11603 		add	r3, r3, #22
 1779 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 07f4 D31A     		subs	r3, r2, r3
 1781 07f6 5A1E     		subs	r2, r3, #1
 1782 07f8 07F5B053 		add	r3, r7, #5632
 1783 07fc 03F11603 		add	r3, r3, #22
 1784 0800 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1785 0802 07F11803 		add	r3, r7, #24
 1786 0806 083B     		subs	r3, r3, #8
 1787 0808 0B44     		add	r3, r3, r1
 1788 080a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1789 080c 07F15803 		add	r3, r7, #88
 1790 0810 043B     		subs	r3, r3, #4
 1791 0812 9954     		strb	r1, [r3, r2]
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1792              		.loc 1 458 0 discriminator 3
 1793 0814 07F5B053 		add	r3, r7, #5632
 1794 0818 03F11603 		add	r3, r3, #22
 1795 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 081e 0133     		adds	r3, r3, #1
 1797 0820 07F5B052 		add	r2, r7, #5632
 1798 0824 02F11602 		add	r2, r2, #22
 1799 0828 1370     		strb	r3, [r2]
 1800              	.L103:
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1801              		.loc 1 458 0 is_stmt 0 discriminator 1
 1802 082a 07F5B053 		add	r3, r7, #5632
 1803 082e 03F11603 		add	r3, r3, #22
 1804 0832 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1805 0834 07F5B053 		add	r3, r7, #5632
 1806 0838 03F11303 		add	r3, r3, #19
 1807 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1808 083e 9A42     		cmp	r2, r3
 1809 0840 B7D3     		bcc	.L104
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1810              		.loc 1 455 0 is_stmt 1 discriminator 2
 1811 0842 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 57


 1812 0846 03F11703 		add	r3, r3, #23
 1813 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1814 084c 0133     		adds	r3, r3, #1
 1815 084e 07F5B052 		add	r2, r7, #5632
 1816 0852 02F11702 		add	r2, r2, #23
 1817 0856 1370     		strb	r3, [r2]
 1818              	.L102:
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1819              		.loc 1 455 0 is_stmt 0 discriminator 1
 1820 0858 07F5B053 		add	r3, r7, #5632
 1821 085c 03F11503 		add	r3, r3, #21
 1822 0860 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1823 0862 07F11803 		add	r3, r7, #24
 1824 0866 143B     		subs	r3, r3, #20
 1825 0868 1B68     		ldr	r3, [r3]
 1826 086a 1344     		add	r3, r3, r2
 1827 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1828 086e 07F5B052 		add	r2, r7, #5632
 1829 0872 02F11702 		add	r2, r2, #23
 1830 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1831 0878 9A42     		cmp	r2, r3
 1832 087a FFF471AF 		bcc	.L105
 460:..\src/command_processing.c ****                         }
 461:..\src/command_processing.c ****                     }
 462:..\src/command_processing.c ****                     break;
 1833              		.loc 1 462 0 is_stmt 1
 1834 087e 01F000BE 		b	.L110
 1835              	.L85:
 463:..\src/command_processing.c ****                     
 464:..\src/command_processing.c ****                 case TYPE_FLOAT:
 465:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1836              		.loc 1 465 0
 1837 0882 0023     		movs	r3, #0
 1838 0884 07F5B052 		add	r2, r7, #5632
 1839 0888 02F11702 		add	r2, r2, #23
 1840 088c 1370     		strb	r3, [r2]
 1841 088e 7BE0     		b	.L106
 1842              	.L109:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1843              		.loc 1 466 0
 1844 0890 07F5B053 		add	r3, r7, #5632
 1845 0894 03F11703 		add	r3, r3, #23
 1846 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 089a 07F5B052 		add	r2, r7, #5632
 1848 089e 02F11302 		add	r2, r2, #19
 1849 08a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1850 08a4 02FB03F3 		mul	r3, r2, r3
 1851 08a8 1A46     		mov	r2, r3
 1852 08aa 07F5B053 		add	r3, r7, #5632
 1853 08ae 03F10803 		add	r3, r3, #8
 1854 08b2 1B68     		ldr	r3, [r3]
 1855 08b4 1344     		add	r3, r3, r2
 1856 08b6 07F5B052 		add	r2, r7, #5632
 1857 08ba 02F10402 		add	r2, r2, #4
 1858 08be 1360     		str	r3, [r2]
 467:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1859              		.loc 1 467 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 58


 1860 08c0 07F5B053 		add	r3, r7, #5632
 1861 08c4 03F10403 		add	r3, r3, #4
 1862 08c8 1B68     		ldr	r3, [r3]
 1863 08ca 1A68     		ldr	r2, [r3]	@ float
 1864 08cc 07F13803 		add	r3, r7, #56
 1865 08d0 1C3B     		subs	r3, r3, #28
 1866 08d2 1A60     		str	r2, [r3]	@ float
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1867              		.loc 1 468 0
 1868 08d4 0023     		movs	r3, #0
 1869 08d6 07F5B052 		add	r2, r7, #5632
 1870 08da 02F11602 		add	r2, r2, #22
 1871 08de 1370     		strb	r3, [r2]
 1872 08e0 3BE0     		b	.L107
 1873              	.L108:
 469:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1874              		.loc 1 469 0 discriminator 3
 1875 08e2 07F5B053 		add	r3, r7, #5632
 1876 08e6 03F11503 		add	r3, r3, #21
 1877 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 08ec 3222     		movs	r2, #50
 1879 08ee 02FB03F3 		mul	r3, r2, r3
 1880 08f2 1A1D     		adds	r2, r3, #4
 1881 08f4 07F5B053 		add	r3, r7, #5632
 1882 08f8 03F11703 		add	r3, r3, #23
 1883 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1884 08fe 07F5B051 		add	r1, r7, #5632
 1885 0902 01F11301 		add	r1, r1, #19
 1886 0906 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1887 0908 01FB03F3 		mul	r3, r1, r3
 1888 090c 1A44     		add	r2, r2, r3
 1889 090e 07F5B053 		add	r3, r7, #5632
 1890 0912 03F11303 		add	r3, r3, #19
 1891 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1892 0918 1A44     		add	r2, r2, r3
 1893 091a 07F5B053 		add	r3, r7, #5632
 1894 091e 03F11603 		add	r3, r3, #22
 1895 0922 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1896 0924 D31A     		subs	r3, r2, r3
 1897 0926 5A1E     		subs	r2, r3, #1
 1898 0928 07F5B053 		add	r3, r7, #5632
 1899 092c 03F11603 		add	r3, r3, #22
 1900 0930 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1901 0932 07F13803 		add	r3, r7, #56
 1902 0936 1C3B     		subs	r3, r3, #28
 1903 0938 0B44     		add	r3, r3, r1
 1904 093a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1905 093c 07F15803 		add	r3, r7, #88
 1906 0940 043B     		subs	r3, r3, #4
 1907 0942 9954     		strb	r1, [r3, r2]
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1908              		.loc 1 468 0 discriminator 3
 1909 0944 07F5B053 		add	r3, r7, #5632
 1910 0948 03F11603 		add	r3, r3, #22
 1911 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1912 094e 0133     		adds	r3, r3, #1
 1913 0950 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 59


 1914 0954 02F11602 		add	r2, r2, #22
 1915 0958 1370     		strb	r3, [r2]
 1916              	.L107:
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1917              		.loc 1 468 0 is_stmt 0 discriminator 1
 1918 095a 07F5B053 		add	r3, r7, #5632
 1919 095e 03F11603 		add	r3, r3, #22
 1920 0962 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1921 0964 07F5B053 		add	r3, r7, #5632
 1922 0968 03F11303 		add	r3, r3, #19
 1923 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1924 096e 9A42     		cmp	r2, r3
 1925 0970 B7D3     		bcc	.L108
 465:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1926              		.loc 1 465 0 is_stmt 1 discriminator 2
 1927 0972 07F5B053 		add	r3, r7, #5632
 1928 0976 03F11703 		add	r3, r3, #23
 1929 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1930 097c 0133     		adds	r3, r3, #1
 1931 097e 07F5B052 		add	r2, r7, #5632
 1932 0982 02F11702 		add	r2, r2, #23
 1933 0986 1370     		strb	r3, [r2]
 1934              	.L106:
 465:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1935              		.loc 1 465 0 is_stmt 0 discriminator 1
 1936 0988 07F5B053 		add	r3, r7, #5632
 1937 098c 03F11503 		add	r3, r3, #21
 1938 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1939 0992 07F11803 		add	r3, r7, #24
 1940 0996 143B     		subs	r3, r3, #20
 1941 0998 1B68     		ldr	r3, [r3]
 1942 099a 1344     		add	r3, r3, r2
 1943 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1944 099e 07F5B052 		add	r2, r7, #5632
 1945 09a2 02F11702 		add	r2, r2, #23
 1946 09a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1947 09a8 9A42     		cmp	r2, r3
 1948 09aa FFF471AF 		bcc	.L109
 470:..\src/command_processing.c ****                         }
 471:..\src/command_processing.c ****                     }
 472:..\src/command_processing.c ****                     break;   
 1949              		.loc 1 472 0 is_stmt 1 discriminator 7
 1950 09ae 00BF     		nop
 1951 09b0 01F067BD 		b	.L110
 1952              	.L76:
 473:..\src/command_processing.c ****             }
 474:..\src/command_processing.c ****         }
 475:..\src/command_processing.c ****         else {
 476:..\src/command_processing.c ****             
 477:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 478:..\src/command_processing.c ****             
 479:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 480:..\src/command_processing.c ****                 switch(idx+1){
 1953              		.loc 1 480 0
 1954 09b4 07F5B053 		add	r3, r7, #5632
 1955 09b8 03F11503 		add	r3, r3, #21
 1956 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 60


 1957 09be 0133     		adds	r3, r3, #1
 1958 09c0 023B     		subs	r3, r3, #2
 1959 09c2 332B     		cmp	r3, #51
 1960 09c4 01F25C85 		bhi	.L277
 1961 09c8 01A2     		adr	r2, .L113
 1962 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1963 09ce 00BF     		.p2align 2
 1964              	.L113:
 1965 09d0 A10A0000 		.word	.L112+1
 1966 09d4 6D0F0000 		.word	.L114+1
 1967 09d8 81240000 		.word	.L277+1
 1968 09dc 81240000 		.word	.L277+1
 1969 09e0 81240000 		.word	.L277+1
 1970 09e4 81240000 		.word	.L277+1
 1971 09e8 3D140000 		.word	.L115+1
 1972 09ec 81240000 		.word	.L277+1
 1973 09f0 81240000 		.word	.L277+1
 1974 09f4 63150000 		.word	.L116+1
 1975 09f8 81240000 		.word	.L277+1
 1976 09fc 81240000 		.word	.L277+1
 1977 0a00 81240000 		.word	.L277+1
 1978 0a04 81240000 		.word	.L277+1
 1979 0a08 81240000 		.word	.L277+1
 1980 0a0c 81240000 		.word	.L277+1
 1981 0a10 81240000 		.word	.L277+1
 1982 0a14 81240000 		.word	.L277+1
 1983 0a18 81240000 		.word	.L277+1
 1984 0a1c 81240000 		.word	.L277+1
 1985 0a20 81240000 		.word	.L277+1
 1986 0a24 27170000 		.word	.L117+1
 1987 0a28 81240000 		.word	.L277+1
 1988 0a2c 81240000 		.word	.L277+1
 1989 0a30 81240000 		.word	.L277+1
 1990 0a34 81240000 		.word	.L277+1
 1991 0a38 81240000 		.word	.L277+1
 1992 0a3c 81240000 		.word	.L277+1
 1993 0a40 81240000 		.word	.L277+1
 1994 0a44 81240000 		.word	.L277+1
 1995 0a48 81240000 		.word	.L277+1
 1996 0a4c 81240000 		.word	.L277+1
 1997 0a50 81240000 		.word	.L277+1
 1998 0a54 81240000 		.word	.L277+1
 1999 0a58 81240000 		.word	.L277+1
 2000 0a5c 81240000 		.word	.L277+1
 2001 0a60 81240000 		.word	.L277+1
 2002 0a64 81240000 		.word	.L277+1
 2003 0a68 81240000 		.word	.L277+1
 2004 0a6c 81240000 		.word	.L277+1
 2005 0a70 81240000 		.word	.L277+1
 2006 0a74 81240000 		.word	.L277+1
 2007 0a78 FB170000 		.word	.L118+1
 2008 0a7c C31C0000 		.word	.L119+1
 2009 0a80 81240000 		.word	.L277+1
 2010 0a84 81240000 		.word	.L277+1
 2011 0a88 81240000 		.word	.L277+1
 2012 0a8c 81240000 		.word	.L277+1
 2013 0a90 91210000 		.word	.L120+1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 61


 2014 0a94 81240000 		.word	.L277+1
 2015 0a98 81240000 		.word	.L277+1
 2016 0a9c B5220000 		.word	.L121+1
 2017              		.p2align 1
 2018              	.L112:
 481:..\src/command_processing.c ****                     case 2:         // Position PID
 482:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2019              		.loc 1 482 0
 2020 0aa0 07F5B053 		add	r3, r7, #5632
 2021 0aa4 03F10F03 		add	r3, r3, #15
 2022 0aa8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2023 0aaa AC49     		ldr	r1, .L283
 2024 0aac 1346     		mov	r3, r2
 2025 0aae DB00     		lsls	r3, r3, #3
 2026 0ab0 9B1A     		subs	r3, r3, r2
 2027 0ab2 1B01     		lsls	r3, r3, #4
 2028 0ab4 0B44     		add	r3, r3, r1
 2029 0ab6 03F20F13 		addw	r3, r3, #271
 2030 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2031 0abc 032B     		cmp	r3, #3
 2032 0abe 00F02981 		beq	.L122
 483:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2033              		.loc 1 483 0
 2034 0ac2 07F5B053 		add	r3, r7, #5632
 2035 0ac6 03F10F03 		add	r3, r3, #15
 2036 0aca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2037 0acc A349     		ldr	r1, .L283
 2038 0ace 1346     		mov	r3, r2
 2039 0ad0 DB00     		lsls	r3, r3, #3
 2040 0ad2 9B1A     		subs	r3, r3, r2
 2041 0ad4 1B01     		lsls	r3, r3, #4
 2042 0ad6 0B44     		add	r3, r3, r1
 2043 0ad8 B033     		adds	r3, r3, #176
 2044 0ada 1B68     		ldr	r3, [r3]
 2045 0adc 1846     		mov	r0, r3
 2046 0ade FFF7FEFF 		bl	__aeabi_i2f
 2047 0ae2 0346     		mov	r3, r0
 2048 0ae4 4FF08F41 		mov	r1, #1199570944
 2049 0ae8 1846     		mov	r0, r3
 2050 0aea FFF7FEFF 		bl	__aeabi_fdiv
 2051 0aee 0346     		mov	r3, r0
 2052 0af0 1A46     		mov	r2, r3
 2053 0af2 07F13803 		add	r3, r7, #56
 2054 0af6 1C3B     		subs	r3, r3, #28
 2055 0af8 1A60     		str	r2, [r3]	@ float
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2056              		.loc 1 484 0
 2057 0afa 0023     		movs	r3, #0
 2058 0afc 07F5B052 		add	r2, r7, #5632
 2059 0b00 02F11702 		add	r2, r2, #23
 2060 0b04 1370     		strb	r3, [r2]
 2061 0b06 2EE0     		b	.L123
 2062              	.L124:
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2063              		.loc 1 485 0 discriminator 3
 2064 0b08 07F5B053 		add	r3, r7, #5632
 2065 0b0c 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 62


 2066 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2067 0b12 3222     		movs	r2, #50
 2068 0b14 02FB03F3 		mul	r3, r2, r3
 2069 0b18 1A1D     		adds	r2, r3, #4
 2070 0b1a 07F5B053 		add	r3, r7, #5632
 2071 0b1e 03F11303 		add	r3, r3, #19
 2072 0b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 0b24 1A44     		add	r2, r2, r3
 2074 0b26 07F5B053 		add	r3, r7, #5632
 2075 0b2a 03F11703 		add	r3, r3, #23
 2076 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2077 0b30 D31A     		subs	r3, r2, r3
 2078 0b32 5A1E     		subs	r2, r3, #1
 2079 0b34 07F5B053 		add	r3, r7, #5632
 2080 0b38 03F11703 		add	r3, r3, #23
 2081 0b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2082 0b3e 07F13803 		add	r3, r7, #56
 2083 0b42 1C3B     		subs	r3, r3, #28
 2084 0b44 0B44     		add	r3, r3, r1
 2085 0b46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2086 0b48 07F15803 		add	r3, r7, #88
 2087 0b4c 043B     		subs	r3, r3, #4
 2088 0b4e 9954     		strb	r1, [r3, r2]
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2089              		.loc 1 484 0 discriminator 3
 2090 0b50 07F5B053 		add	r3, r7, #5632
 2091 0b54 03F11703 		add	r3, r3, #23
 2092 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2093 0b5a 0133     		adds	r3, r3, #1
 2094 0b5c 07F5B052 		add	r2, r7, #5632
 2095 0b60 02F11702 		add	r2, r2, #23
 2096 0b64 1370     		strb	r3, [r2]
 2097              	.L123:
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2098              		.loc 1 484 0 is_stmt 0 discriminator 1
 2099 0b66 07F5B053 		add	r3, r7, #5632
 2100 0b6a 03F11703 		add	r3, r3, #23
 2101 0b6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2102 0b70 07F5B053 		add	r3, r7, #5632
 2103 0b74 03F11303 		add	r3, r3, #19
 2104 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2105 0b7a 9A42     		cmp	r2, r3
 2106 0b7c C4D3     		bcc	.L124
 486:..\src/command_processing.c ****                             }
 487:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2107              		.loc 1 487 0 is_stmt 1
 2108 0b7e 07F5B053 		add	r3, r7, #5632
 2109 0b82 03F10F03 		add	r3, r3, #15
 2110 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2111 0b88 7449     		ldr	r1, .L283
 2112 0b8a 1346     		mov	r3, r2
 2113 0b8c DB00     		lsls	r3, r3, #3
 2114 0b8e 9B1A     		subs	r3, r3, r2
 2115 0b90 1B01     		lsls	r3, r3, #4
 2116 0b92 0B44     		add	r3, r3, r1
 2117 0b94 B433     		adds	r3, r3, #180
 2118 0b96 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 63


 2119 0b98 1846     		mov	r0, r3
 2120 0b9a FFF7FEFF 		bl	__aeabi_i2f
 2121 0b9e 0346     		mov	r3, r0
 2122 0ba0 4FF08F41 		mov	r1, #1199570944
 2123 0ba4 1846     		mov	r0, r3
 2124 0ba6 FFF7FEFF 		bl	__aeabi_fdiv
 2125 0baa 0346     		mov	r3, r0
 2126 0bac 1A46     		mov	r2, r3
 2127 0bae 07F13803 		add	r3, r7, #56
 2128 0bb2 1C3B     		subs	r3, r3, #28
 2129 0bb4 1A60     		str	r2, [r3]	@ float
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2130              		.loc 1 488 0
 2131 0bb6 0023     		movs	r3, #0
 2132 0bb8 07F5B052 		add	r2, r7, #5632
 2133 0bbc 02F11702 		add	r2, r2, #23
 2134 0bc0 1370     		strb	r3, [r2]
 2135 0bc2 34E0     		b	.L125
 2136              	.L126:
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2137              		.loc 1 489 0 discriminator 3
 2138 0bc4 07F5B053 		add	r3, r7, #5632
 2139 0bc8 03F11503 		add	r3, r3, #21
 2140 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2141 0bce 3222     		movs	r2, #50
 2142 0bd0 02FB03F3 		mul	r3, r2, r3
 2143 0bd4 1A1D     		adds	r2, r3, #4
 2144 0bd6 07F5B053 		add	r3, r7, #5632
 2145 0bda 03F11303 		add	r3, r3, #19
 2146 0bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2147 0be0 1A44     		add	r2, r2, r3
 2148 0be2 07F5B053 		add	r3, r7, #5632
 2149 0be6 03F11303 		add	r3, r3, #19
 2150 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151 0bec 1A44     		add	r2, r2, r3
 2152 0bee 07F5B053 		add	r3, r7, #5632
 2153 0bf2 03F11703 		add	r3, r3, #23
 2154 0bf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2155 0bf8 D31A     		subs	r3, r2, r3
 2156 0bfa 5A1E     		subs	r2, r3, #1
 2157 0bfc 07F5B053 		add	r3, r7, #5632
 2158 0c00 03F11703 		add	r3, r3, #23
 2159 0c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2160 0c06 07F13803 		add	r3, r7, #56
 2161 0c0a 1C3B     		subs	r3, r3, #28
 2162 0c0c 0B44     		add	r3, r3, r1
 2163 0c0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2164 0c10 07F15803 		add	r3, r7, #88
 2165 0c14 043B     		subs	r3, r3, #4
 2166 0c16 9954     		strb	r1, [r3, r2]
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2167              		.loc 1 488 0 discriminator 3
 2168 0c18 07F5B053 		add	r3, r7, #5632
 2169 0c1c 03F11703 		add	r3, r3, #23
 2170 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2171 0c22 0133     		adds	r3, r3, #1
 2172 0c24 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 64


 2173 0c28 02F11702 		add	r2, r2, #23
 2174 0c2c 1370     		strb	r3, [r2]
 2175              	.L125:
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2176              		.loc 1 488 0 is_stmt 0 discriminator 1
 2177 0c2e 07F5B053 		add	r3, r7, #5632
 2178 0c32 03F11703 		add	r3, r3, #23
 2179 0c36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2180 0c38 07F5B053 		add	r3, r7, #5632
 2181 0c3c 03F11303 		add	r3, r3, #19
 2182 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2183 0c42 9A42     		cmp	r2, r3
 2184 0c44 BED3     		bcc	.L126
 490:..\src/command_processing.c ****                             }
 491:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2185              		.loc 1 491 0 is_stmt 1
 2186 0c46 07F5B053 		add	r3, r7, #5632
 2187 0c4a 03F10F03 		add	r3, r3, #15
 2188 0c4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2189 0c50 4249     		ldr	r1, .L283
 2190 0c52 1346     		mov	r3, r2
 2191 0c54 DB00     		lsls	r3, r3, #3
 2192 0c56 9B1A     		subs	r3, r3, r2
 2193 0c58 1B01     		lsls	r3, r3, #4
 2194 0c5a 0B44     		add	r3, r3, r1
 2195 0c5c B833     		adds	r3, r3, #184
 2196 0c5e 1B68     		ldr	r3, [r3]
 2197 0c60 1846     		mov	r0, r3
 2198 0c62 FFF7FEFF 		bl	__aeabi_i2f
 2199 0c66 0346     		mov	r3, r0
 2200 0c68 4FF08F41 		mov	r1, #1199570944
 2201 0c6c 1846     		mov	r0, r3
 2202 0c6e FFF7FEFF 		bl	__aeabi_fdiv
 2203 0c72 0346     		mov	r3, r0
 2204 0c74 1A46     		mov	r2, r3
 2205 0c76 07F13803 		add	r3, r7, #56
 2206 0c7a 1C3B     		subs	r3, r3, #28
 2207 0c7c 1A60     		str	r2, [r3]	@ float
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2208              		.loc 1 492 0
 2209 0c7e 0023     		movs	r3, #0
 2210 0c80 07F5B052 		add	r2, r7, #5632
 2211 0c84 02F11702 		add	r2, r2, #23
 2212 0c88 1370     		strb	r3, [r2]
 2213 0c8a 35E0     		b	.L127
 2214              	.L128:
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2215              		.loc 1 493 0 discriminator 3
 2216 0c8c 07F5B053 		add	r3, r7, #5632
 2217 0c90 03F11503 		add	r3, r3, #21
 2218 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2219 0c96 3222     		movs	r2, #50
 2220 0c98 02FB03F3 		mul	r3, r2, r3
 2221 0c9c 1A1D     		adds	r2, r3, #4
 2222 0c9e 07F5B053 		add	r3, r7, #5632
 2223 0ca2 03F11303 		add	r3, r3, #19
 2224 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 65


 2225 0ca8 5B00     		lsls	r3, r3, #1
 2226 0caa 1A44     		add	r2, r2, r3
 2227 0cac 07F5B053 		add	r3, r7, #5632
 2228 0cb0 03F11303 		add	r3, r3, #19
 2229 0cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2230 0cb6 1A44     		add	r2, r2, r3
 2231 0cb8 07F5B053 		add	r3, r7, #5632
 2232 0cbc 03F11703 		add	r3, r3, #23
 2233 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2234 0cc2 D31A     		subs	r3, r2, r3
 2235 0cc4 5A1E     		subs	r2, r3, #1
 2236 0cc6 07F5B053 		add	r3, r7, #5632
 2237 0cca 03F11703 		add	r3, r3, #23
 2238 0cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2239 0cd0 07F13803 		add	r3, r7, #56
 2240 0cd4 1C3B     		subs	r3, r3, #28
 2241 0cd6 0B44     		add	r3, r3, r1
 2242 0cd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2243 0cda 07F15803 		add	r3, r7, #88
 2244 0cde 043B     		subs	r3, r3, #4
 2245 0ce0 9954     		strb	r1, [r3, r2]
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2246              		.loc 1 492 0 discriminator 3
 2247 0ce2 07F5B053 		add	r3, r7, #5632
 2248 0ce6 03F11703 		add	r3, r3, #23
 2249 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2250 0cec 0133     		adds	r3, r3, #1
 2251 0cee 07F5B052 		add	r2, r7, #5632
 2252 0cf2 02F11702 		add	r2, r2, #23
 2253 0cf6 1370     		strb	r3, [r2]
 2254              	.L127:
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2255              		.loc 1 492 0 is_stmt 0 discriminator 1
 2256 0cf8 07F5B053 		add	r3, r7, #5632
 2257 0cfc 03F11703 		add	r3, r3, #23
 2258 0d00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2259 0d02 07F5B053 		add	r3, r7, #5632
 2260 0d06 03F11303 		add	r3, r3, #19
 2261 0d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2262 0d0c 9A42     		cmp	r2, r3
 2263 0d0e BDD3     		bcc	.L128
 494:..\src/command_processing.c ****                             } 
 495:..\src/command_processing.c ****                         }
 496:..\src/command_processing.c ****                         else {
 497:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 498:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 500:..\src/command_processing.c ****                             }
 501:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 504:..\src/command_processing.c ****                             }
 505:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 507:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 508:..\src/command_processing.c ****                             }
 509:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 66


 510:..\src/command_processing.c ****                         break;
 2264              		.loc 1 510 0 is_stmt 1
 2265 0d10 01F0B7BB 		b	.L110
 2266              	.L122:
 497:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2267              		.loc 1 497 0
 2268 0d14 07F5B053 		add	r3, r7, #5632
 2269 0d18 03F10F03 		add	r3, r3, #15
 2270 0d1c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2271 0d1e 0F49     		ldr	r1, .L283
 2272 0d20 1346     		mov	r3, r2
 2273 0d22 DB00     		lsls	r3, r3, #3
 2274 0d24 9B1A     		subs	r3, r3, r2
 2275 0d26 1B01     		lsls	r3, r3, #4
 2276 0d28 0B44     		add	r3, r3, r1
 2277 0d2a C833     		adds	r3, r3, #200
 2278 0d2c 1B68     		ldr	r3, [r3]
 2279 0d2e 1846     		mov	r0, r3
 2280 0d30 FFF7FEFF 		bl	__aeabi_i2f
 2281 0d34 0346     		mov	r3, r0
 2282 0d36 4FF08F41 		mov	r1, #1199570944
 2283 0d3a 1846     		mov	r0, r3
 2284 0d3c FFF7FEFF 		bl	__aeabi_fdiv
 2285 0d40 0346     		mov	r3, r0
 2286 0d42 1A46     		mov	r2, r3
 2287 0d44 07F13803 		add	r3, r7, #56
 2288 0d48 1C3B     		subs	r3, r3, #28
 2289 0d4a 1A60     		str	r2, [r3]	@ float
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2290              		.loc 1 498 0
 2291 0d4c 0023     		movs	r3, #0
 2292 0d4e 07F5B052 		add	r2, r7, #5632
 2293 0d52 02F11702 		add	r2, r2, #23
 2294 0d56 1370     		strb	r3, [r2]
 2295 0d58 31E0     		b	.L130
 2296              	.L284:
 2297 0d5a 00BF     		.align	2
 2298              	.L283:
 2299 0d5c 00000000 		.word	c_mem
 2300              	.L131:
 499:..\src/command_processing.c ****                             }
 2301              		.loc 1 499 0 discriminator 3
 2302 0d60 07F5B053 		add	r3, r7, #5632
 2303 0d64 03F11503 		add	r3, r3, #21
 2304 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0d6a 3222     		movs	r2, #50
 2306 0d6c 02FB03F3 		mul	r3, r2, r3
 2307 0d70 1A1D     		adds	r2, r3, #4
 2308 0d72 07F5B053 		add	r3, r7, #5632
 2309 0d76 03F11303 		add	r3, r3, #19
 2310 0d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2311 0d7c 1A44     		add	r2, r2, r3
 2312 0d7e 07F5B053 		add	r3, r7, #5632
 2313 0d82 03F11703 		add	r3, r3, #23
 2314 0d86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2315 0d88 D31A     		subs	r3, r2, r3
 2316 0d8a 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 67


 2317 0d8c 07F5B053 		add	r3, r7, #5632
 2318 0d90 03F11703 		add	r3, r3, #23
 2319 0d94 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2320 0d96 07F13803 		add	r3, r7, #56
 2321 0d9a 1C3B     		subs	r3, r3, #28
 2322 0d9c 0B44     		add	r3, r3, r1
 2323 0d9e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2324 0da0 07F15803 		add	r3, r7, #88
 2325 0da4 043B     		subs	r3, r3, #4
 2326 0da6 9954     		strb	r1, [r3, r2]
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2327              		.loc 1 498 0 discriminator 3
 2328 0da8 07F5B053 		add	r3, r7, #5632
 2329 0dac 03F11703 		add	r3, r3, #23
 2330 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2331 0db2 0133     		adds	r3, r3, #1
 2332 0db4 07F5B052 		add	r2, r7, #5632
 2333 0db8 02F11702 		add	r2, r2, #23
 2334 0dbc 1370     		strb	r3, [r2]
 2335              	.L130:
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2336              		.loc 1 498 0 is_stmt 0 discriminator 1
 2337 0dbe 07F5B053 		add	r3, r7, #5632
 2338 0dc2 03F11703 		add	r3, r3, #23
 2339 0dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2340 0dc8 07F5B053 		add	r3, r7, #5632
 2341 0dcc 03F11303 		add	r3, r3, #19
 2342 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2343 0dd2 9A42     		cmp	r2, r3
 2344 0dd4 C4D3     		bcc	.L131
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2345              		.loc 1 501 0 is_stmt 1
 2346 0dd6 07F5B053 		add	r3, r7, #5632
 2347 0dda 03F10F03 		add	r3, r3, #15
 2348 0dde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2349 0de0 AB49     		ldr	r1, .L285
 2350 0de2 1346     		mov	r3, r2
 2351 0de4 DB00     		lsls	r3, r3, #3
 2352 0de6 9B1A     		subs	r3, r3, r2
 2353 0de8 1B01     		lsls	r3, r3, #4
 2354 0dea 0B44     		add	r3, r3, r1
 2355 0dec CC33     		adds	r3, r3, #204
 2356 0dee 1B68     		ldr	r3, [r3]
 2357 0df0 1846     		mov	r0, r3
 2358 0df2 FFF7FEFF 		bl	__aeabi_i2f
 2359 0df6 0346     		mov	r3, r0
 2360 0df8 4FF08F41 		mov	r1, #1199570944
 2361 0dfc 1846     		mov	r0, r3
 2362 0dfe FFF7FEFF 		bl	__aeabi_fdiv
 2363 0e02 0346     		mov	r3, r0
 2364 0e04 1A46     		mov	r2, r3
 2365 0e06 07F13803 		add	r3, r7, #56
 2366 0e0a 1C3B     		subs	r3, r3, #28
 2367 0e0c 1A60     		str	r2, [r3]	@ float
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2368              		.loc 1 502 0
 2369 0e0e 0023     		movs	r3, #0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 68


 2370 0e10 07F5B052 		add	r2, r7, #5632
 2371 0e14 02F11702 		add	r2, r2, #23
 2372 0e18 1370     		strb	r3, [r2]
 2373 0e1a 34E0     		b	.L132
 2374              	.L133:
 503:..\src/command_processing.c ****                             }
 2375              		.loc 1 503 0 discriminator 3
 2376 0e1c 07F5B053 		add	r3, r7, #5632
 2377 0e20 03F11503 		add	r3, r3, #21
 2378 0e24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2379 0e26 3222     		movs	r2, #50
 2380 0e28 02FB03F3 		mul	r3, r2, r3
 2381 0e2c 1A1D     		adds	r2, r3, #4
 2382 0e2e 07F5B053 		add	r3, r7, #5632
 2383 0e32 03F11303 		add	r3, r3, #19
 2384 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2385 0e38 1A44     		add	r2, r2, r3
 2386 0e3a 07F5B053 		add	r3, r7, #5632
 2387 0e3e 03F11303 		add	r3, r3, #19
 2388 0e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2389 0e44 1A44     		add	r2, r2, r3
 2390 0e46 07F5B053 		add	r3, r7, #5632
 2391 0e4a 03F11703 		add	r3, r3, #23
 2392 0e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2393 0e50 D31A     		subs	r3, r2, r3
 2394 0e52 5A1E     		subs	r2, r3, #1
 2395 0e54 07F5B053 		add	r3, r7, #5632
 2396 0e58 03F11703 		add	r3, r3, #23
 2397 0e5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2398 0e5e 07F13803 		add	r3, r7, #56
 2399 0e62 1C3B     		subs	r3, r3, #28
 2400 0e64 0B44     		add	r3, r3, r1
 2401 0e66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2402 0e68 07F15803 		add	r3, r7, #88
 2403 0e6c 043B     		subs	r3, r3, #4
 2404 0e6e 9954     		strb	r1, [r3, r2]
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2405              		.loc 1 502 0 discriminator 3
 2406 0e70 07F5B053 		add	r3, r7, #5632
 2407 0e74 03F11703 		add	r3, r3, #23
 2408 0e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2409 0e7a 0133     		adds	r3, r3, #1
 2410 0e7c 07F5B052 		add	r2, r7, #5632
 2411 0e80 02F11702 		add	r2, r2, #23
 2412 0e84 1370     		strb	r3, [r2]
 2413              	.L132:
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2414              		.loc 1 502 0 is_stmt 0 discriminator 1
 2415 0e86 07F5B053 		add	r3, r7, #5632
 2416 0e8a 03F11703 		add	r3, r3, #23
 2417 0e8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2418 0e90 07F5B053 		add	r3, r7, #5632
 2419 0e94 03F11303 		add	r3, r3, #19
 2420 0e98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2421 0e9a 9A42     		cmp	r2, r3
 2422 0e9c BED3     		bcc	.L133
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 69


 2423              		.loc 1 505 0 is_stmt 1
 2424 0e9e 07F5B053 		add	r3, r7, #5632
 2425 0ea2 03F10F03 		add	r3, r3, #15
 2426 0ea6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2427 0ea8 7949     		ldr	r1, .L285
 2428 0eaa 1346     		mov	r3, r2
 2429 0eac DB00     		lsls	r3, r3, #3
 2430 0eae 9B1A     		subs	r3, r3, r2
 2431 0eb0 1B01     		lsls	r3, r3, #4
 2432 0eb2 0B44     		add	r3, r3, r1
 2433 0eb4 D033     		adds	r3, r3, #208
 2434 0eb6 1B68     		ldr	r3, [r3]
 2435 0eb8 1846     		mov	r0, r3
 2436 0eba FFF7FEFF 		bl	__aeabi_i2f
 2437 0ebe 0346     		mov	r3, r0
 2438 0ec0 4FF08F41 		mov	r1, #1199570944
 2439 0ec4 1846     		mov	r0, r3
 2440 0ec6 FFF7FEFF 		bl	__aeabi_fdiv
 2441 0eca 0346     		mov	r3, r0
 2442 0ecc 1A46     		mov	r2, r3
 2443 0ece 07F13803 		add	r3, r7, #56
 2444 0ed2 1C3B     		subs	r3, r3, #28
 2445 0ed4 1A60     		str	r2, [r3]	@ float
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2446              		.loc 1 506 0
 2447 0ed6 0023     		movs	r3, #0
 2448 0ed8 07F5B052 		add	r2, r7, #5632
 2449 0edc 02F11702 		add	r2, r2, #23
 2450 0ee0 1370     		strb	r3, [r2]
 2451 0ee2 35E0     		b	.L134
 2452              	.L135:
 507:..\src/command_processing.c ****                             }
 2453              		.loc 1 507 0 discriminator 3
 2454 0ee4 07F5B053 		add	r3, r7, #5632
 2455 0ee8 03F11503 		add	r3, r3, #21
 2456 0eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2457 0eee 3222     		movs	r2, #50
 2458 0ef0 02FB03F3 		mul	r3, r2, r3
 2459 0ef4 1A1D     		adds	r2, r3, #4
 2460 0ef6 07F5B053 		add	r3, r7, #5632
 2461 0efa 03F11303 		add	r3, r3, #19
 2462 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2463 0f00 5B00     		lsls	r3, r3, #1
 2464 0f02 1A44     		add	r2, r2, r3
 2465 0f04 07F5B053 		add	r3, r7, #5632
 2466 0f08 03F11303 		add	r3, r3, #19
 2467 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2468 0f0e 1A44     		add	r2, r2, r3
 2469 0f10 07F5B053 		add	r3, r7, #5632
 2470 0f14 03F11703 		add	r3, r3, #23
 2471 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2472 0f1a D31A     		subs	r3, r2, r3
 2473 0f1c 5A1E     		subs	r2, r3, #1
 2474 0f1e 07F5B053 		add	r3, r7, #5632
 2475 0f22 03F11703 		add	r3, r3, #23
 2476 0f26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2477 0f28 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 70


 2478 0f2c 1C3B     		subs	r3, r3, #28
 2479 0f2e 0B44     		add	r3, r3, r1
 2480 0f30 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2481 0f32 07F15803 		add	r3, r7, #88
 2482 0f36 043B     		subs	r3, r3, #4
 2483 0f38 9954     		strb	r1, [r3, r2]
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2484              		.loc 1 506 0 discriminator 3
 2485 0f3a 07F5B053 		add	r3, r7, #5632
 2486 0f3e 03F11703 		add	r3, r3, #23
 2487 0f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2488 0f44 0133     		adds	r3, r3, #1
 2489 0f46 07F5B052 		add	r2, r7, #5632
 2490 0f4a 02F11702 		add	r2, r2, #23
 2491 0f4e 1370     		strb	r3, [r2]
 2492              	.L134:
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2493              		.loc 1 506 0 is_stmt 0 discriminator 1
 2494 0f50 07F5B053 		add	r3, r7, #5632
 2495 0f54 03F11703 		add	r3, r3, #23
 2496 0f58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2497 0f5a 07F5B053 		add	r3, r7, #5632
 2498 0f5e 03F11303 		add	r3, r3, #19
 2499 0f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2500 0f64 9A42     		cmp	r2, r3
 2501 0f66 BDD3     		bcc	.L135
 2502              		.loc 1 510 0 is_stmt 1
 2503 0f68 01F08BBA 		b	.L110
 2504              	.L114:
 511:..\src/command_processing.c ****                         
 512:..\src/command_processing.c ****                     case 3:         //Current PID
 513:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2505              		.loc 1 513 0
 2506 0f6c 07F5B053 		add	r3, r7, #5632
 2507 0f70 03F10F03 		add	r3, r3, #15
 2508 0f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2509 0f76 4649     		ldr	r1, .L285
 2510 0f78 1346     		mov	r3, r2
 2511 0f7a DB00     		lsls	r3, r3, #3
 2512 0f7c 9B1A     		subs	r3, r3, r2
 2513 0f7e 1B01     		lsls	r3, r3, #4
 2514 0f80 0B44     		add	r3, r3, r1
 2515 0f82 03F20F13 		addw	r3, r3, #271
 2516 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2517 0f88 032B     		cmp	r3, #3
 2518 0f8a 00F02B81 		beq	.L136
 514:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2519              		.loc 1 514 0
 2520 0f8e 07F5B053 		add	r3, r7, #5632
 2521 0f92 03F10F03 		add	r3, r3, #15
 2522 0f96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2523 0f98 3D49     		ldr	r1, .L285
 2524 0f9a 1346     		mov	r3, r2
 2525 0f9c DB00     		lsls	r3, r3, #3
 2526 0f9e 9B1A     		subs	r3, r3, r2
 2527 0fa0 1B01     		lsls	r3, r3, #4
 2528 0fa2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 71


 2529 0fa4 BC33     		adds	r3, r3, #188
 2530 0fa6 1B68     		ldr	r3, [r3]
 2531 0fa8 1846     		mov	r0, r3
 2532 0faa FFF7FEFF 		bl	__aeabi_i2f
 2533 0fae 0346     		mov	r3, r0
 2534 0fb0 4FF08F41 		mov	r1, #1199570944
 2535 0fb4 1846     		mov	r0, r3
 2536 0fb6 FFF7FEFF 		bl	__aeabi_fdiv
 2537 0fba 0346     		mov	r3, r0
 2538 0fbc 1A46     		mov	r2, r3
 2539 0fbe 07F13803 		add	r3, r7, #56
 2540 0fc2 1C3B     		subs	r3, r3, #28
 2541 0fc4 1A60     		str	r2, [r3]	@ float
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2542              		.loc 1 515 0
 2543 0fc6 0023     		movs	r3, #0
 2544 0fc8 07F5B052 		add	r2, r7, #5632
 2545 0fcc 02F11702 		add	r2, r2, #23
 2546 0fd0 1370     		strb	r3, [r2]
 2547 0fd2 2EE0     		b	.L137
 2548              	.L138:
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2549              		.loc 1 516 0 discriminator 3
 2550 0fd4 07F5B053 		add	r3, r7, #5632
 2551 0fd8 03F11503 		add	r3, r3, #21
 2552 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2553 0fde 3222     		movs	r2, #50
 2554 0fe0 02FB03F3 		mul	r3, r2, r3
 2555 0fe4 1A1D     		adds	r2, r3, #4
 2556 0fe6 07F5B053 		add	r3, r7, #5632
 2557 0fea 03F11303 		add	r3, r3, #19
 2558 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2559 0ff0 1A44     		add	r2, r2, r3
 2560 0ff2 07F5B053 		add	r3, r7, #5632
 2561 0ff6 03F11703 		add	r3, r3, #23
 2562 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2563 0ffc D31A     		subs	r3, r2, r3
 2564 0ffe 5A1E     		subs	r2, r3, #1
 2565 1000 07F5B053 		add	r3, r7, #5632
 2566 1004 03F11703 		add	r3, r3, #23
 2567 1008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2568 100a 07F13803 		add	r3, r7, #56
 2569 100e 1C3B     		subs	r3, r3, #28
 2570 1010 0B44     		add	r3, r3, r1
 2571 1012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2572 1014 07F15803 		add	r3, r7, #88
 2573 1018 043B     		subs	r3, r3, #4
 2574 101a 9954     		strb	r1, [r3, r2]
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2575              		.loc 1 515 0 discriminator 3
 2576 101c 07F5B053 		add	r3, r7, #5632
 2577 1020 03F11703 		add	r3, r3, #23
 2578 1024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2579 1026 0133     		adds	r3, r3, #1
 2580 1028 07F5B052 		add	r2, r7, #5632
 2581 102c 02F11702 		add	r2, r2, #23
 2582 1030 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 72


 2583              	.L137:
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2584              		.loc 1 515 0 is_stmt 0 discriminator 1
 2585 1032 07F5B053 		add	r3, r7, #5632
 2586 1036 03F11703 		add	r3, r3, #23
 2587 103a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2588 103c 07F5B053 		add	r3, r7, #5632
 2589 1040 03F11303 		add	r3, r3, #19
 2590 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2591 1046 9A42     		cmp	r2, r3
 2592 1048 C4D3     		bcc	.L138
 517:..\src/command_processing.c ****                             }
 518:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2593              		.loc 1 518 0 is_stmt 1
 2594 104a 07F5B053 		add	r3, r7, #5632
 2595 104e 03F10F03 		add	r3, r3, #15
 2596 1052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2597 1054 0E49     		ldr	r1, .L285
 2598 1056 1346     		mov	r3, r2
 2599 1058 DB00     		lsls	r3, r3, #3
 2600 105a 9B1A     		subs	r3, r3, r2
 2601 105c 1B01     		lsls	r3, r3, #4
 2602 105e 0B44     		add	r3, r3, r1
 2603 1060 C033     		adds	r3, r3, #192
 2604 1062 1B68     		ldr	r3, [r3]
 2605 1064 1846     		mov	r0, r3
 2606 1066 FFF7FEFF 		bl	__aeabi_i2f
 2607 106a 0346     		mov	r3, r0
 2608 106c 4FF08F41 		mov	r1, #1199570944
 2609 1070 1846     		mov	r0, r3
 2610 1072 FFF7FEFF 		bl	__aeabi_fdiv
 2611 1076 0346     		mov	r3, r0
 2612 1078 1A46     		mov	r2, r3
 2613 107a 07F13803 		add	r3, r7, #56
 2614 107e 1C3B     		subs	r3, r3, #28
 2615 1080 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2616              		.loc 1 519 0
 2617 1082 0023     		movs	r3, #0
 2618 1084 07F5B052 		add	r2, r7, #5632
 2619 1088 02F11702 		add	r2, r2, #23
 2620 108c 1370     		strb	r3, [r2]
 2621 108e 36E0     		b	.L139
 2622              	.L286:
 2623              		.align	2
 2624              	.L285:
 2625 1090 00000000 		.word	c_mem
 2626              	.L140:
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2627              		.loc 1 520 0 discriminator 3
 2628 1094 07F5B053 		add	r3, r7, #5632
 2629 1098 03F11503 		add	r3, r3, #21
 2630 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2631 109e 3222     		movs	r2, #50
 2632 10a0 02FB03F3 		mul	r3, r2, r3
 2633 10a4 1A1D     		adds	r2, r3, #4
 2634 10a6 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 73


 2635 10aa 03F11303 		add	r3, r3, #19
 2636 10ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2637 10b0 1A44     		add	r2, r2, r3
 2638 10b2 07F5B053 		add	r3, r7, #5632
 2639 10b6 03F11303 		add	r3, r3, #19
 2640 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2641 10bc 1A44     		add	r2, r2, r3
 2642 10be 07F5B053 		add	r3, r7, #5632
 2643 10c2 03F11703 		add	r3, r3, #23
 2644 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2645 10c8 D31A     		subs	r3, r2, r3
 2646 10ca 5A1E     		subs	r2, r3, #1
 2647 10cc 07F5B053 		add	r3, r7, #5632
 2648 10d0 03F11703 		add	r3, r3, #23
 2649 10d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2650 10d6 07F13803 		add	r3, r7, #56
 2651 10da 1C3B     		subs	r3, r3, #28
 2652 10dc 0B44     		add	r3, r3, r1
 2653 10de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2654 10e0 07F15803 		add	r3, r7, #88
 2655 10e4 043B     		subs	r3, r3, #4
 2656 10e6 9954     		strb	r1, [r3, r2]
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2657              		.loc 1 519 0 discriminator 3
 2658 10e8 07F5B053 		add	r3, r7, #5632
 2659 10ec 03F11703 		add	r3, r3, #23
 2660 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2661 10f2 0133     		adds	r3, r3, #1
 2662 10f4 07F5B052 		add	r2, r7, #5632
 2663 10f8 02F11702 		add	r2, r2, #23
 2664 10fc 1370     		strb	r3, [r2]
 2665              	.L139:
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2666              		.loc 1 519 0 is_stmt 0 discriminator 1
 2667 10fe 07F5B053 		add	r3, r7, #5632
 2668 1102 03F11703 		add	r3, r3, #23
 2669 1106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2670 1108 07F5B053 		add	r3, r7, #5632
 2671 110c 03F11303 		add	r3, r3, #19
 2672 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2673 1112 9A42     		cmp	r2, r3
 2674 1114 BED3     		bcc	.L140
 521:..\src/command_processing.c ****                             }
 522:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2675              		.loc 1 522 0 is_stmt 1
 2676 1116 07F5B053 		add	r3, r7, #5632
 2677 111a 03F10F03 		add	r3, r3, #15
 2678 111e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2679 1120 C549     		ldr	r1, .L287
 2680 1122 1346     		mov	r3, r2
 2681 1124 DB00     		lsls	r3, r3, #3
 2682 1126 9B1A     		subs	r3, r3, r2
 2683 1128 1B01     		lsls	r3, r3, #4
 2684 112a 0B44     		add	r3, r3, r1
 2685 112c C433     		adds	r3, r3, #196
 2686 112e 1B68     		ldr	r3, [r3]
 2687 1130 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 74


 2688 1132 FFF7FEFF 		bl	__aeabi_i2f
 2689 1136 0346     		mov	r3, r0
 2690 1138 4FF08F41 		mov	r1, #1199570944
 2691 113c 1846     		mov	r0, r3
 2692 113e FFF7FEFF 		bl	__aeabi_fdiv
 2693 1142 0346     		mov	r3, r0
 2694 1144 1A46     		mov	r2, r3
 2695 1146 07F13803 		add	r3, r7, #56
 2696 114a 1C3B     		subs	r3, r3, #28
 2697 114c 1A60     		str	r2, [r3]	@ float
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2698              		.loc 1 523 0
 2699 114e 0023     		movs	r3, #0
 2700 1150 07F5B052 		add	r2, r7, #5632
 2701 1154 02F11702 		add	r2, r2, #23
 2702 1158 1370     		strb	r3, [r2]
 2703 115a 35E0     		b	.L141
 2704              	.L142:
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2705              		.loc 1 524 0 discriminator 3
 2706 115c 07F5B053 		add	r3, r7, #5632
 2707 1160 03F11503 		add	r3, r3, #21
 2708 1164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2709 1166 3222     		movs	r2, #50
 2710 1168 02FB03F3 		mul	r3, r2, r3
 2711 116c 1A1D     		adds	r2, r3, #4
 2712 116e 07F5B053 		add	r3, r7, #5632
 2713 1172 03F11303 		add	r3, r3, #19
 2714 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2715 1178 5B00     		lsls	r3, r3, #1
 2716 117a 1A44     		add	r2, r2, r3
 2717 117c 07F5B053 		add	r3, r7, #5632
 2718 1180 03F11303 		add	r3, r3, #19
 2719 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2720 1186 1A44     		add	r2, r2, r3
 2721 1188 07F5B053 		add	r3, r7, #5632
 2722 118c 03F11703 		add	r3, r3, #23
 2723 1190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2724 1192 D31A     		subs	r3, r2, r3
 2725 1194 5A1E     		subs	r2, r3, #1
 2726 1196 07F5B053 		add	r3, r7, #5632
 2727 119a 03F11703 		add	r3, r3, #23
 2728 119e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2729 11a0 07F13803 		add	r3, r7, #56
 2730 11a4 1C3B     		subs	r3, r3, #28
 2731 11a6 0B44     		add	r3, r3, r1
 2732 11a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2733 11aa 07F15803 		add	r3, r7, #88
 2734 11ae 043B     		subs	r3, r3, #4
 2735 11b0 9954     		strb	r1, [r3, r2]
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2736              		.loc 1 523 0 discriminator 3
 2737 11b2 07F5B053 		add	r3, r7, #5632
 2738 11b6 03F11703 		add	r3, r3, #23
 2739 11ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2740 11bc 0133     		adds	r3, r3, #1
 2741 11be 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 75


 2742 11c2 02F11702 		add	r2, r2, #23
 2743 11c6 1370     		strb	r3, [r2]
 2744              	.L141:
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2745              		.loc 1 523 0 is_stmt 0 discriminator 1
 2746 11c8 07F5B053 		add	r3, r7, #5632
 2747 11cc 03F11703 		add	r3, r3, #23
 2748 11d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2749 11d2 07F5B053 		add	r3, r7, #5632
 2750 11d6 03F11303 		add	r3, r3, #19
 2751 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2752 11dc 9A42     		cmp	r2, r3
 2753 11de BDD3     		bcc	.L142
 525:..\src/command_processing.c ****                             }
 526:..\src/command_processing.c ****                         }
 527:..\src/command_processing.c ****                         else {
 528:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 529:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 531:..\src/command_processing.c ****                             }
 532:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 533:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 534:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 535:..\src/command_processing.c ****                             }
 536:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 537:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 538:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 539:..\src/command_processing.c ****                             }
 540:..\src/command_processing.c ****                         }            
 541:..\src/command_processing.c ****                         break;  
 2754              		.loc 1 541 0 is_stmt 1
 2755 11e0 01F04FB9 		b	.L110
 2756              	.L136:
 528:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2757              		.loc 1 528 0
 2758 11e4 07F5B053 		add	r3, r7, #5632
 2759 11e8 03F10F03 		add	r3, r3, #15
 2760 11ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2761 11ee 9249     		ldr	r1, .L287
 2762 11f0 1346     		mov	r3, r2
 2763 11f2 DB00     		lsls	r3, r3, #3
 2764 11f4 9B1A     		subs	r3, r3, r2
 2765 11f6 1B01     		lsls	r3, r3, #4
 2766 11f8 0B44     		add	r3, r3, r1
 2767 11fa D433     		adds	r3, r3, #212
 2768 11fc 1B68     		ldr	r3, [r3]
 2769 11fe 1846     		mov	r0, r3
 2770 1200 FFF7FEFF 		bl	__aeabi_i2f
 2771 1204 0346     		mov	r3, r0
 2772 1206 4FF08F41 		mov	r1, #1199570944
 2773 120a 1846     		mov	r0, r3
 2774 120c FFF7FEFF 		bl	__aeabi_fdiv
 2775 1210 0346     		mov	r3, r0
 2776 1212 1A46     		mov	r2, r3
 2777 1214 07F13803 		add	r3, r7, #56
 2778 1218 1C3B     		subs	r3, r3, #28
 2779 121a 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 76


 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2780              		.loc 1 529 0
 2781 121c 0023     		movs	r3, #0
 2782 121e 07F5B052 		add	r2, r7, #5632
 2783 1222 02F11702 		add	r2, r2, #23
 2784 1226 1370     		strb	r3, [r2]
 2785 1228 2EE0     		b	.L144
 2786              	.L145:
 530:..\src/command_processing.c ****                             }
 2787              		.loc 1 530 0 discriminator 3
 2788 122a 07F5B053 		add	r3, r7, #5632
 2789 122e 03F11503 		add	r3, r3, #21
 2790 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2791 1234 3222     		movs	r2, #50
 2792 1236 02FB03F3 		mul	r3, r2, r3
 2793 123a 1A1D     		adds	r2, r3, #4
 2794 123c 07F5B053 		add	r3, r7, #5632
 2795 1240 03F11303 		add	r3, r3, #19
 2796 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2797 1246 1A44     		add	r2, r2, r3
 2798 1248 07F5B053 		add	r3, r7, #5632
 2799 124c 03F11703 		add	r3, r3, #23
 2800 1250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2801 1252 D31A     		subs	r3, r2, r3
 2802 1254 5A1E     		subs	r2, r3, #1
 2803 1256 07F5B053 		add	r3, r7, #5632
 2804 125a 03F11703 		add	r3, r3, #23
 2805 125e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2806 1260 07F13803 		add	r3, r7, #56
 2807 1264 1C3B     		subs	r3, r3, #28
 2808 1266 0B44     		add	r3, r3, r1
 2809 1268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2810 126a 07F15803 		add	r3, r7, #88
 2811 126e 043B     		subs	r3, r3, #4
 2812 1270 9954     		strb	r1, [r3, r2]
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2813              		.loc 1 529 0 discriminator 3
 2814 1272 07F5B053 		add	r3, r7, #5632
 2815 1276 03F11703 		add	r3, r3, #23
 2816 127a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2817 127c 0133     		adds	r3, r3, #1
 2818 127e 07F5B052 		add	r2, r7, #5632
 2819 1282 02F11702 		add	r2, r2, #23
 2820 1286 1370     		strb	r3, [r2]
 2821              	.L144:
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2822              		.loc 1 529 0 is_stmt 0 discriminator 1
 2823 1288 07F5B053 		add	r3, r7, #5632
 2824 128c 03F11703 		add	r3, r3, #23
 2825 1290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2826 1292 07F5B053 		add	r3, r7, #5632
 2827 1296 03F11303 		add	r3, r3, #19
 2828 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2829 129c 9A42     		cmp	r2, r3
 2830 129e C4D3     		bcc	.L145
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2831              		.loc 1 532 0 is_stmt 1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 77


 2832 12a0 07F5B053 		add	r3, r7, #5632
 2833 12a4 03F10F03 		add	r3, r3, #15
 2834 12a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2835 12aa 6349     		ldr	r1, .L287
 2836 12ac 1346     		mov	r3, r2
 2837 12ae DB00     		lsls	r3, r3, #3
 2838 12b0 9B1A     		subs	r3, r3, r2
 2839 12b2 1B01     		lsls	r3, r3, #4
 2840 12b4 0B44     		add	r3, r3, r1
 2841 12b6 D833     		adds	r3, r3, #216
 2842 12b8 1B68     		ldr	r3, [r3]
 2843 12ba 1846     		mov	r0, r3
 2844 12bc FFF7FEFF 		bl	__aeabi_i2f
 2845 12c0 0346     		mov	r3, r0
 2846 12c2 4FF08F41 		mov	r1, #1199570944
 2847 12c6 1846     		mov	r0, r3
 2848 12c8 FFF7FEFF 		bl	__aeabi_fdiv
 2849 12cc 0346     		mov	r3, r0
 2850 12ce 1A46     		mov	r2, r3
 2851 12d0 07F13803 		add	r3, r7, #56
 2852 12d4 1C3B     		subs	r3, r3, #28
 2853 12d6 1A60     		str	r2, [r3]	@ float
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2854              		.loc 1 533 0
 2855 12d8 0023     		movs	r3, #0
 2856 12da 07F5B052 		add	r2, r7, #5632
 2857 12de 02F11702 		add	r2, r2, #23
 2858 12e2 1370     		strb	r3, [r2]
 2859 12e4 34E0     		b	.L146
 2860              	.L147:
 534:..\src/command_processing.c ****                             }
 2861              		.loc 1 534 0 discriminator 3
 2862 12e6 07F5B053 		add	r3, r7, #5632
 2863 12ea 03F11503 		add	r3, r3, #21
 2864 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2865 12f0 3222     		movs	r2, #50
 2866 12f2 02FB03F3 		mul	r3, r2, r3
 2867 12f6 1A1D     		adds	r2, r3, #4
 2868 12f8 07F5B053 		add	r3, r7, #5632
 2869 12fc 03F11303 		add	r3, r3, #19
 2870 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2871 1302 1A44     		add	r2, r2, r3
 2872 1304 07F5B053 		add	r3, r7, #5632
 2873 1308 03F11303 		add	r3, r3, #19
 2874 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2875 130e 1A44     		add	r2, r2, r3
 2876 1310 07F5B053 		add	r3, r7, #5632
 2877 1314 03F11703 		add	r3, r3, #23
 2878 1318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2879 131a D31A     		subs	r3, r2, r3
 2880 131c 5A1E     		subs	r2, r3, #1
 2881 131e 07F5B053 		add	r3, r7, #5632
 2882 1322 03F11703 		add	r3, r3, #23
 2883 1326 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2884 1328 07F13803 		add	r3, r7, #56
 2885 132c 1C3B     		subs	r3, r3, #28
 2886 132e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 78


 2887 1330 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2888 1332 07F15803 		add	r3, r7, #88
 2889 1336 043B     		subs	r3, r3, #4
 2890 1338 9954     		strb	r1, [r3, r2]
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2891              		.loc 1 533 0 discriminator 3
 2892 133a 07F5B053 		add	r3, r7, #5632
 2893 133e 03F11703 		add	r3, r3, #23
 2894 1342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2895 1344 0133     		adds	r3, r3, #1
 2896 1346 07F5B052 		add	r2, r7, #5632
 2897 134a 02F11702 		add	r2, r2, #23
 2898 134e 1370     		strb	r3, [r2]
 2899              	.L146:
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2900              		.loc 1 533 0 is_stmt 0 discriminator 1
 2901 1350 07F5B053 		add	r3, r7, #5632
 2902 1354 03F11703 		add	r3, r3, #23
 2903 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2904 135a 07F5B053 		add	r3, r7, #5632
 2905 135e 03F11303 		add	r3, r3, #19
 2906 1362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2907 1364 9A42     		cmp	r2, r3
 2908 1366 BED3     		bcc	.L147
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2909              		.loc 1 536 0 is_stmt 1
 2910 1368 07F5B053 		add	r3, r7, #5632
 2911 136c 03F10F03 		add	r3, r3, #15
 2912 1370 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2913 1372 3149     		ldr	r1, .L287
 2914 1374 1346     		mov	r3, r2
 2915 1376 DB00     		lsls	r3, r3, #3
 2916 1378 9B1A     		subs	r3, r3, r2
 2917 137a 1B01     		lsls	r3, r3, #4
 2918 137c 0B44     		add	r3, r3, r1
 2919 137e DC33     		adds	r3, r3, #220
 2920 1380 1B68     		ldr	r3, [r3]
 2921 1382 1846     		mov	r0, r3
 2922 1384 FFF7FEFF 		bl	__aeabi_i2f
 2923 1388 0346     		mov	r3, r0
 2924 138a 4FF08F41 		mov	r1, #1199570944
 2925 138e 1846     		mov	r0, r3
 2926 1390 FFF7FEFF 		bl	__aeabi_fdiv
 2927 1394 0346     		mov	r3, r0
 2928 1396 1A46     		mov	r2, r3
 2929 1398 07F13803 		add	r3, r7, #56
 2930 139c 1C3B     		subs	r3, r3, #28
 2931 139e 1A60     		str	r2, [r3]	@ float
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2932              		.loc 1 537 0
 2933 13a0 0023     		movs	r3, #0
 2934 13a2 07F5B052 		add	r2, r7, #5632
 2935 13a6 02F11702 		add	r2, r2, #23
 2936 13aa 1370     		strb	r3, [r2]
 2937 13ac 35E0     		b	.L148
 2938              	.L149:
 538:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 79


 2939              		.loc 1 538 0 discriminator 3
 2940 13ae 07F5B053 		add	r3, r7, #5632
 2941 13b2 03F11503 		add	r3, r3, #21
 2942 13b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2943 13b8 3222     		movs	r2, #50
 2944 13ba 02FB03F3 		mul	r3, r2, r3
 2945 13be 1A1D     		adds	r2, r3, #4
 2946 13c0 07F5B053 		add	r3, r7, #5632
 2947 13c4 03F11303 		add	r3, r3, #19
 2948 13c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2949 13ca 5B00     		lsls	r3, r3, #1
 2950 13cc 1A44     		add	r2, r2, r3
 2951 13ce 07F5B053 		add	r3, r7, #5632
 2952 13d2 03F11303 		add	r3, r3, #19
 2953 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2954 13d8 1A44     		add	r2, r2, r3
 2955 13da 07F5B053 		add	r3, r7, #5632
 2956 13de 03F11703 		add	r3, r3, #23
 2957 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2958 13e4 D31A     		subs	r3, r2, r3
 2959 13e6 5A1E     		subs	r2, r3, #1
 2960 13e8 07F5B053 		add	r3, r7, #5632
 2961 13ec 03F11703 		add	r3, r3, #23
 2962 13f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2963 13f2 07F13803 		add	r3, r7, #56
 2964 13f6 1C3B     		subs	r3, r3, #28
 2965 13f8 0B44     		add	r3, r3, r1
 2966 13fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2967 13fc 07F15803 		add	r3, r7, #88
 2968 1400 043B     		subs	r3, r3, #4
 2969 1402 9954     		strb	r1, [r3, r2]
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2970              		.loc 1 537 0 discriminator 3
 2971 1404 07F5B053 		add	r3, r7, #5632
 2972 1408 03F11703 		add	r3, r3, #23
 2973 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2974 140e 0133     		adds	r3, r3, #1
 2975 1410 07F5B052 		add	r2, r7, #5632
 2976 1414 02F11702 		add	r2, r2, #23
 2977 1418 1370     		strb	r3, [r2]
 2978              	.L148:
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2979              		.loc 1 537 0 is_stmt 0 discriminator 1
 2980 141a 07F5B053 		add	r3, r7, #5632
 2981 141e 03F11703 		add	r3, r3, #23
 2982 1422 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2983 1424 07F5B053 		add	r3, r7, #5632
 2984 1428 03F11303 		add	r3, r3, #19
 2985 142c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2986 142e 9A42     		cmp	r2, r3
 2987 1430 BDD3     		bcc	.L149
 2988              		.loc 1 541 0 is_stmt 1
 2989 1432 01F026B8 		b	.L110
 2990              	.L288:
 2991 1436 00BF     		.align	2
 2992              	.L287:
 2993 1438 00000000 		.word	c_mem
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 80


 2994              	.L115:
 542:..\src/command_processing.c **** 
 543:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 544:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2995              		.loc 1 544 0
 2996 143c 07F5B053 		add	r3, r7, #5632
 2997 1440 03F10F03 		add	r3, r3, #15
 2998 1444 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2999 1446 CC49     		ldr	r1, .L289
 3000 1448 1346     		mov	r3, r2
 3001 144a DB00     		lsls	r3, r3, #3
 3002 144c 9B1A     		subs	r3, r3, r2
 3003 144e 1B01     		lsls	r3, r3, #4
 3004 1450 0B44     		add	r3, r3, r1
 3005 1452 03F58873 		add	r3, r3, #272
 3006 1456 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3007 1458 1846     		mov	r0, r3
 3008 145a 07F5B053 		add	r3, r7, #5632
 3009 145e 03F11703 		add	r3, r3, #23
 3010 1462 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3011 1464 C549     		ldr	r1, .L289+4
 3012 1466 0346     		mov	r3, r0
 3013 1468 5B00     		lsls	r3, r3, #1
 3014 146a 0344     		add	r3, r3, r0
 3015 146c 9B00     		lsls	r3, r3, #2
 3016 146e 1344     		add	r3, r3, r2
 3017 1470 6633     		adds	r3, r3, #102
 3018 1472 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3019 1476 07F5B053 		add	r3, r7, #5632
 3020 147a 03F10F03 		add	r3, r3, #15
 3021 147e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3022 1480 BD48     		ldr	r0, .L289
 3023 1482 1346     		mov	r3, r2
 3024 1484 DB00     		lsls	r3, r3, #3
 3025 1486 9B1A     		subs	r3, r3, r2
 3026 1488 1B01     		lsls	r3, r3, #4
 3027 148a 0344     		add	r3, r3, r0
 3028 148c 03F58873 		add	r3, r3, #272
 3029 1490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3030 1492 1C46     		mov	r4, r3
 3031 1494 07F5B053 		add	r3, r7, #5632
 3032 1498 03F11703 		add	r3, r3, #23
 3033 149c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3034 149e B748     		ldr	r0, .L289+4
 3035 14a0 2346     		mov	r3, r4
 3036 14a2 5B00     		lsls	r3, r3, #1
 3037 14a4 2344     		add	r3, r3, r4
 3038 14a6 1B01     		lsls	r3, r3, #4
 3039 14a8 0344     		add	r3, r3, r0
 3040 14aa 1344     		add	r3, r3, r2
 3041 14ac 03F29513 		addw	r3, r3, #405
 3042 14b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3043 14b2 41FA03F3 		asr	r3, r1, r3
 3044 14b6 1AB2     		sxth	r2, r3
 3045 14b8 07F13803 		add	r3, r7, #56
 3046 14bc 1E3B     		subs	r3, r3, #30
 3047 14be 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 81


 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3048              		.loc 1 545 0
 3049 14c0 0023     		movs	r3, #0
 3050 14c2 07F5B052 		add	r2, r7, #5632
 3051 14c6 02F11602 		add	r2, r2, #22
 3052 14ca 1370     		strb	r3, [r2]
 3053 14cc 3BE0     		b	.L150
 3054              	.L151:
 546:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3055              		.loc 1 546 0 discriminator 3
 3056 14ce 07F5B053 		add	r3, r7, #5632
 3057 14d2 03F11503 		add	r3, r3, #21
 3058 14d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3059 14d8 3222     		movs	r2, #50
 3060 14da 02FB03F3 		mul	r3, r2, r3
 3061 14de 1A1D     		adds	r2, r3, #4
 3062 14e0 07F5B053 		add	r3, r7, #5632
 3063 14e4 03F11703 		add	r3, r3, #23
 3064 14e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3065 14ea 07F5B051 		add	r1, r7, #5632
 3066 14ee 01F11301 		add	r1, r1, #19
 3067 14f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3068 14f4 01FB03F3 		mul	r3, r1, r3
 3069 14f8 1A44     		add	r2, r2, r3
 3070 14fa 07F5B053 		add	r3, r7, #5632
 3071 14fe 03F11303 		add	r3, r3, #19
 3072 1502 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3073 1504 1A44     		add	r2, r2, r3
 3074 1506 07F5B053 		add	r3, r7, #5632
 3075 150a 03F11603 		add	r3, r3, #22
 3076 150e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3077 1510 D31A     		subs	r3, r2, r3
 3078 1512 5A1E     		subs	r2, r3, #1
 3079 1514 07F5B053 		add	r3, r7, #5632
 3080 1518 03F11603 		add	r3, r3, #22
 3081 151c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3082 151e 07F13803 		add	r3, r7, #56
 3083 1522 1E3B     		subs	r3, r3, #30
 3084 1524 0B44     		add	r3, r3, r1
 3085 1526 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3086 1528 07F15803 		add	r3, r7, #88
 3087 152c 043B     		subs	r3, r3, #4
 3088 152e 9954     		strb	r1, [r3, r2]
 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3089              		.loc 1 545 0 discriminator 3
 3090 1530 07F5B053 		add	r3, r7, #5632
 3091 1534 03F11603 		add	r3, r3, #22
 3092 1538 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3093 153a 0133     		adds	r3, r3, #1
 3094 153c 07F5B052 		add	r2, r7, #5632
 3095 1540 02F11602 		add	r2, r2, #22
 3096 1544 1370     		strb	r3, [r2]
 3097              	.L150:
 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3098              		.loc 1 545 0 is_stmt 0 discriminator 1
 3099 1546 07F5B053 		add	r3, r7, #5632
 3100 154a 03F11603 		add	r3, r3, #22
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 82


 3101 154e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3102 1550 07F5B053 		add	r3, r7, #5632
 3103 1554 03F11303 		add	r3, r3, #19
 3104 1558 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3105 155a 9A42     		cmp	r2, r3
 3106 155c B7D3     		bcc	.L151
 547:..\src/command_processing.c ****                         }
 548:..\src/command_processing.c ****                         break;
 3107              		.loc 1 548 0 is_stmt 1
 3108 155e 00F090BF 		b	.L110
 3109              	.L116:
 549:..\src/command_processing.c ****                 
 550:..\src/command_processing.c ****                     case 11:        //Position limits
 551:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3110              		.loc 1 551 0
 3111 1562 07F5B053 		add	r3, r7, #5632
 3112 1566 03F10F03 		add	r3, r3, #15
 3113 156a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3114 156c 8349     		ldr	r1, .L289+4
 3115 156e 1346     		mov	r3, r2
 3116 1570 DB00     		lsls	r3, r3, #3
 3117 1572 9B1A     		subs	r3, r3, r2
 3118 1574 1B01     		lsls	r3, r3, #4
 3119 1576 0B44     		add	r3, r3, r1
 3120 1578 E433     		adds	r3, r3, #228
 3121 157a 1968     		ldr	r1, [r3]
 3122 157c 07F5B053 		add	r3, r7, #5632
 3123 1580 03F10F03 		add	r3, r3, #15
 3124 1584 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3125 1586 7C48     		ldr	r0, .L289
 3126 1588 1346     		mov	r3, r2
 3127 158a DB00     		lsls	r3, r3, #3
 3128 158c 9B1A     		subs	r3, r3, r2
 3129 158e 1B01     		lsls	r3, r3, #4
 3130 1590 0344     		add	r3, r3, r0
 3131 1592 03F58873 		add	r3, r3, #272
 3132 1596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3133 1598 1846     		mov	r0, r3
 3134 159a 784A     		ldr	r2, .L289+4
 3135 159c 0346     		mov	r3, r0
 3136 159e 5B00     		lsls	r3, r3, #1
 3137 15a0 0344     		add	r3, r3, r0
 3138 15a2 1B01     		lsls	r3, r3, #4
 3139 15a4 1344     		add	r3, r3, r2
 3140 15a6 03F29513 		addw	r3, r3, #405
 3141 15aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3142 15ac 41FA03F2 		asr	r2, r1, r3
 3143 15b0 07F11803 		add	r3, r7, #24
 3144 15b4 043B     		subs	r3, r3, #4
 3145 15b6 1A60     		str	r2, [r3]
 552:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3146              		.loc 1 552 0
 3147 15b8 0023     		movs	r3, #0
 3148 15ba 07F5B052 		add	r2, r7, #5632
 3149 15be 02F11602 		add	r2, r2, #22
 3150 15c2 1370     		strb	r3, [r2]
 3151 15c4 2EE0     		b	.L152
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 83


 3152              	.L153:
 553:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3153              		.loc 1 553 0 discriminator 3
 3154 15c6 07F5B053 		add	r3, r7, #5632
 3155 15ca 03F11503 		add	r3, r3, #21
 3156 15ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3157 15d0 3222     		movs	r2, #50
 3158 15d2 02FB03F3 		mul	r3, r2, r3
 3159 15d6 1A1D     		adds	r2, r3, #4
 3160 15d8 07F5B053 		add	r3, r7, #5632
 3161 15dc 03F11303 		add	r3, r3, #19
 3162 15e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3163 15e2 1A44     		add	r2, r2, r3
 3164 15e4 07F5B053 		add	r3, r7, #5632
 3165 15e8 03F11603 		add	r3, r3, #22
 3166 15ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3167 15ee D31A     		subs	r3, r2, r3
 3168 15f0 5A1E     		subs	r2, r3, #1
 3169 15f2 07F5B053 		add	r3, r7, #5632
 3170 15f6 03F11603 		add	r3, r3, #22
 3171 15fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3172 15fc 07F11803 		add	r3, r7, #24
 3173 1600 043B     		subs	r3, r3, #4
 3174 1602 0B44     		add	r3, r3, r1
 3175 1604 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3176 1606 07F15803 		add	r3, r7, #88
 3177 160a 043B     		subs	r3, r3, #4
 3178 160c 9954     		strb	r1, [r3, r2]
 552:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3179              		.loc 1 552 0 discriminator 3
 3180 160e 07F5B053 		add	r3, r7, #5632
 3181 1612 03F11603 		add	r3, r3, #22
 3182 1616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3183 1618 0133     		adds	r3, r3, #1
 3184 161a 07F5B052 		add	r2, r7, #5632
 3185 161e 02F11602 		add	r2, r2, #22
 3186 1622 1370     		strb	r3, [r2]
 3187              	.L152:
 552:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3188              		.loc 1 552 0 is_stmt 0 discriminator 1
 3189 1624 07F5B053 		add	r3, r7, #5632
 3190 1628 03F11603 		add	r3, r3, #22
 3191 162c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3192 162e 07F5B053 		add	r3, r7, #5632
 3193 1632 03F11303 		add	r3, r3, #19
 3194 1636 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3195 1638 9A42     		cmp	r2, r3
 3196 163a C4D3     		bcc	.L153
 554:..\src/command_processing.c ****                         }
 555:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3197              		.loc 1 555 0 is_stmt 1
 3198 163c 07F5B053 		add	r3, r7, #5632
 3199 1640 03F10F03 		add	r3, r3, #15
 3200 1644 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3201 1646 4D49     		ldr	r1, .L289+4
 3202 1648 1346     		mov	r3, r2
 3203 164a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 84


 3204 164c 9B1A     		subs	r3, r3, r2
 3205 164e 1B01     		lsls	r3, r3, #4
 3206 1650 0B44     		add	r3, r3, r1
 3207 1652 E833     		adds	r3, r3, #232
 3208 1654 1968     		ldr	r1, [r3]
 3209 1656 07F5B053 		add	r3, r7, #5632
 3210 165a 03F10F03 		add	r3, r3, #15
 3211 165e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3212 1660 4548     		ldr	r0, .L289
 3213 1662 1346     		mov	r3, r2
 3214 1664 DB00     		lsls	r3, r3, #3
 3215 1666 9B1A     		subs	r3, r3, r2
 3216 1668 1B01     		lsls	r3, r3, #4
 3217 166a 0344     		add	r3, r3, r0
 3218 166c 03F58873 		add	r3, r3, #272
 3219 1670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3220 1672 1846     		mov	r0, r3
 3221 1674 414A     		ldr	r2, .L289+4
 3222 1676 0346     		mov	r3, r0
 3223 1678 5B00     		lsls	r3, r3, #1
 3224 167a 0344     		add	r3, r3, r0
 3225 167c 1B01     		lsls	r3, r3, #4
 3226 167e 1344     		add	r3, r3, r2
 3227 1680 03F29513 		addw	r3, r3, #405
 3228 1684 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3229 1686 41FA03F2 		asr	r2, r1, r3
 3230 168a 07F11803 		add	r3, r7, #24
 3231 168e 043B     		subs	r3, r3, #4
 3232 1690 1A60     		str	r2, [r3]
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3233              		.loc 1 556 0
 3234 1692 0023     		movs	r3, #0
 3235 1694 07F5B052 		add	r2, r7, #5632
 3236 1698 02F11602 		add	r2, r2, #22
 3237 169c 1370     		strb	r3, [r2]
 3238 169e 34E0     		b	.L154
 3239              	.L155:
 557:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3240              		.loc 1 557 0 discriminator 3
 3241 16a0 07F5B053 		add	r3, r7, #5632
 3242 16a4 03F11503 		add	r3, r3, #21
 3243 16a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3244 16aa 3222     		movs	r2, #50
 3245 16ac 02FB03F3 		mul	r3, r2, r3
 3246 16b0 1A1D     		adds	r2, r3, #4
 3247 16b2 07F5B053 		add	r3, r7, #5632
 3248 16b6 03F11303 		add	r3, r3, #19
 3249 16ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3250 16bc 1A44     		add	r2, r2, r3
 3251 16be 07F5B053 		add	r3, r7, #5632
 3252 16c2 03F11303 		add	r3, r3, #19
 3253 16c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3254 16c8 1A44     		add	r2, r2, r3
 3255 16ca 07F5B053 		add	r3, r7, #5632
 3256 16ce 03F11603 		add	r3, r3, #22
 3257 16d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3258 16d4 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 85


 3259 16d6 5A1E     		subs	r2, r3, #1
 3260 16d8 07F5B053 		add	r3, r7, #5632
 3261 16dc 03F11603 		add	r3, r3, #22
 3262 16e0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3263 16e2 07F11803 		add	r3, r7, #24
 3264 16e6 043B     		subs	r3, r3, #4
 3265 16e8 0B44     		add	r3, r3, r1
 3266 16ea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3267 16ec 07F15803 		add	r3, r7, #88
 3268 16f0 043B     		subs	r3, r3, #4
 3269 16f2 9954     		strb	r1, [r3, r2]
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3270              		.loc 1 556 0 discriminator 3
 3271 16f4 07F5B053 		add	r3, r7, #5632
 3272 16f8 03F11603 		add	r3, r3, #22
 3273 16fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3274 16fe 0133     		adds	r3, r3, #1
 3275 1700 07F5B052 		add	r2, r7, #5632
 3276 1704 02F11602 		add	r2, r2, #22
 3277 1708 1370     		strb	r3, [r2]
 3278              	.L154:
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3279              		.loc 1 556 0 is_stmt 0 discriminator 1
 3280 170a 07F5B053 		add	r3, r7, #5632
 3281 170e 03F11603 		add	r3, r3, #22
 3282 1712 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3283 1714 07F5B053 		add	r3, r7, #5632
 3284 1718 03F11303 		add	r3, r3, #19
 3285 171c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3286 171e 9A42     		cmp	r2, r3
 3287 1720 BED3     		bcc	.L155
 558:..\src/command_processing.c ****                         }
 559:..\src/command_processing.c ****                         break;            
 3288              		.loc 1 559 0 is_stmt 1
 3289 1722 00F0AEBE 		b	.L110
 3290              	.L117:
 560:..\src/command_processing.c **** 
 561:..\src/command_processing.c ****                     case 23:        //Rest Position
 562:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3291              		.loc 1 562 0
 3292 1726 154B     		ldr	r3, .L289+4
 3293 1728 D3F8A012 		ldr	r1, [r3, #672]
 3294 172c 07F5B053 		add	r3, r7, #5632
 3295 1730 03F10F03 		add	r3, r3, #15
 3296 1734 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3297 1736 1048     		ldr	r0, .L289
 3298 1738 1346     		mov	r3, r2
 3299 173a DB00     		lsls	r3, r3, #3
 3300 173c 9B1A     		subs	r3, r3, r2
 3301 173e 1B01     		lsls	r3, r3, #4
 3302 1740 0344     		add	r3, r3, r0
 3303 1742 03F58873 		add	r3, r3, #272
 3304 1746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3305 1748 1846     		mov	r0, r3
 3306 174a 0C4A     		ldr	r2, .L289+4
 3307 174c 0346     		mov	r3, r0
 3308 174e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 86


 3309 1750 0344     		add	r3, r3, r0
 3310 1752 1B01     		lsls	r3, r3, #4
 3311 1754 1344     		add	r3, r3, r2
 3312 1756 03F29513 		addw	r3, r3, #405
 3313 175a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3314 175c 41FA03F2 		asr	r2, r1, r3
 3315 1760 07F11803 		add	r3, r7, #24
 3316 1764 043B     		subs	r3, r3, #4
 3317 1766 1A60     		str	r2, [r3]
 563:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3318              		.loc 1 563 0
 3319 1768 0023     		movs	r3, #0
 3320 176a 07F5B052 		add	r2, r7, #5632
 3321 176e 02F11602 		add	r2, r2, #22
 3322 1772 1370     		strb	r3, [r2]
 3323 1774 33E0     		b	.L156
 3324              	.L290:
 3325 1776 00BF     		.align	2
 3326              	.L289:
 3327 1778 00000000 		.word	g_mem
 3328 177c 00000000 		.word	c_mem
 3329              	.L157:
 564:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3330              		.loc 1 564 0 discriminator 3
 3331 1780 07F5B053 		add	r3, r7, #5632
 3332 1784 03F11503 		add	r3, r3, #21
 3333 1788 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3334 178a 3222     		movs	r2, #50
 3335 178c 02FB03F3 		mul	r3, r2, r3
 3336 1790 1A1D     		adds	r2, r3, #4
 3337 1792 07F5B053 		add	r3, r7, #5632
 3338 1796 03F11303 		add	r3, r3, #19
 3339 179a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3340 179c 1A44     		add	r2, r2, r3
 3341 179e 07F5B053 		add	r3, r7, #5632
 3342 17a2 03F11603 		add	r3, r3, #22
 3343 17a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3344 17a8 D31A     		subs	r3, r2, r3
 3345 17aa 5A1E     		subs	r2, r3, #1
 3346 17ac 07F5B053 		add	r3, r7, #5632
 3347 17b0 03F11603 		add	r3, r3, #22
 3348 17b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3349 17b6 07F11803 		add	r3, r7, #24
 3350 17ba 043B     		subs	r3, r3, #4
 3351 17bc 0B44     		add	r3, r3, r1
 3352 17be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3353 17c0 07F15803 		add	r3, r7, #88
 3354 17c4 043B     		subs	r3, r3, #4
 3355 17c6 9954     		strb	r1, [r3, r2]
 563:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3356              		.loc 1 563 0 discriminator 3
 3357 17c8 07F5B053 		add	r3, r7, #5632
 3358 17cc 03F11603 		add	r3, r3, #22
 3359 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3360 17d2 0133     		adds	r3, r3, #1
 3361 17d4 07F5B052 		add	r2, r7, #5632
 3362 17d8 02F11602 		add	r2, r2, #22
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 87


 3363 17dc 1370     		strb	r3, [r2]
 3364              	.L156:
 563:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3365              		.loc 1 563 0 is_stmt 0 discriminator 1
 3366 17de 07F5B053 		add	r3, r7, #5632
 3367 17e2 03F11603 		add	r3, r3, #22
 3368 17e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3369 17e8 07F5B053 		add	r3, r7, #5632
 3370 17ec 03F11303 		add	r3, r3, #19
 3371 17f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3372 17f2 9A42     		cmp	r2, r3
 3373 17f4 C4D3     		bcc	.L157
 565:..\src/command_processing.c ****                         }
 566:..\src/command_processing.c ****                         break; 
 3374              		.loc 1 566 0 is_stmt 1
 3375 17f6 00F044BE 		b	.L110
 3376              	.L118:
 567:..\src/command_processing.c ****                         
 568:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 569:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3377              		.loc 1 569 0
 3378 17fa 07F5B053 		add	r3, r7, #5632
 3379 17fe 03F10E03 		add	r3, r3, #14
 3380 1802 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3381 1804 AB49     		ldr	r1, .L291
 3382 1806 1346     		mov	r3, r2
 3383 1808 DB00     		lsls	r3, r3, #3
 3384 180a 9B1A     		subs	r3, r3, r2
 3385 180c 1B01     		lsls	r3, r3, #4
 3386 180e 0B44     		add	r3, r3, r1
 3387 1810 03F20F13 		addw	r3, r3, #271
 3388 1814 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3389 1816 032B     		cmp	r3, #3
 3390 1818 00F02981 		beq	.L158
 570:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3391              		.loc 1 570 0
 3392 181c 07F5B053 		add	r3, r7, #5632
 3393 1820 03F10E03 		add	r3, r3, #14
 3394 1824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3395 1826 A349     		ldr	r1, .L291
 3396 1828 1346     		mov	r3, r2
 3397 182a DB00     		lsls	r3, r3, #3
 3398 182c 9B1A     		subs	r3, r3, r2
 3399 182e 1B01     		lsls	r3, r3, #4
 3400 1830 0B44     		add	r3, r3, r1
 3401 1832 B033     		adds	r3, r3, #176
 3402 1834 1B68     		ldr	r3, [r3]
 3403 1836 1846     		mov	r0, r3
 3404 1838 FFF7FEFF 		bl	__aeabi_i2f
 3405 183c 0346     		mov	r3, r0
 3406 183e 4FF08F41 		mov	r1, #1199570944
 3407 1842 1846     		mov	r0, r3
 3408 1844 FFF7FEFF 		bl	__aeabi_fdiv
 3409 1848 0346     		mov	r3, r0
 3410 184a 1A46     		mov	r2, r3
 3411 184c 07F13803 		add	r3, r7, #56
 3412 1850 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 88


 3413 1852 1A60     		str	r2, [r3]	@ float
 571:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3414              		.loc 1 571 0
 3415 1854 0023     		movs	r3, #0
 3416 1856 07F5B052 		add	r2, r7, #5632
 3417 185a 02F11702 		add	r2, r2, #23
 3418 185e 1370     		strb	r3, [r2]
 3419 1860 2EE0     		b	.L159
 3420              	.L160:
 572:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3421              		.loc 1 572 0 discriminator 3
 3422 1862 07F5B053 		add	r3, r7, #5632
 3423 1866 03F11503 		add	r3, r3, #21
 3424 186a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3425 186c 3222     		movs	r2, #50
 3426 186e 02FB03F3 		mul	r3, r2, r3
 3427 1872 1A1D     		adds	r2, r3, #4
 3428 1874 07F5B053 		add	r3, r7, #5632
 3429 1878 03F11303 		add	r3, r3, #19
 3430 187c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3431 187e 1A44     		add	r2, r2, r3
 3432 1880 07F5B053 		add	r3, r7, #5632
 3433 1884 03F11703 		add	r3, r3, #23
 3434 1888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3435 188a D31A     		subs	r3, r2, r3
 3436 188c 5A1E     		subs	r2, r3, #1
 3437 188e 07F5B053 		add	r3, r7, #5632
 3438 1892 03F11703 		add	r3, r3, #23
 3439 1896 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3440 1898 07F13803 		add	r3, r7, #56
 3441 189c 1C3B     		subs	r3, r3, #28
 3442 189e 0B44     		add	r3, r3, r1
 3443 18a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3444 18a2 07F15803 		add	r3, r7, #88
 3445 18a6 043B     		subs	r3, r3, #4
 3446 18a8 9954     		strb	r1, [r3, r2]
 571:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3447              		.loc 1 571 0 discriminator 3
 3448 18aa 07F5B053 		add	r3, r7, #5632
 3449 18ae 03F11703 		add	r3, r3, #23
 3450 18b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3451 18b4 0133     		adds	r3, r3, #1
 3452 18b6 07F5B052 		add	r2, r7, #5632
 3453 18ba 02F11702 		add	r2, r2, #23
 3454 18be 1370     		strb	r3, [r2]
 3455              	.L159:
 571:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3456              		.loc 1 571 0 is_stmt 0 discriminator 1
 3457 18c0 07F5B053 		add	r3, r7, #5632
 3458 18c4 03F11703 		add	r3, r3, #23
 3459 18c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3460 18ca 07F5B053 		add	r3, r7, #5632
 3461 18ce 03F11303 		add	r3, r3, #19
 3462 18d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3463 18d4 9A42     		cmp	r2, r3
 3464 18d6 C4D3     		bcc	.L160
 573:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 89


 574:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3465              		.loc 1 574 0 is_stmt 1
 3466 18d8 07F5B053 		add	r3, r7, #5632
 3467 18dc 03F10E03 		add	r3, r3, #14
 3468 18e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3469 18e2 7449     		ldr	r1, .L291
 3470 18e4 1346     		mov	r3, r2
 3471 18e6 DB00     		lsls	r3, r3, #3
 3472 18e8 9B1A     		subs	r3, r3, r2
 3473 18ea 1B01     		lsls	r3, r3, #4
 3474 18ec 0B44     		add	r3, r3, r1
 3475 18ee B433     		adds	r3, r3, #180
 3476 18f0 1B68     		ldr	r3, [r3]
 3477 18f2 1846     		mov	r0, r3
 3478 18f4 FFF7FEFF 		bl	__aeabi_i2f
 3479 18f8 0346     		mov	r3, r0
 3480 18fa 4FF08F41 		mov	r1, #1199570944
 3481 18fe 1846     		mov	r0, r3
 3482 1900 FFF7FEFF 		bl	__aeabi_fdiv
 3483 1904 0346     		mov	r3, r0
 3484 1906 1A46     		mov	r2, r3
 3485 1908 07F13803 		add	r3, r7, #56
 3486 190c 1C3B     		subs	r3, r3, #28
 3487 190e 1A60     		str	r2, [r3]	@ float
 575:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3488              		.loc 1 575 0
 3489 1910 0023     		movs	r3, #0
 3490 1912 07F5B052 		add	r2, r7, #5632
 3491 1916 02F11702 		add	r2, r2, #23
 3492 191a 1370     		strb	r3, [r2]
 3493 191c 34E0     		b	.L161
 3494              	.L162:
 576:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3495              		.loc 1 576 0 discriminator 3
 3496 191e 07F5B053 		add	r3, r7, #5632
 3497 1922 03F11503 		add	r3, r3, #21
 3498 1926 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3499 1928 3222     		movs	r2, #50
 3500 192a 02FB03F3 		mul	r3, r2, r3
 3501 192e 1A1D     		adds	r2, r3, #4
 3502 1930 07F5B053 		add	r3, r7, #5632
 3503 1934 03F11303 		add	r3, r3, #19
 3504 1938 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3505 193a 1A44     		add	r2, r2, r3
 3506 193c 07F5B053 		add	r3, r7, #5632
 3507 1940 03F11303 		add	r3, r3, #19
 3508 1944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3509 1946 1A44     		add	r2, r2, r3
 3510 1948 07F5B053 		add	r3, r7, #5632
 3511 194c 03F11703 		add	r3, r3, #23
 3512 1950 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3513 1952 D31A     		subs	r3, r2, r3
 3514 1954 5A1E     		subs	r2, r3, #1
 3515 1956 07F5B053 		add	r3, r7, #5632
 3516 195a 03F11703 		add	r3, r3, #23
 3517 195e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3518 1960 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 90


 3519 1964 1C3B     		subs	r3, r3, #28
 3520 1966 0B44     		add	r3, r3, r1
 3521 1968 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3522 196a 07F15803 		add	r3, r7, #88
 3523 196e 043B     		subs	r3, r3, #4
 3524 1970 9954     		strb	r1, [r3, r2]
 575:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3525              		.loc 1 575 0 discriminator 3
 3526 1972 07F5B053 		add	r3, r7, #5632
 3527 1976 03F11703 		add	r3, r3, #23
 3528 197a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3529 197c 0133     		adds	r3, r3, #1
 3530 197e 07F5B052 		add	r2, r7, #5632
 3531 1982 02F11702 		add	r2, r2, #23
 3532 1986 1370     		strb	r3, [r2]
 3533              	.L161:
 575:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3534              		.loc 1 575 0 is_stmt 0 discriminator 1
 3535 1988 07F5B053 		add	r3, r7, #5632
 3536 198c 03F11703 		add	r3, r3, #23
 3537 1990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3538 1992 07F5B053 		add	r3, r7, #5632
 3539 1996 03F11303 		add	r3, r3, #19
 3540 199a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3541 199c 9A42     		cmp	r2, r3
 3542 199e BED3     		bcc	.L162
 577:..\src/command_processing.c ****                             }
 578:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3543              		.loc 1 578 0 is_stmt 1
 3544 19a0 07F5B053 		add	r3, r7, #5632
 3545 19a4 03F10E03 		add	r3, r3, #14
 3546 19a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3547 19aa 4249     		ldr	r1, .L291
 3548 19ac 1346     		mov	r3, r2
 3549 19ae DB00     		lsls	r3, r3, #3
 3550 19b0 9B1A     		subs	r3, r3, r2
 3551 19b2 1B01     		lsls	r3, r3, #4
 3552 19b4 0B44     		add	r3, r3, r1
 3553 19b6 B833     		adds	r3, r3, #184
 3554 19b8 1B68     		ldr	r3, [r3]
 3555 19ba 1846     		mov	r0, r3
 3556 19bc FFF7FEFF 		bl	__aeabi_i2f
 3557 19c0 0346     		mov	r3, r0
 3558 19c2 4FF08F41 		mov	r1, #1199570944
 3559 19c6 1846     		mov	r0, r3
 3560 19c8 FFF7FEFF 		bl	__aeabi_fdiv
 3561 19cc 0346     		mov	r3, r0
 3562 19ce 1A46     		mov	r2, r3
 3563 19d0 07F13803 		add	r3, r7, #56
 3564 19d4 1C3B     		subs	r3, r3, #28
 3565 19d6 1A60     		str	r2, [r3]	@ float
 579:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3566              		.loc 1 579 0
 3567 19d8 0023     		movs	r3, #0
 3568 19da 07F5B052 		add	r2, r7, #5632
 3569 19de 02F11702 		add	r2, r2, #23
 3570 19e2 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 91


 3571 19e4 35E0     		b	.L163
 3572              	.L164:
 580:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3573              		.loc 1 580 0 discriminator 3
 3574 19e6 07F5B053 		add	r3, r7, #5632
 3575 19ea 03F11503 		add	r3, r3, #21
 3576 19ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3577 19f0 3222     		movs	r2, #50
 3578 19f2 02FB03F3 		mul	r3, r2, r3
 3579 19f6 1A1D     		adds	r2, r3, #4
 3580 19f8 07F5B053 		add	r3, r7, #5632
 3581 19fc 03F11303 		add	r3, r3, #19
 3582 1a00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3583 1a02 5B00     		lsls	r3, r3, #1
 3584 1a04 1A44     		add	r2, r2, r3
 3585 1a06 07F5B053 		add	r3, r7, #5632
 3586 1a0a 03F11303 		add	r3, r3, #19
 3587 1a0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3588 1a10 1A44     		add	r2, r2, r3
 3589 1a12 07F5B053 		add	r3, r7, #5632
 3590 1a16 03F11703 		add	r3, r3, #23
 3591 1a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3592 1a1c D31A     		subs	r3, r2, r3
 3593 1a1e 5A1E     		subs	r2, r3, #1
 3594 1a20 07F5B053 		add	r3, r7, #5632
 3595 1a24 03F11703 		add	r3, r3, #23
 3596 1a28 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3597 1a2a 07F13803 		add	r3, r7, #56
 3598 1a2e 1C3B     		subs	r3, r3, #28
 3599 1a30 0B44     		add	r3, r3, r1
 3600 1a32 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3601 1a34 07F15803 		add	r3, r7, #88
 3602 1a38 043B     		subs	r3, r3, #4
 3603 1a3a 9954     		strb	r1, [r3, r2]
 579:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3604              		.loc 1 579 0 discriminator 3
 3605 1a3c 07F5B053 		add	r3, r7, #5632
 3606 1a40 03F11703 		add	r3, r3, #23
 3607 1a44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3608 1a46 0133     		adds	r3, r3, #1
 3609 1a48 07F5B052 		add	r2, r7, #5632
 3610 1a4c 02F11702 		add	r2, r2, #23
 3611 1a50 1370     		strb	r3, [r2]
 3612              	.L163:
 579:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3613              		.loc 1 579 0 is_stmt 0 discriminator 1
 3614 1a52 07F5B053 		add	r3, r7, #5632
 3615 1a56 03F11703 		add	r3, r3, #23
 3616 1a5a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3617 1a5c 07F5B053 		add	r3, r7, #5632
 3618 1a60 03F11303 		add	r3, r3, #19
 3619 1a64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3620 1a66 9A42     		cmp	r2, r3
 3621 1a68 BDD3     		bcc	.L164
 581:..\src/command_processing.c ****                             } 
 582:..\src/command_processing.c ****                         }
 583:..\src/command_processing.c ****                         else {
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 92


 584:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 585:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 586:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 587:..\src/command_processing.c ****                             }
 588:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 590:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 591:..\src/command_processing.c ****                             }
 592:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 593:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 594:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 595:..\src/command_processing.c ****                             }
 596:..\src/command_processing.c ****                         }
 597:..\src/command_processing.c ****                         break;
 3622              		.loc 1 597 0 is_stmt 1
 3623 1a6a 00F00ABD 		b	.L110
 3624              	.L158:
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3625              		.loc 1 584 0
 3626 1a6e 07F5B053 		add	r3, r7, #5632
 3627 1a72 03F10E03 		add	r3, r3, #14
 3628 1a76 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3629 1a78 0E49     		ldr	r1, .L291
 3630 1a7a 1346     		mov	r3, r2
 3631 1a7c DB00     		lsls	r3, r3, #3
 3632 1a7e 9B1A     		subs	r3, r3, r2
 3633 1a80 1B01     		lsls	r3, r3, #4
 3634 1a82 0B44     		add	r3, r3, r1
 3635 1a84 C833     		adds	r3, r3, #200
 3636 1a86 1B68     		ldr	r3, [r3]
 3637 1a88 1846     		mov	r0, r3
 3638 1a8a FFF7FEFF 		bl	__aeabi_i2f
 3639 1a8e 0346     		mov	r3, r0
 3640 1a90 4FF08F41 		mov	r1, #1199570944
 3641 1a94 1846     		mov	r0, r3
 3642 1a96 FFF7FEFF 		bl	__aeabi_fdiv
 3643 1a9a 0346     		mov	r3, r0
 3644 1a9c 1A46     		mov	r2, r3
 3645 1a9e 07F13803 		add	r3, r7, #56
 3646 1aa2 1C3B     		subs	r3, r3, #28
 3647 1aa4 1A60     		str	r2, [r3]	@ float
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3648              		.loc 1 585 0
 3649 1aa6 0023     		movs	r3, #0
 3650 1aa8 07F5B052 		add	r2, r7, #5632
 3651 1aac 02F11702 		add	r2, r2, #23
 3652 1ab0 1370     		strb	r3, [r2]
 3653 1ab2 30E0     		b	.L166
 3654              	.L292:
 3655              		.align	2
 3656              	.L291:
 3657 1ab4 00000000 		.word	c_mem
 3658              	.L167:
 586:..\src/command_processing.c ****                             }
 3659              		.loc 1 586 0 discriminator 3
 3660 1ab8 07F5B053 		add	r3, r7, #5632
 3661 1abc 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 93


 3662 1ac0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3663 1ac2 3222     		movs	r2, #50
 3664 1ac4 02FB03F3 		mul	r3, r2, r3
 3665 1ac8 1A1D     		adds	r2, r3, #4
 3666 1aca 07F5B053 		add	r3, r7, #5632
 3667 1ace 03F11303 		add	r3, r3, #19
 3668 1ad2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3669 1ad4 1A44     		add	r2, r2, r3
 3670 1ad6 07F5B053 		add	r3, r7, #5632
 3671 1ada 03F11703 		add	r3, r3, #23
 3672 1ade 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3673 1ae0 D31A     		subs	r3, r2, r3
 3674 1ae2 5A1E     		subs	r2, r3, #1
 3675 1ae4 07F5B053 		add	r3, r7, #5632
 3676 1ae8 03F11703 		add	r3, r3, #23
 3677 1aec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3678 1aee 07F13803 		add	r3, r7, #56
 3679 1af2 1C3B     		subs	r3, r3, #28
 3680 1af4 0B44     		add	r3, r3, r1
 3681 1af6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3682 1af8 07F15803 		add	r3, r7, #88
 3683 1afc 043B     		subs	r3, r3, #4
 3684 1afe 9954     		strb	r1, [r3, r2]
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3685              		.loc 1 585 0 discriminator 3
 3686 1b00 07F5B053 		add	r3, r7, #5632
 3687 1b04 03F11703 		add	r3, r3, #23
 3688 1b08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3689 1b0a 0133     		adds	r3, r3, #1
 3690 1b0c 07F5B052 		add	r2, r7, #5632
 3691 1b10 02F11702 		add	r2, r2, #23
 3692 1b14 1370     		strb	r3, [r2]
 3693              	.L166:
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3694              		.loc 1 585 0 is_stmt 0 discriminator 1
 3695 1b16 07F5B053 		add	r3, r7, #5632
 3696 1b1a 03F11703 		add	r3, r3, #23
 3697 1b1e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3698 1b20 07F5B053 		add	r3, r7, #5632
 3699 1b24 03F11303 		add	r3, r3, #19
 3700 1b28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3701 1b2a 9A42     		cmp	r2, r3
 3702 1b2c C4D3     		bcc	.L167
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3703              		.loc 1 588 0 is_stmt 1
 3704 1b2e 07F5B053 		add	r3, r7, #5632
 3705 1b32 03F10E03 		add	r3, r3, #14
 3706 1b36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3707 1b38 AB49     		ldr	r1, .L293
 3708 1b3a 1346     		mov	r3, r2
 3709 1b3c DB00     		lsls	r3, r3, #3
 3710 1b3e 9B1A     		subs	r3, r3, r2
 3711 1b40 1B01     		lsls	r3, r3, #4
 3712 1b42 0B44     		add	r3, r3, r1
 3713 1b44 CC33     		adds	r3, r3, #204
 3714 1b46 1B68     		ldr	r3, [r3]
 3715 1b48 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 94


 3716 1b4a FFF7FEFF 		bl	__aeabi_i2f
 3717 1b4e 0346     		mov	r3, r0
 3718 1b50 4FF08F41 		mov	r1, #1199570944
 3719 1b54 1846     		mov	r0, r3
 3720 1b56 FFF7FEFF 		bl	__aeabi_fdiv
 3721 1b5a 0346     		mov	r3, r0
 3722 1b5c 1A46     		mov	r2, r3
 3723 1b5e 07F13803 		add	r3, r7, #56
 3724 1b62 1C3B     		subs	r3, r3, #28
 3725 1b64 1A60     		str	r2, [r3]	@ float
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3726              		.loc 1 589 0
 3727 1b66 0023     		movs	r3, #0
 3728 1b68 07F5B052 		add	r2, r7, #5632
 3729 1b6c 02F11702 		add	r2, r2, #23
 3730 1b70 1370     		strb	r3, [r2]
 3731 1b72 34E0     		b	.L168
 3732              	.L169:
 590:..\src/command_processing.c ****                             }
 3733              		.loc 1 590 0 discriminator 3
 3734 1b74 07F5B053 		add	r3, r7, #5632
 3735 1b78 03F11503 		add	r3, r3, #21
 3736 1b7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3737 1b7e 3222     		movs	r2, #50
 3738 1b80 02FB03F3 		mul	r3, r2, r3
 3739 1b84 1A1D     		adds	r2, r3, #4
 3740 1b86 07F5B053 		add	r3, r7, #5632
 3741 1b8a 03F11303 		add	r3, r3, #19
 3742 1b8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3743 1b90 1A44     		add	r2, r2, r3
 3744 1b92 07F5B053 		add	r3, r7, #5632
 3745 1b96 03F11303 		add	r3, r3, #19
 3746 1b9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3747 1b9c 1A44     		add	r2, r2, r3
 3748 1b9e 07F5B053 		add	r3, r7, #5632
 3749 1ba2 03F11703 		add	r3, r3, #23
 3750 1ba6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3751 1ba8 D31A     		subs	r3, r2, r3
 3752 1baa 5A1E     		subs	r2, r3, #1
 3753 1bac 07F5B053 		add	r3, r7, #5632
 3754 1bb0 03F11703 		add	r3, r3, #23
 3755 1bb4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3756 1bb6 07F13803 		add	r3, r7, #56
 3757 1bba 1C3B     		subs	r3, r3, #28
 3758 1bbc 0B44     		add	r3, r3, r1
 3759 1bbe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3760 1bc0 07F15803 		add	r3, r7, #88
 3761 1bc4 043B     		subs	r3, r3, #4
 3762 1bc6 9954     		strb	r1, [r3, r2]
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3763              		.loc 1 589 0 discriminator 3
 3764 1bc8 07F5B053 		add	r3, r7, #5632
 3765 1bcc 03F11703 		add	r3, r3, #23
 3766 1bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3767 1bd2 0133     		adds	r3, r3, #1
 3768 1bd4 07F5B052 		add	r2, r7, #5632
 3769 1bd8 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 95


 3770 1bdc 1370     		strb	r3, [r2]
 3771              	.L168:
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3772              		.loc 1 589 0 is_stmt 0 discriminator 1
 3773 1bde 07F5B053 		add	r3, r7, #5632
 3774 1be2 03F11703 		add	r3, r3, #23
 3775 1be6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3776 1be8 07F5B053 		add	r3, r7, #5632
 3777 1bec 03F11303 		add	r3, r3, #19
 3778 1bf0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3779 1bf2 9A42     		cmp	r2, r3
 3780 1bf4 BED3     		bcc	.L169
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3781              		.loc 1 592 0 is_stmt 1
 3782 1bf6 07F5B053 		add	r3, r7, #5632
 3783 1bfa 03F10E03 		add	r3, r3, #14
 3784 1bfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3785 1c00 7949     		ldr	r1, .L293
 3786 1c02 1346     		mov	r3, r2
 3787 1c04 DB00     		lsls	r3, r3, #3
 3788 1c06 9B1A     		subs	r3, r3, r2
 3789 1c08 1B01     		lsls	r3, r3, #4
 3790 1c0a 0B44     		add	r3, r3, r1
 3791 1c0c D033     		adds	r3, r3, #208
 3792 1c0e 1B68     		ldr	r3, [r3]
 3793 1c10 1846     		mov	r0, r3
 3794 1c12 FFF7FEFF 		bl	__aeabi_i2f
 3795 1c16 0346     		mov	r3, r0
 3796 1c18 4FF08F41 		mov	r1, #1199570944
 3797 1c1c 1846     		mov	r0, r3
 3798 1c1e FFF7FEFF 		bl	__aeabi_fdiv
 3799 1c22 0346     		mov	r3, r0
 3800 1c24 1A46     		mov	r2, r3
 3801 1c26 07F13803 		add	r3, r7, #56
 3802 1c2a 1C3B     		subs	r3, r3, #28
 3803 1c2c 1A60     		str	r2, [r3]	@ float
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3804              		.loc 1 593 0
 3805 1c2e 0023     		movs	r3, #0
 3806 1c30 07F5B052 		add	r2, r7, #5632
 3807 1c34 02F11702 		add	r2, r2, #23
 3808 1c38 1370     		strb	r3, [r2]
 3809 1c3a 35E0     		b	.L170
 3810              	.L171:
 594:..\src/command_processing.c ****                             }
 3811              		.loc 1 594 0 discriminator 3
 3812 1c3c 07F5B053 		add	r3, r7, #5632
 3813 1c40 03F11503 		add	r3, r3, #21
 3814 1c44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3815 1c46 3222     		movs	r2, #50
 3816 1c48 02FB03F3 		mul	r3, r2, r3
 3817 1c4c 1A1D     		adds	r2, r3, #4
 3818 1c4e 07F5B053 		add	r3, r7, #5632
 3819 1c52 03F11303 		add	r3, r3, #19
 3820 1c56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3821 1c58 5B00     		lsls	r3, r3, #1
 3822 1c5a 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 96


 3823 1c5c 07F5B053 		add	r3, r7, #5632
 3824 1c60 03F11303 		add	r3, r3, #19
 3825 1c64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3826 1c66 1A44     		add	r2, r2, r3
 3827 1c68 07F5B053 		add	r3, r7, #5632
 3828 1c6c 03F11703 		add	r3, r3, #23
 3829 1c70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3830 1c72 D31A     		subs	r3, r2, r3
 3831 1c74 5A1E     		subs	r2, r3, #1
 3832 1c76 07F5B053 		add	r3, r7, #5632
 3833 1c7a 03F11703 		add	r3, r3, #23
 3834 1c7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3835 1c80 07F13803 		add	r3, r7, #56
 3836 1c84 1C3B     		subs	r3, r3, #28
 3837 1c86 0B44     		add	r3, r3, r1
 3838 1c88 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3839 1c8a 07F15803 		add	r3, r7, #88
 3840 1c8e 043B     		subs	r3, r3, #4
 3841 1c90 9954     		strb	r1, [r3, r2]
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3842              		.loc 1 593 0 discriminator 3
 3843 1c92 07F5B053 		add	r3, r7, #5632
 3844 1c96 03F11703 		add	r3, r3, #23
 3845 1c9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3846 1c9c 0133     		adds	r3, r3, #1
 3847 1c9e 07F5B052 		add	r2, r7, #5632
 3848 1ca2 02F11702 		add	r2, r2, #23
 3849 1ca6 1370     		strb	r3, [r2]
 3850              	.L170:
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3851              		.loc 1 593 0 is_stmt 0 discriminator 1
 3852 1ca8 07F5B053 		add	r3, r7, #5632
 3853 1cac 03F11703 		add	r3, r3, #23
 3854 1cb0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3855 1cb2 07F5B053 		add	r3, r7, #5632
 3856 1cb6 03F11303 		add	r3, r3, #19
 3857 1cba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3858 1cbc 9A42     		cmp	r2, r3
 3859 1cbe BDD3     		bcc	.L171
 3860              		.loc 1 597 0 is_stmt 1
 3861 1cc0 DFE3     		b	.L110
 3862              	.L119:
 598:..\src/command_processing.c ****                         
 599:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 600:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3863              		.loc 1 600 0
 3864 1cc2 07F5B053 		add	r3, r7, #5632
 3865 1cc6 03F10E03 		add	r3, r3, #14
 3866 1cca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3867 1ccc 4649     		ldr	r1, .L293
 3868 1cce 1346     		mov	r3, r2
 3869 1cd0 DB00     		lsls	r3, r3, #3
 3870 1cd2 9B1A     		subs	r3, r3, r2
 3871 1cd4 1B01     		lsls	r3, r3, #4
 3872 1cd6 0B44     		add	r3, r3, r1
 3873 1cd8 03F20F13 		addw	r3, r3, #271
 3874 1cdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 97


 3875 1cde 032B     		cmp	r3, #3
 3876 1ce0 00F02B81 		beq	.L172
 601:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3877              		.loc 1 601 0
 3878 1ce4 07F5B053 		add	r3, r7, #5632
 3879 1ce8 03F10E03 		add	r3, r3, #14
 3880 1cec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3881 1cee 3E49     		ldr	r1, .L293
 3882 1cf0 1346     		mov	r3, r2
 3883 1cf2 DB00     		lsls	r3, r3, #3
 3884 1cf4 9B1A     		subs	r3, r3, r2
 3885 1cf6 1B01     		lsls	r3, r3, #4
 3886 1cf8 0B44     		add	r3, r3, r1
 3887 1cfa BC33     		adds	r3, r3, #188
 3888 1cfc 1B68     		ldr	r3, [r3]
 3889 1cfe 1846     		mov	r0, r3
 3890 1d00 FFF7FEFF 		bl	__aeabi_i2f
 3891 1d04 0346     		mov	r3, r0
 3892 1d06 4FF08F41 		mov	r1, #1199570944
 3893 1d0a 1846     		mov	r0, r3
 3894 1d0c FFF7FEFF 		bl	__aeabi_fdiv
 3895 1d10 0346     		mov	r3, r0
 3896 1d12 1A46     		mov	r2, r3
 3897 1d14 07F13803 		add	r3, r7, #56
 3898 1d18 1C3B     		subs	r3, r3, #28
 3899 1d1a 1A60     		str	r2, [r3]	@ float
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3900              		.loc 1 602 0
 3901 1d1c 0023     		movs	r3, #0
 3902 1d1e 07F5B052 		add	r2, r7, #5632
 3903 1d22 02F11702 		add	r2, r2, #23
 3904 1d26 1370     		strb	r3, [r2]
 3905 1d28 2EE0     		b	.L173
 3906              	.L174:
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3907              		.loc 1 603 0 discriminator 3
 3908 1d2a 07F5B053 		add	r3, r7, #5632
 3909 1d2e 03F11503 		add	r3, r3, #21
 3910 1d32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3911 1d34 3222     		movs	r2, #50
 3912 1d36 02FB03F3 		mul	r3, r2, r3
 3913 1d3a 1A1D     		adds	r2, r3, #4
 3914 1d3c 07F5B053 		add	r3, r7, #5632
 3915 1d40 03F11303 		add	r3, r3, #19
 3916 1d44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3917 1d46 1A44     		add	r2, r2, r3
 3918 1d48 07F5B053 		add	r3, r7, #5632
 3919 1d4c 03F11703 		add	r3, r3, #23
 3920 1d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3921 1d52 D31A     		subs	r3, r2, r3
 3922 1d54 5A1E     		subs	r2, r3, #1
 3923 1d56 07F5B053 		add	r3, r7, #5632
 3924 1d5a 03F11703 		add	r3, r3, #23
 3925 1d5e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3926 1d60 07F13803 		add	r3, r7, #56
 3927 1d64 1C3B     		subs	r3, r3, #28
 3928 1d66 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 98


 3929 1d68 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3930 1d6a 07F15803 		add	r3, r7, #88
 3931 1d6e 043B     		subs	r3, r3, #4
 3932 1d70 9954     		strb	r1, [r3, r2]
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3933              		.loc 1 602 0 discriminator 3
 3934 1d72 07F5B053 		add	r3, r7, #5632
 3935 1d76 03F11703 		add	r3, r3, #23
 3936 1d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3937 1d7c 0133     		adds	r3, r3, #1
 3938 1d7e 07F5B052 		add	r2, r7, #5632
 3939 1d82 02F11702 		add	r2, r2, #23
 3940 1d86 1370     		strb	r3, [r2]
 3941              	.L173:
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3942              		.loc 1 602 0 is_stmt 0 discriminator 1
 3943 1d88 07F5B053 		add	r3, r7, #5632
 3944 1d8c 03F11703 		add	r3, r3, #23
 3945 1d90 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3946 1d92 07F5B053 		add	r3, r7, #5632
 3947 1d96 03F11303 		add	r3, r3, #19
 3948 1d9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3949 1d9c 9A42     		cmp	r2, r3
 3950 1d9e C4D3     		bcc	.L174
 604:..\src/command_processing.c ****                             }
 605:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3951              		.loc 1 605 0 is_stmt 1
 3952 1da0 07F5B053 		add	r3, r7, #5632
 3953 1da4 03F10E03 		add	r3, r3, #14
 3954 1da8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3955 1daa 0F49     		ldr	r1, .L293
 3956 1dac 1346     		mov	r3, r2
 3957 1dae DB00     		lsls	r3, r3, #3
 3958 1db0 9B1A     		subs	r3, r3, r2
 3959 1db2 1B01     		lsls	r3, r3, #4
 3960 1db4 0B44     		add	r3, r3, r1
 3961 1db6 C033     		adds	r3, r3, #192
 3962 1db8 1B68     		ldr	r3, [r3]
 3963 1dba 1846     		mov	r0, r3
 3964 1dbc FFF7FEFF 		bl	__aeabi_i2f
 3965 1dc0 0346     		mov	r3, r0
 3966 1dc2 4FF08F41 		mov	r1, #1199570944
 3967 1dc6 1846     		mov	r0, r3
 3968 1dc8 FFF7FEFF 		bl	__aeabi_fdiv
 3969 1dcc 0346     		mov	r3, r0
 3970 1dce 1A46     		mov	r2, r3
 3971 1dd0 07F13803 		add	r3, r7, #56
 3972 1dd4 1C3B     		subs	r3, r3, #28
 3973 1dd6 1A60     		str	r2, [r3]	@ float
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3974              		.loc 1 606 0
 3975 1dd8 0023     		movs	r3, #0
 3976 1dda 07F5B052 		add	r2, r7, #5632
 3977 1dde 02F11702 		add	r2, r2, #23
 3978 1de2 1370     		strb	r3, [r2]
 3979 1de4 37E0     		b	.L175
 3980              	.L294:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 99


 3981 1de6 00BF     		.align	2
 3982              	.L293:
 3983 1de8 00000000 		.word	c_mem
 3984              	.L176:
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3985              		.loc 1 607 0 discriminator 3
 3986 1dec 07F5B053 		add	r3, r7, #5632
 3987 1df0 03F11503 		add	r3, r3, #21
 3988 1df4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3989 1df6 3222     		movs	r2, #50
 3990 1df8 02FB03F3 		mul	r3, r2, r3
 3991 1dfc 1A1D     		adds	r2, r3, #4
 3992 1dfe 07F5B053 		add	r3, r7, #5632
 3993 1e02 03F11303 		add	r3, r3, #19
 3994 1e06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3995 1e08 1A44     		add	r2, r2, r3
 3996 1e0a 07F5B053 		add	r3, r7, #5632
 3997 1e0e 03F11303 		add	r3, r3, #19
 3998 1e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3999 1e14 1A44     		add	r2, r2, r3
 4000 1e16 07F5B053 		add	r3, r7, #5632
 4001 1e1a 03F11703 		add	r3, r3, #23
 4002 1e1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4003 1e20 D31A     		subs	r3, r2, r3
 4004 1e22 5A1E     		subs	r2, r3, #1
 4005 1e24 07F5B053 		add	r3, r7, #5632
 4006 1e28 03F11703 		add	r3, r3, #23
 4007 1e2c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4008 1e2e 07F13803 		add	r3, r7, #56
 4009 1e32 1C3B     		subs	r3, r3, #28
 4010 1e34 0B44     		add	r3, r3, r1
 4011 1e36 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4012 1e38 07F15803 		add	r3, r7, #88
 4013 1e3c 043B     		subs	r3, r3, #4
 4014 1e3e 9954     		strb	r1, [r3, r2]
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4015              		.loc 1 606 0 discriminator 3
 4016 1e40 07F5B053 		add	r3, r7, #5632
 4017 1e44 03F11703 		add	r3, r3, #23
 4018 1e48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4019 1e4a 0133     		adds	r3, r3, #1
 4020 1e4c 07F5B052 		add	r2, r7, #5632
 4021 1e50 02F11702 		add	r2, r2, #23
 4022 1e54 1370     		strb	r3, [r2]
 4023              	.L175:
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4024              		.loc 1 606 0 is_stmt 0 discriminator 1
 4025 1e56 07F5B053 		add	r3, r7, #5632
 4026 1e5a 03F11703 		add	r3, r3, #23
 4027 1e5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4028 1e60 07F5B053 		add	r3, r7, #5632
 4029 1e64 03F11303 		add	r3, r3, #19
 4030 1e68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4031 1e6a 9A42     		cmp	r2, r3
 4032 1e6c BED3     		bcc	.L176
 608:..\src/command_processing.c ****                             }
 609:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 100


 4033              		.loc 1 609 0 is_stmt 1
 4034 1e6e 07F5B053 		add	r3, r7, #5632
 4035 1e72 03F10E03 		add	r3, r3, #14
 4036 1e76 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4037 1e78 C449     		ldr	r1, .L295
 4038 1e7a 1346     		mov	r3, r2
 4039 1e7c DB00     		lsls	r3, r3, #3
 4040 1e7e 9B1A     		subs	r3, r3, r2
 4041 1e80 1B01     		lsls	r3, r3, #4
 4042 1e82 0B44     		add	r3, r3, r1
 4043 1e84 C433     		adds	r3, r3, #196
 4044 1e86 1B68     		ldr	r3, [r3]
 4045 1e88 1846     		mov	r0, r3
 4046 1e8a FFF7FEFF 		bl	__aeabi_i2f
 4047 1e8e 0346     		mov	r3, r0
 4048 1e90 4FF08F41 		mov	r1, #1199570944
 4049 1e94 1846     		mov	r0, r3
 4050 1e96 FFF7FEFF 		bl	__aeabi_fdiv
 4051 1e9a 0346     		mov	r3, r0
 4052 1e9c 1A46     		mov	r2, r3
 4053 1e9e 07F13803 		add	r3, r7, #56
 4054 1ea2 1C3B     		subs	r3, r3, #28
 4055 1ea4 1A60     		str	r2, [r3]	@ float
 610:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4056              		.loc 1 610 0
 4057 1ea6 0023     		movs	r3, #0
 4058 1ea8 07F5B052 		add	r2, r7, #5632
 4059 1eac 02F11702 		add	r2, r2, #23
 4060 1eb0 1370     		strb	r3, [r2]
 4061 1eb2 35E0     		b	.L177
 4062              	.L178:
 611:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4063              		.loc 1 611 0 discriminator 3
 4064 1eb4 07F5B053 		add	r3, r7, #5632
 4065 1eb8 03F11503 		add	r3, r3, #21
 4066 1ebc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4067 1ebe 3222     		movs	r2, #50
 4068 1ec0 02FB03F3 		mul	r3, r2, r3
 4069 1ec4 1A1D     		adds	r2, r3, #4
 4070 1ec6 07F5B053 		add	r3, r7, #5632
 4071 1eca 03F11303 		add	r3, r3, #19
 4072 1ece 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4073 1ed0 5B00     		lsls	r3, r3, #1
 4074 1ed2 1A44     		add	r2, r2, r3
 4075 1ed4 07F5B053 		add	r3, r7, #5632
 4076 1ed8 03F11303 		add	r3, r3, #19
 4077 1edc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4078 1ede 1A44     		add	r2, r2, r3
 4079 1ee0 07F5B053 		add	r3, r7, #5632
 4080 1ee4 03F11703 		add	r3, r3, #23
 4081 1ee8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4082 1eea D31A     		subs	r3, r2, r3
 4083 1eec 5A1E     		subs	r2, r3, #1
 4084 1eee 07F5B053 		add	r3, r7, #5632
 4085 1ef2 03F11703 		add	r3, r3, #23
 4086 1ef6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4087 1ef8 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 101


 4088 1efc 1C3B     		subs	r3, r3, #28
 4089 1efe 0B44     		add	r3, r3, r1
 4090 1f00 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4091 1f02 07F15803 		add	r3, r7, #88
 4092 1f06 043B     		subs	r3, r3, #4
 4093 1f08 9954     		strb	r1, [r3, r2]
 610:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4094              		.loc 1 610 0 discriminator 3
 4095 1f0a 07F5B053 		add	r3, r7, #5632
 4096 1f0e 03F11703 		add	r3, r3, #23
 4097 1f12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4098 1f14 0133     		adds	r3, r3, #1
 4099 1f16 07F5B052 		add	r2, r7, #5632
 4100 1f1a 02F11702 		add	r2, r2, #23
 4101 1f1e 1370     		strb	r3, [r2]
 4102              	.L177:
 610:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4103              		.loc 1 610 0 is_stmt 0 discriminator 1
 4104 1f20 07F5B053 		add	r3, r7, #5632
 4105 1f24 03F11703 		add	r3, r3, #23
 4106 1f28 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4107 1f2a 07F5B053 		add	r3, r7, #5632
 4108 1f2e 03F11303 		add	r3, r3, #19
 4109 1f32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4110 1f34 9A42     		cmp	r2, r3
 4111 1f36 BDD3     		bcc	.L178
 612:..\src/command_processing.c ****                             }
 613:..\src/command_processing.c ****                         }
 614:..\src/command_processing.c ****                         else {
 615:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 616:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 617:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 618:..\src/command_processing.c ****                             }
 619:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 620:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 621:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 622:..\src/command_processing.c ****                             }
 623:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 624:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 625:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 626:..\src/command_processing.c ****                             }
 627:..\src/command_processing.c ****                         }            
 628:..\src/command_processing.c ****                         break;  
 4112              		.loc 1 628 0 is_stmt 1
 4113 1f38 A3E2     		b	.L110
 4114              	.L172:
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4115              		.loc 1 615 0
 4116 1f3a 07F5B053 		add	r3, r7, #5632
 4117 1f3e 03F10E03 		add	r3, r3, #14
 4118 1f42 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4119 1f44 9149     		ldr	r1, .L295
 4120 1f46 1346     		mov	r3, r2
 4121 1f48 DB00     		lsls	r3, r3, #3
 4122 1f4a 9B1A     		subs	r3, r3, r2
 4123 1f4c 1B01     		lsls	r3, r3, #4
 4124 1f4e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 102


 4125 1f50 D433     		adds	r3, r3, #212
 4126 1f52 1B68     		ldr	r3, [r3]
 4127 1f54 1846     		mov	r0, r3
 4128 1f56 FFF7FEFF 		bl	__aeabi_i2f
 4129 1f5a 0346     		mov	r3, r0
 4130 1f5c 4FF08F41 		mov	r1, #1199570944
 4131 1f60 1846     		mov	r0, r3
 4132 1f62 FFF7FEFF 		bl	__aeabi_fdiv
 4133 1f66 0346     		mov	r3, r0
 4134 1f68 1A46     		mov	r2, r3
 4135 1f6a 07F13803 		add	r3, r7, #56
 4136 1f6e 1C3B     		subs	r3, r3, #28
 4137 1f70 1A60     		str	r2, [r3]	@ float
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4138              		.loc 1 616 0
 4139 1f72 0023     		movs	r3, #0
 4140 1f74 07F5B052 		add	r2, r7, #5632
 4141 1f78 02F11702 		add	r2, r2, #23
 4142 1f7c 1370     		strb	r3, [r2]
 4143 1f7e 2EE0     		b	.L180
 4144              	.L181:
 617:..\src/command_processing.c ****                             }
 4145              		.loc 1 617 0 discriminator 3
 4146 1f80 07F5B053 		add	r3, r7, #5632
 4147 1f84 03F11503 		add	r3, r3, #21
 4148 1f88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4149 1f8a 3222     		movs	r2, #50
 4150 1f8c 02FB03F3 		mul	r3, r2, r3
 4151 1f90 1A1D     		adds	r2, r3, #4
 4152 1f92 07F5B053 		add	r3, r7, #5632
 4153 1f96 03F11303 		add	r3, r3, #19
 4154 1f9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4155 1f9c 1A44     		add	r2, r2, r3
 4156 1f9e 07F5B053 		add	r3, r7, #5632
 4157 1fa2 03F11703 		add	r3, r3, #23
 4158 1fa6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4159 1fa8 D31A     		subs	r3, r2, r3
 4160 1faa 5A1E     		subs	r2, r3, #1
 4161 1fac 07F5B053 		add	r3, r7, #5632
 4162 1fb0 03F11703 		add	r3, r3, #23
 4163 1fb4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4164 1fb6 07F13803 		add	r3, r7, #56
 4165 1fba 1C3B     		subs	r3, r3, #28
 4166 1fbc 0B44     		add	r3, r3, r1
 4167 1fbe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4168 1fc0 07F15803 		add	r3, r7, #88
 4169 1fc4 043B     		subs	r3, r3, #4
 4170 1fc6 9954     		strb	r1, [r3, r2]
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4171              		.loc 1 616 0 discriminator 3
 4172 1fc8 07F5B053 		add	r3, r7, #5632
 4173 1fcc 03F11703 		add	r3, r3, #23
 4174 1fd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4175 1fd2 0133     		adds	r3, r3, #1
 4176 1fd4 07F5B052 		add	r2, r7, #5632
 4177 1fd8 02F11702 		add	r2, r2, #23
 4178 1fdc 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 103


 4179              	.L180:
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4180              		.loc 1 616 0 is_stmt 0 discriminator 1
 4181 1fde 07F5B053 		add	r3, r7, #5632
 4182 1fe2 03F11703 		add	r3, r3, #23
 4183 1fe6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4184 1fe8 07F5B053 		add	r3, r7, #5632
 4185 1fec 03F11303 		add	r3, r3, #19
 4186 1ff0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4187 1ff2 9A42     		cmp	r2, r3
 4188 1ff4 C4D3     		bcc	.L181
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4189              		.loc 1 619 0 is_stmt 1
 4190 1ff6 07F5B053 		add	r3, r7, #5632
 4191 1ffa 03F10E03 		add	r3, r3, #14
 4192 1ffe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4193 2000 6249     		ldr	r1, .L295
 4194 2002 1346     		mov	r3, r2
 4195 2004 DB00     		lsls	r3, r3, #3
 4196 2006 9B1A     		subs	r3, r3, r2
 4197 2008 1B01     		lsls	r3, r3, #4
 4198 200a 0B44     		add	r3, r3, r1
 4199 200c D833     		adds	r3, r3, #216
 4200 200e 1B68     		ldr	r3, [r3]
 4201 2010 1846     		mov	r0, r3
 4202 2012 FFF7FEFF 		bl	__aeabi_i2f
 4203 2016 0346     		mov	r3, r0
 4204 2018 4FF08F41 		mov	r1, #1199570944
 4205 201c 1846     		mov	r0, r3
 4206 201e FFF7FEFF 		bl	__aeabi_fdiv
 4207 2022 0346     		mov	r3, r0
 4208 2024 1A46     		mov	r2, r3
 4209 2026 07F13803 		add	r3, r7, #56
 4210 202a 1C3B     		subs	r3, r3, #28
 4211 202c 1A60     		str	r2, [r3]	@ float
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4212              		.loc 1 620 0
 4213 202e 0023     		movs	r3, #0
 4214 2030 07F5B052 		add	r2, r7, #5632
 4215 2034 02F11702 		add	r2, r2, #23
 4216 2038 1370     		strb	r3, [r2]
 4217 203a 34E0     		b	.L182
 4218              	.L183:
 621:..\src/command_processing.c ****                             }
 4219              		.loc 1 621 0 discriminator 3
 4220 203c 07F5B053 		add	r3, r7, #5632
 4221 2040 03F11503 		add	r3, r3, #21
 4222 2044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4223 2046 3222     		movs	r2, #50
 4224 2048 02FB03F3 		mul	r3, r2, r3
 4225 204c 1A1D     		adds	r2, r3, #4
 4226 204e 07F5B053 		add	r3, r7, #5632
 4227 2052 03F11303 		add	r3, r3, #19
 4228 2056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4229 2058 1A44     		add	r2, r2, r3
 4230 205a 07F5B053 		add	r3, r7, #5632
 4231 205e 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 104


 4232 2062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4233 2064 1A44     		add	r2, r2, r3
 4234 2066 07F5B053 		add	r3, r7, #5632
 4235 206a 03F11703 		add	r3, r3, #23
 4236 206e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4237 2070 D31A     		subs	r3, r2, r3
 4238 2072 5A1E     		subs	r2, r3, #1
 4239 2074 07F5B053 		add	r3, r7, #5632
 4240 2078 03F11703 		add	r3, r3, #23
 4241 207c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4242 207e 07F13803 		add	r3, r7, #56
 4243 2082 1C3B     		subs	r3, r3, #28
 4244 2084 0B44     		add	r3, r3, r1
 4245 2086 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4246 2088 07F15803 		add	r3, r7, #88
 4247 208c 043B     		subs	r3, r3, #4
 4248 208e 9954     		strb	r1, [r3, r2]
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4249              		.loc 1 620 0 discriminator 3
 4250 2090 07F5B053 		add	r3, r7, #5632
 4251 2094 03F11703 		add	r3, r3, #23
 4252 2098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4253 209a 0133     		adds	r3, r3, #1
 4254 209c 07F5B052 		add	r2, r7, #5632
 4255 20a0 02F11702 		add	r2, r2, #23
 4256 20a4 1370     		strb	r3, [r2]
 4257              	.L182:
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4258              		.loc 1 620 0 is_stmt 0 discriminator 1
 4259 20a6 07F5B053 		add	r3, r7, #5632
 4260 20aa 03F11703 		add	r3, r3, #23
 4261 20ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4262 20b0 07F5B053 		add	r3, r7, #5632
 4263 20b4 03F11303 		add	r3, r3, #19
 4264 20b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4265 20ba 9A42     		cmp	r2, r3
 4266 20bc BED3     		bcc	.L183
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4267              		.loc 1 623 0 is_stmt 1
 4268 20be 07F5B053 		add	r3, r7, #5632
 4269 20c2 03F10E03 		add	r3, r3, #14
 4270 20c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4271 20c8 3049     		ldr	r1, .L295
 4272 20ca 1346     		mov	r3, r2
 4273 20cc DB00     		lsls	r3, r3, #3
 4274 20ce 9B1A     		subs	r3, r3, r2
 4275 20d0 1B01     		lsls	r3, r3, #4
 4276 20d2 0B44     		add	r3, r3, r1
 4277 20d4 DC33     		adds	r3, r3, #220
 4278 20d6 1B68     		ldr	r3, [r3]
 4279 20d8 1846     		mov	r0, r3
 4280 20da FFF7FEFF 		bl	__aeabi_i2f
 4281 20de 0346     		mov	r3, r0
 4282 20e0 4FF08F41 		mov	r1, #1199570944
 4283 20e4 1846     		mov	r0, r3
 4284 20e6 FFF7FEFF 		bl	__aeabi_fdiv
 4285 20ea 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 105


 4286 20ec 1A46     		mov	r2, r3
 4287 20ee 07F13803 		add	r3, r7, #56
 4288 20f2 1C3B     		subs	r3, r3, #28
 4289 20f4 1A60     		str	r2, [r3]	@ float
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4290              		.loc 1 624 0
 4291 20f6 0023     		movs	r3, #0
 4292 20f8 07F5B052 		add	r2, r7, #5632
 4293 20fc 02F11702 		add	r2, r2, #23
 4294 2100 1370     		strb	r3, [r2]
 4295 2102 35E0     		b	.L184
 4296              	.L185:
 625:..\src/command_processing.c ****                             }
 4297              		.loc 1 625 0 discriminator 3
 4298 2104 07F5B053 		add	r3, r7, #5632
 4299 2108 03F11503 		add	r3, r3, #21
 4300 210c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4301 210e 3222     		movs	r2, #50
 4302 2110 02FB03F3 		mul	r3, r2, r3
 4303 2114 1A1D     		adds	r2, r3, #4
 4304 2116 07F5B053 		add	r3, r7, #5632
 4305 211a 03F11303 		add	r3, r3, #19
 4306 211e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4307 2120 5B00     		lsls	r3, r3, #1
 4308 2122 1A44     		add	r2, r2, r3
 4309 2124 07F5B053 		add	r3, r7, #5632
 4310 2128 03F11303 		add	r3, r3, #19
 4311 212c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4312 212e 1A44     		add	r2, r2, r3
 4313 2130 07F5B053 		add	r3, r7, #5632
 4314 2134 03F11703 		add	r3, r3, #23
 4315 2138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4316 213a D31A     		subs	r3, r2, r3
 4317 213c 5A1E     		subs	r2, r3, #1
 4318 213e 07F5B053 		add	r3, r7, #5632
 4319 2142 03F11703 		add	r3, r3, #23
 4320 2146 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4321 2148 07F13803 		add	r3, r7, #56
 4322 214c 1C3B     		subs	r3, r3, #28
 4323 214e 0B44     		add	r3, r3, r1
 4324 2150 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4325 2152 07F15803 		add	r3, r7, #88
 4326 2156 043B     		subs	r3, r3, #4
 4327 2158 9954     		strb	r1, [r3, r2]
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4328              		.loc 1 624 0 discriminator 3
 4329 215a 07F5B053 		add	r3, r7, #5632
 4330 215e 03F11703 		add	r3, r3, #23
 4331 2162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4332 2164 0133     		adds	r3, r3, #1
 4333 2166 07F5B052 		add	r2, r7, #5632
 4334 216a 02F11702 		add	r2, r2, #23
 4335 216e 1370     		strb	r3, [r2]
 4336              	.L184:
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4337              		.loc 1 624 0 is_stmt 0 discriminator 1
 4338 2170 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 106


 4339 2174 03F11703 		add	r3, r3, #23
 4340 2178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4341 217a 07F5B053 		add	r3, r7, #5632
 4342 217e 03F11303 		add	r3, r3, #19
 4343 2182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4344 2184 9A42     		cmp	r2, r3
 4345 2186 BDD3     		bcc	.L185
 4346              		.loc 1 628 0 is_stmt 1
 4347 2188 7BE1     		b	.L110
 4348              	.L296:
 4349 218a 00BF     		.align	2
 4350              	.L295:
 4351 218c 00000000 		.word	c_mem
 4352              	.L120:
 629:..\src/command_processing.c **** 
 630:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 631:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4353              		.loc 1 631 0
 4354 2190 07F5B053 		add	r3, r7, #5632
 4355 2194 03F10E03 		add	r3, r3, #14
 4356 2198 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4357 219a B749     		ldr	r1, .L297
 4358 219c 1346     		mov	r3, r2
 4359 219e DB00     		lsls	r3, r3, #3
 4360 21a0 9B1A     		subs	r3, r3, r2
 4361 21a2 1B01     		lsls	r3, r3, #4
 4362 21a4 0B44     		add	r3, r3, r1
 4363 21a6 03F58873 		add	r3, r3, #272
 4364 21aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4365 21ac 1846     		mov	r0, r3
 4366 21ae 07F5B053 		add	r3, r7, #5632
 4367 21b2 03F11703 		add	r3, r3, #23
 4368 21b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4369 21b8 B049     		ldr	r1, .L297+4
 4370 21ba 0346     		mov	r3, r0
 4371 21bc 5B00     		lsls	r3, r3, #1
 4372 21be 0344     		add	r3, r3, r0
 4373 21c0 9B00     		lsls	r3, r3, #2
 4374 21c2 1344     		add	r3, r3, r2
 4375 21c4 6633     		adds	r3, r3, #102
 4376 21c6 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4377 21ca 07F5B053 		add	r3, r7, #5632
 4378 21ce 03F10E03 		add	r3, r3, #14
 4379 21d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4380 21d4 A848     		ldr	r0, .L297
 4381 21d6 1346     		mov	r3, r2
 4382 21d8 DB00     		lsls	r3, r3, #3
 4383 21da 9B1A     		subs	r3, r3, r2
 4384 21dc 1B01     		lsls	r3, r3, #4
 4385 21de 0344     		add	r3, r3, r0
 4386 21e0 03F58873 		add	r3, r3, #272
 4387 21e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4388 21e6 1C46     		mov	r4, r3
 4389 21e8 07F5B053 		add	r3, r7, #5632
 4390 21ec 03F11703 		add	r3, r3, #23
 4391 21f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4392 21f2 A248     		ldr	r0, .L297+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 107


 4393 21f4 2346     		mov	r3, r4
 4394 21f6 5B00     		lsls	r3, r3, #1
 4395 21f8 2344     		add	r3, r3, r4
 4396 21fa 1B01     		lsls	r3, r3, #4
 4397 21fc 0344     		add	r3, r3, r0
 4398 21fe 1344     		add	r3, r3, r2
 4399 2200 03F29513 		addw	r3, r3, #405
 4400 2204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4401 2206 41FA03F3 		asr	r3, r1, r3
 4402 220a 1AB2     		sxth	r2, r3
 4403 220c 07F13803 		add	r3, r7, #56
 4404 2210 1E3B     		subs	r3, r3, #30
 4405 2212 1A80     		strh	r2, [r3]	@ movhi
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4406              		.loc 1 632 0
 4407 2214 0023     		movs	r3, #0
 4408 2216 07F5B052 		add	r2, r7, #5632
 4409 221a 02F11602 		add	r2, r2, #22
 4410 221e 1370     		strb	r3, [r2]
 4411 2220 3BE0     		b	.L186
 4412              	.L187:
 633:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4413              		.loc 1 633 0 discriminator 3
 4414 2222 07F5B053 		add	r3, r7, #5632
 4415 2226 03F11503 		add	r3, r3, #21
 4416 222a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4417 222c 3222     		movs	r2, #50
 4418 222e 02FB03F3 		mul	r3, r2, r3
 4419 2232 1A1D     		adds	r2, r3, #4
 4420 2234 07F5B053 		add	r3, r7, #5632
 4421 2238 03F11703 		add	r3, r3, #23
 4422 223c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4423 223e 07F5B051 		add	r1, r7, #5632
 4424 2242 01F11301 		add	r1, r1, #19
 4425 2246 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4426 2248 01FB03F3 		mul	r3, r1, r3
 4427 224c 1A44     		add	r2, r2, r3
 4428 224e 07F5B053 		add	r3, r7, #5632
 4429 2252 03F11303 		add	r3, r3, #19
 4430 2256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4431 2258 1A44     		add	r2, r2, r3
 4432 225a 07F5B053 		add	r3, r7, #5632
 4433 225e 03F11603 		add	r3, r3, #22
 4434 2262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4435 2264 D31A     		subs	r3, r2, r3
 4436 2266 5A1E     		subs	r2, r3, #1
 4437 2268 07F5B053 		add	r3, r7, #5632
 4438 226c 03F11603 		add	r3, r3, #22
 4439 2270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4440 2272 07F13803 		add	r3, r7, #56
 4441 2276 1E3B     		subs	r3, r3, #30
 4442 2278 0B44     		add	r3, r3, r1
 4443 227a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4444 227c 07F15803 		add	r3, r7, #88
 4445 2280 043B     		subs	r3, r3, #4
 4446 2282 9954     		strb	r1, [r3, r2]
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 108


 4447              		.loc 1 632 0 discriminator 3
 4448 2284 07F5B053 		add	r3, r7, #5632
 4449 2288 03F11603 		add	r3, r3, #22
 4450 228c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4451 228e 0133     		adds	r3, r3, #1
 4452 2290 07F5B052 		add	r2, r7, #5632
 4453 2294 02F11602 		add	r2, r2, #22
 4454 2298 1370     		strb	r3, [r2]
 4455              	.L186:
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4456              		.loc 1 632 0 is_stmt 0 discriminator 1
 4457 229a 07F5B053 		add	r3, r7, #5632
 4458 229e 03F11603 		add	r3, r3, #22
 4459 22a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4460 22a4 07F5B053 		add	r3, r7, #5632
 4461 22a8 03F11303 		add	r3, r3, #19
 4462 22ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4463 22ae 9A42     		cmp	r2, r3
 4464 22b0 B7D3     		bcc	.L187
 634:..\src/command_processing.c ****                         }
 635:..\src/command_processing.c ****                         break;
 4465              		.loc 1 635 0 is_stmt 1
 4466 22b2 E6E0     		b	.L110
 4467              	.L121:
 636:..\src/command_processing.c ****                 
 637:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 638:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4468              		.loc 1 638 0
 4469 22b4 07F5B053 		add	r3, r7, #5632
 4470 22b8 03F10E03 		add	r3, r3, #14
 4471 22bc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4472 22be 6F49     		ldr	r1, .L297+4
 4473 22c0 1346     		mov	r3, r2
 4474 22c2 DB00     		lsls	r3, r3, #3
 4475 22c4 9B1A     		subs	r3, r3, r2
 4476 22c6 1B01     		lsls	r3, r3, #4
 4477 22c8 0B44     		add	r3, r3, r1
 4478 22ca E433     		adds	r3, r3, #228
 4479 22cc 1968     		ldr	r1, [r3]
 4480 22ce 07F5B053 		add	r3, r7, #5632
 4481 22d2 03F10E03 		add	r3, r3, #14
 4482 22d6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4483 22d8 6748     		ldr	r0, .L297
 4484 22da 1346     		mov	r3, r2
 4485 22dc DB00     		lsls	r3, r3, #3
 4486 22de 9B1A     		subs	r3, r3, r2
 4487 22e0 1B01     		lsls	r3, r3, #4
 4488 22e2 0344     		add	r3, r3, r0
 4489 22e4 03F58873 		add	r3, r3, #272
 4490 22e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4491 22ea 1846     		mov	r0, r3
 4492 22ec 634A     		ldr	r2, .L297+4
 4493 22ee 0346     		mov	r3, r0
 4494 22f0 5B00     		lsls	r3, r3, #1
 4495 22f2 0344     		add	r3, r3, r0
 4496 22f4 1B01     		lsls	r3, r3, #4
 4497 22f6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 109


 4498 22f8 03F29513 		addw	r3, r3, #405
 4499 22fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4500 22fe 41FA03F2 		asr	r2, r1, r3
 4501 2302 07F11803 		add	r3, r7, #24
 4502 2306 043B     		subs	r3, r3, #4
 4503 2308 1A60     		str	r2, [r3]
 639:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4504              		.loc 1 639 0
 4505 230a 0023     		movs	r3, #0
 4506 230c 07F5B052 		add	r2, r7, #5632
 4507 2310 02F11602 		add	r2, r2, #22
 4508 2314 1370     		strb	r3, [r2]
 4509 2316 2EE0     		b	.L188
 4510              	.L189:
 640:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4511              		.loc 1 640 0 discriminator 3
 4512 2318 07F5B053 		add	r3, r7, #5632
 4513 231c 03F11503 		add	r3, r3, #21
 4514 2320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4515 2322 3222     		movs	r2, #50
 4516 2324 02FB03F3 		mul	r3, r2, r3
 4517 2328 1A1D     		adds	r2, r3, #4
 4518 232a 07F5B053 		add	r3, r7, #5632
 4519 232e 03F11303 		add	r3, r3, #19
 4520 2332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4521 2334 1A44     		add	r2, r2, r3
 4522 2336 07F5B053 		add	r3, r7, #5632
 4523 233a 03F11603 		add	r3, r3, #22
 4524 233e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4525 2340 D31A     		subs	r3, r2, r3
 4526 2342 5A1E     		subs	r2, r3, #1
 4527 2344 07F5B053 		add	r3, r7, #5632
 4528 2348 03F11603 		add	r3, r3, #22
 4529 234c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4530 234e 07F11803 		add	r3, r7, #24
 4531 2352 043B     		subs	r3, r3, #4
 4532 2354 0B44     		add	r3, r3, r1
 4533 2356 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4534 2358 07F15803 		add	r3, r7, #88
 4535 235c 043B     		subs	r3, r3, #4
 4536 235e 9954     		strb	r1, [r3, r2]
 639:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4537              		.loc 1 639 0 discriminator 3
 4538 2360 07F5B053 		add	r3, r7, #5632
 4539 2364 03F11603 		add	r3, r3, #22
 4540 2368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4541 236a 0133     		adds	r3, r3, #1
 4542 236c 07F5B052 		add	r2, r7, #5632
 4543 2370 02F11602 		add	r2, r2, #22
 4544 2374 1370     		strb	r3, [r2]
 4545              	.L188:
 639:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4546              		.loc 1 639 0 is_stmt 0 discriminator 1
 4547 2376 07F5B053 		add	r3, r7, #5632
 4548 237a 03F11603 		add	r3, r3, #22
 4549 237e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4550 2380 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 110


 4551 2384 03F11303 		add	r3, r3, #19
 4552 2388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4553 238a 9A42     		cmp	r2, r3
 4554 238c C4D3     		bcc	.L189
 641:..\src/command_processing.c ****                         }
 642:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4555              		.loc 1 642 0 is_stmt 1
 4556 238e 07F5B053 		add	r3, r7, #5632
 4557 2392 03F10E03 		add	r3, r3, #14
 4558 2396 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4559 2398 3849     		ldr	r1, .L297+4
 4560 239a 1346     		mov	r3, r2
 4561 239c DB00     		lsls	r3, r3, #3
 4562 239e 9B1A     		subs	r3, r3, r2
 4563 23a0 1B01     		lsls	r3, r3, #4
 4564 23a2 0B44     		add	r3, r3, r1
 4565 23a4 E833     		adds	r3, r3, #232
 4566 23a6 1968     		ldr	r1, [r3]
 4567 23a8 07F5B053 		add	r3, r7, #5632
 4568 23ac 03F10E03 		add	r3, r3, #14
 4569 23b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4570 23b2 3148     		ldr	r0, .L297
 4571 23b4 1346     		mov	r3, r2
 4572 23b6 DB00     		lsls	r3, r3, #3
 4573 23b8 9B1A     		subs	r3, r3, r2
 4574 23ba 1B01     		lsls	r3, r3, #4
 4575 23bc 0344     		add	r3, r3, r0
 4576 23be 03F58873 		add	r3, r3, #272
 4577 23c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4578 23c4 1846     		mov	r0, r3
 4579 23c6 2D4A     		ldr	r2, .L297+4
 4580 23c8 0346     		mov	r3, r0
 4581 23ca 5B00     		lsls	r3, r3, #1
 4582 23cc 0344     		add	r3, r3, r0
 4583 23ce 1B01     		lsls	r3, r3, #4
 4584 23d0 1344     		add	r3, r3, r2
 4585 23d2 03F29513 		addw	r3, r3, #405
 4586 23d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4587 23d8 41FA03F2 		asr	r2, r1, r3
 4588 23dc 07F11803 		add	r3, r7, #24
 4589 23e0 043B     		subs	r3, r3, #4
 4590 23e2 1A60     		str	r2, [r3]
 643:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4591              		.loc 1 643 0
 4592 23e4 0023     		movs	r3, #0
 4593 23e6 07F5B052 		add	r2, r7, #5632
 4594 23ea 02F11602 		add	r2, r2, #22
 4595 23ee 1370     		strb	r3, [r2]
 4596 23f0 34E0     		b	.L190
 4597              	.L191:
 644:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4598              		.loc 1 644 0 discriminator 3
 4599 23f2 07F5B053 		add	r3, r7, #5632
 4600 23f6 03F11503 		add	r3, r3, #21
 4601 23fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4602 23fc 3222     		movs	r2, #50
 4603 23fe 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 111


 4604 2402 1A1D     		adds	r2, r3, #4
 4605 2404 07F5B053 		add	r3, r7, #5632
 4606 2408 03F11303 		add	r3, r3, #19
 4607 240c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4608 240e 1A44     		add	r2, r2, r3
 4609 2410 07F5B053 		add	r3, r7, #5632
 4610 2414 03F11303 		add	r3, r3, #19
 4611 2418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4612 241a 1A44     		add	r2, r2, r3
 4613 241c 07F5B053 		add	r3, r7, #5632
 4614 2420 03F11603 		add	r3, r3, #22
 4615 2424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4616 2426 D31A     		subs	r3, r2, r3
 4617 2428 5A1E     		subs	r2, r3, #1
 4618 242a 07F5B053 		add	r3, r7, #5632
 4619 242e 03F11603 		add	r3, r3, #22
 4620 2432 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4621 2434 07F11803 		add	r3, r7, #24
 4622 2438 043B     		subs	r3, r3, #4
 4623 243a 0B44     		add	r3, r3, r1
 4624 243c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4625 243e 07F15803 		add	r3, r7, #88
 4626 2442 043B     		subs	r3, r3, #4
 4627 2444 9954     		strb	r1, [r3, r2]
 643:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4628              		.loc 1 643 0 discriminator 3
 4629 2446 07F5B053 		add	r3, r7, #5632
 4630 244a 03F11603 		add	r3, r3, #22
 4631 244e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4632 2450 0133     		adds	r3, r3, #1
 4633 2452 07F5B052 		add	r2, r7, #5632
 4634 2456 02F11602 		add	r2, r2, #22
 4635 245a 1370     		strb	r3, [r2]
 4636              	.L190:
 643:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4637              		.loc 1 643 0 is_stmt 0 discriminator 1
 4638 245c 07F5B053 		add	r3, r7, #5632
 4639 2460 03F11603 		add	r3, r3, #22
 4640 2464 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4641 2466 07F5B053 		add	r3, r7, #5632
 4642 246a 03F11303 		add	r3, r3, #19
 4643 246e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4644 2470 9A42     		cmp	r2, r3
 4645 2472 BED3     		bcc	.L191
 645:..\src/command_processing.c ****                         }
 646:..\src/command_processing.c ****                         break;
 4646              		.loc 1 646 0 is_stmt 1
 4647 2474 05E0     		b	.L110
 4648              	.L298:
 4649 2476 00BF     		.align	2
 4650              	.L297:
 4651 2478 00000000 		.word	g_mem
 4652 247c 00000000 		.word	c_mem
 4653              	.L277:
 647:..\src/command_processing.c ****                         
 648:..\src/command_processing.c ****                     default:
 649:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 112


 4654              		.loc 1 649 0
 4655 2480 00BF     		nop
 4656              	.L110:
 650:..\src/command_processing.c ****                 }
 651:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 652:..\src/command_processing.c ****                         
 653:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 654:..\src/command_processing.c ****         }
 655:..\src/command_processing.c ****         
 656:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4657              		.loc 1 656 0
 4658 2482 07F5B053 		add	r3, r7, #5632
 4659 2486 03F11503 		add	r3, r3, #21
 4660 248a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4661 248c 9B00     		lsls	r3, r3, #2
 4662 248e 07F5B152 		add	r2, r7, #5664
 4663 2492 02F11402 		add	r2, r2, #20
 4664 2496 1268     		ldr	r2, [r2]
 4665 2498 1344     		add	r3, r3, r2
 4666 249a 1A68     		ldr	r2, [r3]
 4667 249c 07F13803 		add	r3, r7, #56
 4668 24a0 183B     		subs	r3, r3, #24
 4669 24a2 1146     		mov	r1, r2
 4670 24a4 1846     		mov	r0, r3
 4671 24a6 FFF7FEFF 		bl	sprintf
 657:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4672              		.loc 1 657 0
 4673 24aa 07F13803 		add	r3, r7, #56
 4674 24ae 183B     		subs	r3, r3, #24
 4675 24b0 1846     		mov	r0, r3
 4676 24b2 FFF7FEFF 		bl	strlen
 4677 24b6 0346     		mov	r3, r0
 4678 24b8 07F5B052 		add	r2, r7, #5632
 4679 24bc 02F11202 		add	r2, r2, #18
 4680 24c0 1370     		strb	r3, [r2]
 658:..\src/command_processing.c ****         
 659:..\src/command_processing.c ****         // Parameters with a menu
 660:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4681              		.loc 1 660 0
 4682 24c2 07F5B053 		add	r3, r7, #5632
 4683 24c6 03F11503 		add	r3, r3, #21
 4684 24ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4685 24cc 07F11803 		add	r3, r7, #24
 4686 24d0 103B     		subs	r3, r3, #16
 4687 24d2 1B68     		ldr	r3, [r3]
 4688 24d4 1344     		add	r3, r3, r2
 4689 24d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4690 24d8 002B     		cmp	r3, #0
 4691 24da 40F0C584 		bne	.L192
 661:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4692              		.loc 1 661 0
 4693 24de 07F5B053 		add	r3, r7, #5632
 4694 24e2 03F11403 		add	r3, r3, #20
 4695 24e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4696 24e8 07F5B152 		add	r2, r7, #5664
 4697 24ec 02F11002 		add	r2, r2, #16
 4698 24f0 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 113


 4699 24f2 1344     		add	r3, r3, r2
 4700 24f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4701 24f6 013B     		subs	r3, r3, #1
 4702 24f8 0B2B     		cmp	r3, #11
 4703 24fa 00F2A784 		bhi	.L193
 4704 24fe 01A2     		adr	r2, .L195
 4705 2500 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4706              		.p2align 2
 4707              	.L195:
 4708 2504 35250000 		.word	.L194+1
 4709 2508 DF260000 		.word	.L196+1
 4710 250c B5270000 		.word	.L197+1
 4711 2510 09280000 		.word	.L198+1
 4712 2514 6D280000 		.word	.L199+1
 4713 2518 C9280000 		.word	.L200+1
 4714 251c E5290000 		.word	.L201+1
 4715 2520 6D2A0000 		.word	.L202+1
 4716 2524 012B0000 		.word	.L203+1
 4717 2528 792B0000 		.word	.L204+1
 4718 252c 8B2C0000 		.word	.L205+1
 4719 2530 CB2D0000 		.word	.L206+1
 4720              		.p2align 1
 4721              	.L194:
 662:..\src/command_processing.c ****                 case 1:     // input mode menu
 663:..\src/command_processing.c ****                     switch(*m_addr) {
 4722              		.loc 1 663 0
 4723 2534 07F5B053 		add	r3, r7, #5632
 4724 2538 03F10803 		add	r3, r3, #8
 4725 253c 1B68     		ldr	r3, [r3]
 4726 253e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4727 2540 072B     		cmp	r3, #7
 4728 2542 00F27C84 		bhi	.L278
 4729 2546 01A2     		adr	r2, .L209
 4730 2548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4731              		.p2align 2
 4732              	.L209:
 4733 254c 6D250000 		.word	.L208+1
 4734 2550 91250000 		.word	.L210+1
 4735 2554 B7250000 		.word	.L211+1
 4736 2558 E5250000 		.word	.L212+1
 4737 255c 11260000 		.word	.L213+1
 4738 2560 3B260000 		.word	.L214+1
 4739 2564 6F260000 		.word	.L215+1
 4740 2568 99260000 		.word	.L216+1
 4741              		.p2align 1
 4742              	.L208:
 664:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 665:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4743              		.loc 1 665 0
 4744 256c 07F13803 		add	r3, r7, #56
 4745 2570 183B     		subs	r3, r3, #24
 4746 2572 1846     		mov	r0, r3
 4747 2574 FFF7FEFF 		bl	strlen
 4748 2578 0346     		mov	r3, r0
 4749 257a 1A46     		mov	r2, r3
 4750 257c 07F13803 		add	r3, r7, #56
 4751 2580 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 114


 4752 2582 1344     		add	r3, r3, r2
 4753 2584 DA4A     		ldr	r2, .L299
 4754 2586 1068     		ldr	r0, [r2]	@ unaligned
 4755 2588 1860     		str	r0, [r3]	@ unaligned
 4756 258a 1279     		ldrb	r2, [r2, #4]
 4757 258c 1A71     		strb	r2, [r3, #4]
 666:..\src/command_processing.c ****                         break;
 4758              		.loc 1 666 0
 4759 258e A5E0     		b	.L207
 4760              	.L210:
 667:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 668:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4761              		.loc 1 668 0
 4762 2590 07F13803 		add	r3, r7, #56
 4763 2594 183B     		subs	r3, r3, #24
 4764 2596 1846     		mov	r0, r3
 4765 2598 FFF7FEFF 		bl	strlen
 4766 259c 0346     		mov	r3, r0
 4767 259e 1A46     		mov	r2, r3
 4768 25a0 07F13803 		add	r3, r7, #56
 4769 25a4 183B     		subs	r3, r3, #24
 4770 25a6 1344     		add	r3, r3, r2
 4771 25a8 D249     		ldr	r1, .L299+4
 4772 25aa 1A46     		mov	r2, r3
 4773 25ac 0B46     		mov	r3, r1
 4774 25ae 03CB     		ldmia	r3!, {r0, r1}
 4775 25b0 1060     		str	r0, [r2]	@ unaligned
 4776 25b2 5160     		str	r1, [r2, #4]	@ unaligned
 669:..\src/command_processing.c ****                         break;
 4777              		.loc 1 669 0
 4778 25b4 92E0     		b	.L207
 4779              	.L211:
 670:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 671:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4780              		.loc 1 671 0
 4781 25b6 07F13803 		add	r3, r7, #56
 4782 25ba 183B     		subs	r3, r3, #24
 4783 25bc 1846     		mov	r0, r3
 4784 25be FFF7FEFF 		bl	strlen
 4785 25c2 0346     		mov	r3, r0
 4786 25c4 1A46     		mov	r2, r3
 4787 25c6 07F13803 		add	r3, r7, #56
 4788 25ca 183B     		subs	r3, r3, #24
 4789 25cc 1344     		add	r3, r3, r2
 4790 25ce CA4A     		ldr	r2, .L299+8
 4791 25d0 1D46     		mov	r5, r3
 4792 25d2 1446     		mov	r4, r2
 4793 25d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4794 25d6 2860     		str	r0, [r5]	@ unaligned
 4795 25d8 6960     		str	r1, [r5, #4]	@ unaligned
 4796 25da AA60     		str	r2, [r5, #8]	@ unaligned
 4797 25dc EB60     		str	r3, [r5, #12]	@ unaligned
 4798 25de 2388     		ldrh	r3, [r4]	@ unaligned
 4799 25e0 2B82     		strh	r3, [r5, #16]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 4800              		.loc 1 672 0
 4801 25e2 7BE0     		b	.L207
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 115


 4802              	.L212:
 673:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 674:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4803              		.loc 1 674 0
 4804 25e4 07F13803 		add	r3, r7, #56
 4805 25e8 183B     		subs	r3, r3, #24
 4806 25ea 1846     		mov	r0, r3
 4807 25ec FFF7FEFF 		bl	strlen
 4808 25f0 0346     		mov	r3, r0
 4809 25f2 1A46     		mov	r2, r3
 4810 25f4 07F13803 		add	r3, r7, #56
 4811 25f8 183B     		subs	r3, r3, #24
 4812 25fa 1344     		add	r3, r3, r2
 4813 25fc BF4A     		ldr	r2, .L299+12
 4814 25fe 1C46     		mov	r4, r3
 4815 2600 1346     		mov	r3, r2
 4816 2602 07CB     		ldmia	r3!, {r0, r1, r2}
 4817 2604 2060     		str	r0, [r4]	@ unaligned
 4818 2606 6160     		str	r1, [r4, #4]	@ unaligned
 4819 2608 A260     		str	r2, [r4, #8]	@ unaligned
 4820 260a 1B88     		ldrh	r3, [r3]	@ unaligned
 4821 260c A381     		strh	r3, [r4, #12]	@ unaligned
 675:..\src/command_processing.c ****                         break;
 4822              		.loc 1 675 0
 4823 260e 65E0     		b	.L207
 4824              	.L213:
 676:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 677:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4825              		.loc 1 677 0
 4826 2610 07F13803 		add	r3, r7, #56
 4827 2614 183B     		subs	r3, r3, #24
 4828 2616 1846     		mov	r0, r3
 4829 2618 FFF7FEFF 		bl	strlen
 4830 261c 0346     		mov	r3, r0
 4831 261e 1A46     		mov	r2, r3
 4832 2620 07F13803 		add	r3, r7, #56
 4833 2624 183B     		subs	r3, r3, #24
 4834 2626 1344     		add	r3, r3, r2
 4835 2628 B549     		ldr	r1, .L299+16
 4836 262a 1A46     		mov	r2, r3
 4837 262c 0B46     		mov	r3, r1
 4838 262e 03CB     		ldmia	r3!, {r0, r1}
 4839 2630 1060     		str	r0, [r2]	@ unaligned
 4840 2632 5160     		str	r1, [r2, #4]	@ unaligned
 4841 2634 1B88     		ldrh	r3, [r3]	@ unaligned
 4842 2636 1381     		strh	r3, [r2, #8]	@ unaligned
 678:..\src/command_processing.c ****                         break;
 4843              		.loc 1 678 0
 4844 2638 50E0     		b	.L207
 4845              	.L214:
 679:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 680:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4846              		.loc 1 680 0
 4847 263a 07F13803 		add	r3, r7, #56
 4848 263e 183B     		subs	r3, r3, #24
 4849 2640 1846     		mov	r0, r3
 4850 2642 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 116


 4851 2646 0346     		mov	r3, r0
 4852 2648 1A46     		mov	r2, r3
 4853 264a 07F13803 		add	r3, r7, #56
 4854 264e 183B     		subs	r3, r3, #24
 4855 2650 1344     		add	r3, r3, r2
 4856 2652 AC4A     		ldr	r2, .L299+20
 4857 2654 1D46     		mov	r5, r3
 4858 2656 1446     		mov	r4, r2
 4859 2658 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4860 265a 2860     		str	r0, [r5]	@ unaligned
 4861 265c 6960     		str	r1, [r5, #4]	@ unaligned
 4862 265e AA60     		str	r2, [r5, #8]	@ unaligned
 4863 2660 EB60     		str	r3, [r5, #12]	@ unaligned
 4864 2662 2388     		ldrh	r3, [r4]	@ unaligned
 4865 2664 A278     		ldrb	r2, [r4, #2]
 4866 2666 2B82     		strh	r3, [r5, #16]	@ unaligned
 4867 2668 1346     		mov	r3, r2
 4868 266a AB74     		strb	r3, [r5, #18]
 681:..\src/command_processing.c ****                         break;
 4869              		.loc 1 681 0
 4870 266c 36E0     		b	.L207
 4871              	.L215:
 682:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 683:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4872              		.loc 1 683 0
 4873 266e 07F13803 		add	r3, r7, #56
 4874 2672 183B     		subs	r3, r3, #24
 4875 2674 1846     		mov	r0, r3
 4876 2676 FFF7FEFF 		bl	strlen
 4877 267a 0346     		mov	r3, r0
 4878 267c 1A46     		mov	r2, r3
 4879 267e 07F13803 		add	r3, r7, #56
 4880 2682 183B     		subs	r3, r3, #24
 4881 2684 1344     		add	r3, r3, r2
 4882 2686 A049     		ldr	r1, .L299+24
 4883 2688 1A46     		mov	r2, r3
 4884 268a 0B46     		mov	r3, r1
 4885 268c 03CB     		ldmia	r3!, {r0, r1}
 4886 268e 1060     		str	r0, [r2]	@ unaligned
 4887 2690 5160     		str	r1, [r2, #4]	@ unaligned
 4888 2692 1B88     		ldrh	r3, [r3]	@ unaligned
 4889 2694 1381     		strh	r3, [r2, #8]	@ unaligned
 684:..\src/command_processing.c ****                         break;
 4890              		.loc 1 684 0
 4891 2696 21E0     		b	.L207
 4892              	.L216:
 685:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 686:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4893              		.loc 1 686 0
 4894 2698 07F13803 		add	r3, r7, #56
 4895 269c 183B     		subs	r3, r3, #24
 4896 269e 1846     		mov	r0, r3
 4897 26a0 FFF7FEFF 		bl	strlen
 4898 26a4 0346     		mov	r3, r0
 4899 26a6 1A46     		mov	r2, r3
 4900 26a8 07F13803 		add	r3, r7, #56
 4901 26ac 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 117


 4902 26ae 1344     		add	r3, r3, r2
 4903 26b0 964A     		ldr	r2, .L299+28
 4904 26b2 1446     		mov	r4, r2
 4905 26b4 9E46     		mov	lr, r3
 4906 26b6 04F1200C 		add	ip, r4, #32
 4907              	.L217:
 4908 26ba 7546     		mov	r5, lr
 4909 26bc 2646     		mov	r6, r4
 4910 26be 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4911 26c0 2860     		str	r0, [r5]	@ unaligned
 4912 26c2 6960     		str	r1, [r5, #4]	@ unaligned
 4913 26c4 AA60     		str	r2, [r5, #8]	@ unaligned
 4914 26c6 EB60     		str	r3, [r5, #12]	@ unaligned
 4915 26c8 1034     		adds	r4, r4, #16
 4916 26ca 0EF1100E 		add	lr, lr, #16
 4917 26ce 6445     		cmp	r4, ip
 4918 26d0 F3D1     		bne	.L217
 4919 26d2 7246     		mov	r2, lr
 4920 26d4 2346     		mov	r3, r4
 4921 26d6 1B88     		ldrh	r3, [r3]	@ unaligned
 4922 26d8 1380     		strh	r3, [r2]	@ unaligned
 687:..\src/command_processing.c ****                         break;
 4923              		.loc 1 687 0
 4924 26da 00BF     		nop
 4925              	.L207:
 688:..\src/command_processing.c ****                     }
 689:..\src/command_processing.c ****                     break;
 4926              		.loc 1 689 0
 4927 26dc AFE3     		b	.L278
 4928              	.L196:
 690:..\src/command_processing.c ****                 case 2:     // control mode menu
 691:..\src/command_processing.c ****                     switch(*m_addr){
 4929              		.loc 1 691 0
 4930 26de 07F5B053 		add	r3, r7, #5632
 4931 26e2 03F10803 		add	r3, r3, #8
 4932 26e6 1B68     		ldr	r3, [r3]
 4933 26e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4934 26ea 032B     		cmp	r3, #3
 4935 26ec 00F2A983 		bhi	.L279
 4936 26f0 01A2     		adr	r2, .L220
 4937 26f2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4938 26f6 00BF     		.p2align 2
 4939              	.L220:
 4940 26f8 09270000 		.word	.L219+1
 4941 26fc 33270000 		.word	.L221+1
 4942 2700 57270000 		.word	.L222+1
 4943 2704 81270000 		.word	.L223+1
 4944              		.p2align 1
 4945              	.L219:
 692:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 693:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4946              		.loc 1 693 0
 4947 2708 07F13803 		add	r3, r7, #56
 4948 270c 183B     		subs	r3, r3, #24
 4949 270e 1846     		mov	r0, r3
 4950 2710 FFF7FEFF 		bl	strlen
 4951 2714 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 118


 4952 2716 1A46     		mov	r2, r3
 4953 2718 07F13803 		add	r3, r7, #56
 4954 271c 183B     		subs	r3, r3, #24
 4955 271e 1344     		add	r3, r3, r2
 4956 2720 7B49     		ldr	r1, .L299+32
 4957 2722 1A46     		mov	r2, r3
 4958 2724 0B46     		mov	r3, r1
 4959 2726 03CB     		ldmia	r3!, {r0, r1}
 4960 2728 1060     		str	r0, [r2]	@ unaligned
 4961 272a 5160     		str	r1, [r2, #4]	@ unaligned
 4962 272c 1B88     		ldrh	r3, [r3]	@ unaligned
 4963 272e 1381     		strh	r3, [r2, #8]	@ unaligned
 694:..\src/command_processing.c ****                         break;
 4964              		.loc 1 694 0
 4965 2730 3FE0     		b	.L218
 4966              	.L221:
 695:..\src/command_processing.c ****                         case CONTROL_PWM:
 696:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4967              		.loc 1 696 0
 4968 2732 07F13803 		add	r3, r7, #56
 4969 2736 183B     		subs	r3, r3, #24
 4970 2738 1846     		mov	r0, r3
 4971 273a FFF7FEFF 		bl	strlen
 4972 273e 0346     		mov	r3, r0
 4973 2740 1A46     		mov	r2, r3
 4974 2742 07F13803 		add	r3, r7, #56
 4975 2746 183B     		subs	r3, r3, #24
 4976 2748 1344     		add	r3, r3, r2
 4977 274a 724A     		ldr	r2, .L299+36
 4978 274c 1068     		ldr	r0, [r2]	@ unaligned
 4979 274e 1860     		str	r0, [r3]	@ unaligned
 4980 2750 1279     		ldrb	r2, [r2, #4]
 4981 2752 1A71     		strb	r2, [r3, #4]
 697:..\src/command_processing.c ****                         break;
 4982              		.loc 1 697 0
 4983 2754 2DE0     		b	.L218
 4984              	.L222:
 698:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 699:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4985              		.loc 1 699 0
 4986 2756 07F13803 		add	r3, r7, #56
 4987 275a 183B     		subs	r3, r3, #24
 4988 275c 1846     		mov	r0, r3
 4989 275e FFF7FEFF 		bl	strlen
 4990 2762 0346     		mov	r3, r0
 4991 2764 1A46     		mov	r2, r3
 4992 2766 07F13803 		add	r3, r7, #56
 4993 276a 183B     		subs	r3, r3, #24
 4994 276c 1344     		add	r3, r3, r2
 4995 276e 6A49     		ldr	r1, .L299+40
 4996 2770 1A46     		mov	r2, r3
 4997 2772 0B46     		mov	r3, r1
 4998 2774 03CB     		ldmia	r3!, {r0, r1}
 4999 2776 1060     		str	r0, [r2]	@ unaligned
 5000 2778 5160     		str	r1, [r2, #4]	@ unaligned
 5001 277a 1B78     		ldrb	r3, [r3]
 5002 277c 1372     		strb	r3, [r2, #8]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 119


 700:..\src/command_processing.c ****                         break;
 5003              		.loc 1 700 0
 5004 277e 18E0     		b	.L218
 5005              	.L223:
 701:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 702:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5006              		.loc 1 702 0
 5007 2780 07F13803 		add	r3, r7, #56
 5008 2784 183B     		subs	r3, r3, #24
 5009 2786 1846     		mov	r0, r3
 5010 2788 FFF7FEFF 		bl	strlen
 5011 278c 0346     		mov	r3, r0
 5012 278e 1A46     		mov	r2, r3
 5013 2790 07F13803 		add	r3, r7, #56
 5014 2794 183B     		subs	r3, r3, #24
 5015 2796 1344     		add	r3, r3, r2
 5016 2798 604A     		ldr	r2, .L299+44
 5017 279a 1D46     		mov	r5, r3
 5018 279c 1446     		mov	r4, r2
 5019 279e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5020 27a0 2860     		str	r0, [r5]	@ unaligned
 5021 27a2 6960     		str	r1, [r5, #4]	@ unaligned
 5022 27a4 AA60     		str	r2, [r5, #8]	@ unaligned
 5023 27a6 EB60     		str	r3, [r5, #12]	@ unaligned
 5024 27a8 2068     		ldr	r0, [r4]	@ unaligned
 5025 27aa 2861     		str	r0, [r5, #16]	@ unaligned
 5026 27ac A388     		ldrh	r3, [r4, #4]	@ unaligned
 5027 27ae AB82     		strh	r3, [r5, #20]	@ unaligned
 703:..\src/command_processing.c ****                         break;
 5028              		.loc 1 703 0
 5029 27b0 00BF     		nop
 5030              	.L218:
 704:..\src/command_processing.c ****                     }
 705:..\src/command_processing.c ****                     break;
 5031              		.loc 1 705 0
 5032 27b2 46E3     		b	.L279
 5033              	.L197:
 706:..\src/command_processing.c ****                 case 3:     // yes/no menu
 707:..\src/command_processing.c ****                     if(*m_addr){
 5034              		.loc 1 707 0
 5035 27b4 07F5B053 		add	r3, r7, #5632
 5036 27b8 03F10803 		add	r3, r3, #8
 5037 27bc 1B68     		ldr	r3, [r3]
 5038 27be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5039 27c0 002B     		cmp	r3, #0
 5040 27c2 11D0     		beq	.L224
 708:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5041              		.loc 1 708 0
 5042 27c4 07F13803 		add	r3, r7, #56
 5043 27c8 183B     		subs	r3, r3, #24
 5044 27ca 1846     		mov	r0, r3
 5045 27cc FFF7FEFF 		bl	strlen
 5046 27d0 0346     		mov	r3, r0
 5047 27d2 1A46     		mov	r2, r3
 5048 27d4 07F13803 		add	r3, r7, #56
 5049 27d8 183B     		subs	r3, r3, #24
 5050 27da 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 120


 5051 27dc 504A     		ldr	r2, .L299+48
 5052 27de 1068     		ldr	r0, [r2]	@ unaligned
 5053 27e0 1860     		str	r0, [r3]	@ unaligned
 5054 27e2 1279     		ldrb	r2, [r2, #4]
 5055 27e4 1A71     		strb	r2, [r3, #4]
 709:..\src/command_processing.c ****                     }
 710:..\src/command_processing.c ****                     else {
 711:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 712:..\src/command_processing.c ****                     }
 713:..\src/command_processing.c ****                     break;    
 5056              		.loc 1 713 0
 5057 27e6 31E3     		b	.L193
 5058              	.L224:
 711:..\src/command_processing.c ****                     }
 5059              		.loc 1 711 0
 5060 27e8 07F13803 		add	r3, r7, #56
 5061 27ec 183B     		subs	r3, r3, #24
 5062 27ee 1846     		mov	r0, r3
 5063 27f0 FFF7FEFF 		bl	strlen
 5064 27f4 0346     		mov	r3, r0
 5065 27f6 1A46     		mov	r2, r3
 5066 27f8 07F13803 		add	r3, r7, #56
 5067 27fc 183B     		subs	r3, r3, #24
 5068 27fe 1344     		add	r3, r3, r2
 5069 2800 484A     		ldr	r2, .L299+52
 5070 2802 1068     		ldr	r0, [r2]	@ unaligned
 5071 2804 1860     		str	r0, [r3]	@ unaligned
 5072              		.loc 1 713 0
 5073 2806 21E3     		b	.L193
 5074              	.L198:
 714:..\src/command_processing.c ****                 case 4:     // right/lef menu
 715:..\src/command_processing.c ****                     switch(*m_addr){
 5075              		.loc 1 715 0
 5076 2808 07F5B053 		add	r3, r7, #5632
 5077 280c 03F10803 		add	r3, r3, #8
 5078 2810 1B68     		ldr	r3, [r3]
 5079 2812 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5080 2814 002B     		cmp	r3, #0
 5081 2816 02D0     		beq	.L227
 5082 2818 012B     		cmp	r3, #1
 5083 281a 14D0     		beq	.L228
 716:..\src/command_processing.c ****                         case RIGHT_HAND:
 717:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 718:..\src/command_processing.c ****                         break;
 719:..\src/command_processing.c ****                         case LEFT_HAND:
 720:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 721:..\src/command_processing.c ****                         break;
 722:..\src/command_processing.c ****                     }
 723:..\src/command_processing.c ****                     break;
 5084              		.loc 1 723 0
 5085 281c 16E3     		b	.L193
 5086              	.L227:
 717:..\src/command_processing.c ****                         break;
 5087              		.loc 1 717 0
 5088 281e 07F13803 		add	r3, r7, #56
 5089 2822 183B     		subs	r3, r3, #24
 5090 2824 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 121


 5091 2826 FFF7FEFF 		bl	strlen
 5092 282a 0346     		mov	r3, r0
 5093 282c 1A46     		mov	r2, r3
 5094 282e 07F13803 		add	r3, r7, #56
 5095 2832 183B     		subs	r3, r3, #24
 5096 2834 1344     		add	r3, r3, r2
 5097 2836 3C4A     		ldr	r2, .L299+56
 5098 2838 1068     		ldr	r0, [r2]	@ unaligned
 5099 283a 1860     		str	r0, [r3]	@ unaligned
 5100 283c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5101 283e 9279     		ldrb	r2, [r2, #6]
 5102 2840 9980     		strh	r1, [r3, #4]	@ unaligned
 5103 2842 9A71     		strb	r2, [r3, #6]
 718:..\src/command_processing.c ****                         case LEFT_HAND:
 5104              		.loc 1 718 0
 5105 2844 11E0     		b	.L226
 5106              	.L228:
 720:..\src/command_processing.c ****                         break;
 5107              		.loc 1 720 0
 5108 2846 07F13803 		add	r3, r7, #56
 5109 284a 183B     		subs	r3, r3, #24
 5110 284c 1846     		mov	r0, r3
 5111 284e FFF7FEFF 		bl	strlen
 5112 2852 0346     		mov	r3, r0
 5113 2854 1A46     		mov	r2, r3
 5114 2856 07F13803 		add	r3, r7, #56
 5115 285a 183B     		subs	r3, r3, #24
 5116 285c 1344     		add	r3, r3, r2
 5117 285e 334A     		ldr	r2, .L299+60
 5118 2860 1068     		ldr	r0, [r2]	@ unaligned
 5119 2862 1860     		str	r0, [r3]	@ unaligned
 5120 2864 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5121 2866 9A80     		strh	r2, [r3, #4]	@ unaligned
 721:..\src/command_processing.c ****                     }
 5122              		.loc 1 721 0
 5123 2868 00BF     		nop
 5124              	.L226:
 5125              		.loc 1 723 0
 5126 286a EFE2     		b	.L193
 5127              	.L199:
 724:..\src/command_processing.c ****                 case 5:     // on/off menu
 725:..\src/command_processing.c ****                     switch(*m_addr){
 5128              		.loc 1 725 0
 5129 286c 07F5B053 		add	r3, r7, #5632
 5130 2870 03F10803 		add	r3, r3, #8
 5131 2874 1B68     		ldr	r3, [r3]
 5132 2876 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5133 2878 002B     		cmp	r3, #0
 5134 287a 02D0     		beq	.L230
 5135 287c 012B     		cmp	r3, #1
 5136 287e 12D0     		beq	.L231
 726:..\src/command_processing.c ****                         case 0:
 727:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 728:..\src/command_processing.c ****                         break;
 729:..\src/command_processing.c ****                         case 1:
 730:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 731:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 122


 732:..\src/command_processing.c ****                     }
 733:..\src/command_processing.c ****                     break;
 5137              		.loc 1 733 0
 5138 2880 E4E2     		b	.L193
 5139              	.L230:
 727:..\src/command_processing.c ****                         break;
 5140              		.loc 1 727 0
 5141 2882 07F13803 		add	r3, r7, #56
 5142 2886 183B     		subs	r3, r3, #24
 5143 2888 1846     		mov	r0, r3
 5144 288a FFF7FEFF 		bl	strlen
 5145 288e 0346     		mov	r3, r0
 5146 2890 1A46     		mov	r2, r3
 5147 2892 07F13803 		add	r3, r7, #56
 5148 2896 183B     		subs	r3, r3, #24
 5149 2898 1344     		add	r3, r3, r2
 5150 289a 254A     		ldr	r2, .L299+64
 5151 289c 1068     		ldr	r0, [r2]	@ unaligned
 5152 289e 1860     		str	r0, [r3]	@ unaligned
 5153 28a0 1279     		ldrb	r2, [r2, #4]
 5154 28a2 1A71     		strb	r2, [r3, #4]
 728:..\src/command_processing.c ****                         case 1:
 5155              		.loc 1 728 0
 5156 28a4 0FE0     		b	.L229
 5157              	.L231:
 730:..\src/command_processing.c ****                         break;
 5158              		.loc 1 730 0
 5159 28a6 07F13803 		add	r3, r7, #56
 5160 28aa 183B     		subs	r3, r3, #24
 5161 28ac 1846     		mov	r0, r3
 5162 28ae FFF7FEFF 		bl	strlen
 5163 28b2 0346     		mov	r3, r0
 5164 28b4 1A46     		mov	r2, r3
 5165 28b6 07F13803 		add	r3, r7, #56
 5166 28ba 183B     		subs	r3, r3, #24
 5167 28bc 1344     		add	r3, r3, r2
 5168 28be 1D4A     		ldr	r2, .L299+68
 5169 28c0 1068     		ldr	r0, [r2]	@ unaligned
 5170 28c2 1860     		str	r0, [r3]	@ unaligned
 731:..\src/command_processing.c ****                     }
 5171              		.loc 1 731 0
 5172 28c4 00BF     		nop
 5173              	.L229:
 5174              		.loc 1 733 0
 5175 28c6 C1E2     		b	.L193
 5176              	.L200:
 734:..\src/command_processing.c ****                 case 6:     // expansion port menu
 735:..\src/command_processing.c ****                     switch(*m_addr){
 5177              		.loc 1 735 0
 5178 28c8 07F5B053 		add	r3, r7, #5632
 5179 28cc 03F10803 		add	r3, r3, #8
 5180 28d0 1B68     		ldr	r3, [r3]
 5181 28d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5182 28d4 032B     		cmp	r3, #3
 5183 28d6 00F2B682 		bhi	.L280
 5184 28da 01A2     		adr	r2, .L234
 5185 28dc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 123


 5186              		.p2align 2
 5187              	.L234:
 5188 28e0 39290000 		.word	.L233+1
 5189 28e4 5D290000 		.word	.L235+1
 5190 28e8 89290000 		.word	.L236+1
 5191 28ec B7290000 		.word	.L237+1
 5192              		.p2align 1
 5193              	.L300:
 5194              		.align	2
 5195              	.L299:
 5196 28f0 00000000 		.word	.LC88
 5197 28f4 08000000 		.word	.LC89
 5198 28f8 10000000 		.word	.LC90
 5199 28fc 24000000 		.word	.LC91
 5200 2900 34000000 		.word	.LC92
 5201 2904 40000000 		.word	.LC93
 5202 2908 54000000 		.word	.LC94
 5203 290c 60000000 		.word	.LC95
 5204 2910 84000000 		.word	.LC96
 5205 2914 90000000 		.word	.LC97
 5206 2918 98000000 		.word	.LC98
 5207 291c A4000000 		.word	.LC99
 5208 2920 BC000000 		.word	.LC100
 5209 2924 C4000000 		.word	.LC101
 5210 2928 CC000000 		.word	.LC102
 5211 292c D4000000 		.word	.LC103
 5212 2930 DC000000 		.word	.LC104
 5213 2934 E4000000 		.word	.LC105
 5214              	.L233:
 736:..\src/command_processing.c ****                         case EXP_NONE:
 737:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5215              		.loc 1 737 0
 5216 2938 07F13803 		add	r3, r7, #56
 5217 293c 183B     		subs	r3, r3, #24
 5218 293e 1846     		mov	r0, r3
 5219 2940 FFF7FEFF 		bl	strlen
 5220 2944 0346     		mov	r3, r0
 5221 2946 1A46     		mov	r2, r3
 5222 2948 07F13803 		add	r3, r7, #56
 5223 294c 183B     		subs	r3, r3, #24
 5224 294e 1344     		add	r3, r3, r2
 5225 2950 D34A     		ldr	r2, .L301
 5226 2952 1068     		ldr	r0, [r2]	@ unaligned
 5227 2954 1860     		str	r0, [r3]	@ unaligned
 5228 2956 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5229 2958 9A80     		strh	r2, [r3, #4]	@ unaligned
 738:..\src/command_processing.c ****                             break;
 5230              		.loc 1 738 0
 5231 295a 42E0     		b	.L232
 5232              	.L235:
 739:..\src/command_processing.c ****                         case EXP_SD_RTC:
 740:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5233              		.loc 1 740 0
 5234 295c 07F13803 		add	r3, r7, #56
 5235 2960 183B     		subs	r3, r3, #24
 5236 2962 1846     		mov	r0, r3
 5237 2964 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 124


 5238 2968 0346     		mov	r3, r0
 5239 296a 1A46     		mov	r2, r3
 5240 296c 07F13803 		add	r3, r7, #56
 5241 2970 183B     		subs	r3, r3, #24
 5242 2972 1344     		add	r3, r3, r2
 5243 2974 CB4A     		ldr	r2, .L301+4
 5244 2976 1C46     		mov	r4, r3
 5245 2978 1346     		mov	r3, r2
 5246 297a 07CB     		ldmia	r3!, {r0, r1, r2}
 5247 297c 2060     		str	r0, [r4]	@ unaligned
 5248 297e 6160     		str	r1, [r4, #4]	@ unaligned
 5249 2980 A260     		str	r2, [r4, #8]	@ unaligned
 5250 2982 1B88     		ldrh	r3, [r3]	@ unaligned
 5251 2984 A381     		strh	r3, [r4, #12]	@ unaligned
 741:..\src/command_processing.c ****                             break;
 5252              		.loc 1 741 0
 5253 2986 2CE0     		b	.L232
 5254              	.L236:
 742:..\src/command_processing.c ****                         case EXP_WIFI:
 743:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5255              		.loc 1 743 0
 5256 2988 07F13803 		add	r3, r7, #56
 5257 298c 183B     		subs	r3, r3, #24
 5258 298e 1846     		mov	r0, r3
 5259 2990 FFF7FEFF 		bl	strlen
 5260 2994 0346     		mov	r3, r0
 5261 2996 1A46     		mov	r2, r3
 5262 2998 07F13803 		add	r3, r7, #56
 5263 299c 183B     		subs	r3, r3, #24
 5264 299e 1344     		add	r3, r3, r2
 5265 29a0 C14A     		ldr	r2, .L301+8
 5266 29a2 1D46     		mov	r5, r3
 5267 29a4 1446     		mov	r4, r2
 5268 29a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5269 29a8 2860     		str	r0, [r5]	@ unaligned
 5270 29aa 6960     		str	r1, [r5, #4]	@ unaligned
 5271 29ac AA60     		str	r2, [r5, #8]	@ unaligned
 5272 29ae EB60     		str	r3, [r5, #12]	@ unaligned
 5273 29b0 2388     		ldrh	r3, [r4]	@ unaligned
 5274 29b2 2B82     		strh	r3, [r5, #16]	@ unaligned
 744:..\src/command_processing.c ****         					break;
 5275              		.loc 1 744 0
 5276 29b4 15E0     		b	.L232
 5277              	.L237:
 745:..\src/command_processing.c ****                         case EXP_OTHER:
 746:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5278              		.loc 1 746 0
 5279 29b6 07F13803 		add	r3, r7, #56
 5280 29ba 183B     		subs	r3, r3, #24
 5281 29bc 1846     		mov	r0, r3
 5282 29be FFF7FEFF 		bl	strlen
 5283 29c2 0346     		mov	r3, r0
 5284 29c4 1A46     		mov	r2, r3
 5285 29c6 07F13803 		add	r3, r7, #56
 5286 29ca 183B     		subs	r3, r3, #24
 5287 29cc 1344     		add	r3, r3, r2
 5288 29ce B74A     		ldr	r2, .L301+12
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 125


 5289 29d0 1C46     		mov	r4, r3
 5290 29d2 1346     		mov	r3, r2
 5291 29d4 07CB     		ldmia	r3!, {r0, r1, r2}
 5292 29d6 2060     		str	r0, [r4]	@ unaligned
 5293 29d8 6160     		str	r1, [r4, #4]	@ unaligned
 5294 29da A260     		str	r2, [r4, #8]	@ unaligned
 5295 29dc 1B78     		ldrb	r3, [r3]
 5296 29de 2373     		strb	r3, [r4, #12]
 747:..\src/command_processing.c ****         					break;
 5297              		.loc 1 747 0
 5298 29e0 00BF     		nop
 5299              	.L232:
 748:..\src/command_processing.c ****                     }
 749:..\src/command_processing.c ****                     break;
 5300              		.loc 1 749 0
 5301 29e2 30E2     		b	.L280
 5302              	.L201:
 750:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 751:..\src/command_processing.c ****                     switch(*m_addr){
 5303              		.loc 1 751 0
 5304 29e4 07F5B053 		add	r3, r7, #5632
 5305 29e8 03F10803 		add	r3, r3, #8
 5306 29ec 1B68     		ldr	r3, [r3]
 5307 29ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5308 29f0 012B     		cmp	r3, #1
 5309 29f2 16D0     		beq	.L239
 5310 29f4 022B     		cmp	r3, #2
 5311 29f6 26D0     		beq	.L240
 5312 29f8 002B     		cmp	r3, #0
 5313 29fa 00D0     		beq	.L241
 752:..\src/command_processing.c ****                         case 0: 
 753:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 754:..\src/command_processing.c ****                             break;
 755:..\src/command_processing.c ****                         case 1: 
 756:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 757:..\src/command_processing.c ****                             break;
 758:..\src/command_processing.c ****                         case 2: 
 759:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 760:..\src/command_processing.c ****                             break;
 761:..\src/command_processing.c ****                         default:
 762:..\src/command_processing.c ****                             break;
 5314              		.loc 1 762 0
 5315 29fc 35E0     		b	.L242
 5316              	.L241:
 753:..\src/command_processing.c ****                             break;
 5317              		.loc 1 753 0
 5318 29fe 07F13803 		add	r3, r7, #56
 5319 2a02 183B     		subs	r3, r3, #24
 5320 2a04 1846     		mov	r0, r3
 5321 2a06 FFF7FEFF 		bl	strlen
 5322 2a0a 0346     		mov	r3, r0
 5323 2a0c 1A46     		mov	r2, r3
 5324 2a0e 07F13803 		add	r3, r7, #56
 5325 2a12 183B     		subs	r3, r3, #24
 5326 2a14 1344     		add	r3, r3, r2
 5327 2a16 A24A     		ldr	r2, .L301
 5328 2a18 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 126


 5329 2a1a 1860     		str	r0, [r3]	@ unaligned
 5330 2a1c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5331 2a1e 9A80     		strh	r2, [r3, #4]	@ unaligned
 754:..\src/command_processing.c ****                         case 1: 
 5332              		.loc 1 754 0
 5333 2a20 23E0     		b	.L242
 5334              	.L239:
 756:..\src/command_processing.c ****                             break;
 5335              		.loc 1 756 0
 5336 2a22 07F13803 		add	r3, r7, #56
 5337 2a26 183B     		subs	r3, r3, #24
 5338 2a28 1846     		mov	r0, r3
 5339 2a2a FFF7FEFF 		bl	strlen
 5340 2a2e 0346     		mov	r3, r0
 5341 2a30 1A46     		mov	r2, r3
 5342 2a32 07F13803 		add	r3, r7, #56
 5343 2a36 183B     		subs	r3, r3, #24
 5344 2a38 1344     		add	r3, r3, r2
 5345 2a3a 9D4A     		ldr	r2, .L301+16
 5346 2a3c 1068     		ldr	r0, [r2]	@ unaligned
 5347 2a3e 1860     		str	r0, [r3]	@ unaligned
 5348 2a40 1279     		ldrb	r2, [r2, #4]
 5349 2a42 1A71     		strb	r2, [r3, #4]
 757:..\src/command_processing.c ****                         case 2: 
 5350              		.loc 1 757 0
 5351 2a44 11E0     		b	.L242
 5352              	.L240:
 759:..\src/command_processing.c ****                             break;
 5353              		.loc 1 759 0
 5354 2a46 07F13803 		add	r3, r7, #56
 5355 2a4a 183B     		subs	r3, r3, #24
 5356 2a4c 1846     		mov	r0, r3
 5357 2a4e FFF7FEFF 		bl	strlen
 5358 2a52 0346     		mov	r3, r0
 5359 2a54 1A46     		mov	r2, r3
 5360 2a56 07F13803 		add	r3, r7, #56
 5361 2a5a 183B     		subs	r3, r3, #24
 5362 2a5c 1344     		add	r3, r3, r2
 5363 2a5e 954A     		ldr	r2, .L301+20
 5364 2a60 1068     		ldr	r0, [r2]	@ unaligned
 5365 2a62 1860     		str	r0, [r3]	@ unaligned
 5366 2a64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5367 2a66 9A80     		strh	r2, [r3, #4]	@ unaligned
 760:..\src/command_processing.c ****                         default:
 5368              		.loc 1 760 0
 5369 2a68 00BF     		nop
 5370              	.L242:
 763:..\src/command_processing.c ****                     } 
 764:..\src/command_processing.c ****                     break;
 5371              		.loc 1 764 0 discriminator 12
 5372 2a6a EFE1     		b	.L193
 5373              	.L202:
 765:..\src/command_processing.c ****                 case 8:     // user menu          
 766:..\src/command_processing.c ****                     switch(*m_addr){
 5374              		.loc 1 766 0
 5375 2a6c 07F5B053 		add	r3, r7, #5632
 5376 2a70 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 127


 5377 2a74 1B68     		ldr	r3, [r3]
 5378 2a76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5379 2a78 012B     		cmp	r3, #1
 5380 2a7a 1AD0     		beq	.L244
 5381 2a7c 022B     		cmp	r3, #2
 5382 2a7e 2CD0     		beq	.L245
 5383 2a80 002B     		cmp	r3, #0
 5384 2a82 00D0     		beq	.L246
 767:..\src/command_processing.c ****                         case GENERIC_USER:
 768:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 769:..\src/command_processing.c ****                         break;
 770:..\src/command_processing.c ****                         case MARIA:
 771:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 772:..\src/command_processing.c ****                         break;
 773:..\src/command_processing.c ****                         case ROZA:
 774:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 775:..\src/command_processing.c ****                         break;
 776:..\src/command_processing.c ****                     }   
 777:..\src/command_processing.c ****                     break;                    
 5385              		.loc 1 777 0
 5386 2a84 E2E1     		b	.L193
 5387              	.L246:
 768:..\src/command_processing.c ****                         break;
 5388              		.loc 1 768 0
 5389 2a86 07F13803 		add	r3, r7, #56
 5390 2a8a 183B     		subs	r3, r3, #24
 5391 2a8c 1846     		mov	r0, r3
 5392 2a8e FFF7FEFF 		bl	strlen
 5393 2a92 0346     		mov	r3, r0
 5394 2a94 1A46     		mov	r2, r3
 5395 2a96 07F13803 		add	r3, r7, #56
 5396 2a9a 183B     		subs	r3, r3, #24
 5397 2a9c 1344     		add	r3, r3, r2
 5398 2a9e 864A     		ldr	r2, .L301+24
 5399 2aa0 1C46     		mov	r4, r3
 5400 2aa2 1346     		mov	r3, r2
 5401 2aa4 07CB     		ldmia	r3!, {r0, r1, r2}
 5402 2aa6 2060     		str	r0, [r4]	@ unaligned
 5403 2aa8 6160     		str	r1, [r4, #4]	@ unaligned
 5404 2aaa A260     		str	r2, [r4, #8]	@ unaligned
 5405 2aac 1B88     		ldrh	r3, [r3]	@ unaligned
 5406 2aae A381     		strh	r3, [r4, #12]	@ unaligned
 769:..\src/command_processing.c ****                         case MARIA:
 5407              		.loc 1 769 0
 5408 2ab0 25E0     		b	.L243
 5409              	.L244:
 771:..\src/command_processing.c ****                         break;
 5410              		.loc 1 771 0
 5411 2ab2 07F13803 		add	r3, r7, #56
 5412 2ab6 183B     		subs	r3, r3, #24
 5413 2ab8 1846     		mov	r0, r3
 5414 2aba FFF7FEFF 		bl	strlen
 5415 2abe 0346     		mov	r3, r0
 5416 2ac0 1A46     		mov	r2, r3
 5417 2ac2 07F13803 		add	r3, r7, #56
 5418 2ac6 183B     		subs	r3, r3, #24
 5419 2ac8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 128


 5420 2aca 7C4A     		ldr	r2, .L301+28
 5421 2acc 1068     		ldr	r0, [r2]	@ unaligned
 5422 2ace 1860     		str	r0, [r3]	@ unaligned
 5423 2ad0 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5424 2ad2 9279     		ldrb	r2, [r2, #6]
 5425 2ad4 9980     		strh	r1, [r3, #4]	@ unaligned
 5426 2ad6 9A71     		strb	r2, [r3, #6]
 772:..\src/command_processing.c ****                         case ROZA:
 5427              		.loc 1 772 0
 5428 2ad8 11E0     		b	.L243
 5429              	.L245:
 774:..\src/command_processing.c ****                         break;
 5430              		.loc 1 774 0
 5431 2ada 07F13803 		add	r3, r7, #56
 5432 2ade 183B     		subs	r3, r3, #24
 5433 2ae0 1846     		mov	r0, r3
 5434 2ae2 FFF7FEFF 		bl	strlen
 5435 2ae6 0346     		mov	r3, r0
 5436 2ae8 1A46     		mov	r2, r3
 5437 2aea 07F13803 		add	r3, r7, #56
 5438 2aee 183B     		subs	r3, r3, #24
 5439 2af0 1344     		add	r3, r3, r2
 5440 2af2 734A     		ldr	r2, .L301+32
 5441 2af4 1068     		ldr	r0, [r2]	@ unaligned
 5442 2af6 1860     		str	r0, [r3]	@ unaligned
 5443 2af8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5444 2afa 9A80     		strh	r2, [r3, #4]	@ unaligned
 775:..\src/command_processing.c ****                     }   
 5445              		.loc 1 775 0
 5446 2afc 00BF     		nop
 5447              	.L243:
 5448              		.loc 1 777 0
 5449 2afe A5E1     		b	.L193
 5450              	.L203:
 778:..\src/command_processing.c ****                 case 9:     // driver type menu
 779:..\src/command_processing.c ****                     switch(*m_addr){
 5451              		.loc 1 779 0
 5452 2b00 07F5B053 		add	r3, r7, #5632
 5453 2b04 03F10803 		add	r3, r3, #8
 5454 2b08 1B68     		ldr	r3, [r3]
 5455 2b0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5456 2b0c 002B     		cmp	r3, #0
 5457 2b0e 02D0     		beq	.L248
 5458 2b10 012B     		cmp	r3, #1
 5459 2b12 17D0     		beq	.L249
 780:..\src/command_processing.c ****                         case 0:
 781:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 782:..\src/command_processing.c ****                         break;
 783:..\src/command_processing.c ****                         case 1:
 784:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 785:..\src/command_processing.c ****                         break;
 786:..\src/command_processing.c ****                     }
 787:..\src/command_processing.c ****                     break;
 5460              		.loc 1 787 0
 5461 2b14 9AE1     		b	.L193
 5462              	.L248:
 781:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 129


 5463              		.loc 1 781 0
 5464 2b16 07F13803 		add	r3, r7, #56
 5465 2b1a 183B     		subs	r3, r3, #24
 5466 2b1c 1846     		mov	r0, r3
 5467 2b1e FFF7FEFF 		bl	strlen
 5468 2b22 0346     		mov	r3, r0
 5469 2b24 1A46     		mov	r2, r3
 5470 2b26 07F13803 		add	r3, r7, #56
 5471 2b2a 183B     		subs	r3, r3, #24
 5472 2b2c 1344     		add	r3, r3, r2
 5473 2b2e 654A     		ldr	r2, .L301+36
 5474 2b30 1D46     		mov	r5, r3
 5475 2b32 1446     		mov	r4, r2
 5476 2b34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5477 2b36 2860     		str	r0, [r5]	@ unaligned
 5478 2b38 6960     		str	r1, [r5, #4]	@ unaligned
 5479 2b3a AA60     		str	r2, [r5, #8]	@ unaligned
 5480 2b3c EB60     		str	r3, [r5, #12]	@ unaligned
 5481 2b3e 2068     		ldr	r0, [r4]	@ unaligned
 5482 2b40 2861     		str	r0, [r5, #16]	@ unaligned
 782:..\src/command_processing.c ****                         case 1:
 5483              		.loc 1 782 0
 5484 2b42 18E0     		b	.L247
 5485              	.L249:
 784:..\src/command_processing.c ****                         break;
 5486              		.loc 1 784 0
 5487 2b44 07F13803 		add	r3, r7, #56
 5488 2b48 183B     		subs	r3, r3, #24
 5489 2b4a 1846     		mov	r0, r3
 5490 2b4c FFF7FEFF 		bl	strlen
 5491 2b50 0346     		mov	r3, r0
 5492 2b52 1A46     		mov	r2, r3
 5493 2b54 07F13803 		add	r3, r7, #56
 5494 2b58 183B     		subs	r3, r3, #24
 5495 2b5a 1344     		add	r3, r3, r2
 5496 2b5c 5A4A     		ldr	r2, .L301+40
 5497 2b5e 1D46     		mov	r5, r3
 5498 2b60 1446     		mov	r4, r2
 5499 2b62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5500 2b64 2860     		str	r0, [r5]	@ unaligned
 5501 2b66 6960     		str	r1, [r5, #4]	@ unaligned
 5502 2b68 AA60     		str	r2, [r5, #8]	@ unaligned
 5503 2b6a EB60     		str	r3, [r5, #12]	@ unaligned
 5504 2b6c 2068     		ldr	r0, [r4]	@ unaligned
 5505 2b6e 2861     		str	r0, [r5, #16]	@ unaligned
 5506 2b70 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5507 2b72 AB82     		strh	r3, [r5, #20]	@ unaligned
 785:..\src/command_processing.c ****                     }
 5508              		.loc 1 785 0
 5509 2b74 00BF     		nop
 5510              	.L247:
 5511              		.loc 1 787 0
 5512 2b76 69E1     		b	.L193
 5513              	.L204:
 788:..\src/command_processing.c ****                 case 10:    // device type menu
 789:..\src/command_processing.c ****                     switch(*m_addr){
 5514              		.loc 1 789 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 130


 5515 2b78 07F5B053 		add	r3, r7, #5632
 5516 2b7c 03F10803 		add	r3, r3, #8
 5517 2b80 1B68     		ldr	r3, [r3]
 5518 2b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5519 2b84 042B     		cmp	r3, #4
 5520 2b86 00F26081 		bhi	.L281
 5521 2b8a 01A2     		adr	r2, .L252
 5522 2b8c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5523              		.p2align 2
 5524              	.L252:
 5525 2b90 A52B0000 		.word	.L251+1
 5526 2b94 D12B0000 		.word	.L253+1
 5527 2b98 FF2B0000 		.word	.L254+1
 5528 2b9c 2B2C0000 		.word	.L255+1
 5529 2ba0 552C0000 		.word	.L256+1
 5530              		.p2align 1
 5531              	.L251:
 790:..\src/command_processing.c ****                         case 0:
 791:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5532              		.loc 1 791 0
 5533 2ba4 07F13803 		add	r3, r7, #56
 5534 2ba8 183B     		subs	r3, r3, #24
 5535 2baa 1846     		mov	r0, r3
 5536 2bac FFF7FEFF 		bl	strlen
 5537 2bb0 0346     		mov	r3, r0
 5538 2bb2 1A46     		mov	r2, r3
 5539 2bb4 07F13803 		add	r3, r7, #56
 5540 2bb8 183B     		subs	r3, r3, #24
 5541 2bba 1344     		add	r3, r3, r2
 5542 2bbc 434A     		ldr	r2, .L301+44
 5543 2bbe 1C46     		mov	r4, r3
 5544 2bc0 1346     		mov	r3, r2
 5545 2bc2 07CB     		ldmia	r3!, {r0, r1, r2}
 5546 2bc4 2060     		str	r0, [r4]	@ unaligned
 5547 2bc6 6160     		str	r1, [r4, #4]	@ unaligned
 5548 2bc8 A260     		str	r2, [r4, #8]	@ unaligned
 5549 2bca 1B88     		ldrh	r3, [r3]	@ unaligned
 5550 2bcc A381     		strh	r3, [r4, #12]	@ unaligned
 792:..\src/command_processing.c ****                         break;
 5551              		.loc 1 792 0
 5552 2bce 5BE0     		b	.L250
 5553              	.L253:
 793:..\src/command_processing.c ****                         case 1:
 794:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5554              		.loc 1 794 0
 5555 2bd0 07F13803 		add	r3, r7, #56
 5556 2bd4 183B     		subs	r3, r3, #24
 5557 2bd6 1846     		mov	r0, r3
 5558 2bd8 FFF7FEFF 		bl	strlen
 5559 2bdc 0346     		mov	r3, r0
 5560 2bde 1A46     		mov	r2, r3
 5561 2be0 07F13803 		add	r3, r7, #56
 5562 2be4 183B     		subs	r3, r3, #24
 5563 2be6 1344     		add	r3, r3, r2
 5564 2be8 394A     		ldr	r2, .L301+48
 5565 2bea 1D46     		mov	r5, r3
 5566 2bec 1446     		mov	r4, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 131


 5567 2bee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5568 2bf0 2860     		str	r0, [r5]	@ unaligned
 5569 2bf2 6960     		str	r1, [r5, #4]	@ unaligned
 5570 2bf4 AA60     		str	r2, [r5, #8]	@ unaligned
 5571 2bf6 EB60     		str	r3, [r5, #12]	@ unaligned
 5572 2bf8 2388     		ldrh	r3, [r4]	@ unaligned
 5573 2bfa 2B82     		strh	r3, [r5, #16]	@ unaligned
 795:..\src/command_processing.c ****                         break;
 5574              		.loc 1 795 0
 5575 2bfc 44E0     		b	.L250
 5576              	.L254:
 796:..\src/command_processing.c ****                         case 2:
 797:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5577              		.loc 1 797 0
 5578 2bfe 07F13803 		add	r3, r7, #56
 5579 2c02 183B     		subs	r3, r3, #24
 5580 2c04 1846     		mov	r0, r3
 5581 2c06 FFF7FEFF 		bl	strlen
 5582 2c0a 0346     		mov	r3, r0
 5583 2c0c 1A46     		mov	r2, r3
 5584 2c0e 07F13803 		add	r3, r7, #56
 5585 2c12 183B     		subs	r3, r3, #24
 5586 2c14 1344     		add	r3, r3, r2
 5587 2c16 2F4A     		ldr	r2, .L301+52
 5588 2c18 1C46     		mov	r4, r3
 5589 2c1a 1346     		mov	r3, r2
 5590 2c1c 07CB     		ldmia	r3!, {r0, r1, r2}
 5591 2c1e 2060     		str	r0, [r4]	@ unaligned
 5592 2c20 6160     		str	r1, [r4, #4]	@ unaligned
 5593 2c22 A260     		str	r2, [r4, #8]	@ unaligned
 5594 2c24 1B88     		ldrh	r3, [r3]	@ unaligned
 5595 2c26 A381     		strh	r3, [r4, #12]	@ unaligned
 798:..\src/command_processing.c ****                         break;
 5596              		.loc 1 798 0
 5597 2c28 2EE0     		b	.L250
 5598              	.L255:
 799:..\src/command_processing.c ****                         case 3:
 800:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5599              		.loc 1 800 0
 5600 2c2a 07F13803 		add	r3, r7, #56
 5601 2c2e 183B     		subs	r3, r3, #24
 5602 2c30 1846     		mov	r0, r3
 5603 2c32 FFF7FEFF 		bl	strlen
 5604 2c36 0346     		mov	r3, r0
 5605 2c38 1A46     		mov	r2, r3
 5606 2c3a 07F13803 		add	r3, r7, #56
 5607 2c3e 183B     		subs	r3, r3, #24
 5608 2c40 1344     		add	r3, r3, r2
 5609 2c42 254A     		ldr	r2, .L301+56
 5610 2c44 1C46     		mov	r4, r3
 5611 2c46 1546     		mov	r5, r2
 5612 2c48 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5613 2c4a 2060     		str	r0, [r4]	@ unaligned
 5614 2c4c 6160     		str	r1, [r4, #4]	@ unaligned
 5615 2c4e A260     		str	r2, [r4, #8]	@ unaligned
 5616 2c50 E360     		str	r3, [r4, #12]	@ unaligned
 801:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 132


 5617              		.loc 1 801 0
 5618 2c52 19E0     		b	.L250
 5619              	.L256:
 802:..\src/command_processing.c ****                         case 4:
 803:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5620              		.loc 1 803 0
 5621 2c54 07F13803 		add	r3, r7, #56
 5622 2c58 183B     		subs	r3, r3, #24
 5623 2c5a 1846     		mov	r0, r3
 5624 2c5c FFF7FEFF 		bl	strlen
 5625 2c60 0346     		mov	r3, r0
 5626 2c62 1A46     		mov	r2, r3
 5627 2c64 07F13803 		add	r3, r7, #56
 5628 2c68 183B     		subs	r3, r3, #24
 5629 2c6a 1344     		add	r3, r3, r2
 5630 2c6c 1B4A     		ldr	r2, .L301+60
 5631 2c6e 1D46     		mov	r5, r3
 5632 2c70 1446     		mov	r4, r2
 5633 2c72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5634 2c74 2860     		str	r0, [r5]	@ unaligned
 5635 2c76 6960     		str	r1, [r5, #4]	@ unaligned
 5636 2c78 AA60     		str	r2, [r5, #8]	@ unaligned
 5637 2c7a EB60     		str	r3, [r5, #12]	@ unaligned
 5638 2c7c 2388     		ldrh	r3, [r4]	@ unaligned
 5639 2c7e A278     		ldrb	r2, [r4, #2]
 5640 2c80 2B82     		strh	r3, [r5, #16]	@ unaligned
 5641 2c82 1346     		mov	r3, r2
 5642 2c84 AB74     		strb	r3, [r5, #18]
 804:..\src/command_processing.c ****                         break;
 5643              		.loc 1 804 0
 5644 2c86 00BF     		nop
 5645              	.L250:
 805:..\src/command_processing.c ****                     }
 806:..\src/command_processing.c ****                     break;
 5646              		.loc 1 806 0
 5647 2c88 DFE0     		b	.L281
 5648              	.L205:
 807:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 808:..\src/command_processing.c ****                     switch(*m_addr){
 5649              		.loc 1 808 0
 5650 2c8a 07F5B053 		add	r3, r7, #5632
 5651 2c8e 03F10803 		add	r3, r3, #8
 5652 2c92 1B68     		ldr	r3, [r3]
 5653 2c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5654 2c96 002B     		cmp	r3, #0
 5655 2c98 22D0     		beq	.L258
 5656 2c9a 012B     		cmp	r3, #1
 5657 2c9c 5AD0     		beq	.L259
 809:..\src/command_processing.c ****                         case 0:
 810:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 811:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 812:..\src/command_processing.c ****                             }
 813:..\src/command_processing.c ****                             else {
 814:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist, Slow:hand\0");
 815:..\src/command_processing.c ****                             }                            
 816:..\src/command_processing.c ****                         break;
 817:..\src/command_processing.c ****                         case 1:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 133


 818:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 819:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 820:..\src/command_processing.c ****                             }
 821:..\src/command_processing.c ****                             else {
 822:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist, Fast:hand\0");
 823:..\src/command_processing.c ****                             }
 824:..\src/command_processing.c ****                         break;
 825:..\src/command_processing.c ****                     }
 826:..\src/command_processing.c ****                     break;
 5658              		.loc 1 826 0
 5659 2c9e D5E0     		b	.L193
 5660              	.L302:
 5661              		.align	2
 5662              	.L301:
 5663 2ca0 EC000000 		.word	.LC106
 5664 2ca4 F4000000 		.word	.LC107
 5665 2ca8 04010000 		.word	.LC108
 5666 2cac 18010000 		.word	.LC109
 5667 2cb0 28010000 		.word	.LC110
 5668 2cb4 30010000 		.word	.LC111
 5669 2cb8 38010000 		.word	.LC112
 5670 2cbc 48010000 		.word	.LC113
 5671 2cc0 50010000 		.word	.LC114
 5672 2cc4 58010000 		.word	.LC115
 5673 2cc8 70010000 		.word	.LC116
 5674 2ccc 88010000 		.word	.LC117
 5675 2cd0 98010000 		.word	.LC118
 5676 2cd4 AC010000 		.word	.LC119
 5677 2cd8 BC010000 		.word	.LC120
 5678 2cdc D0010000 		.word	.LC121
 5679              	.L258:
 810:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5680              		.loc 1 810 0
 5681 2ce0 D24B     		ldr	r3, .L303
 5682 2ce2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5683 2ce6 042B     		cmp	r3, #4
 5684 2ce8 18D1     		bne	.L260
 811:..\src/command_processing.c ****                             }
 5685              		.loc 1 811 0
 5686 2cea 07F13803 		add	r3, r7, #56
 5687 2cee 183B     		subs	r3, r3, #24
 5688 2cf0 1846     		mov	r0, r3
 5689 2cf2 FFF7FEFF 		bl	strlen
 5690 2cf6 0346     		mov	r3, r0
 5691 2cf8 1A46     		mov	r2, r3
 5692 2cfa 07F13803 		add	r3, r7, #56
 5693 2cfe 183B     		subs	r3, r3, #24
 5694 2d00 1344     		add	r3, r3, r2
 5695 2d02 CB4A     		ldr	r2, .L303+4
 5696 2d04 1D46     		mov	r5, r3
 5697 2d06 1446     		mov	r4, r2
 5698 2d08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5699 2d0a 2860     		str	r0, [r5]	@ unaligned
 5700 2d0c 6960     		str	r1, [r5, #4]	@ unaligned
 5701 2d0e AA60     		str	r2, [r5, #8]	@ unaligned
 5702 2d10 EB60     		str	r3, [r5, #12]	@ unaligned
 5703 2d12 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 134


 5704 2d14 2861     		str	r0, [r5, #16]	@ unaligned
 5705 2d16 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5706 2d18 AB82     		strh	r3, [r5, #20]	@ unaligned
 816:..\src/command_processing.c ****                         case 1:
 5707              		.loc 1 816 0
 5708 2d1a 55E0     		b	.L257
 5709              	.L260:
 814:..\src/command_processing.c ****                             }                            
 5710              		.loc 1 814 0
 5711 2d1c 07F13803 		add	r3, r7, #56
 5712 2d20 183B     		subs	r3, r3, #24
 5713 2d22 1846     		mov	r0, r3
 5714 2d24 FFF7FEFF 		bl	strlen
 5715 2d28 0346     		mov	r3, r0
 5716 2d2a 1A46     		mov	r2, r3
 5717 2d2c 07F13803 		add	r3, r7, #56
 5718 2d30 183B     		subs	r3, r3, #24
 5719 2d32 1344     		add	r3, r3, r2
 5720 2d34 BF4A     		ldr	r2, .L303+8
 5721 2d36 1C46     		mov	r4, r3
 5722 2d38 1546     		mov	r5, r2
 5723 2d3a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5724 2d3c 2060     		str	r0, [r4]	@ unaligned
 5725 2d3e 6160     		str	r1, [r4, #4]	@ unaligned
 5726 2d40 A260     		str	r2, [r4, #8]	@ unaligned
 5727 2d42 E360     		str	r3, [r4, #12]	@ unaligned
 5728 2d44 2868     		ldr	r0, [r5]	@ unaligned
 5729 2d46 2061     		str	r0, [r4, #16]	@ unaligned
 5730 2d48 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5731 2d4a AA79     		ldrb	r2, [r5, #6]
 5732 2d4c A382     		strh	r3, [r4, #20]	@ unaligned
 5733 2d4e 1346     		mov	r3, r2
 5734 2d50 A375     		strb	r3, [r4, #22]
 816:..\src/command_processing.c ****                         case 1:
 5735              		.loc 1 816 0
 5736 2d52 39E0     		b	.L257
 5737              	.L259:
 818:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5738              		.loc 1 818 0
 5739 2d54 B54B     		ldr	r3, .L303
 5740 2d56 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5741 2d5a 042B     		cmp	r3, #4
 5742 2d5c 18D1     		bne	.L262
 819:..\src/command_processing.c ****                             }
 5743              		.loc 1 819 0
 5744 2d5e 07F13803 		add	r3, r7, #56
 5745 2d62 183B     		subs	r3, r3, #24
 5746 2d64 1846     		mov	r0, r3
 5747 2d66 FFF7FEFF 		bl	strlen
 5748 2d6a 0346     		mov	r3, r0
 5749 2d6c 1A46     		mov	r2, r3
 5750 2d6e 07F13803 		add	r3, r7, #56
 5751 2d72 183B     		subs	r3, r3, #24
 5752 2d74 1344     		add	r3, r3, r2
 5753 2d76 B04A     		ldr	r2, .L303+12
 5754 2d78 1D46     		mov	r5, r3
 5755 2d7a 1446     		mov	r4, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 135


 5756 2d7c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5757 2d7e 2860     		str	r0, [r5]	@ unaligned
 5758 2d80 6960     		str	r1, [r5, #4]	@ unaligned
 5759 2d82 AA60     		str	r2, [r5, #8]	@ unaligned
 5760 2d84 EB60     		str	r3, [r5, #12]	@ unaligned
 5761 2d86 2068     		ldr	r0, [r4]	@ unaligned
 5762 2d88 2861     		str	r0, [r5, #16]	@ unaligned
 5763 2d8a A388     		ldrh	r3, [r4, #4]	@ unaligned
 5764 2d8c AB82     		strh	r3, [r5, #20]	@ unaligned
 824:..\src/command_processing.c ****                     }
 5765              		.loc 1 824 0
 5766 2d8e 1AE0     		b	.L282
 5767              	.L262:
 822:..\src/command_processing.c ****                             }
 5768              		.loc 1 822 0
 5769 2d90 07F13803 		add	r3, r7, #56
 5770 2d94 183B     		subs	r3, r3, #24
 5771 2d96 1846     		mov	r0, r3
 5772 2d98 FFF7FEFF 		bl	strlen
 5773 2d9c 0346     		mov	r3, r0
 5774 2d9e 1A46     		mov	r2, r3
 5775 2da0 07F13803 		add	r3, r7, #56
 5776 2da4 183B     		subs	r3, r3, #24
 5777 2da6 1344     		add	r3, r3, r2
 5778 2da8 A44A     		ldr	r2, .L303+16
 5779 2daa 1C46     		mov	r4, r3
 5780 2dac 1546     		mov	r5, r2
 5781 2dae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5782 2db0 2060     		str	r0, [r4]	@ unaligned
 5783 2db2 6160     		str	r1, [r4, #4]	@ unaligned
 5784 2db4 A260     		str	r2, [r4, #8]	@ unaligned
 5785 2db6 E360     		str	r3, [r4, #12]	@ unaligned
 5786 2db8 2868     		ldr	r0, [r5]	@ unaligned
 5787 2dba 2061     		str	r0, [r4, #16]	@ unaligned
 5788 2dbc AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5789 2dbe AA79     		ldrb	r2, [r5, #6]
 5790 2dc0 A382     		strh	r3, [r4, #20]	@ unaligned
 5791 2dc2 1346     		mov	r3, r2
 5792 2dc4 A375     		strb	r3, [r4, #22]
 5793              	.L282:
 824:..\src/command_processing.c ****                     }
 5794              		.loc 1 824 0
 5795 2dc6 00BF     		nop
 5796              	.L257:
 5797              		.loc 1 826 0 discriminator 13
 5798 2dc8 40E0     		b	.L193
 5799              	.L206:
 827:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 828:..\src/command_processing.c ****                     switch(*m_addr){
 5800              		.loc 1 828 0
 5801 2dca 07F5B053 		add	r3, r7, #5632
 5802 2dce 03F10803 		add	r3, r3, #8
 5803 2dd2 1B68     		ldr	r3, [r3]
 5804 2dd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5805 2dd6 002B     		cmp	r3, #0
 5806 2dd8 02D0     		beq	.L265
 5807 2dda 012B     		cmp	r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 136


 5808 2ddc 17D0     		beq	.L266
 829:..\src/command_processing.c ****                         case 0:
 830:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 831:..\src/command_processing.c ****                         break;
 832:..\src/command_processing.c ****                         case 1:
 833:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 834:..\src/command_processing.c ****                         break;
 835:..\src/command_processing.c ****                     }
 836:..\src/command_processing.c ****                     break;
 5809              		.loc 1 836 0
 5810 2dde 35E0     		b	.L193
 5811              	.L265:
 830:..\src/command_processing.c ****                         break;
 5812              		.loc 1 830 0
 5813 2de0 07F13803 		add	r3, r7, #56
 5814 2de4 183B     		subs	r3, r3, #24
 5815 2de6 1846     		mov	r0, r3
 5816 2de8 FFF7FEFF 		bl	strlen
 5817 2dec 0346     		mov	r3, r0
 5818 2dee 1A46     		mov	r2, r3
 5819 2df0 07F13803 		add	r3, r7, #56
 5820 2df4 183B     		subs	r3, r3, #24
 5821 2df6 1344     		add	r3, r3, r2
 5822 2df8 914A     		ldr	r2, .L303+20
 5823 2dfa 1D46     		mov	r5, r3
 5824 2dfc 1446     		mov	r4, r2
 5825 2dfe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5826 2e00 2860     		str	r0, [r5]	@ unaligned
 5827 2e02 6960     		str	r1, [r5, #4]	@ unaligned
 5828 2e04 AA60     		str	r2, [r5, #8]	@ unaligned
 5829 2e06 EB60     		str	r3, [r5, #12]	@ unaligned
 5830 2e08 2068     		ldr	r0, [r4]	@ unaligned
 5831 2e0a 2861     		str	r0, [r5, #16]	@ unaligned
 831:..\src/command_processing.c ****                         case 1:
 5832              		.loc 1 831 0
 5833 2e0c 16E0     		b	.L264
 5834              	.L266:
 833:..\src/command_processing.c ****                         break;
 5835              		.loc 1 833 0
 5836 2e0e 07F13803 		add	r3, r7, #56
 5837 2e12 183B     		subs	r3, r3, #24
 5838 2e14 1846     		mov	r0, r3
 5839 2e16 FFF7FEFF 		bl	strlen
 5840 2e1a 0346     		mov	r3, r0
 5841 2e1c 1A46     		mov	r2, r3
 5842 2e1e 07F13803 		add	r3, r7, #56
 5843 2e22 183B     		subs	r3, r3, #24
 5844 2e24 1344     		add	r3, r3, r2
 5845 2e26 874A     		ldr	r2, .L303+24
 5846 2e28 1D46     		mov	r5, r3
 5847 2e2a 1446     		mov	r4, r2
 5848 2e2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5849 2e2e 2860     		str	r0, [r5]	@ unaligned
 5850 2e30 6960     		str	r1, [r5, #4]	@ unaligned
 5851 2e32 AA60     		str	r2, [r5, #8]	@ unaligned
 5852 2e34 EB60     		str	r3, [r5, #12]	@ unaligned
 5853 2e36 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 137


 5854 2e38 2861     		str	r0, [r5, #16]	@ unaligned
 834:..\src/command_processing.c ****                     }
 5855              		.loc 1 834 0
 5856 2e3a 00BF     		nop
 5857              	.L264:
 5858              		.loc 1 836 0
 5859 2e3c 06E0     		b	.L193
 5860              	.L278:
 689:..\src/command_processing.c ****                 case 2:     // control mode menu
 5861              		.loc 1 689 0
 5862 2e3e 00BF     		nop
 5863 2e40 04E0     		b	.L193
 5864              	.L279:
 705:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5865              		.loc 1 705 0
 5866 2e42 00BF     		nop
 5867 2e44 02E0     		b	.L193
 5868              	.L280:
 749:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5869              		.loc 1 749 0
 5870 2e46 00BF     		nop
 5871 2e48 00E0     		b	.L193
 5872              	.L281:
 806:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 5873              		.loc 1 806 0
 5874 2e4a 00BF     		nop
 5875              	.L193:
 837:..\src/command_processing.c ****             }
 838:..\src/command_processing.c ****             //Recomputes string lenght
 839:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5876              		.loc 1 839 0
 5877 2e4c 07F13803 		add	r3, r7, #56
 5878 2e50 183B     		subs	r3, r3, #24
 5879 2e52 1846     		mov	r0, r3
 5880 2e54 FFF7FEFF 		bl	strlen
 5881 2e58 0346     		mov	r3, r0
 5882 2e5a DBB2     		uxtb	r3, r3
 5883 2e5c 0133     		adds	r3, r3, #1
 5884 2e5e 07F5B052 		add	r2, r7, #5632
 5885 2e62 02F11202 		add	r2, r2, #18
 5886 2e66 1370     		strb	r3, [r2]
 5887              	.L192:
 840:..\src/command_processing.c ****         }
 841:..\src/command_processing.c **** 
 842:..\src/command_processing.c ****         // Add parameter string to packet
 843:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5888              		.loc 1 843 0
 5889 2e68 07F5B053 		add	r3, r7, #5632
 5890 2e6c 03F11203 		add	r3, r3, #18
 5891 2e70 1B78     		ldrb	r3, [r3]
 5892 2e72 07F5B052 		add	r2, r7, #5632
 5893 2e76 02F11702 		add	r2, r2, #23
 5894 2e7a 1370     		strb	r3, [r2]
 5895 2e7c 45E0     		b	.L267
 5896              	.L268:
 844:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5897              		.loc 1 844 0 discriminator 3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 138


 5898 2e7e 07F5B053 		add	r3, r7, #5632
 5899 2e82 03F11503 		add	r3, r3, #21
 5900 2e86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5901 2e88 3222     		movs	r2, #50
 5902 2e8a 02FB03F3 		mul	r3, r2, r3
 5903 2e8e 1A1D     		adds	r2, r3, #4
 5904 2e90 07F5B053 		add	r3, r7, #5632
 5905 2e94 03F11303 		add	r3, r3, #19
 5906 2e98 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5907 2e9a 07F5B053 		add	r3, r7, #5632
 5908 2e9e 03F11503 		add	r3, r3, #21
 5909 2ea2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5910 2ea4 07F11803 		add	r3, r7, #24
 5911 2ea8 143B     		subs	r3, r3, #20
 5912 2eaa 1B68     		ldr	r3, [r3]
 5913 2eac 0344     		add	r3, r3, r0
 5914 2eae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5915 2eb0 03FB01F3 		mul	r3, r3, r1
 5916 2eb4 1A44     		add	r2, r2, r3
 5917 2eb6 07F5B053 		add	r3, r7, #5632
 5918 2eba 03F11203 		add	r3, r3, #18
 5919 2ebe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5920 2ec0 1A44     		add	r2, r2, r3
 5921 2ec2 07F5B053 		add	r3, r7, #5632
 5922 2ec6 03F11703 		add	r3, r3, #23
 5923 2eca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5924 2ecc D21A     		subs	r2, r2, r3
 5925 2ece 07F5B053 		add	r3, r7, #5632
 5926 2ed2 03F11203 		add	r3, r3, #18
 5927 2ed6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5928 2ed8 07F5B053 		add	r3, r7, #5632
 5929 2edc 03F11703 		add	r3, r3, #23
 5930 2ee0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5931 2ee2 C91A     		subs	r1, r1, r3
 5932 2ee4 07F13803 		add	r3, r7, #56
 5933 2ee8 183B     		subs	r3, r3, #24
 5934 2eea 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5935 2eec 07F15803 		add	r3, r7, #88
 5936 2ef0 043B     		subs	r3, r3, #4
 5937 2ef2 9954     		strb	r1, [r3, r2]
 843:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5938              		.loc 1 843 0 discriminator 3
 5939 2ef4 07F5B053 		add	r3, r7, #5632
 5940 2ef8 03F11703 		add	r3, r3, #23
 5941 2efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5942 2efe 013B     		subs	r3, r3, #1
 5943 2f00 07F5B052 		add	r2, r7, #5632
 5944 2f04 02F11702 		add	r2, r2, #23
 5945 2f08 1370     		strb	r3, [r2]
 5946              	.L267:
 843:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5947              		.loc 1 843 0 is_stmt 0 discriminator 1
 5948 2f0a 07F5B053 		add	r3, r7, #5632
 5949 2f0e 03F11703 		add	r3, r3, #23
 5950 2f12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5951 2f14 002B     		cmp	r3, #0
 5952 2f16 B2D1     		bne	.L268
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 139


 845:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 846:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5953              		.loc 1 846 0 is_stmt 1
 5954 2f18 07F5B053 		add	r3, r7, #5632
 5955 2f1c 03F11503 		add	r3, r3, #21
 5956 2f20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5957 2f22 07F11803 		add	r3, r7, #24
 5958 2f26 103B     		subs	r3, r3, #16
 5959 2f28 1B68     		ldr	r3, [r3]
 5960 2f2a 1344     		add	r3, r3, r2
 5961 2f2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5962 2f2e 002B     		cmp	r3, #0
 5963 2f30 3CD1     		bne	.L269
 847:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5964              		.loc 1 847 0
 5965 2f32 07F5B053 		add	r3, r7, #5632
 5966 2f36 03F11503 		add	r3, r3, #21
 5967 2f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5968 2f3c 3222     		movs	r2, #50
 5969 2f3e 02FB03F3 		mul	r3, r2, r3
 5970 2f42 1A1D     		adds	r2, r3, #4
 5971 2f44 07F5B053 		add	r3, r7, #5632
 5972 2f48 03F11303 		add	r3, r3, #19
 5973 2f4c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5974 2f4e 07F5B053 		add	r3, r7, #5632
 5975 2f52 03F11503 		add	r3, r3, #21
 5976 2f56 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5977 2f58 07F11803 		add	r3, r7, #24
 5978 2f5c 143B     		subs	r3, r3, #20
 5979 2f5e 1B68     		ldr	r3, [r3]
 5980 2f60 0344     		add	r3, r3, r0
 5981 2f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5982 2f64 03FB01F3 		mul	r3, r3, r1
 5983 2f68 1A44     		add	r2, r2, r3
 5984 2f6a 07F5B053 		add	r3, r7, #5632
 5985 2f6e 03F11203 		add	r3, r3, #18
 5986 2f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5987 2f74 1A44     		add	r2, r2, r3
 5988 2f76 07F5B053 		add	r3, r7, #5632
 5989 2f7a 03F11403 		add	r3, r3, #20
 5990 2f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5991 2f80 07F5B151 		add	r1, r7, #5664
 5992 2f84 01F11001 		add	r1, r1, #16
 5993 2f88 0968     		ldr	r1, [r1]
 5994 2f8a 0B44     		add	r3, r3, r1
 5995 2f8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5996 2f8e 07F15803 		add	r3, r7, #88
 5997 2f92 043B     		subs	r3, r3, #4
 5998 2f94 9954     		strb	r1, [r3, r2]
 848:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5999              		.loc 1 848 0
 6000 2f96 07F5B053 		add	r3, r7, #5632
 6001 2f9a 03F11403 		add	r3, r3, #20
 6002 2f9e 1B78     		ldrb	r3, [r3]
 6003 2fa0 0133     		adds	r3, r3, #1
 6004 2fa2 07F5B052 		add	r2, r7, #5632
 6005 2fa6 02F11402 		add	r2, r2, #20
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 140


 6006 2faa 1370     		strb	r3, [r2]
 6007              	.L269:
 849:..\src/command_processing.c ****         }      
 850:..\src/command_processing.c ****         
 851:..\src/command_processing.c ****         // Add struct index after an empty bit
 852:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 853:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6008              		.loc 1 853 0
 6009 2fac 07F5B053 		add	r3, r7, #5632
 6010 2fb0 03F11503 		add	r3, r3, #21
 6011 2fb4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6012 2fb6 07F11803 		add	r3, r7, #24
 6013 2fba 103B     		subs	r3, r3, #16
 6014 2fbc 1B68     		ldr	r3, [r3]
 6015 2fbe 1344     		add	r3, r3, r2
 6016 2fc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6017 2fc2 002B     		cmp	r3, #0
 6018 2fc4 40D1     		bne	.L270
 854:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 6019              		.loc 1 854 0
 6020 2fc6 07F5B053 		add	r3, r7, #5632
 6021 2fca 03F11503 		add	r3, r3, #21
 6022 2fce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6023 2fd0 3222     		movs	r2, #50
 6024 2fd2 02FB03F3 		mul	r3, r2, r3
 6025 2fd6 1A1D     		adds	r2, r3, #4
 6026 2fd8 07F5B053 		add	r3, r7, #5632
 6027 2fdc 03F11303 		add	r3, r3, #19
 6028 2fe0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6029 2fe2 07F5B053 		add	r3, r7, #5632
 6030 2fe6 03F11503 		add	r3, r3, #21
 6031 2fea 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6032 2fec 07F11803 		add	r3, r7, #24
 6033 2ff0 143B     		subs	r3, r3, #20
 6034 2ff2 1B68     		ldr	r3, [r3]
 6035 2ff4 0344     		add	r3, r3, r0
 6036 2ff6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6037 2ff8 03FB01F3 		mul	r3, r3, r1
 6038 2ffc 1A44     		add	r2, r2, r3
 6039 2ffe 07F5B053 		add	r3, r7, #5632
 6040 3002 03F11203 		add	r3, r3, #18
 6041 3006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6042 3008 1344     		add	r3, r3, r2
 6043 300a 9A1C     		adds	r2, r3, #2
 6044 300c 07F5B053 		add	r3, r7, #5632
 6045 3010 03F11503 		add	r3, r3, #21
 6046 3014 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6047 3016 07F11803 		add	r3, r7, #24
 6048 301a 183B     		subs	r3, r3, #24
 6049 301c 1B68     		ldr	r3, [r3]
 6050 301e 0B44     		add	r3, r3, r1
 6051 3020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6052 3022 07F15803 		add	r3, r7, #88
 6053 3026 043B     		subs	r3, r3, #4
 6054 3028 9954     		strb	r1, [r3, r2]
 6055 302a 3FE0     		b	.L271
 6056              	.L304:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 141


 6057              		.align	2
 6058              	.L303:
 6059 302c 00000000 		.word	c_mem
 6060 3030 E4010000 		.word	.LC122
 6061 3034 FC010000 		.word	.LC123
 6062 3038 14020000 		.word	.LC124
 6063 303c 2C020000 		.word	.LC125
 6064 3040 44020000 		.word	.LC126
 6065 3044 5C020000 		.word	.LC127
 6066              	.L270:
 855:..\src/command_processing.c ****         }
 856:..\src/command_processing.c ****         else {
 857:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 6067              		.loc 1 857 0
 6068 3048 07F5B053 		add	r3, r7, #5632
 6069 304c 03F11503 		add	r3, r3, #21
 6070 3050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6071 3052 3222     		movs	r2, #50
 6072 3054 02FB03F3 		mul	r3, r2, r3
 6073 3058 1A1D     		adds	r2, r3, #4
 6074 305a 07F5B053 		add	r3, r7, #5632
 6075 305e 03F11303 		add	r3, r3, #19
 6076 3062 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6077 3064 07F5B053 		add	r3, r7, #5632
 6078 3068 03F11503 		add	r3, r3, #21
 6079 306c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6080 306e 07F11803 		add	r3, r7, #24
 6081 3072 143B     		subs	r3, r3, #20
 6082 3074 1B68     		ldr	r3, [r3]
 6083 3076 0344     		add	r3, r3, r0
 6084 3078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6085 307a 03FB01F3 		mul	r3, r3, r1
 6086 307e 1A44     		add	r2, r2, r3
 6087 3080 07F5B053 		add	r3, r7, #5632
 6088 3084 03F11203 		add	r3, r3, #18
 6089 3088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6090 308a 1344     		add	r3, r3, r2
 6091 308c 5A1C     		adds	r2, r3, #1
 6092 308e 07F5B053 		add	r3, r7, #5632
 6093 3092 03F11503 		add	r3, r3, #21
 6094 3096 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6095 3098 07F11803 		add	r3, r7, #24
 6096 309c 183B     		subs	r3, r3, #24
 6097 309e 1B68     		ldr	r3, [r3]
 6098 30a0 0B44     		add	r3, r3, r1
 6099 30a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6100 30a4 07F15803 		add	r3, r7, #88
 6101 30a8 043B     		subs	r3, r3, #4
 6102 30aa 9954     		strb	r1, [r3, r2]
 6103              	.L271:
 392:..\src/command_processing.c ****         
 6104              		.loc 1 392 0 discriminator 2
 6105 30ac 07F5B053 		add	r3, r7, #5632
 6106 30b0 03F11503 		add	r3, r3, #21
 6107 30b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6108 30b6 0133     		adds	r3, r3, #1
 6109 30b8 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 142


 6110 30bc 02F11502 		add	r2, r2, #21
 6111 30c0 1370     		strb	r3, [r2]
 6112              	.L70:
 392:..\src/command_processing.c ****         
 6113              		.loc 1 392 0 is_stmt 0 discriminator 1
 6114 30c2 07F5B053 		add	r3, r7, #5632
 6115 30c6 03F11503 		add	r3, r3, #21
 6116 30ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6117 30cc 4C2B     		cmp	r3, #76
 6118 30ce 7DF60EA8 		bls	.L272
 858:..\src/command_processing.c ****         }
 859:..\src/command_processing.c ****     }
 860:..\src/command_processing.c **** 
 861:..\src/command_processing.c ****     // Add menu
 862:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6119              		.loc 1 862 0 is_stmt 1
 6120 30d2 0023     		movs	r3, #0
 6121 30d4 07F5B052 		add	r2, r7, #5632
 6122 30d8 02F11602 		add	r2, r2, #22
 6123 30dc 1370     		strb	r3, [r2]
 6124 30de 71E0     		b	.L273
 6125              	.L276:
 863:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6126              		.loc 1 863 0
 6127 30e0 07F5B053 		add	r3, r7, #5632
 6128 30e4 03F11603 		add	r3, r3, #22
 6129 30e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6130 30ea 9B00     		lsls	r3, r3, #2
 6131 30ec 07F5B152 		add	r2, r7, #5664
 6132 30f0 02F11C02 		add	r2, r2, #28
 6133 30f4 1268     		ldr	r2, [r2]
 6134 30f6 1344     		add	r3, r3, r2
 6135 30f8 1B68     		ldr	r3, [r3]
 6136 30fa 1846     		mov	r0, r3
 6137 30fc FFF7FEFF 		bl	strlen
 6138 3100 0346     		mov	r3, r0
 6139 3102 07F5B052 		add	r2, r7, #5632
 6140 3106 02F11202 		add	r2, r2, #18
 6141 310a 1370     		strb	r3, [r2]
 864:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6142              		.loc 1 864 0
 6143 310c 07F5B053 		add	r3, r7, #5632
 6144 3110 03F11203 		add	r3, r3, #18
 6145 3114 1B78     		ldrb	r3, [r3]
 6146 3116 07F5B052 		add	r2, r7, #5632
 6147 311a 02F11702 		add	r2, r2, #23
 6148 311e 1370     		strb	r3, [r2]
 6149 3120 3EE0     		b	.L274
 6150              	.L275:
 865:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6151              		.loc 1 865 0 discriminator 3
 6152 3122 07F5B053 		add	r3, r7, #5632
 6153 3126 03F11603 		add	r3, r3, #22
 6154 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6155 312c 9622     		movs	r2, #150
 6156 312e 02FB03F3 		mul	r3, r2, r3
 6157 3132 03F60C72 		addw	r2, r3, #3852
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 143


 6158 3136 07F5B053 		add	r3, r7, #5632
 6159 313a 03F11203 		add	r3, r3, #18
 6160 313e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6161 3140 1A44     		add	r2, r2, r3
 6162 3142 07F5B053 		add	r3, r7, #5632
 6163 3146 03F11703 		add	r3, r3, #23
 6164 314a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6165 314c D21A     		subs	r2, r2, r3
 6166 314e 07F5B053 		add	r3, r7, #5632
 6167 3152 03F11603 		add	r3, r3, #22
 6168 3156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6169 3158 9B00     		lsls	r3, r3, #2
 6170 315a 07F5B151 		add	r1, r7, #5664
 6171 315e 01F11C01 		add	r1, r1, #28
 6172 3162 0968     		ldr	r1, [r1]
 6173 3164 0B44     		add	r3, r3, r1
 6174 3166 1B68     		ldr	r3, [r3]
 6175 3168 07F5B051 		add	r1, r7, #5632
 6176 316c 01F11201 		add	r1, r1, #18
 6177 3170 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6178 3172 07F5B051 		add	r1, r7, #5632
 6179 3176 01F11701 		add	r1, r1, #23
 6180 317a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6181 317c 411A     		subs	r1, r0, r1
 6182 317e 0B44     		add	r3, r3, r1
 6183 3180 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6184 3182 07F15803 		add	r3, r7, #88
 6185 3186 043B     		subs	r3, r3, #4
 6186 3188 9954     		strb	r1, [r3, r2]
 864:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6187              		.loc 1 864 0 discriminator 3
 6188 318a 07F5B053 		add	r3, r7, #5632
 6189 318e 03F11703 		add	r3, r3, #23
 6190 3192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6191 3194 013B     		subs	r3, r3, #1
 6192 3196 07F5B052 		add	r2, r7, #5632
 6193 319a 02F11702 		add	r2, r2, #23
 6194 319e 1370     		strb	r3, [r2]
 6195              	.L274:
 864:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6196              		.loc 1 864 0 is_stmt 0 discriminator 1
 6197 31a0 07F5B053 		add	r3, r7, #5632
 6198 31a4 03F11703 		add	r3, r3, #23
 6199 31a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6200 31aa 002B     		cmp	r3, #0
 6201 31ac B9D1     		bne	.L275
 862:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6202              		.loc 1 862 0 is_stmt 1 discriminator 2
 6203 31ae 07F5B053 		add	r3, r7, #5632
 6204 31b2 03F11603 		add	r3, r3, #22
 6205 31b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6206 31b8 0133     		adds	r3, r3, #1
 6207 31ba 07F5B052 		add	r2, r7, #5632
 6208 31be 02F11602 		add	r2, r2, #22
 6209 31c2 1370     		strb	r3, [r2]
 6210              	.L273:
 862:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 144


 6211              		.loc 1 862 0 is_stmt 0 discriminator 1
 6212 31c4 07F5B053 		add	r3, r7, #5632
 6213 31c8 03F11603 		add	r3, r3, #22
 6214 31cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6215 31ce 0A2B     		cmp	r3, #10
 6216 31d0 86D9     		bls	.L276
 866:..\src/command_processing.c ****     }
 867:..\src/command_processing.c ****     
 868:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6217              		.loc 1 868 0 is_stmt 1
 6218 31d2 07F5B053 		add	r3, r7, #5632
 6219 31d6 03F11003 		add	r3, r3, #16
 6220 31da 1B88     		ldrh	r3, [r3]
 6221 31dc 5C1E     		subs	r4, r3, #1
 6222 31de 07F5B053 		add	r3, r7, #5632
 6223 31e2 03F11003 		add	r3, r3, #16
 6224 31e6 1B88     		ldrh	r3, [r3]	@ movhi
 6225 31e8 DBB2     		uxtb	r3, r3
 6226 31ea 013B     		subs	r3, r3, #1
 6227 31ec DAB2     		uxtb	r2, r3
 6228 31ee 07F15803 		add	r3, r7, #88
 6229 31f2 043B     		subs	r3, r3, #4
 6230 31f4 1146     		mov	r1, r2
 6231 31f6 1846     		mov	r0, r3
 6232 31f8 FFF7FEFF 		bl	LCRChecksum
 6233 31fc 0346     		mov	r3, r0
 6234 31fe 1A46     		mov	r2, r3
 6235 3200 07F15803 		add	r3, r7, #88
 6236 3204 043B     		subs	r3, r3, #4
 6237 3206 1A55     		strb	r2, [r3, r4]
 869:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6238              		.loc 1 869 0
 6239 3208 07F5B053 		add	r3, r7, #5632
 6240 320c 03F11003 		add	r3, r3, #16
 6241 3210 1A88     		ldrh	r2, [r3]
 6242 3212 07F15803 		add	r3, r7, #88
 6243 3216 043B     		subs	r3, r3, #4
 6244 3218 1146     		mov	r1, r2
 6245 321a 1846     		mov	r0, r3
 6246 321c FFF7FEFF 		bl	commWrite
 870:..\src/command_processing.c **** }
 6247              		.loc 1 870 0
 6248 3220 00BF     		nop
 6249 3222 07F5B057 		add	r7, r7, #5632
 6250 3226 1C37     		adds	r7, r7, #28
 6251              		.cfi_def_cfa_offset 20
 6252 3228 BD46     		mov	sp, r7
 6253              		.cfi_def_cfa_register 13
 6254              		@ sp needed
 6255 322a F0BD     		pop	{r4, r5, r6, r7, pc}
 6256              		.cfi_endproc
 6257              	.LFE67:
 6258              		.size	get_param_list, .-get_param_list
 6259              		.section	.rodata
 6260 0271 000000   		.align	2
 6261              	.LC129:
 6262 0274 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 145


 6262      204E6F6E 
 6262      650A3120 
 6262      2D3E204C 
 6262      6F772028 
 6263 02a4 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6263      74657220 
 6263      72656164 
 6263      290A3220 
 6263      2D3E2048 
 6264 02d4 62697420 		.ascii	"bit register read)\012\000"
 6264      72656769 
 6264      73746572 
 6264      20726561 
 6264      64290A00 
 6265              		.align	2
 6266              	.LC130:
 6267 02e8 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6267      20466173 
 6267      743A7379 
 6267      6E322C20 
 6267      536C6F77 
 6268 0318 796E310A 		.ascii	"yn1\012\000"
 6268      00
 6269 031d 000000   		.align	2
 6270              	.LC131:
 6271 0320 30202D3E 		.ascii	"0 -> Fast:wrist, Slow:hand\0121 -> Slow:wrist, Fast"
 6271      20466173 
 6271      743A7772 
 6271      6973742C 
 6271      20536C6F 
 6272 0350 3A68616E 		.ascii	":hand\012\000"
 6272      640A00
 6273 0357 00       		.align	2
 6274              	.LC132:
 6275 0358 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6275      20557362 
 6275      0A31202D 
 6275      3E204861 
 6275      6E646C65 
 6276 0383 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6276      20454D47 
 6276      20496E74 
 6276      65677261 
 6276      6C0A3420 
 6277 03b0 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6277      616E6365 
 6277      640A3620 
 6277      2D3E204A 
 6277      6F797374 
 6278 03dd 204E430A 		.ascii	" NC\012\000"
 6278      00
 6279 03e2 0000     		.align	2
 6280              	.LC133:
 6281 03e4 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6281      20506F73 
 6281      6974696F 
 6281      6E0A3120 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 146


 6281      2D3E2050 
 6282 040e 6F736974 		.ascii	"osition and Current\012\000"
 6282      696F6E20 
 6282      616E6420 
 6282      43757272 
 6282      656E740A 
 6283 0423 00       		.align	2
 6284              	.LC134:
 6285 0424 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6285      20446561 
 6285      63746976 
 6285      61746520 
 6285      5B4E4F5D 
 6286 044e 0000     		.align	2
 6287              	.LC135:
 6288 0450 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6288      20526967 
 6288      68740A31 
 6288      202D3E20 
 6288      4C656674 
 6289 0466 0000     		.align	2
 6290              	.LC136:
 6291 0468 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6291      204F4646 
 6291      0A31202D 
 6291      3E204F4E 
 6291      0A546865 
 6292 048f 00       		.align	2
 6293              	.LC137:
 6294 0490 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6294      204E6F6E 
 6294      650A3120 
 6294      2D3E2053 
 6294      442F5254 
 6295 04bd 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6295      0A33202D 
 6295      3E204F74 
 6295      68657220 
 6295      5B4E2F41 
 6296 04e8 00       		.ascii	"\000"
 6297 04e9 000000   		.align	2
 6298              	.LC138:
 6299 04ec 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 6299      2047656E 
 6299      65726963 
 6299      20757365 
 6299      720A3120 
 6300 0516 20626F61 		.ascii	" board will reset\012\000"
 6300      72642077 
 6300      696C6C20 
 6300      72657365 
 6300      740A00
 6301 0529 000000   		.align	2
 6302              	.LC139:
 6303 052c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6303      204D4333 
 6303      33383837 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 147


 6303      20285374 
 6303      616E6461 
 6304 055c 290A5468 		.ascii	")\012The board will reset\012\000"
 6304      6520626F 
 6304      61726420 
 6304      77696C6C 
 6304      20726573 
 6305              		.align	2
 6306              	.LC140:
 6307 0574 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6307      20534F46 
 6307      5448414E 
 6307      44205052 
 6307      4F0A3120 
 6308 05a1 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6308      4348414D 
 6308      42455253 
 6308      0A33202D 
 6308      3E204F54 
 6309 05ce 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6309      4D4F544F 
 6309      52530A54 
 6309      68652062 
 6309      6F617264 
 6310 05ef 00       		.align	2
 6311              	.LC141:
 6312 05f0 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6312      20436C6F 
 6312      73653A43 
 6312      572C204F 
 6312      70656E3A 
 6313 0620 00       		.ascii	"\000"
 6314 0621 000000   		.align	2
 6315              	.LC0:
 6316 0624 02       		.byte	2
 6317 0625 07       		.byte	7
 6318 0626 07       		.byte	7
 6319 0627 00       		.byte	0
 6320 0628 00       		.byte	0
 6321 0629 00       		.byte	0
 6322 062a 02       		.byte	2
 6323 062b 03       		.byte	3
 6324 062c 07       		.byte	7
 6325 062d 00       		.byte	0
 6326 062e 05       		.byte	5
 6327 062f 05       		.byte	5
 6328 0630 03       		.byte	3
 6329 0631 04       		.byte	4
 6330 0632 00       		.byte	0
 6331 0633 06       		.byte	6
 6332 0634 02       		.byte	2
 6333 0635 00       		.byte	0
 6334 0636 01       		.byte	1
 6335 0637 00       		.byte	0
 6336 0638 07       		.byte	7
 6337 0639 02       		.byte	2
 6338 063a 05       		.byte	5
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 148


 6339 063b 05       		.byte	5
 6340 063c 05       		.byte	5
 6341 063d 00       		.byte	0
 6342 063e 00       		.byte	0
 6343 063f 00       		.byte	0
 6344 0640 00       		.byte	0
 6345 0641 00       		.byte	0
 6346 0642 00       		.byte	0
 6347 0643 02       		.byte	2
 6348 0644 00       		.byte	0
 6349 0645 02       		.byte	2
 6350 0646 00       		.byte	0
 6351 0647 09       		.byte	9
 6352 0648 02       		.byte	2
 6353 0649 00       		.byte	0
 6354 064a 02       		.byte	2
 6355 064b 00       		.byte	0
 6356 064c 02       		.byte	2
 6357 064d 01       		.byte	1
 6358 064e 00       		.byte	0
 6359 064f 07       		.byte	7
 6360 0650 07       		.byte	7
 6361 0651 00       		.byte	0
 6362 0652 00       		.byte	0
 6363 0653 00       		.byte	0
 6364 0654 02       		.byte	2
 6365 0655 03       		.byte	3
 6366 0656 07       		.byte	7
 6367 0657 00       		.byte	0
 6368 0658 05       		.byte	5
 6369 0659 05       		.byte	5
 6370 065a 03       		.byte	3
 6371 065b 00       		.byte	0
 6372 065c 01       		.byte	1
 6373 065d 00       		.byte	0
 6374 065e 07       		.byte	7
 6375 065f 02       		.byte	2
 6376 0660 00       		.byte	0
 6377 0661 02       		.byte	2
 6378 0662 00       		.byte	0
 6379 0663 02       		.byte	2
 6380 0664 01       		.byte	1
 6381 0665 02       		.byte	2
 6382 0666 02       		.byte	2
 6383 0667 00       		.byte	0
 6384 0668 02       		.byte	2
 6385 0669 02       		.byte	2
 6386 066a 00       		.byte	0
 6387 066b 04       		.byte	4
 6388 066c 03       		.byte	3
 6389 066d 04       		.byte	4
 6390 066e 00       		.byte	0
 6391 066f 00       		.byte	0
 6392 0670 04       		.byte	4
 6393 0671 00       		.byte	0
 6394 0672 00       		.byte	0
 6395 0673 02       		.byte	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 149


 6396 0674 05       		.byte	5
 6397 0675 07       		.byte	7
 6398 0676 07       		.byte	7
 6399 0677 00       		.align	2
 6400              	.LC1:
 6401 0678 31202D20 		.ascii	"1 - Device ID:\000"
 6401      44657669 
 6401      63652049 
 6401      443A00
 6402 0687 00       		.align	2
 6403              	.LC2:
 6404 0688 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6404      506F7369 
 6404      74696F6E 
 6404      20504944 
 6404      205B502C 
 6405              		.align	2
 6406              	.LC3:
 6407 06a4 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6407      43757272 
 6407      656E7420 
 6407      50494420 
 6407      5B502C20 
 6408 06bf 00       		.align	2
 6409              	.LC4:
 6410 06c0 34202D20 		.ascii	"4 - Startup Activation:\000"
 6410      53746172 
 6410      74757020 
 6410      41637469 
 6410      76617469 
 6411              		.align	2
 6412              	.LC5:
 6413 06d8 35202D20 		.ascii	"5 - Input mode:\000"
 6413      496E7075 
 6413      74206D6F 
 6413      64653A00 
 6414              		.align	2
 6415              	.LC6:
 6416 06e8 36202D20 		.ascii	"6 - Control mode:\000"
 6416      436F6E74 
 6416      726F6C20 
 6416      6D6F6465 
 6416      3A00
 6417 06fa 0000     		.align	2
 6418              	.LC7:
 6419 06fc 37202D20 		.ascii	"7 - Resolutions:\000"
 6419      5265736F 
 6419      6C757469 
 6419      6F6E733A 
 6419      00
 6420 070d 000000   		.align	2
 6421              	.LC8:
 6422 0710 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6422      4D656173 
 6422      7572656D 
 6422      656E7420 
 6422      4F666673 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 150


 6423 0729 000000   		.align	2
 6424              	.LC9:
 6425 072c 39202D20 		.ascii	"9 - Multipliers:\000"
 6425      4D756C74 
 6425      69706C69 
 6425      6572733A 
 6425      00
 6426 073d 000000   		.align	2
 6427              	.LC10:
 6428 0740 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6428      20506F73 
 6428      2E206C69 
 6428      6D697420 
 6428      61637469 
 6429              		.align	2
 6430              	.LC11:
 6431 0758 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6431      20506F73 
 6431      2E206C69 
 6431      6D697473 
 6431      205B696E 
 6432 0775 000000   		.align	2
 6433              	.LC12:
 6434 0778 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6434      204D6178 
 6434      20737465 
 6434      7073205B 
 6434      6E65672C 
 6435 0793 00       		.align	2
 6436              	.LC13:
 6437 0794 3133202D 		.ascii	"13 - Current limit:\000"
 6437      20437572 
 6437      72656E74 
 6437      206C696D 
 6437      69743A00 
 6438              		.align	2
 6439              	.LC14:
 6440 07a8 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6440      20454D47 
 6440      20746872 
 6440      6573686F 
 6440      6C64733A 
 6441 07bd 000000   		.align	2
 6442              	.LC15:
 6443 07c0 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6443      20454D47 
 6443      2063616C 
 6443      69627261 
 6443      74696F6E 
 6444 07e1 000000   		.align	2
 6445              	.LC16:
 6446 07e4 3136202D 		.ascii	"16 - EMG max values:\000"
 6446      20454D47 
 6446      206D6178 
 6446      2076616C 
 6446      7565733A 
 6447 07f9 000000   		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 151


 6448              	.LC17:
 6449 07fc 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6449      20454D47 
 6449      206D6178 
 6449      20737065 
 6449      6564733A 
 6450 0811 000000   		.align	2
 6451              	.LC18:
 6452 0814 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6452      20416273 
 6452      6F6C7574 
 6452      6520656E 
 6452      636F6465 
 6453              		.align	2
 6454              	.LC19:
 6455 0834 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6455      204D6F74 
 6455      6F722068 
 6455      616E646C 
 6455      65207261 
 6456 084d 000000   		.align	2
 6457              	.LC20:
 6458 0850 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6458      2050574D 
 6458      20726573 
 6458      63616C69 
 6458      6E673A00 
 6459              		.align	2
 6460              	.LC21:
 6461 0864 3231202D 		.ascii	"21 - Current lookup:\000"
 6461      20437572 
 6461      72656E74 
 6461      206C6F6F 
 6461      6B75703A 
 6462 0879 000000   		.align	2
 6463              	.LC22:
 6464 087c 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6464      20446174 
 6464      65206F66 
 6464      206D6169 
 6464      6E74656E 
 6465 089e 0000     		.align	2
 6466              	.LC23:
 6467 08a0 3233202D 		.ascii	"23 - Rest position:\000"
 6467      20526573 
 6467      7420706F 
 6467      73697469 
 6467      6F6E3A00 
 6468              		.align	2
 6469              	.LC24:
 6470 08b4 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6470      20526573 
 6470      7420706F 
 6470      73697469 
 6470      6F6E2074 
 6471              		.align	2
 6472              	.LC25:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 152


 6473 08d8 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6473      20526573 
 6473      74207665 
 6473      6C20636C 
 6473      6F737572 
 6474 08fb 00       		.align	2
 6475              	.LC26:
 6476 08fc 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6476      20526573 
 6476      7420706F 
 6476      73697469 
 6476      6F6E2065 
 6477              		.align	2
 6478              	.LC27:
 6479 0918 3237202D 		.ascii	"27 - EMG inversion:\000"
 6479      20454D47 
 6479      20696E76 
 6479      65727369 
 6479      6F6E3A00 
 6480              		.align	2
 6481              	.LC28:
 6482 092c 3238202D 		.ascii	"28 - Hand side:\000"
 6482      2048616E 
 6482      64207369 
 6482      64653A00 
 6483              		.align	2
 6484              	.LC29:
 6485 093c 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6485      20456E61 
 6485      626C6520 
 6485      494D5573 
 6485      3A00
 6486 094e 0000     		.align	2
 6487              	.LC30:
 6488 0950 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6488      20526561 
 6488      64204578 
 6488      70616E73 
 6488      696F6E20 
 6489 096a 0000     		.align	2
 6490              	.LC31:
 6491 096c 3331202D 		.ascii	"31 - Reset counters:\000"
 6491      20526573 
 6491      65742063 
 6491      6F756E74 
 6491      6572733A 
 6492 0981 000000   		.align	2
 6493              	.LC32:
 6494 0984 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6494      204C6173 
 6494      74206368 
 6494      65636B65 
 6494      64205469 
 6495 09aa 0000     		.align	2
 6496              	.LC33:
 6497 09ac 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6497      20535049 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 153


 6497      20726561 
 6497      64206465 
 6497      6C617920 
 6498 09c7 00       		.align	2
 6499              	.LC34:
 6500 09c8 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6500      204F6E20 
 6500      626F6172 
 6500      6420494D 
 6500      5520636F 
 6501 09ed 000000   		.align	2
 6502              	.LC35:
 6503 09f0 3335202D 		.ascii	"35 - User ID:\000"
 6503      20557365 
 6503      72204944 
 6503      3A00
 6504 09fe 0000     		.align	2
 6505              	.LC36:
 6506 0a00 3336202D 		.ascii	"36 - User code:\000"
 6506      20557365 
 6506      7220636F 
 6506      64653A00 
 6507              		.align	2
 6508              	.LC37:
 6509 0a10 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6509      20417373 
 6509      6F636961 
 6509      74656420 
 6509      656E636F 
 6510 0a2e 0000     		.align	2
 6511              	.LC38:
 6512 0a30 3338202D 		.ascii	"38 - Driver type:\000"
 6512      20447269 
 6512      76657220 
 6512      74797065 
 6512      3A00
 6513 0a42 0000     		.align	2
 6514              	.LC39:
 6515 0a44 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6515      2050574D 
 6515      20726174 
 6515      65206C69 
 6515      6D697465 
 6516 0a5b 00       		.align	2
 6517              	.LC40:
 6518 0a5c 3430202D 		.ascii	"40 - Not reversible:\000"
 6518      204E6F74 
 6518      20726576 
 6518      65727369 
 6518      626C653A 
 6519 0a71 000000   		.align	2
 6520              	.LC41:
 6521 0a74 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6521      20456E63 
 6521      20696478 
 6521      20757365 
 6521      6420666F 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 154


 6522 0a93 00       		.align	2
 6523              	.LC42:
 6524 0a94 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6524      20476561 
 6524      72207061 
 6524      72616D73 
 6524      5B4E312C 
 6525 0ab2 0000     		.align	2
 6526              	.LC43:
 6527 0ab4 3433202D 		.ascii	"43 - Use second motor:\000"
 6527      20557365 
 6527      20736563 
 6527      6F6E6420 
 6527      6D6F746F 
 6528 0acb 00       		.align	2
 6529              	.LC44:
 6530 0acc 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6530      20506F73 
 6530      6974696F 
 6530      6E205049 
 6530      44205B50 
 6531 0ae9 000000   		.align	2
 6532              	.LC45:
 6533 0aec 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6533      20437572 
 6533      72656E74 
 6533      20504944 
 6533      205B502C 
 6534              		.align	2
 6535              	.LC46:
 6536 0b08 3436202D 		.ascii	"46 - Startup Activation:\000"
 6536      20537461 
 6536      72747570 
 6536      20416374 
 6536      69766174 
 6537 0b21 000000   		.align	2
 6538              	.LC47:
 6539 0b24 3437202D 		.ascii	"47 - Input mode:\000"
 6539      20496E70 
 6539      7574206D 
 6539      6F64653A 
 6539      00
 6540 0b35 000000   		.align	2
 6541              	.LC48:
 6542 0b38 3438202D 		.ascii	"48 - Control mode:\000"
 6542      20436F6E 
 6542      74726F6C 
 6542      206D6F64 
 6542      653A00
 6543 0b4b 00       		.align	2
 6544              	.LC49:
 6545 0b4c 3439202D 		.ascii	"49 - Resolutions:\000"
 6545      20526573 
 6545      6F6C7574 
 6545      696F6E73 
 6545      3A00
 6546 0b5e 0000     		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 155


 6547              	.LC50:
 6548 0b60 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6548      204D6561 
 6548      73757265 
 6548      6D656E74 
 6548      204F6666 
 6549 0b7a 0000     		.align	2
 6550              	.LC51:
 6551 0b7c 3531202D 		.ascii	"51 - Multipliers:\000"
 6551      204D756C 
 6551      7469706C 
 6551      69657273 
 6551      3A00
 6552 0b8e 0000     		.align	2
 6553              	.LC52:
 6554 0b90 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6554      20506F73 
 6554      2E206C69 
 6554      6D697420 
 6554      61637469 
 6555              		.align	2
 6556              	.LC53:
 6557 0ba8 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6557      20506F73 
 6557      2E206C69 
 6557      6D697473 
 6557      205B696E 
 6558 0bc5 000000   		.align	2
 6559              	.LC54:
 6560 0bc8 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6560      204D6178 
 6560      20737465 
 6560      7073205B 
 6560      6E65672C 
 6561 0be3 00       		.align	2
 6562              	.LC55:
 6563 0be4 3535202D 		.ascii	"55 - Current limit:\000"
 6563      20437572 
 6563      72656E74 
 6563      206C696D 
 6563      69743A00 
 6564              		.align	2
 6565              	.LC56:
 6566 0bf8 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6566      20416273 
 6566      6F6C7574 
 6566      6520656E 
 6566      636F6465 
 6567              		.align	2
 6568              	.LC57:
 6569 0c18 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6569      204D6F74 
 6569      6F722068 
 6569      616E646C 
 6569      65207261 
 6570 0c31 000000   		.align	2
 6571              	.LC58:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 156


 6572 0c34 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6572      2050574D 
 6572      20726573 
 6572      63616C69 
 6572      6E673A00 
 6573              		.align	2
 6574              	.LC59:
 6575 0c48 3539202D 		.ascii	"59 - Current lookup:\000"
 6575      20437572 
 6575      72656E74 
 6575      206C6F6F 
 6575      6B75703A 
 6576 0c5d 000000   		.align	2
 6577              	.LC60:
 6578 0c60 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6578      20417373 
 6578      6F636961 
 6578      74656420 
 6578      656E636F 
 6579 0c7e 0000     		.align	2
 6580              	.LC61:
 6581 0c80 3631202D 		.ascii	"61 - Driver type:\000"
 6581      20447269 
 6581      76657220 
 6581      74797065 
 6581      3A00
 6582 0c92 0000     		.align	2
 6583              	.LC62:
 6584 0c94 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6584      2050574D 
 6584      20726174 
 6584      65206C69 
 6584      6D697465 
 6585 0cab 00       		.align	2
 6586              	.LC63:
 6587 0cac 3633202D 		.ascii	"63 - Not reversible:\000"
 6587      204E6F74 
 6587      20726576 
 6587      65727369 
 6587      626C653A 
 6588 0cc1 000000   		.align	2
 6589              	.LC64:
 6590 0cc4 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6590      20456E63 
 6590      20696478 
 6590      20757365 
 6590      6420666F 
 6591 0ce3 00       		.align	2
 6592              	.LC65:
 6593 0ce4 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6593      20476561 
 6593      72207061 
 6593      72616D73 
 6593      5B4E312C 
 6594 0d02 0000     		.align	2
 6595              	.LC66:
 6596 0d04 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 157


 6596      20526561 
 6596      6420656E 
 6596      63207261 
 6596      77206C69 
 6597 0d1e 0000     		.align	2
 6598              	.LC67:
 6599 0d20 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6599      20526561 
 6599      6420656E 
 6599      63207261 
 6599      77206C69 
 6600 0d3a 0000     		.align	2
 6601              	.LC68:
 6602 0d3c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6602      20526561 
 6602      64206164 
 6602      64697469 
 6602      6F6E616C 
 6603 0d5b 00       		.align	2
 6604              	.LC69:
 6605 0d5c 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6605      20414443 
 6605      20636861 
 6605      6E6E656C 
 6605      205B312D 
 6606              		.align	2
 6607              	.LC70:
 6608 0d74 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6608      20414443 
 6608      20636861 
 6608      6E6E656C 
 6608      205B372D 
 6609 0d8d 000000   		.align	2
 6610              	.LC71:
 6611 0d90 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6611      20526563 
 6611      6F726420 
 6611      454D4720 
 6611      6F6E2053 
 6612              		.align	2
 6613              	.LC72:
 6614 0dac 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 6614      204A6F79 
 6614      73746963 
 6614      6B20636C 
 6614      6F737572 
 6615 0dc9 000000   		.align	2
 6616              	.LC73:
 6617 0dcc 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6617      204A6F79 
 6617      73746963 
 6617      6B207468 
 6617      72657368 
 6618 0de5 000000   		.align	2
 6619              	.LC74:
 6620 0de8 3734202D 		.ascii	"74 - Joystick gains:\000"
 6620      204A6F79 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 158


 6620      73746963 
 6620      6B206761 
 6620      696E733A 
 6621 0dfd 000000   		.align	2
 6622              	.LC75:
 6623 0e00 3735202D 		.ascii	"75 - Device type:\000"
 6623      20446576 
 6623      69636520 
 6623      74797065 
 6623      3A00
 6624 0e12 0000     		.align	2
 6625              	.LC76:
 6626 0e14 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6626      20454D47 
 6626      2046534D 
 6626      20616374 
 6626      2E6D6F64 
 6627 0e2b 00       		.align	2
 6628              	.LC77:
 6629 0e2c 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 6629      20466173 
 6629      74206163 
 6629      742E7468 
 6629      72657368 
 6630 0e46 0000     		.align	2
 6631              	.LC78:
 6632 0e48 3738202D 		.ascii	"78 - Wrist direction:\000"
 6632      20577269 
 6632      73742064 
 6632      69726563 
 6632      74696F6E 
 6633 0e5e 0000     		.align	2
 6634              	.LC79:
 6635 0e60 3739202D 		.ascii	"79 - Slave communication active:\000"
 6635      20536C61 
 6635      76652063 
 6635      6F6D6D75 
 6635      6E696361 
 6636 0e81 000000   		.align	2
 6637              	.LC80:
 6638 0e84 3830202D 		.ascii	"80 - Slave ID:\000"
 6638      20536C61 
 6638      76652049 
 6638      443A00
 6639 0e93 00       		.align	2
 6640              	.LC81:
 6641 0e94 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6641      204D6178 
 6641      696D756D 
 6641      20736C61 
 6641      76652072 
 6642 0eb9 000000   		.align	2
 6643              	.LC82:
 6644 0ebc 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6644      204D6178 
 6644      696D756D 
 6644      20707265 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 159


 6644      73737572 
 6645 0ee2 0000     		.align	2
 6646              	.LC83:
 6647 0ee4 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6647      2050726F 
 6647      706F7274 
 6647      696F6E61 
 6647      6C207072 
 6648 0f0b 00       		.align	2
 6649              	.LC128:
 6650 0f0c 78060000 		.word	.LC1
 6651 0f10 88060000 		.word	.LC2
 6652 0f14 A4060000 		.word	.LC3
 6653 0f18 C0060000 		.word	.LC4
 6654 0f1c D8060000 		.word	.LC5
 6655 0f20 E8060000 		.word	.LC6
 6656 0f24 FC060000 		.word	.LC7
 6657 0f28 10070000 		.word	.LC8
 6658 0f2c 2C070000 		.word	.LC9
 6659 0f30 40070000 		.word	.LC10
 6660 0f34 58070000 		.word	.LC11
 6661 0f38 78070000 		.word	.LC12
 6662 0f3c 94070000 		.word	.LC13
 6663 0f40 A8070000 		.word	.LC14
 6664 0f44 C0070000 		.word	.LC15
 6665 0f48 E4070000 		.word	.LC16
 6666 0f4c FC070000 		.word	.LC17
 6667 0f50 14080000 		.word	.LC18
 6668 0f54 34080000 		.word	.LC19
 6669 0f58 50080000 		.word	.LC20
 6670 0f5c 64080000 		.word	.LC21
 6671 0f60 7C080000 		.word	.LC22
 6672 0f64 A0080000 		.word	.LC23
 6673 0f68 B4080000 		.word	.LC24
 6674 0f6c D8080000 		.word	.LC25
 6675 0f70 FC080000 		.word	.LC26
 6676 0f74 18090000 		.word	.LC27
 6677 0f78 2C090000 		.word	.LC28
 6678 0f7c 3C090000 		.word	.LC29
 6679 0f80 50090000 		.word	.LC30
 6680 0f84 6C090000 		.word	.LC31
 6681 0f88 84090000 		.word	.LC32
 6682 0f8c AC090000 		.word	.LC33
 6683 0f90 C8090000 		.word	.LC34
 6684 0f94 F0090000 		.word	.LC35
 6685 0f98 000A0000 		.word	.LC36
 6686 0f9c 100A0000 		.word	.LC37
 6687 0fa0 300A0000 		.word	.LC38
 6688 0fa4 440A0000 		.word	.LC39
 6689 0fa8 5C0A0000 		.word	.LC40
 6690 0fac 740A0000 		.word	.LC41
 6691 0fb0 940A0000 		.word	.LC42
 6692 0fb4 B40A0000 		.word	.LC43
 6693 0fb8 CC0A0000 		.word	.LC44
 6694 0fbc EC0A0000 		.word	.LC45
 6695 0fc0 080B0000 		.word	.LC46
 6696 0fc4 240B0000 		.word	.LC47
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 160


 6697 0fc8 380B0000 		.word	.LC48
 6698 0fcc 4C0B0000 		.word	.LC49
 6699 0fd0 600B0000 		.word	.LC50
 6700 0fd4 7C0B0000 		.word	.LC51
 6701 0fd8 900B0000 		.word	.LC52
 6702 0fdc A80B0000 		.word	.LC53
 6703 0fe0 C80B0000 		.word	.LC54
 6704 0fe4 E40B0000 		.word	.LC55
 6705 0fe8 F80B0000 		.word	.LC56
 6706 0fec 180C0000 		.word	.LC57
 6707 0ff0 340C0000 		.word	.LC58
 6708 0ff4 480C0000 		.word	.LC59
 6709 0ff8 600C0000 		.word	.LC60
 6710 0ffc 800C0000 		.word	.LC61
 6711 1000 940C0000 		.word	.LC62
 6712 1004 AC0C0000 		.word	.LC63
 6713 1008 C40C0000 		.word	.LC64
 6714 100c E40C0000 		.word	.LC65
 6715 1010 040D0000 		.word	.LC66
 6716 1014 200D0000 		.word	.LC67
 6717 1018 3C0D0000 		.word	.LC68
 6718 101c 5C0D0000 		.word	.LC69
 6719 1020 740D0000 		.word	.LC70
 6720 1024 900D0000 		.word	.LC71
 6721 1028 AC0D0000 		.word	.LC72
 6722 102c CC0D0000 		.word	.LC73
 6723 1030 E80D0000 		.word	.LC74
 6724 1034 000E0000 		.word	.LC75
 6725 1038 140E0000 		.word	.LC76
 6726 103c 2C0E0000 		.word	.LC77
 6727 1040 480E0000 		.word	.LC78
 6728 1044 600E0000 		.word	.LC79
 6729 1048 840E0000 		.word	.LC80
 6730 104c 940E0000 		.word	.LC81
 6731 1050 BC0E0000 		.word	.LC82
 6732 1054 E40E0000 		.word	.LC83
 6733              		.align	2
 6734              	.LC85:
 6735 1058 03       		.byte	3
 6736 1059 01       		.byte	1
 6737 105a 02       		.byte	2
 6738 105b 03       		.byte	3
 6739 105c 03       		.byte	3
 6740 105d 03       		.byte	3
 6741 105e 03       		.byte	3
 6742 105f 03       		.byte	3
 6743 1060 03       		.byte	3
 6744 1061 04       		.byte	4
 6745 1062 05       		.byte	5
 6746 1063 06       		.byte	6
 6747 1064 03       		.byte	3
 6748 1065 07       		.byte	7
 6749 1066 08       		.byte	8
 6750 1067 09       		.byte	9
 6751 1068 03       		.byte	3
 6752 1069 05       		.byte	5
 6753 106a 03       		.byte	3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 161


 6754 106b 01       		.byte	1
 6755 106c 02       		.byte	2
 6756 106d 03       		.byte	3
 6757 106e 03       		.byte	3
 6758 106f 03       		.byte	3
 6759 1070 09       		.byte	9
 6760 1071 03       		.byte	3
 6761 1072 05       		.byte	5
 6762 1073 03       		.byte	3
 6763 1074 0A       		.byte	10
 6764 1075 0B       		.byte	11
 6765 1076 0C       		.byte	12
 6766 1077 03       		.byte	3
 6767              		.align	2
 6768              	.LC86:
 6769 1078 02       		.byte	2
 6770 1079 03       		.byte	3
 6771 107a 08       		.byte	8
 6772 107b 0B       		.byte	11
 6773 107c 17       		.byte	23
 6774 107d 2C       		.byte	44
 6775 107e 2D       		.byte	45
 6776 107f 32       		.byte	50
 6777 1080 35       		.byte	53
 6778 1081 000000   		.align	2
 6779              	.LC87:
 6780 1084 02       		.byte	2
 6781 1085 03       		.byte	3
 6782 1086 05       		.byte	5
 6783 1087 08       		.byte	8
 6784 1088 0B       		.byte	11
 6785 1089 17       		.byte	23
 6786 108a 18       		.byte	24
 6787 108b 1C       		.byte	28
 6788 108c 1F       		.byte	31
 6789 108d 20       		.byte	32
 6790 108e 26       		.byte	38
 6791 108f 2C       		.byte	44
 6792 1090 2D       		.byte	45
 6793 1091 2F       		.byte	47
 6794 1092 32       		.byte	50
 6795 1093 35       		.byte	53
 6796 1094 3D       		.byte	61
 6797 1095 4B       		.byte	75
 6798              		.section	.text.manage_param_list,"ax",%progbits
 6799              		.align	2
 6800              		.global	manage_param_list
 6801              		.thumb
 6802              		.thumb_func
 6803              		.type	manage_param_list, %function
 6804              	manage_param_list:
 6805              	.LFB68:
 871:..\src/command_processing.c **** 
 872:..\src/command_processing.c **** //==============================================================================
 873:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 874:..\src/command_processing.c **** //==============================================================================
 875:..\src/command_processing.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 162


 876:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6806              		.loc 1 876 0
 6807              		.cfi_startproc
 6808              		@ args = 0, pretend = 0, frame = 1416
 6809              		@ frame_needed = 1, uses_anonymous_args = 0
 6810 0000 B0B5     		push	{r4, r5, r7, lr}
 6811              		.cfi_def_cfa_offset 16
 6812              		.cfi_offset 4, -16
 6813              		.cfi_offset 5, -12
 6814              		.cfi_offset 7, -8
 6815              		.cfi_offset 14, -4
 6816 0002 ADF5B36D 		sub	sp, sp, #1432
 6817              		.cfi_def_cfa_offset 1448
 6818 0006 04AF     		add	r7, sp, #16
 6819              		.cfi_def_cfa 7, 1432
 6820 0008 0246     		mov	r2, r0
 6821 000a BB1D     		adds	r3, r7, #6
 6822 000c 1A80     		strh	r2, [r3]	@ movhi
 877:..\src/command_processing.c ****     uint8 CYDATA i, j;
 878:..\src/command_processing.c ****     uint8 CYDATA sod;
 879:..\src/command_processing.c ****     uint8 PARAM_IDX;
 880:..\src/command_processing.c ****     int16 aux_int16;
 881:..\src/command_processing.c ****     uint16 aux_uint16;
 882:..\src/command_processing.c ****     int32 aux_int32;
 883:..\src/command_processing.c ****     uint32 aux_uint32;
 884:..\src/command_processing.c ****     float aux_float;
 885:..\src/command_processing.c ****  
 886:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6823              		.loc 1 886 0
 6824 000e 0023     		movs	r3, #0
 6825 0010 87F87D35 		strb	r3, [r7, #1405]
 887:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6826              		.loc 1 887 0
 6827 0014 0123     		movs	r3, #1
 6828 0016 87F87C35 		strb	r3, [r7, #1404]
 888:..\src/command_processing.c ****     
 889:..\src/command_processing.c ****     // Arrays
 890:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6829              		.loc 1 890 0
 6830 001a 054B     		ldr	r3, .L369
 6831 001c C7F88035 		str	r3, [r7, #1408]
 891:..\src/command_processing.c ****     
 892:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6832              		.loc 1 892 0
 6833 0020 BB1D     		adds	r3, r7, #6
 6834 0022 1B88     		ldrh	r3, [r3]
 6835 0024 002B     		cmp	r3, #0
 6836 0026 07D0     		beq	.L306
 893:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6837              		.loc 1 893 0
 6838 0028 024B     		ldr	r3, .L369+4
 6839 002a C7F88035 		str	r3, [r7, #1408]
 6840 002e 03E0     		b	.L370
 6841              	.L371:
 6842              		.align	2
 6843              	.L369:
 6844 0030 00000000 		.word	c_mem
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 163


 6845 0034 00000000 		.word	g_mem
 6846              	.L370:
 6847              	.L306:
 894:..\src/command_processing.c ****     }
 895:..\src/command_processing.c ****  
 896:..\src/command_processing.c ****     
 897:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 898:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6848              		.loc 1 899 0
 6849 0038 D7F88035 		ldr	r3, [r7, #1408]
 6850 003c 03F1A002 		add	r2, r3, #160
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6851              		.loc 1 898 0
 6852 0040 07F21C43 		addw	r3, r7, #1052
 6853 0044 1A60     		str	r2, [r3]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6854              		.loc 1 900 0
 6855 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6856 004a 1346     		mov	r3, r2
 6857 004c DB00     		lsls	r3, r3, #3
 6858 004e 9B1A     		subs	r3, r3, r2
 6859 0050 1B01     		lsls	r3, r3, #4
 6860 0052 B033     		adds	r3, r3, #176
 6861 0054 D7F88025 		ldr	r2, [r7, #1408]
 6862 0058 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6863              		.loc 1 898 0
 6864 005a 07F21C43 		addw	r3, r7, #1052
 6865 005e 5A60     		str	r2, [r3, #4]
 901:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6866              		.loc 1 901 0
 6867 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6868 0064 1346     		mov	r3, r2
 6869 0066 DB00     		lsls	r3, r3, #3
 6870 0068 9B1A     		subs	r3, r3, r2
 6871 006a 1B01     		lsls	r3, r3, #4
 6872 006c B833     		adds	r3, r3, #184
 6873 006e D7F88025 		ldr	r2, [r7, #1408]
 6874 0072 1344     		add	r3, r3, r2
 6875 0074 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6876              		.loc 1 898 0
 6877 0076 07F21C43 		addw	r3, r7, #1052
 6878 007a 9A60     		str	r2, [r3, #8]
 902:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6879              		.loc 1 902 0
 6880 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6881 0080 1346     		mov	r3, r2
 6882 0082 DB00     		lsls	r3, r3, #3
 6883 0084 9B1A     		subs	r3, r3, r2
 6884 0086 1B01     		lsls	r3, r3, #4
 6885 0088 E033     		adds	r3, r3, #224
 6886 008a D7F88025 		ldr	r2, [r7, #1408]
 6887 008e 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6888              		.loc 1 898 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 164


 6889 0090 07F21C43 		addw	r3, r7, #1052
 6890 0094 DA60     		str	r2, [r3, #12]
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6891              		.loc 1 903 0
 6892 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6893 009a 1346     		mov	r3, r2
 6894 009c DB00     		lsls	r3, r3, #3
 6895 009e 9B1A     		subs	r3, r3, r2
 6896 00a0 1B01     		lsls	r3, r3, #4
 6897 00a2 03F58473 		add	r3, r3, #264
 6898 00a6 D7F88025 		ldr	r2, [r7, #1408]
 6899 00aa 1344     		add	r3, r3, r2
 6900 00ac 9A1D     		adds	r2, r3, #6
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6901              		.loc 1 898 0
 6902 00ae 07F21C43 		addw	r3, r7, #1052
 6903 00b2 1A61     		str	r2, [r3, #16]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6904              		.loc 1 904 0
 6905 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6906 00b8 1346     		mov	r3, r2
 6907 00ba DB00     		lsls	r3, r3, #3
 6908 00bc 9B1A     		subs	r3, r3, r2
 6909 00be 1B01     		lsls	r3, r3, #4
 6910 00c0 03F58473 		add	r3, r3, #264
 6911 00c4 D7F88025 		ldr	r2, [r7, #1408]
 6912 00c8 1344     		add	r3, r3, r2
 6913 00ca DA1D     		adds	r2, r3, #7
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6914              		.loc 1 898 0
 6915 00cc 07F21C43 		addw	r3, r7, #1052
 6916 00d0 5A61     		str	r2, [r3, #20]
 905:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6917              		.loc 1 905 0
 6918 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6919 00d6 D7F88015 		ldr	r1, [r7, #1408]
 6920 00da 1346     		mov	r3, r2
 6921 00dc DB00     		lsls	r3, r3, #3
 6922 00de 9B1A     		subs	r3, r3, r2
 6923 00e0 1B01     		lsls	r3, r3, #4
 6924 00e2 0B44     		add	r3, r3, r1
 6925 00e4 03F58873 		add	r3, r3, #272
 6926 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6927 00ea 1A46     		mov	r2, r3
 6928 00ec 1346     		mov	r3, r2
 6929 00ee 5B00     		lsls	r3, r3, #1
 6930 00f0 1344     		add	r3, r3, r2
 6931 00f2 1B01     		lsls	r3, r3, #4
 6932 00f4 03F5C873 		add	r3, r3, #400
 6933 00f8 D7F88025 		ldr	r2, [r7, #1408]
 6934 00fc 1344     		add	r3, r3, r2
 6935 00fe 5A1D     		adds	r2, r3, #5
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6936              		.loc 1 898 0
 6937 0100 07F21C43 		addw	r3, r7, #1052
 6938 0104 9A61     		str	r2, [r3, #24]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 165


 6939              		.loc 1 906 0
 6940 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6941 010a D7F88015 		ldr	r1, [r7, #1408]
 6942 010e 1346     		mov	r3, r2
 6943 0110 DB00     		lsls	r3, r3, #3
 6944 0112 9B1A     		subs	r3, r3, r2
 6945 0114 1B01     		lsls	r3, r3, #4
 6946 0116 0B44     		add	r3, r3, r1
 6947 0118 03F58873 		add	r3, r3, #272
 6948 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6949 011e 1A46     		mov	r2, r3
 6950 0120 1346     		mov	r3, r2
 6951 0122 5B00     		lsls	r3, r3, #1
 6952 0124 1344     		add	r3, r3, r2
 6953 0126 1B01     		lsls	r3, r3, #4
 6954 0128 03F5CC73 		add	r3, r3, #408
 6955 012c D7F88025 		ldr	r2, [r7, #1408]
 6956 0130 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6957              		.loc 1 898 0
 6958 0132 07F21C43 		addw	r3, r7, #1052
 6959 0136 DA61     		str	r2, [r3, #28]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6960              		.loc 1 907 0
 6961 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6962 013c D7F88015 		ldr	r1, [r7, #1408]
 6963 0140 1346     		mov	r3, r2
 6964 0142 DB00     		lsls	r3, r3, #3
 6965 0144 9B1A     		subs	r3, r3, r2
 6966 0146 1B01     		lsls	r3, r3, #4
 6967 0148 0B44     		add	r3, r3, r1
 6968 014a 03F58873 		add	r3, r3, #272
 6969 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6970 0150 1A46     		mov	r2, r3
 6971 0152 1346     		mov	r3, r2
 6972 0154 5B00     		lsls	r3, r3, #1
 6973 0156 1344     		add	r3, r3, r2
 6974 0158 1B01     		lsls	r3, r3, #4
 6975 015a 03F5D073 		add	r3, r3, #416
 6976 015e D7F88025 		ldr	r2, [r7, #1408]
 6977 0162 1344     		add	r3, r3, r2
 6978 0164 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6979              		.loc 1 898 0
 6980 0166 07F21C43 		addw	r3, r7, #1052
 6981 016a 1A62     		str	r2, [r3, #32]
 908:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6982              		.loc 1 908 0
 6983 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6984 0170 1346     		mov	r3, r2
 6985 0172 DB00     		lsls	r3, r3, #3
 6986 0174 9B1A     		subs	r3, r3, r2
 6987 0176 1B01     		lsls	r3, r3, #4
 6988 0178 E033     		adds	r3, r3, #224
 6989 017a D7F88025 		ldr	r2, [r7, #1408]
 6990 017e 1344     		add	r3, r3, r2
 6991 0180 DA1C     		adds	r2, r3, #3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 166


 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6992              		.loc 1 898 0
 6993 0182 07F21C43 		addw	r3, r7, #1052
 6994 0186 5A62     		str	r2, [r3, #36]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6995              		.loc 1 909 0
 6996 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6997 018c 1346     		mov	r3, r2
 6998 018e DB00     		lsls	r3, r3, #3
 6999 0190 9B1A     		subs	r3, r3, r2
 7000 0192 1B01     		lsls	r3, r3, #4
 7001 0194 E033     		adds	r3, r3, #224
 7002 0196 D7F88025 		ldr	r2, [r7, #1408]
 7003 019a 1344     		add	r3, r3, r2
 7004 019c 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7005              		.loc 1 898 0
 7006 019e 07F21C43 		addw	r3, r7, #1052
 7007 01a2 9A62     		str	r2, [r3, #40]
 910:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7008              		.loc 1 910 0
 7009 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7010 01a8 1346     		mov	r3, r2
 7011 01aa DB00     		lsls	r3, r3, #3
 7012 01ac 9B1A     		subs	r3, r3, r2
 7013 01ae 1B01     		lsls	r3, r3, #4
 7014 01b0 E833     		adds	r3, r3, #232
 7015 01b2 D7F88025 		ldr	r2, [r7, #1408]
 7016 01b6 1344     		add	r3, r3, r2
 7017 01b8 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7018              		.loc 1 898 0
 7019 01ba 07F21C43 		addw	r3, r7, #1052
 7020 01be DA62     		str	r2, [r3, #44]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7021              		.loc 1 911 0
 7022 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7023 01c4 1346     		mov	r3, r2
 7024 01c6 DB00     		lsls	r3, r3, #3
 7025 01c8 9B1A     		subs	r3, r3, r2
 7026 01ca 1B01     		lsls	r3, r3, #4
 7027 01cc 03F58473 		add	r3, r3, #264
 7028 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7029 01d4 1344     		add	r3, r3, r2
 7030 01d6 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7031              		.loc 1 898 0
 7032 01d8 07F21C43 		addw	r3, r7, #1052
 7033 01dc 1A63     		str	r2, [r3, #48]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7034              		.loc 1 912 0
 7035 01de D7F88035 		ldr	r3, [r7, #1408]
 7036 01e2 03F5F872 		add	r2, r3, #496
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7037              		.loc 1 898 0
 7038 01e6 07F21C43 		addw	r3, r7, #1052
 7039 01ea 5A63     		str	r2, [r3, #52]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 167


 913:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7040              		.loc 1 913 0
 7041 01ec D7F88035 		ldr	r3, [r7, #1408]
 7042 01f0 03F5FF72 		add	r2, r3, #510
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7043              		.loc 1 898 0
 7044 01f4 07F21C43 		addw	r3, r7, #1052
 7045 01f8 9A63     		str	r2, [r3, #56]
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7046              		.loc 1 914 0
 7047 01fa D7F88035 		ldr	r3, [r7, #1408]
 7048 01fe 03F5FA72 		add	r2, r3, #500
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7049              		.loc 1 898 0
 7050 0202 07F21C43 		addw	r3, r7, #1052
 7051 0206 DA63     		str	r2, [r3, #60]
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7052              		.loc 1 915 0
 7053 0208 D7F88035 		ldr	r3, [r7, #1408]
 7054 020c 03F5FE72 		add	r2, r3, #508
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7055              		.loc 1 898 0
 7056 0210 07F21C43 		addw	r3, r7, #1052
 7057 0214 1A64     		str	r2, [r3, #64]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7058              		.loc 1 916 0
 7059 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7060 021a D7F88015 		ldr	r1, [r7, #1408]
 7061 021e 1346     		mov	r3, r2
 7062 0220 DB00     		lsls	r3, r3, #3
 7063 0222 9B1A     		subs	r3, r3, r2
 7064 0224 1B01     		lsls	r3, r3, #4
 7065 0226 0B44     		add	r3, r3, r1
 7066 0228 03F58873 		add	r3, r3, #272
 7067 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7068 022e 1A46     		mov	r2, r3
 7069 0230 1346     		mov	r3, r2
 7070 0232 5B00     		lsls	r3, r3, #1
 7071 0234 1344     		add	r3, r3, r2
 7072 0236 1B01     		lsls	r3, r3, #4
 7073 0238 03F5D873 		add	r3, r3, #432
 7074 023c D7F88025 		ldr	r2, [r7, #1408]
 7075 0240 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7076              		.loc 1 898 0
 7077 0242 07F21C43 		addw	r3, r7, #1052
 7078 0246 5A64     		str	r2, [r3, #68]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7079              		.loc 1 917 0
 7080 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7081 024c D7F88015 		ldr	r1, [r7, #1408]
 7082 0250 1346     		mov	r3, r2
 7083 0252 DB00     		lsls	r3, r3, #3
 7084 0254 9B1A     		subs	r3, r3, r2
 7085 0256 1B01     		lsls	r3, r3, #4
 7086 0258 0B44     		add	r3, r3, r1
 7087 025a 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 168


 7088 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7089 0260 1A46     		mov	r2, r3
 7090 0262 1346     		mov	r3, r2
 7091 0264 5B00     		lsls	r3, r3, #1
 7092 0266 1344     		add	r3, r3, r2
 7093 0268 1B01     		lsls	r3, r3, #4
 7094 026a 03F5D873 		add	r3, r3, #432
 7095 026e D7F88025 		ldr	r2, [r7, #1408]
 7096 0272 1344     		add	r3, r3, r2
 7097 0274 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7098              		.loc 1 898 0
 7099 0276 07F21C43 		addw	r3, r7, #1052
 7100 027a 9A64     		str	r2, [r3, #72]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7101              		.loc 1 918 0
 7102 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7103 0280 1346     		mov	r3, r2
 7104 0282 DB00     		lsls	r3, r3, #3
 7105 0284 9B1A     		subs	r3, r3, r2
 7106 0286 1B01     		lsls	r3, r3, #4
 7107 0288 E033     		adds	r3, r3, #224
 7108 028a D7F88025 		ldr	r2, [r7, #1408]
 7109 028e 1344     		add	r3, r3, r2
 7110 0290 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7111              		.loc 1 898 0
 7112 0292 07F21C43 		addw	r3, r7, #1052
 7113 0296 DA64     		str	r2, [r3, #76]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7114              		.loc 1 919 0
 7115 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7116 029c 1346     		mov	r3, r2
 7117 029e DB00     		lsls	r3, r3, #3
 7118 02a0 9B1A     		subs	r3, r3, r2
 7119 02a2 1B01     		lsls	r3, r3, #4
 7120 02a4 F033     		adds	r3, r3, #240
 7121 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7122 02aa 1344     		add	r3, r3, r2
 7123 02ac 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7124              		.loc 1 898 0
 7125 02ae 07F21C43 		addw	r3, r7, #1052
 7126 02b2 1A65     		str	r2, [r3, #80]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7127              		.loc 1 920 0
 7128 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7129 02b8 03F1A102 		add	r2, r3, #161
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7130              		.loc 1 898 0
 7131 02bc 07F21C43 		addw	r3, r7, #1052
 7132 02c0 5A65     		str	r2, [r3, #84]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7133              		.loc 1 921 0
 7134 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7135 02c6 03F52872 		add	r2, r3, #672
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 169


 7136              		.loc 1 898 0
 7137 02ca 07F21C43 		addw	r3, r7, #1052
 7138 02ce 9A65     		str	r2, [r3, #88]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7139              		.loc 1 922 0
 7140 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7141 02d4 03F52972 		add	r2, r3, #676
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7142              		.loc 1 898 0
 7143 02d8 07F21C43 		addw	r3, r7, #1052
 7144 02dc DA65     		str	r2, [r3, #92]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7145              		.loc 1 923 0
 7146 02de D7F88035 		ldr	r3, [r7, #1408]
 7147 02e2 03F52A72 		add	r2, r3, #680
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7148              		.loc 1 898 0
 7149 02e6 07F21C43 		addw	r3, r7, #1052
 7150 02ea 1A66     		str	r2, [r3, #96]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7151              		.loc 1 924 0
 7152 02ec D7F88035 		ldr	r3, [r7, #1408]
 7153 02f0 03F52B72 		add	r2, r3, #684
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7154              		.loc 1 898 0
 7155 02f4 07F21C43 		addw	r3, r7, #1052
 7156 02f8 5A66     		str	r2, [r3, #100]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7157              		.loc 1 925 0
 7158 02fa D7F88035 		ldr	r3, [r7, #1408]
 7159 02fe 03F2FF12 		addw	r2, r3, #511
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7160              		.loc 1 898 0
 7161 0302 07F21C43 		addw	r3, r7, #1052
 7162 0306 9A66     		str	r2, [r3, #104]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7163              		.loc 1 926 0
 7164 0308 D7F88035 		ldr	r3, [r7, #1408]
 7165 030c 03F1A702 		add	r2, r3, #167
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7166              		.loc 1 898 0
 7167 0310 07F21C43 		addw	r3, r7, #1052
 7168 0314 DA66     		str	r2, [r3, #108]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7169              		.loc 1 927 0
 7170 0316 D7F88035 		ldr	r3, [r7, #1408]
 7171 031a 03F50072 		add	r2, r3, #512
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7172              		.loc 1 898 0
 7173 031e 07F21C43 		addw	r3, r7, #1052
 7174 0322 1A67     		str	r2, [r3, #112]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7175              		.loc 1 928 0
 7176 0324 D7F88035 		ldr	r3, [r7, #1408]
 7177 0328 03F22622 		addw	r2, r3, #550
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7178              		.loc 1 898 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 170


 7179 032c 07F21C43 		addw	r3, r7, #1052
 7180 0330 5A67     		str	r2, [r3, #116]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7181              		.loc 1 929 0
 7182 0332 D7F88035 		ldr	r3, [r7, #1408]
 7183 0336 03F1A802 		add	r2, r3, #168
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7184              		.loc 1 898 0
 7185 033a 07F21C43 		addw	r3, r7, #1052
 7186 033e 9A67     		str	r2, [r3, #120]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7187              		.loc 1 930 0
 7188 0340 D7F88035 		ldr	r3, [r7, #1408]
 7189 0344 03F50872 		add	r2, r3, #544
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7190              		.loc 1 898 0
 7191 0348 07F21C43 		addw	r3, r7, #1052
 7192 034c DA67     		str	r2, [r3, #124]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7193              		.loc 1 931 0
 7194 034e D7F88035 		ldr	r3, [r7, #1408]
 7195 0352 03F20122 		addw	r2, r3, #513
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7196              		.loc 1 898 0
 7197 0356 07F21C43 		addw	r3, r7, #1052
 7198 035a C3F88020 		str	r2, [r3, #128]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7199              		.loc 1 932 0
 7200 035e D7F88035 		ldr	r3, [r7, #1408]
 7201 0362 03F20222 		addw	r2, r3, #514
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7202              		.loc 1 898 0
 7203 0366 07F21C43 		addw	r3, r7, #1052
 7204 036a C3F88420 		str	r2, [r3, #132]
 933:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7205              		.loc 1 933 0
 7206 036e D7F88035 		ldr	r3, [r7, #1408]
 7207 0372 03F1AB02 		add	r2, r3, #171
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7208              		.loc 1 898 0
 7209 0376 07F21C43 		addw	r3, r7, #1052
 7210 037a C3F88820 		str	r2, [r3, #136]
 934:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7211              		.loc 1 934 0
 7212 037e D7F88035 		ldr	r3, [r7, #1408]
 7213 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7214 0386 1233     		adds	r3, r3, #18
 7215 0388 5B01     		lsls	r3, r3, #5
 7216 038a D7F88025 		ldr	r2, [r7, #1408]
 7217 038e 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7218              		.loc 1 898 0
 7219 0390 07F21C43 		addw	r3, r7, #1052
 7220 0394 C3F88C20 		str	r2, [r3, #140]
 935:..\src/command_processing.c ****         
 936:..\src/command_processing.c ****         // GENERIC PARAMS
 937:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 171


 7221              		.loc 1 937 0
 7222 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7223 039c 1346     		mov	r3, r2
 7224 039e DB00     		lsls	r3, r3, #3
 7225 03a0 9B1A     		subs	r3, r3, r2
 7226 03a2 1B01     		lsls	r3, r3, #4
 7227 03a4 03F58873 		add	r3, r3, #272
 7228 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7229 03ac 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7230              		.loc 1 898 0
 7231 03ae 07F21C43 		addw	r3, r7, #1052
 7232 03b2 C3F89020 		str	r2, [r3, #144]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7233              		.loc 1 938 0
 7234 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7235 03ba 1346     		mov	r3, r2
 7236 03bc DB00     		lsls	r3, r3, #3
 7237 03be 9B1A     		subs	r3, r3, r2
 7238 03c0 1B01     		lsls	r3, r3, #4
 7239 03c2 E033     		adds	r3, r3, #224
 7240 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7241 03c8 1344     		add	r3, r3, r2
 7242 03ca 9A1C     		adds	r2, r3, #2
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7243              		.loc 1 898 0
 7244 03cc 07F21C43 		addw	r3, r7, #1052
 7245 03d0 C3F89420 		str	r2, [r3, #148]
 939:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7246              		.loc 1 939 0
 7247 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7248 03d8 1346     		mov	r3, r2
 7249 03da DB00     		lsls	r3, r3, #3
 7250 03dc 9B1A     		subs	r3, r3, r2
 7251 03de 1B01     		lsls	r3, r3, #4
 7252 03e0 03F58873 		add	r3, r3, #272
 7253 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7254 03e8 1344     		add	r3, r3, r2
 7255 03ea 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7256              		.loc 1 898 0
 7257 03ec 07F21C43 		addw	r3, r7, #1052
 7258 03f0 C3F89820 		str	r2, [r3, #152]
 940:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7259              		.loc 1 940 0
 7260 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7261 03f8 1346     		mov	r3, r2
 7262 03fa DB00     		lsls	r3, r3, #3
 7263 03fc 9B1A     		subs	r3, r3, r2
 7264 03fe 1B01     		lsls	r3, r3, #4
 7265 0400 03F58873 		add	r3, r3, #272
 7266 0404 D7F88025 		ldr	r2, [r7, #1408]
 7267 0408 1344     		add	r3, r3, r2
 7268 040a 9A1C     		adds	r2, r3, #2
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7269              		.loc 1 898 0
 7270 040c 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 172


 7271 0410 C3F89C20 		str	r2, [r3, #156]
 941:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7272              		.loc 1 941 0
 7273 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7274 0418 D7F88015 		ldr	r1, [r7, #1408]
 7275 041c 1346     		mov	r3, r2
 7276 041e DB00     		lsls	r3, r3, #3
 7277 0420 9B1A     		subs	r3, r3, r2
 7278 0422 1B01     		lsls	r3, r3, #4
 7279 0424 0B44     		add	r3, r3, r1
 7280 0426 03F58873 		add	r3, r3, #272
 7281 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7282 042c 1A46     		mov	r2, r3
 7283 042e 1346     		mov	r3, r2
 7284 0430 5B00     		lsls	r3, r3, #1
 7285 0432 1344     		add	r3, r3, r2
 7286 0434 1B01     		lsls	r3, r3, #4
 7287 0436 03F5D873 		add	r3, r3, #432
 7288 043a D7F88025 		ldr	r2, [r7, #1408]
 7289 043e 1344     		add	r3, r3, r2
 7290 0440 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7291              		.loc 1 898 0
 7292 0442 07F21C43 		addw	r3, r7, #1052
 7293 0446 C3F8A020 		str	r2, [r3, #160]
 942:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7294              		.loc 1 942 0
 7295 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7296 044e D7F88015 		ldr	r1, [r7, #1408]
 7297 0452 1346     		mov	r3, r2
 7298 0454 DB00     		lsls	r3, r3, #3
 7299 0456 9B1A     		subs	r3, r3, r2
 7300 0458 1B01     		lsls	r3, r3, #4
 7301 045a 0B44     		add	r3, r3, r1
 7302 045c 03F58873 		add	r3, r3, #272
 7303 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7304 0462 1A46     		mov	r2, r3
 7305 0464 1346     		mov	r3, r2
 7306 0466 5B00     		lsls	r3, r3, #1
 7307 0468 1344     		add	r3, r3, r2
 7308 046a 1B01     		lsls	r3, r3, #4
 7309 046c 03F5D873 		add	r3, r3, #432
 7310 0470 D7F88025 		ldr	r2, [r7, #1408]
 7311 0474 1344     		add	r3, r3, r2
 7312 0476 5A1D     		adds	r2, r3, #5
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7313              		.loc 1 898 0
 7314 0478 07F21C43 		addw	r3, r7, #1052
 7315 047c C3F8A420 		str	r2, [r3, #164]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7316              		.loc 1 943 0
 7317 0480 D7F88035 		ldr	r3, [r7, #1408]
 7318 0484 03F1A902 		add	r2, r3, #169
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7319              		.loc 1 898 0
 7320 0488 07F21C43 		addw	r3, r7, #1052
 7321 048c C3F8A820 		str	r2, [r3, #168]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 173


 944:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7322              		.loc 1 944 0
 7323 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7324 0494 1346     		mov	r3, r2
 7325 0496 DB00     		lsls	r3, r3, #3
 7326 0498 9B1A     		subs	r3, r3, r2
 7327 049a 1B01     		lsls	r3, r3, #4
 7328 049c B033     		adds	r3, r3, #176
 7329 049e D7F88025 		ldr	r2, [r7, #1408]
 7330 04a2 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7331              		.loc 1 898 0
 7332 04a4 07F21C43 		addw	r3, r7, #1052
 7333 04a8 C3F8AC20 		str	r2, [r3, #172]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7334              		.loc 1 945 0
 7335 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7336 04b0 1346     		mov	r3, r2
 7337 04b2 DB00     		lsls	r3, r3, #3
 7338 04b4 9B1A     		subs	r3, r3, r2
 7339 04b6 1B01     		lsls	r3, r3, #4
 7340 04b8 B833     		adds	r3, r3, #184
 7341 04ba D7F88025 		ldr	r2, [r7, #1408]
 7342 04be 1344     		add	r3, r3, r2
 7343 04c0 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7344              		.loc 1 898 0
 7345 04c2 07F21C43 		addw	r3, r7, #1052
 7346 04c6 C3F8B020 		str	r2, [r3, #176]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7347              		.loc 1 946 0
 7348 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7349 04ce 1346     		mov	r3, r2
 7350 04d0 DB00     		lsls	r3, r3, #3
 7351 04d2 9B1A     		subs	r3, r3, r2
 7352 04d4 1B01     		lsls	r3, r3, #4
 7353 04d6 E033     		adds	r3, r3, #224
 7354 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7355 04dc 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7356              		.loc 1 898 0
 7357 04de 07F21C43 		addw	r3, r7, #1052
 7358 04e2 C3F8B420 		str	r2, [r3, #180]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7359              		.loc 1 947 0
 7360 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7361 04ea 1346     		mov	r3, r2
 7362 04ec DB00     		lsls	r3, r3, #3
 7363 04ee 9B1A     		subs	r3, r3, r2
 7364 04f0 1B01     		lsls	r3, r3, #4
 7365 04f2 03F58473 		add	r3, r3, #264
 7366 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7367 04fa 1344     		add	r3, r3, r2
 7368 04fc 9A1D     		adds	r2, r3, #6
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7369              		.loc 1 898 0
 7370 04fe 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 174


 7371 0502 C3F8B820 		str	r2, [r3, #184]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7372              		.loc 1 948 0
 7373 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7374 050a 1346     		mov	r3, r2
 7375 050c DB00     		lsls	r3, r3, #3
 7376 050e 9B1A     		subs	r3, r3, r2
 7377 0510 1B01     		lsls	r3, r3, #4
 7378 0512 03F58473 		add	r3, r3, #264
 7379 0516 D7F88025 		ldr	r2, [r7, #1408]
 7380 051a 1344     		add	r3, r3, r2
 7381 051c DA1D     		adds	r2, r3, #7
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7382              		.loc 1 898 0
 7383 051e 07F21C43 		addw	r3, r7, #1052
 7384 0522 C3F8BC20 		str	r2, [r3, #188]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7385              		.loc 1 949 0
 7386 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7387 052a D7F88015 		ldr	r1, [r7, #1408]
 7388 052e 1346     		mov	r3, r2
 7389 0530 DB00     		lsls	r3, r3, #3
 7390 0532 9B1A     		subs	r3, r3, r2
 7391 0534 1B01     		lsls	r3, r3, #4
 7392 0536 0B44     		add	r3, r3, r1
 7393 0538 03F58873 		add	r3, r3, #272
 7394 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7395 053e 1A46     		mov	r2, r3
 7396 0540 1346     		mov	r3, r2
 7397 0542 5B00     		lsls	r3, r3, #1
 7398 0544 1344     		add	r3, r3, r2
 7399 0546 1B01     		lsls	r3, r3, #4
 7400 0548 03F5C873 		add	r3, r3, #400
 7401 054c D7F88025 		ldr	r2, [r7, #1408]
 7402 0550 1344     		add	r3, r3, r2
 7403 0552 5A1D     		adds	r2, r3, #5
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7404              		.loc 1 898 0
 7405 0554 07F21C43 		addw	r3, r7, #1052
 7406 0558 C3F8C020 		str	r2, [r3, #192]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7407              		.loc 1 950 0
 7408 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7409 0560 D7F88015 		ldr	r1, [r7, #1408]
 7410 0564 1346     		mov	r3, r2
 7411 0566 DB00     		lsls	r3, r3, #3
 7412 0568 9B1A     		subs	r3, r3, r2
 7413 056a 1B01     		lsls	r3, r3, #4
 7414 056c 0B44     		add	r3, r3, r1
 7415 056e 03F58873 		add	r3, r3, #272
 7416 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7417 0574 1A46     		mov	r2, r3
 7418 0576 1346     		mov	r3, r2
 7419 0578 5B00     		lsls	r3, r3, #1
 7420 057a 1344     		add	r3, r3, r2
 7421 057c 1B01     		lsls	r3, r3, #4
 7422 057e 03F5CC73 		add	r3, r3, #408
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 175


 7423 0582 D7F88025 		ldr	r2, [r7, #1408]
 7424 0586 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7425              		.loc 1 898 0
 7426 0588 07F21C43 		addw	r3, r7, #1052
 7427 058c C3F8C420 		str	r2, [r3, #196]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7428              		.loc 1 951 0
 7429 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7430 0594 D7F88015 		ldr	r1, [r7, #1408]
 7431 0598 1346     		mov	r3, r2
 7432 059a DB00     		lsls	r3, r3, #3
 7433 059c 9B1A     		subs	r3, r3, r2
 7434 059e 1B01     		lsls	r3, r3, #4
 7435 05a0 0B44     		add	r3, r3, r1
 7436 05a2 03F58873 		add	r3, r3, #272
 7437 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7438 05a8 1A46     		mov	r2, r3
 7439 05aa 1346     		mov	r3, r2
 7440 05ac 5B00     		lsls	r3, r3, #1
 7441 05ae 1344     		add	r3, r3, r2
 7442 05b0 1B01     		lsls	r3, r3, #4
 7443 05b2 03F5D073 		add	r3, r3, #416
 7444 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7445 05ba 1344     		add	r3, r3, r2
 7446 05bc 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7447              		.loc 1 898 0
 7448 05be 07F21C43 		addw	r3, r7, #1052
 7449 05c2 C3F8C820 		str	r2, [r3, #200]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7450              		.loc 1 952 0
 7451 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7452 05ca 1346     		mov	r3, r2
 7453 05cc DB00     		lsls	r3, r3, #3
 7454 05ce 9B1A     		subs	r3, r3, r2
 7455 05d0 1B01     		lsls	r3, r3, #4
 7456 05d2 E033     		adds	r3, r3, #224
 7457 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7458 05d8 1344     		add	r3, r3, r2
 7459 05da DA1C     		adds	r2, r3, #3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7460              		.loc 1 898 0
 7461 05dc 07F21C43 		addw	r3, r7, #1052
 7462 05e0 C3F8CC20 		str	r2, [r3, #204]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7463              		.loc 1 953 0
 7464 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7465 05e8 1346     		mov	r3, r2
 7466 05ea DB00     		lsls	r3, r3, #3
 7467 05ec 9B1A     		subs	r3, r3, r2
 7468 05ee 1B01     		lsls	r3, r3, #4
 7469 05f0 E033     		adds	r3, r3, #224
 7470 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7471 05f6 1344     		add	r3, r3, r2
 7472 05f8 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 176


 7473              		.loc 1 898 0
 7474 05fa 07F21C43 		addw	r3, r7, #1052
 7475 05fe C3F8D020 		str	r2, [r3, #208]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7476              		.loc 1 954 0
 7477 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7478 0606 1346     		mov	r3, r2
 7479 0608 DB00     		lsls	r3, r3, #3
 7480 060a 9B1A     		subs	r3, r3, r2
 7481 060c 1B01     		lsls	r3, r3, #4
 7482 060e E833     		adds	r3, r3, #232
 7483 0610 D7F88025 		ldr	r2, [r7, #1408]
 7484 0614 1344     		add	r3, r3, r2
 7485 0616 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7486              		.loc 1 898 0
 7487 0618 07F21C43 		addw	r3, r7, #1052
 7488 061c C3F8D420 		str	r2, [r3, #212]
 955:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7489              		.loc 1 955 0
 7490 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7491 0624 1346     		mov	r3, r2
 7492 0626 DB00     		lsls	r3, r3, #3
 7493 0628 9B1A     		subs	r3, r3, r2
 7494 062a 1B01     		lsls	r3, r3, #4
 7495 062c 03F58473 		add	r3, r3, #264
 7496 0630 D7F88025 		ldr	r2, [r7, #1408]
 7497 0634 1344     		add	r3, r3, r2
 7498 0636 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7499              		.loc 1 898 0
 7500 0638 07F21C43 		addw	r3, r7, #1052
 7501 063c C3F8D820 		str	r2, [r3, #216]
 956:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7502              		.loc 1 956 0
 7503 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7504 0644 D7F88015 		ldr	r1, [r7, #1408]
 7505 0648 1346     		mov	r3, r2
 7506 064a DB00     		lsls	r3, r3, #3
 7507 064c 9B1A     		subs	r3, r3, r2
 7508 064e 1B01     		lsls	r3, r3, #4
 7509 0650 0B44     		add	r3, r3, r1
 7510 0652 03F58873 		add	r3, r3, #272
 7511 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7512 0658 1A46     		mov	r2, r3
 7513 065a 1346     		mov	r3, r2
 7514 065c 5B00     		lsls	r3, r3, #1
 7515 065e 1344     		add	r3, r3, r2
 7516 0660 1B01     		lsls	r3, r3, #4
 7517 0662 03F5D873 		add	r3, r3, #432
 7518 0666 D7F88025 		ldr	r2, [r7, #1408]
 7519 066a 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7520              		.loc 1 898 0
 7521 066c 07F21C43 		addw	r3, r7, #1052
 7522 0670 C3F8DC20 		str	r2, [r3, #220]
 957:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 177


 7523              		.loc 1 957 0
 7524 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7525 0678 D7F88015 		ldr	r1, [r7, #1408]
 7526 067c 1346     		mov	r3, r2
 7527 067e DB00     		lsls	r3, r3, #3
 7528 0680 9B1A     		subs	r3, r3, r2
 7529 0682 1B01     		lsls	r3, r3, #4
 7530 0684 0B44     		add	r3, r3, r1
 7531 0686 03F58873 		add	r3, r3, #272
 7532 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7533 068c 1A46     		mov	r2, r3
 7534 068e 1346     		mov	r3, r2
 7535 0690 5B00     		lsls	r3, r3, #1
 7536 0692 1344     		add	r3, r3, r2
 7537 0694 1B01     		lsls	r3, r3, #4
 7538 0696 03F5D873 		add	r3, r3, #432
 7539 069a D7F88025 		ldr	r2, [r7, #1408]
 7540 069e 1344     		add	r3, r3, r2
 7541 06a0 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7542              		.loc 1 898 0
 7543 06a2 07F21C43 		addw	r3, r7, #1052
 7544 06a6 C3F8E020 		str	r2, [r3, #224]
 958:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7545              		.loc 1 958 0
 7546 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7547 06ae 1346     		mov	r3, r2
 7548 06b0 DB00     		lsls	r3, r3, #3
 7549 06b2 9B1A     		subs	r3, r3, r2
 7550 06b4 1B01     		lsls	r3, r3, #4
 7551 06b6 E033     		adds	r3, r3, #224
 7552 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7553 06bc 1344     		add	r3, r3, r2
 7554 06be 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7555              		.loc 1 898 0
 7556 06c0 07F21C43 		addw	r3, r7, #1052
 7557 06c4 C3F8E420 		str	r2, [r3, #228]
 959:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7558              		.loc 1 959 0
 7559 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7560 06cc 1346     		mov	r3, r2
 7561 06ce DB00     		lsls	r3, r3, #3
 7562 06d0 9B1A     		subs	r3, r3, r2
 7563 06d2 1B01     		lsls	r3, r3, #4
 7564 06d4 F033     		adds	r3, r3, #240
 7565 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7566 06da 1344     		add	r3, r3, r2
 7567 06dc 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7568              		.loc 1 898 0
 7569 06de 07F21C43 		addw	r3, r7, #1052
 7570 06e2 C3F8E820 		str	r2, [r3, #232]
 960:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7571              		.loc 1 960 0
 7572 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7573 06ea 1346     		mov	r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 178


 7574 06ec DB00     		lsls	r3, r3, #3
 7575 06ee 9B1A     		subs	r3, r3, r2
 7576 06f0 1B01     		lsls	r3, r3, #4
 7577 06f2 03F58873 		add	r3, r3, #272
 7578 06f6 D7F88025 		ldr	r2, [r7, #1408]
 7579 06fa 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7580              		.loc 1 898 0
 7581 06fc 07F21C43 		addw	r3, r7, #1052
 7582 0700 C3F8EC20 		str	r2, [r3, #236]
 961:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7583              		.loc 1 961 0
 7584 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7585 0708 1346     		mov	r3, r2
 7586 070a DB00     		lsls	r3, r3, #3
 7587 070c 9B1A     		subs	r3, r3, r2
 7588 070e 1B01     		lsls	r3, r3, #4
 7589 0710 E033     		adds	r3, r3, #224
 7590 0712 D7F88025 		ldr	r2, [r7, #1408]
 7591 0716 1344     		add	r3, r3, r2
 7592 0718 9A1C     		adds	r2, r3, #2
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7593              		.loc 1 898 0
 7594 071a 07F21C43 		addw	r3, r7, #1052
 7595 071e C3F8F020 		str	r2, [r3, #240]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7596              		.loc 1 962 0
 7597 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7598 0726 1346     		mov	r3, r2
 7599 0728 DB00     		lsls	r3, r3, #3
 7600 072a 9B1A     		subs	r3, r3, r2
 7601 072c 1B01     		lsls	r3, r3, #4
 7602 072e 03F58873 		add	r3, r3, #272
 7603 0732 D7F88025 		ldr	r2, [r7, #1408]
 7604 0736 1344     		add	r3, r3, r2
 7605 0738 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7606              		.loc 1 898 0
 7607 073a 07F21C43 		addw	r3, r7, #1052
 7608 073e C3F8F420 		str	r2, [r3, #244]
 963:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7609              		.loc 1 963 0
 7610 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7611 0746 1346     		mov	r3, r2
 7612 0748 DB00     		lsls	r3, r3, #3
 7613 074a 9B1A     		subs	r3, r3, r2
 7614 074c 1B01     		lsls	r3, r3, #4
 7615 074e 03F58873 		add	r3, r3, #272
 7616 0752 D7F88025 		ldr	r2, [r7, #1408]
 7617 0756 1344     		add	r3, r3, r2
 7618 0758 9A1C     		adds	r2, r3, #2
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7619              		.loc 1 898 0
 7620 075a 07F21C43 		addw	r3, r7, #1052
 7621 075e C3F8F820 		str	r2, [r3, #248]
 964:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7622              		.loc 1 964 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 179


 7623 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7624 0766 D7F88015 		ldr	r1, [r7, #1408]
 7625 076a 1346     		mov	r3, r2
 7626 076c DB00     		lsls	r3, r3, #3
 7627 076e 9B1A     		subs	r3, r3, r2
 7628 0770 1B01     		lsls	r3, r3, #4
 7629 0772 0B44     		add	r3, r3, r1
 7630 0774 03F58873 		add	r3, r3, #272
 7631 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7632 077a 1A46     		mov	r2, r3
 7633 077c 1346     		mov	r3, r2
 7634 077e 5B00     		lsls	r3, r3, #1
 7635 0780 1344     		add	r3, r3, r2
 7636 0782 1B01     		lsls	r3, r3, #4
 7637 0784 03F5D873 		add	r3, r3, #432
 7638 0788 D7F88025 		ldr	r2, [r7, #1408]
 7639 078c 1344     		add	r3, r3, r2
 7640 078e 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7641              		.loc 1 898 0
 7642 0790 07F21C43 		addw	r3, r7, #1052
 7643 0794 C3F8FC20 		str	r2, [r3, #252]
 965:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7644              		.loc 1 965 0
 7645 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7646 079c D7F88015 		ldr	r1, [r7, #1408]
 7647 07a0 1346     		mov	r3, r2
 7648 07a2 DB00     		lsls	r3, r3, #3
 7649 07a4 9B1A     		subs	r3, r3, r2
 7650 07a6 1B01     		lsls	r3, r3, #4
 7651 07a8 0B44     		add	r3, r3, r1
 7652 07aa 03F58873 		add	r3, r3, #272
 7653 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7654 07b0 1A46     		mov	r2, r3
 7655 07b2 1346     		mov	r3, r2
 7656 07b4 5B00     		lsls	r3, r3, #1
 7657 07b6 1344     		add	r3, r3, r2
 7658 07b8 1B01     		lsls	r3, r3, #4
 7659 07ba 03F5D873 		add	r3, r3, #432
 7660 07be D7F88025 		ldr	r2, [r7, #1408]
 7661 07c2 1344     		add	r3, r3, r2
 7662 07c4 5A1D     		adds	r2, r3, #5
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7663              		.loc 1 898 0
 7664 07c6 07F21C43 		addw	r3, r7, #1052
 7665 07ca C3F80021 		str	r2, [r3, #256]
 966:..\src/command_processing.c ****         
 967:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7666              		.loc 1 967 0
 7667 07ce D7F88035 		ldr	r3, [r7, #1408]
 7668 07d2 03F5C872 		add	r2, r3, #400
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7669              		.loc 1 898 0
 7670 07d6 07F21C43 		addw	r3, r7, #1052
 7671 07da C3F80421 		str	r2, [r3, #260]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7672              		.loc 1 968 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 180


 7673 07de D7F88035 		ldr	r3, [r7, #1408]
 7674 07e2 03F5E072 		add	r2, r3, #448
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7675              		.loc 1 898 0
 7676 07e6 07F21C43 		addw	r3, r7, #1052
 7677 07ea C3F80821 		str	r2, [r3, #264]
 969:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7678              		.loc 1 969 0
 7679 07ee D7F88035 		ldr	r3, [r7, #1408]
 7680 07f2 03F22722 		addw	r2, r3, #551
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7681              		.loc 1 898 0
 7682 07f6 07F21C43 		addw	r3, r7, #1052
 7683 07fa C3F80C21 		str	r2, [r3, #268]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7684              		.loc 1 970 0
 7685 07fe D7F88035 		ldr	r3, [r7, #1408]
 7686 0802 03F50A72 		add	r2, r3, #552
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7687              		.loc 1 898 0
 7688 0806 07F21C43 		addw	r3, r7, #1052
 7689 080a C3F81021 		str	r2, [r3, #272]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7690              		.loc 1 971 0
 7691 080e D7F88035 		ldr	r3, [r7, #1408]
 7692 0812 03F22E22 		addw	r2, r3, #558
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7693              		.loc 1 898 0
 7694 0816 07F21C43 		addw	r3, r7, #1052
 7695 081a C3F81421 		str	r2, [r3, #276]
 972:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7696              		.loc 1 972 0
 7697 081e D7F88035 		ldr	r3, [r7, #1408]
 7698 0822 03F50D72 		add	r2, r3, #564
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7699              		.loc 1 898 0
 7700 0826 07F21C43 		addw	r3, r7, #1052
 7701 082a C3F81821 		str	r2, [r3, #280]
 973:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7702              		.loc 1 973 0
 7703 082e D7F88035 		ldr	r3, [r7, #1408]
 7704 0832 03F52C72 		add	r2, r3, #688
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7705              		.loc 1 898 0
 7706 0836 07F21C43 		addw	r3, r7, #1052
 7707 083a C3F81C21 		str	r2, [r3, #284]
 974:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7708              		.loc 1 974 0
 7709 083e D7F88035 		ldr	r3, [r7, #1408]
 7710 0842 03F2B222 		addw	r2, r3, #690
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7711              		.loc 1 898 0
 7712 0846 07F21C43 		addw	r3, r7, #1052
 7713 084a C3F82021 		str	r2, [r3, #288]
 975:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7714              		.loc 1 975 0
 7715 084e D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 181


 7716 0852 03F52D72 		add	r2, r3, #692
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7717              		.loc 1 898 0
 7718 0856 07F21C43 		addw	r3, r7, #1052
 7719 085a C3F82421 		str	r2, [r3, #292]
 976:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7720              		.loc 1 976 0
 7721 085e D7F88035 		ldr	r3, [r7, #1408]
 7722 0862 03F1AC02 		add	r2, r3, #172
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7723              		.loc 1 898 0
 7724 0866 07F21C43 		addw	r3, r7, #1052
 7725 086a C3F82821 		str	r2, [r3, #296]
 977:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7726              		.loc 1 977 0
 7727 086e D7F88035 		ldr	r3, [r7, #1408]
 7728 0872 03F53872 		add	r2, r3, #736
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7729              		.loc 1 898 0
 7730 0876 07F21C43 		addw	r3, r7, #1052
 7731 087a C3F82C21 		str	r2, [r3, #300]
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7732              		.loc 1 978 0
 7733 087e D7F88035 		ldr	r3, [r7, #1408]
 7734 0882 03F2E222 		addw	r2, r3, #738
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7735              		.loc 1 898 0
 7736 0886 07F21C43 		addw	r3, r7, #1052
 7737 088a C3F83021 		str	r2, [r3, #304]
 979:..\src/command_processing.c ****         
 980:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7738              		.loc 1 980 0
 7739 088e D7F88035 		ldr	r3, [r7, #1408]
 7740 0892 03F2E622 		addw	r2, r3, #742
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7741              		.loc 1 898 0
 7742 0896 07F21C43 		addw	r3, r7, #1052
 7743 089a C3F83421 		str	r2, [r3, #308]
 981:..\src/command_processing.c ****         
 982:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7744              		.loc 1 982 0
 7745 089e D7F88035 		ldr	r3, [r7, #1408]
 7746 08a2 03F53072 		add	r2, r3, #704
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7747              		.loc 1 898 0
 7748 08a6 07F21C43 		addw	r3, r7, #1052
 7749 08aa C3F83821 		str	r2, [r3, #312]
 983:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7750              		.loc 1 983 0
 7751 08ae D7F88035 		ldr	r3, [r7, #1408]
 7752 08b2 03F2C122 		addw	r2, r3, #705
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7753              		.loc 1 898 0
 7754 08b6 07F21C43 		addw	r3, r7, #1052
 7755 08ba C3F83C21 		str	r2, [r3, #316]
 984:..\src/command_processing.c ****         
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 182


 7756              		.loc 1 985 0
 7757 08be D7F88035 		ldr	r3, [r7, #1408]
 7758 08c2 03F53472 		add	r2, r3, #720
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7759              		.loc 1 898 0
 7760 08c6 07F21C43 		addw	r3, r7, #1052
 7761 08ca C3F84021 		str	r2, [r3, #320]
 986:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7762              		.loc 1 986 0
 7763 08ce D7F88035 		ldr	r3, [r7, #1408]
 7764 08d2 03F53572 		add	r2, r3, #724
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7765              		.loc 1 898 0
 7766 08d6 07F21C43 		addw	r3, r7, #1052
 7767 08da C3F84421 		str	r2, [r3, #324]
 987:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7768              		.loc 1 987 0
 7769 08de D7F88035 		ldr	r3, [r7, #1408]
 7770 08e2 03F53672 		add	r2, r3, #728
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7771              		.loc 1 898 0
 7772 08e6 07F21C43 		addw	r3, r7, #1052
 7773 08ea C3F84821 		str	r2, [r3, #328]
 988:..\src/command_processing.c ****         
 989:..\src/command_processing.c **** 
 990:..\src/command_processing.c ****     };
 991:..\src/command_processing.c ****     
 992:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7774              		.loc 1 992 0
 7775 08ee 07F57273 		add	r3, r7, #968
 7776 08f2 F64A     		ldr	r2, .L372
 7777 08f4 1846     		mov	r0, r3
 7778 08f6 1146     		mov	r1, r2
 7779 08f8 5323     		movs	r3, #83
 7780 08fa 1A46     		mov	r2, r3
 7781 08fc FFF7FEFF 		bl	memcpy
 993:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 994:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 995:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 996:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 997:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 998:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 999:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1000:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1001:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1002:..\src/command_processing.c ****         
1003:..\src/command_processing.c ****         // GENERIC PARAMS
1004:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1005:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1006:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1007:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1008:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1009:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1010:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1011:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1012:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1013:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 183


1014:..\src/command_processing.c ****         TYPE_UINT16,
1015:..\src/command_processing.c ****         
1016:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1017:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1018:..\src/command_processing.c ****     };
1019:..\src/command_processing.c **** 
1020:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7782              		.loc 1 1020 0
 7783 0900 07F55D73 		add	r3, r7, #884
 7784 0904 0122     		movs	r2, #1
 7785 0906 1A70     		strb	r2, [r3]
 7786 0908 07F55D73 		add	r3, r7, #884
 7787 090c 0322     		movs	r2, #3
 7788 090e 5A70     		strb	r2, [r3, #1]
 7789 0910 07F55D73 		add	r3, r7, #884
 7790 0914 0322     		movs	r2, #3
 7791 0916 9A70     		strb	r2, [r3, #2]
 7792 0918 07F55D73 		add	r3, r7, #884
 7793 091c 0122     		movs	r2, #1
 7794 091e DA70     		strb	r2, [r3, #3]
 7795 0920 07F55D73 		add	r3, r7, #884
 7796 0924 0122     		movs	r2, #1
 7797 0926 1A71     		strb	r2, [r3, #4]
 7798 0928 07F55D73 		add	r3, r7, #884
 7799 092c 0122     		movs	r2, #1
 7800 092e 5A71     		strb	r2, [r3, #5]
 7801 0930 07F55D73 		add	r3, r7, #884
 7802 0934 0322     		movs	r2, #3
 7803 0936 9A71     		strb	r2, [r3, #6]
 7804 0938 07F55D73 		add	r3, r7, #884
 7805 093c 0322     		movs	r2, #3
 7806 093e DA71     		strb	r2, [r3, #7]
 7807 0940 07F55D73 		add	r3, r7, #884
 7808 0944 0322     		movs	r2, #3
 7809 0946 1A72     		strb	r2, [r3, #8]
 7810 0948 07F55D73 		add	r3, r7, #884
 7811 094c 0122     		movs	r2, #1
 7812 094e 5A72     		strb	r2, [r3, #9]
 7813 0950 07F55D73 		add	r3, r7, #884
 7814 0954 0222     		movs	r2, #2
 7815 0956 9A72     		strb	r2, [r3, #10]
 7816 0958 07F55D73 		add	r3, r7, #884
 7817 095c 0222     		movs	r2, #2
 7818 095e DA72     		strb	r2, [r3, #11]
 7819 0960 07F55D73 		add	r3, r7, #884
 7820 0964 0122     		movs	r2, #1
 7821 0966 1A73     		strb	r2, [r3, #12]
 7822 0968 07F55D73 		add	r3, r7, #884
 7823 096c 0222     		movs	r2, #2
 7824 096e 5A73     		strb	r2, [r3, #13]
 7825 0970 07F55D73 		add	r3, r7, #884
 7826 0974 0122     		movs	r2, #1
 7827 0976 9A73     		strb	r2, [r3, #14]
 7828 0978 07F55D73 		add	r3, r7, #884
 7829 097c 0222     		movs	r2, #2
 7830 097e DA73     		strb	r2, [r3, #15]
 7831 0980 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 184


 7832 0984 0222     		movs	r2, #2
 7833 0986 1A74     		strb	r2, [r3, #16]
 7834 0988 07F55D73 		add	r3, r7, #884
 7835 098c 0122     		movs	r2, #1
 7836 098e 5A74     		strb	r2, [r3, #17]
 7837 0990 07F55D73 		add	r3, r7, #884
 7838 0994 0122     		movs	r2, #1
 7839 0996 9A74     		strb	r2, [r3, #18]
 7840 0998 07F55D73 		add	r3, r7, #884
 7841 099c 0122     		movs	r2, #1
 7842 099e DA74     		strb	r2, [r3, #19]
 7843 09a0 07F55D73 		add	r3, r7, #884
 7844 09a4 0622     		movs	r2, #6
 7845 09a6 1A75     		strb	r2, [r3, #20]
 7846 09a8 07F55D73 		add	r3, r7, #884
 7847 09ac 0322     		movs	r2, #3
 7848 09ae 5A75     		strb	r2, [r3, #21]
 7849 09b0 07F55D73 		add	r3, r7, #884
 7850 09b4 0122     		movs	r2, #1
 7851 09b6 9A75     		strb	r2, [r3, #22]
 7852 09b8 07F55D73 		add	r3, r7, #884
 7853 09bc 0122     		movs	r2, #1
 7854 09be DA75     		strb	r2, [r3, #23]
 7855 09c0 07F55D73 		add	r3, r7, #884
 7856 09c4 0122     		movs	r2, #1
 7857 09c6 1A76     		strb	r2, [r3, #24]
 7858 09c8 07F55D73 		add	r3, r7, #884
 7859 09cc 0122     		movs	r2, #1
 7860 09ce 5A76     		strb	r2, [r3, #25]
 7861 09d0 07F55D73 		add	r3, r7, #884
 7862 09d4 0122     		movs	r2, #1
 7863 09d6 9A76     		strb	r2, [r3, #26]
 7864 09d8 07F55D73 		add	r3, r7, #884
 7865 09dc 0122     		movs	r2, #1
 7866 09de DA76     		strb	r2, [r3, #27]
 7867 09e0 07F55D73 		add	r3, r7, #884
 7868 09e4 0122     		movs	r2, #1
 7869 09e6 1A77     		strb	r2, [r3, #28]
 7870 09e8 07F55D73 		add	r3, r7, #884
 7871 09ec 0122     		movs	r2, #1
 7872 09ee 5A77     		strb	r2, [r3, #29]
 7873 09f0 07F55D73 		add	r3, r7, #884
 7874 09f4 0122     		movs	r2, #1
 7875 09f6 9A77     		strb	r2, [r3, #30]
 7876 09f8 07F55D73 		add	r3, r7, #884
 7877 09fc 0622     		movs	r2, #6
 7878 09fe DA77     		strb	r2, [r3, #31]
 7879 0a00 07F55D73 		add	r3, r7, #884
 7880 0a04 0122     		movs	r2, #1
 7881 0a06 83F82020 		strb	r2, [r3, #32]
 7882 0a0a 07F55D73 		add	r3, r7, #884
 7883 0a0e 0522     		movs	r2, #5
 7884 0a10 83F82120 		strb	r2, [r3, #33]
 7885 0a14 07F55D73 		add	r3, r7, #884
 7886 0a18 0122     		movs	r2, #1
 7887 0a1a 83F82220 		strb	r2, [r3, #34]
 7888 0a1e 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 185


 7889 0a22 0622     		movs	r2, #6
 7890 0a24 83F82320 		strb	r2, [r3, #35]
 7891 0a28 07F55D73 		add	r3, r7, #884
 7892 0a2c 0122     		movs	r2, #1
 7893 0a2e 83F82420 		strb	r2, [r3, #36]
 7894 0a32 07F55D73 		add	r3, r7, #884
 7895 0a36 0122     		movs	r2, #1
 7896 0a38 83F82520 		strb	r2, [r3, #37]
 7897 0a3c 07F55D73 		add	r3, r7, #884
 7898 0a40 0122     		movs	r2, #1
 7899 0a42 83F82620 		strb	r2, [r3, #38]
 7900 0a46 07F55D73 		add	r3, r7, #884
 7901 0a4a 0122     		movs	r2, #1
 7902 0a4c 83F82720 		strb	r2, [r3, #39]
 7903 0a50 07F55D73 		add	r3, r7, #884
 7904 0a54 0322     		movs	r2, #3
 7905 0a56 83F82820 		strb	r2, [r3, #40]
 7906 0a5a 07F55D73 		add	r3, r7, #884
 7907 0a5e 0322     		movs	r2, #3
 7908 0a60 83F82920 		strb	r2, [r3, #41]
 7909 0a64 07F55D73 		add	r3, r7, #884
 7910 0a68 0122     		movs	r2, #1
 7911 0a6a 83F82A20 		strb	r2, [r3, #42]
 7912 0a6e 07F55D73 		add	r3, r7, #884
 7913 0a72 0322     		movs	r2, #3
 7914 0a74 83F82B20 		strb	r2, [r3, #43]
 7915 0a78 07F55D73 		add	r3, r7, #884
 7916 0a7c 0322     		movs	r2, #3
 7917 0a7e 83F82C20 		strb	r2, [r3, #44]
 7918 0a82 07F55D73 		add	r3, r7, #884
 7919 0a86 0122     		movs	r2, #1
 7920 0a88 83F82D20 		strb	r2, [r3, #45]
 7921 0a8c 07F55D73 		add	r3, r7, #884
 7922 0a90 0122     		movs	r2, #1
 7923 0a92 83F82E20 		strb	r2, [r3, #46]
 7924 0a96 07F55D73 		add	r3, r7, #884
 7925 0a9a 0122     		movs	r2, #1
 7926 0a9c 83F82F20 		strb	r2, [r3, #47]
 7927 0aa0 07F55D73 		add	r3, r7, #884
 7928 0aa4 0322     		movs	r2, #3
 7929 0aa6 83F83020 		strb	r2, [r3, #48]
 7930 0aaa 07F55D73 		add	r3, r7, #884
 7931 0aae 0322     		movs	r2, #3
 7932 0ab0 83F83120 		strb	r2, [r3, #49]
 7933 0ab4 07F55D73 		add	r3, r7, #884
 7934 0ab8 0322     		movs	r2, #3
 7935 0aba 83F83220 		strb	r2, [r3, #50]
 7936 0abe 07F55D73 		add	r3, r7, #884
 7937 0ac2 0122     		movs	r2, #1
 7938 0ac4 83F83320 		strb	r2, [r3, #51]
 7939 0ac8 07F55D73 		add	r3, r7, #884
 7940 0acc 0222     		movs	r2, #2
 7941 0ace 83F83420 		strb	r2, [r3, #52]
 7942 0ad2 07F55D73 		add	r3, r7, #884
 7943 0ad6 0222     		movs	r2, #2
 7944 0ad8 83F83520 		strb	r2, [r3, #53]
 7945 0adc 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 186


 7946 0ae0 0122     		movs	r2, #1
 7947 0ae2 83F83620 		strb	r2, [r3, #54]
 7948 0ae6 07F55D73 		add	r3, r7, #884
 7949 0aea 0122     		movs	r2, #1
 7950 0aec 83F83720 		strb	r2, [r3, #55]
 7951 0af0 07F55D73 		add	r3, r7, #884
 7952 0af4 0122     		movs	r2, #1
 7953 0af6 83F83820 		strb	r2, [r3, #56]
 7954 0afa 07F55D73 		add	r3, r7, #884
 7955 0afe 0122     		movs	r2, #1
 7956 0b00 83F83920 		strb	r2, [r3, #57]
 7957 0b04 07F55D73 		add	r3, r7, #884
 7958 0b08 0622     		movs	r2, #6
 7959 0b0a 83F83A20 		strb	r2, [r3, #58]
 7960 0b0e 07F55D73 		add	r3, r7, #884
 7961 0b12 0122     		movs	r2, #1
 7962 0b14 83F83B20 		strb	r2, [r3, #59]
 7963 0b18 07F55D73 		add	r3, r7, #884
 7964 0b1c 0122     		movs	r2, #1
 7965 0b1e 83F83C20 		strb	r2, [r3, #60]
 7966 0b22 07F55D73 		add	r3, r7, #884
 7967 0b26 0122     		movs	r2, #1
 7968 0b28 83F83D20 		strb	r2, [r3, #61]
 7969 0b2c 07F55D73 		add	r3, r7, #884
 7970 0b30 0122     		movs	r2, #1
 7971 0b32 83F83E20 		strb	r2, [r3, #62]
 7972 0b36 07F55D73 		add	r3, r7, #884
 7973 0b3a 0322     		movs	r2, #3
 7974 0b3c 83F83F20 		strb	r2, [r3, #63]
 7975 0b40 07F55D73 		add	r3, r7, #884
 7976 0b44 0322     		movs	r2, #3
 7977 0b46 83F84020 		strb	r2, [r3, #64]
1021:..\src/command_processing.c ****         1, 3, 3, 1, 
1022:..\src/command_processing.c ****         1, 1, 3, 3,
1023:..\src/command_processing.c ****         3, 1, 2, 2, 
1024:..\src/command_processing.c ****         1, 2, 1, 2,
1025:..\src/command_processing.c ****         2, 1, 1, 1, 
1026:..\src/command_processing.c ****         6, 3, 1, 1,
1027:..\src/command_processing.c ****         1, 1, 1, 1, 
1028:..\src/command_processing.c ****         1, 1, 1, 6,
1029:..\src/command_processing.c ****         1, 5, 1, 6,
1030:..\src/command_processing.c ****         
1031:..\src/command_processing.c ****         // GENERIC PARAMS
1032:..\src/command_processing.c ****         1, 1, 1, 1,
1033:..\src/command_processing.c ****         3, 3, 1, 3,
1034:..\src/command_processing.c ****         3, 1, 1, 1,
1035:..\src/command_processing.c ****         3, 3, 3, 1,
1036:..\src/command_processing.c ****         2, 2, 1, 1,
1037:..\src/command_processing.c ****         1, 1, 6, 1,
1038:..\src/command_processing.c ****         1, 1, 1, 3, 
1039:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7978              		.loc 1 1039 0
 7979 0b4a 614B     		ldr	r3, .L372+4
 7980 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1020:..\src/command_processing.c ****         1, 3, 3, 1, 
 7981              		.loc 1 1020 0
 7982 0b4e 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 187


 7983 0b52 83F84120 		strb	r2, [r3, #65]
 7984              		.loc 1 1039 0
 7985 0b56 5E4B     		ldr	r3, .L372+4
 7986 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1020:..\src/command_processing.c ****         1, 3, 3, 1, 
 7987              		.loc 1 1020 0
 7988 0b5a 07F55D73 		add	r3, r7, #884
 7989 0b5e 83F84220 		strb	r2, [r3, #66]
 7990 0b62 07F55D73 		add	r3, r7, #884
 7991 0b66 0122     		movs	r2, #1
 7992 0b68 83F84320 		strb	r2, [r3, #67]
 7993 0b6c 07F55D73 		add	r3, r7, #884
 7994 0b70 0622     		movs	r2, #6
 7995 0b72 83F84420 		strb	r2, [r3, #68]
 7996 0b76 07F55D73 		add	r3, r7, #884
 7997 0b7a 0622     		movs	r2, #6
 7998 0b7c 83F84520 		strb	r2, [r3, #69]
 7999 0b80 07F55D73 		add	r3, r7, #884
 8000 0b84 0122     		movs	r2, #1
 8001 0b86 83F84620 		strb	r2, [r3, #70]
 8002 0b8a 07F55D73 		add	r3, r7, #884
 8003 0b8e 0122     		movs	r2, #1
 8004 0b90 83F84720 		strb	r2, [r3, #71]
 8005 0b94 07F55D73 		add	r3, r7, #884
 8006 0b98 0122     		movs	r2, #1
 8007 0b9a 83F84820 		strb	r2, [r3, #72]
 8008 0b9e 07F55D73 		add	r3, r7, #884
 8009 0ba2 0222     		movs	r2, #2
 8010 0ba4 83F84920 		strb	r2, [r3, #73]
 8011 0ba8 07F55D73 		add	r3, r7, #884
 8012 0bac 0122     		movs	r2, #1
 8013 0bae 83F84A20 		strb	r2, [r3, #74]
 8014 0bb2 07F55D73 		add	r3, r7, #884
 8015 0bb6 0122     		movs	r2, #1
 8016 0bb8 83F84B20 		strb	r2, [r3, #75]
 8017 0bbc 07F55D73 		add	r3, r7, #884
 8018 0bc0 0222     		movs	r2, #2
 8019 0bc2 83F84C20 		strb	r2, [r3, #76]
 8020 0bc6 07F55D73 		add	r3, r7, #884
 8021 0bca 0122     		movs	r2, #1
 8022 0bcc 83F84D20 		strb	r2, [r3, #77]
 8023 0bd0 07F55D73 		add	r3, r7, #884
 8024 0bd4 0122     		movs	r2, #1
 8025 0bd6 83F84E20 		strb	r2, [r3, #78]
 8026 0bda 07F55D73 		add	r3, r7, #884
 8027 0bde 0122     		movs	r2, #1
 8028 0be0 83F84F20 		strb	r2, [r3, #79]
 8029 0be4 07F55D73 		add	r3, r7, #884
 8030 0be8 0122     		movs	r2, #1
 8031 0bea 83F85020 		strb	r2, [r3, #80]
 8032 0bee 07F55D73 		add	r3, r7, #884
 8033 0bf2 0122     		movs	r2, #1
 8034 0bf4 83F85120 		strb	r2, [r3, #81]
 8035 0bf8 07F55D73 		add	r3, r7, #884
 8036 0bfc 0122     		movs	r2, #1
 8037 0bfe 83F85220 		strb	r2, [r3, #82]
1040:..\src/command_processing.c ****         6, 6, 1, 1,
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 188


1041:..\src/command_processing.c ****         1, 2, 1, 1,
1042:..\src/command_processing.c ****         2,
1043:..\src/command_processing.c ****         
1044:..\src/command_processing.c ****            1, 1, 1, 
1045:..\src/command_processing.c ****         1, 1, 1
1046:..\src/command_processing.c ****     };
1047:..\src/command_processing.c ****     
1048:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8038              		.loc 1 1048 0
 8039 0c02 07F54873 		add	r3, r7, #800
 8040 0c06 0022     		movs	r2, #0
 8041 0c08 1A70     		strb	r2, [r3]
 8042 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8043 0c0e 0A33     		adds	r3, r3, #10
 8044 0c10 DAB2     		uxtb	r2, r3
 8045 0c12 07F54873 		add	r3, r7, #800
 8046 0c16 5A70     		strb	r2, [r3, #1]
 8047 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8048 0c1c 0A33     		adds	r3, r3, #10
 8049 0c1e DAB2     		uxtb	r2, r3
 8050 0c20 07F54873 		add	r3, r7, #800
 8051 0c24 9A70     		strb	r2, [r3, #2]
 8052 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8053 0c2a 0A33     		adds	r3, r3, #10
 8054 0c2c DAB2     		uxtb	r2, r3
 8055 0c2e 07F54873 		add	r3, r7, #800
 8056 0c32 DA70     		strb	r2, [r3, #3]
 8057 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 8058 0c38 0A33     		adds	r3, r3, #10
 8059 0c3a DAB2     		uxtb	r2, r3
 8060 0c3c 07F54873 		add	r3, r7, #800
 8061 0c40 1A71     		strb	r2, [r3, #4]
 8062 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8063 0c46 0A33     		adds	r3, r3, #10
 8064 0c48 DAB2     		uxtb	r2, r3
 8065 0c4a 07F54873 		add	r3, r7, #800
 8066 0c4e 5A71     		strb	r2, [r3, #5]
1049:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1050:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8067              		.loc 1 1050 0
 8068 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8069 0c54 D7F88015 		ldr	r1, [r7, #1408]
 8070 0c58 1346     		mov	r3, r2
 8071 0c5a DB00     		lsls	r3, r3, #3
 8072 0c5c 9B1A     		subs	r3, r3, r2
 8073 0c5e 1B01     		lsls	r3, r3, #4
 8074 0c60 0B44     		add	r3, r3, r1
 8075 0c62 03F58873 		add	r3, r3, #272
 8076 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8077              		.loc 1 1048 0
 8078 0c68 1433     		adds	r3, r3, #20
 8079 0c6a DAB2     		uxtb	r2, r3
 8080 0c6c 07F54873 		add	r3, r7, #800
 8081 0c70 9A71     		strb	r2, [r3, #6]
 8082              		.loc 1 1050 0
 8083 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 189


 8084 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8085 0c7a 1346     		mov	r3, r2
 8086 0c7c DB00     		lsls	r3, r3, #3
 8087 0c7e 9B1A     		subs	r3, r3, r2
 8088 0c80 1B01     		lsls	r3, r3, #4
 8089 0c82 0B44     		add	r3, r3, r1
 8090 0c84 03F58873 		add	r3, r3, #272
 8091 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8092              		.loc 1 1048 0
 8093 0c8a 1433     		adds	r3, r3, #20
 8094 0c8c DAB2     		uxtb	r2, r3
 8095 0c8e 07F54873 		add	r3, r7, #800
 8096 0c92 DA71     		strb	r2, [r3, #7]
1051:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8097              		.loc 1 1051 0
 8098 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8099 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8100 0c9c 1346     		mov	r3, r2
 8101 0c9e DB00     		lsls	r3, r3, #3
 8102 0ca0 9B1A     		subs	r3, r3, r2
 8103 0ca2 1B01     		lsls	r3, r3, #4
 8104 0ca4 0B44     		add	r3, r3, r1
 8105 0ca6 03F58873 		add	r3, r3, #272
 8106 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8107              		.loc 1 1048 0
 8108 0cac 1433     		adds	r3, r3, #20
 8109 0cae DAB2     		uxtb	r2, r3
 8110 0cb0 07F54873 		add	r3, r7, #800
 8111 0cb4 1A72     		strb	r2, [r3, #8]
 8112 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8113 0cba 0A33     		adds	r3, r3, #10
 8114 0cbc DAB2     		uxtb	r2, r3
 8115 0cbe 07F54873 		add	r3, r7, #800
 8116 0cc2 5A72     		strb	r2, [r3, #9]
 8117 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8118 0cc8 04E0     		b	.L373
 8119              	.L374:
 8120 0cca 00BF     		.align	2
 8121              	.L372:
 8122 0ccc 24060000 		.word	.LC0
 8123 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8124              	.L373:
 8125 0cd4 0A33     		adds	r3, r3, #10
 8126 0cd6 DAB2     		uxtb	r2, r3
 8127 0cd8 07F54873 		add	r3, r7, #800
 8128 0cdc 9A72     		strb	r2, [r3, #10]
 8129 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8130 0ce2 0A33     		adds	r3, r3, #10
 8131 0ce4 DAB2     		uxtb	r2, r3
 8132 0ce6 07F54873 		add	r3, r7, #800
 8133 0cea DA72     		strb	r2, [r3, #11]
 8134 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8135 0cf0 0A33     		adds	r3, r3, #10
 8136 0cf2 DAB2     		uxtb	r2, r3
 8137 0cf4 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 190


 8138 0cf8 1A73     		strb	r2, [r3, #12]
 8139 0cfa 07F54873 		add	r3, r7, #800
 8140 0cfe 1E22     		movs	r2, #30
 8141 0d00 5A73     		strb	r2, [r3, #13]
 8142 0d02 07F54873 		add	r3, r7, #800
 8143 0d06 1E22     		movs	r2, #30
 8144 0d08 9A73     		strb	r2, [r3, #14]
 8145 0d0a 07F54873 		add	r3, r7, #800
 8146 0d0e 1E22     		movs	r2, #30
 8147 0d10 DA73     		strb	r2, [r3, #15]
 8148 0d12 07F54873 		add	r3, r7, #800
 8149 0d16 1E22     		movs	r2, #30
 8150 0d18 1A74     		strb	r2, [r3, #16]
1052:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1053:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8151              		.loc 1 1053 0
 8152 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8153 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8154 0d22 1346     		mov	r3, r2
 8155 0d24 DB00     		lsls	r3, r3, #3
 8156 0d26 9B1A     		subs	r3, r3, r2
 8157 0d28 1B01     		lsls	r3, r3, #4
 8158 0d2a 0B44     		add	r3, r3, r1
 8159 0d2c 03F58873 		add	r3, r3, #272
 8160 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8161              		.loc 1 1048 0
 8162 0d32 1433     		adds	r3, r3, #20
 8163 0d34 DAB2     		uxtb	r2, r3
 8164 0d36 07F54873 		add	r3, r7, #800
 8165 0d3a 5A74     		strb	r2, [r3, #17]
 8166              		.loc 1 1053 0
 8167 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8168 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8169 0d44 1346     		mov	r3, r2
 8170 0d46 DB00     		lsls	r3, r3, #3
 8171 0d48 9B1A     		subs	r3, r3, r2
 8172 0d4a 1B01     		lsls	r3, r3, #4
 8173 0d4c 0B44     		add	r3, r3, r1
 8174 0d4e 03F58873 		add	r3, r3, #272
 8175 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8176              		.loc 1 1048 0
 8177 0d54 1433     		adds	r3, r3, #20
 8178 0d56 DAB2     		uxtb	r2, r3
 8179 0d58 07F54873 		add	r3, r7, #800
 8180 0d5c 9A74     		strb	r2, [r3, #18]
 8181 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8182 0d62 0A33     		adds	r3, r3, #10
 8183 0d64 DAB2     		uxtb	r2, r3
 8184 0d66 07F54873 		add	r3, r7, #800
 8185 0d6a DA74     		strb	r2, [r3, #19]
 8186 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8187 0d70 0A33     		adds	r3, r3, #10
 8188 0d72 DAB2     		uxtb	r2, r3
 8189 0d74 07F54873 		add	r3, r7, #800
 8190 0d78 1A75     		strb	r2, [r3, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 191


 8191 0d7a 07F54873 		add	r3, r7, #800
 8192 0d7e 0022     		movs	r2, #0
 8193 0d80 5A75     		strb	r2, [r3, #21]
 8194 0d82 07F54873 		add	r3, r7, #800
 8195 0d86 4622     		movs	r2, #70
 8196 0d88 9A75     		strb	r2, [r3, #22]
 8197 0d8a 07F54873 		add	r3, r7, #800
 8198 0d8e 4622     		movs	r2, #70
 8199 0d90 DA75     		strb	r2, [r3, #23]
 8200 0d92 07F54873 		add	r3, r7, #800
 8201 0d96 4622     		movs	r2, #70
 8202 0d98 1A76     		strb	r2, [r3, #24]
 8203 0d9a 07F54873 		add	r3, r7, #800
 8204 0d9e 4622     		movs	r2, #70
 8205 0da0 5A76     		strb	r2, [r3, #25]
 8206 0da2 07F54873 		add	r3, r7, #800
 8207 0da6 1E22     		movs	r2, #30
 8208 0da8 9A76     		strb	r2, [r3, #26]
 8209 0daa 07F54873 		add	r3, r7, #800
 8210 0dae 0022     		movs	r2, #0
 8211 0db0 DA76     		strb	r2, [r3, #27]
 8212 0db2 07F54873 		add	r3, r7, #800
 8213 0db6 2822     		movs	r2, #40
 8214 0db8 1A77     		strb	r2, [r3, #28]
 8215 0dba 07F54873 		add	r3, r7, #800
 8216 0dbe 3222     		movs	r2, #50
 8217 0dc0 5A77     		strb	r2, [r3, #29]
 8218 0dc2 07F54873 		add	r3, r7, #800
 8219 0dc6 0022     		movs	r2, #0
 8220 0dc8 9A77     		strb	r2, [r3, #30]
 8221 0dca 07F54873 		add	r3, r7, #800
 8222 0dce 3222     		movs	r2, #50
 8223 0dd0 DA77     		strb	r2, [r3, #31]
 8224 0dd2 07F54873 		add	r3, r7, #800
 8225 0dd6 2822     		movs	r2, #40
 8226 0dd8 83F82020 		strb	r2, [r3, #32]
 8227 0ddc 07F54873 		add	r3, r7, #800
 8228 0de0 2822     		movs	r2, #40
 8229 0de2 83F82120 		strb	r2, [r3, #33]
 8230 0de6 07F54873 		add	r3, r7, #800
 8231 0dea 0022     		movs	r2, #0
 8232 0dec 83F82220 		strb	r2, [r3, #34]
1054:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1055:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1056:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1057:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8233              		.loc 1 1057 0
 8234 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8235 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8236              		.loc 1 1048 0
 8237 0df8 3C33     		adds	r3, r3, #60
 8238 0dfa DAB2     		uxtb	r2, r3
 8239 0dfc 07F54873 		add	r3, r7, #800
 8240 0e00 83F82320 		strb	r2, [r3, #35]
 8241 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8242 0e08 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 192


 8243 0e0a DAB2     		uxtb	r2, r3
 8244 0e0c 07F54873 		add	r3, r7, #800
 8245 0e10 83F82420 		strb	r2, [r3, #36]
 8246 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8247 0e18 0A33     		adds	r3, r3, #10
 8248 0e1a DAB2     		uxtb	r2, r3
 8249 0e1c 07F54873 		add	r3, r7, #800
 8250 0e20 83F82520 		strb	r2, [r3, #37]
 8251 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8252 0e28 0A33     		adds	r3, r3, #10
 8253 0e2a DAB2     		uxtb	r2, r3
 8254 0e2c 07F54873 		add	r3, r7, #800
 8255 0e30 83F82620 		strb	r2, [r3, #38]
 8256 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8257 0e38 0A33     		adds	r3, r3, #10
 8258 0e3a DAB2     		uxtb	r2, r3
 8259 0e3c 07F54873 		add	r3, r7, #800
 8260 0e40 83F82720 		strb	r2, [r3, #39]
1058:..\src/command_processing.c ****         
1059:..\src/command_processing.c ****         // GENERIC PARAMS
1060:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1061:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8261              		.loc 1 1061 0
 8262 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8263 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8264 0e4c 1346     		mov	r3, r2
 8265 0e4e DB00     		lsls	r3, r3, #3
 8266 0e50 9B1A     		subs	r3, r3, r2
 8267 0e52 1B01     		lsls	r3, r3, #4
 8268 0e54 0B44     		add	r3, r3, r1
 8269 0e56 03F58873 		add	r3, r3, #272
 8270 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8271              		.loc 1 1048 0
 8272 0e5c 1433     		adds	r3, r3, #20
 8273 0e5e DAB2     		uxtb	r2, r3
 8274 0e60 07F54873 		add	r3, r7, #800
 8275 0e64 83F82820 		strb	r2, [r3, #40]
 8276              		.loc 1 1061 0
 8277 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8278 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8279 0e70 1346     		mov	r3, r2
 8280 0e72 DB00     		lsls	r3, r3, #3
 8281 0e74 9B1A     		subs	r3, r3, r2
 8282 0e76 1B01     		lsls	r3, r3, #4
 8283 0e78 0B44     		add	r3, r3, r1
 8284 0e7a 03F58873 		add	r3, r3, #272
 8285 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8286              		.loc 1 1048 0
 8287 0e80 1433     		adds	r3, r3, #20
 8288 0e82 DAB2     		uxtb	r2, r3
 8289 0e84 07F54873 		add	r3, r7, #800
 8290 0e88 83F82920 		strb	r2, [r3, #41]
 8291 0e8c 07F54873 		add	r3, r7, #800
 8292 0e90 0022     		movs	r2, #0
 8293 0e92 83F82A20 		strb	r2, [r3, #42]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 193


 8294 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8295 0e9a 0A33     		adds	r3, r3, #10
 8296 0e9c DAB2     		uxtb	r2, r3
 8297 0e9e 07F54873 		add	r3, r7, #800
 8298 0ea2 83F82B20 		strb	r2, [r3, #43]
 8299 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8300 0eaa 0A33     		adds	r3, r3, #10
 8301 0eac DAB2     		uxtb	r2, r3
 8302 0eae 07F54873 		add	r3, r7, #800
 8303 0eb2 83F82C20 		strb	r2, [r3, #44]
 8304 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8305 0eba 0A33     		adds	r3, r3, #10
 8306 0ebc DAB2     		uxtb	r2, r3
 8307 0ebe 07F54873 		add	r3, r7, #800
 8308 0ec2 83F82D20 		strb	r2, [r3, #45]
 8309 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 8310 0eca 0A33     		adds	r3, r3, #10
 8311 0ecc DAB2     		uxtb	r2, r3
 8312 0ece 07F54873 		add	r3, r7, #800
 8313 0ed2 83F82E20 		strb	r2, [r3, #46]
 8314 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8315 0eda 0A33     		adds	r3, r3, #10
 8316 0edc DAB2     		uxtb	r2, r3
 8317 0ede 07F54873 		add	r3, r7, #800
 8318 0ee2 83F82F20 		strb	r2, [r3, #47]
1062:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1063:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8319              		.loc 1 1063 0
 8320 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8321 0eea D7F88015 		ldr	r1, [r7, #1408]
 8322 0eee 1346     		mov	r3, r2
 8323 0ef0 DB00     		lsls	r3, r3, #3
 8324 0ef2 9B1A     		subs	r3, r3, r2
 8325 0ef4 1B01     		lsls	r3, r3, #4
 8326 0ef6 0B44     		add	r3, r3, r1
 8327 0ef8 03F58873 		add	r3, r3, #272
 8328 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8329              		.loc 1 1048 0
 8330 0efe 1433     		adds	r3, r3, #20
 8331 0f00 DAB2     		uxtb	r2, r3
 8332 0f02 07F54873 		add	r3, r7, #800
 8333 0f06 83F83020 		strb	r2, [r3, #48]
 8334              		.loc 1 1063 0
 8335 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8336 0f0e D7F88015 		ldr	r1, [r7, #1408]
 8337 0f12 1346     		mov	r3, r2
 8338 0f14 DB00     		lsls	r3, r3, #3
 8339 0f16 9B1A     		subs	r3, r3, r2
 8340 0f18 1B01     		lsls	r3, r3, #4
 8341 0f1a 0B44     		add	r3, r3, r1
 8342 0f1c 03F58873 		add	r3, r3, #272
 8343 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8344              		.loc 1 1048 0
 8345 0f22 1433     		adds	r3, r3, #20
 8346 0f24 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 194


 8347 0f26 07F54873 		add	r3, r7, #800
 8348 0f2a 83F83120 		strb	r2, [r3, #49]
 8349              		.loc 1 1063 0
 8350 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8351 0f32 D7F88015 		ldr	r1, [r7, #1408]
 8352 0f36 1346     		mov	r3, r2
 8353 0f38 DB00     		lsls	r3, r3, #3
 8354 0f3a 9B1A     		subs	r3, r3, r2
 8355 0f3c 1B01     		lsls	r3, r3, #4
 8356 0f3e 0B44     		add	r3, r3, r1
 8357 0f40 03F58873 		add	r3, r3, #272
 8358 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8359              		.loc 1 1048 0
 8360 0f46 1433     		adds	r3, r3, #20
 8361 0f48 DAB2     		uxtb	r2, r3
 8362 0f4a 07F54873 		add	r3, r7, #800
 8363 0f4e 83F83220 		strb	r2, [r3, #50]
 8364 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8365 0f56 0A33     		adds	r3, r3, #10
 8366 0f58 DAB2     		uxtb	r2, r3
 8367 0f5a 07F54873 		add	r3, r7, #800
 8368 0f5e 83F83320 		strb	r2, [r3, #51]
 8369 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8370 0f66 0A33     		adds	r3, r3, #10
 8371 0f68 DAB2     		uxtb	r2, r3
 8372 0f6a 07F54873 		add	r3, r7, #800
 8373 0f6e 83F83420 		strb	r2, [r3, #52]
 8374 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8375 0f76 0A33     		adds	r3, r3, #10
 8376 0f78 DAB2     		uxtb	r2, r3
 8377 0f7a 07F54873 		add	r3, r7, #800
 8378 0f7e 83F83520 		strb	r2, [r3, #53]
 8379 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8380 0f86 0A33     		adds	r3, r3, #10
 8381 0f88 DAB2     		uxtb	r2, r3
 8382 0f8a 07F54873 		add	r3, r7, #800
 8383 0f8e 83F83620 		strb	r2, [r3, #54]
1064:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8384              		.loc 1 1064 0
 8385 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8386 0f96 D7F88015 		ldr	r1, [r7, #1408]
 8387 0f9a 1346     		mov	r3, r2
 8388 0f9c DB00     		lsls	r3, r3, #3
 8389 0f9e 9B1A     		subs	r3, r3, r2
 8390 0fa0 1B01     		lsls	r3, r3, #4
 8391 0fa2 0B44     		add	r3, r3, r1
 8392 0fa4 03F58873 		add	r3, r3, #272
 8393 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8394              		.loc 1 1048 0
 8395 0faa 1433     		adds	r3, r3, #20
 8396 0fac DAB2     		uxtb	r2, r3
 8397 0fae 07F54873 		add	r3, r7, #800
 8398 0fb2 83F83720 		strb	r2, [r3, #55]
1065:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8399              		.loc 1 1065 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 195


 8400 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8401 0fba D7F88015 		ldr	r1, [r7, #1408]
 8402 0fbe 1346     		mov	r3, r2
 8403 0fc0 DB00     		lsls	r3, r3, #3
 8404 0fc2 9B1A     		subs	r3, r3, r2
 8405 0fc4 1B01     		lsls	r3, r3, #4
 8406 0fc6 0B44     		add	r3, r3, r1
 8407 0fc8 03F58873 		add	r3, r3, #272
 8408 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8409              		.loc 1 1048 0
 8410 0fce 1433     		adds	r3, r3, #20
 8411 0fd0 DAB2     		uxtb	r2, r3
 8412 0fd2 07F54873 		add	r3, r7, #800
 8413 0fd6 83F83820 		strb	r2, [r3, #56]
 8414 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 8415 0fde 0A33     		adds	r3, r3, #10
 8416 0fe0 DAB2     		uxtb	r2, r3
 8417 0fe2 07F54873 		add	r3, r7, #800
 8418 0fe6 83F83920 		strb	r2, [r3, #57]
 8419 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8420 0fee 0A33     		adds	r3, r3, #10
 8421 0ff0 DAB2     		uxtb	r2, r3
 8422 0ff2 07F54873 		add	r3, r7, #800
 8423 0ff6 83F83A20 		strb	r2, [r3, #58]
 8424 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8425 0ffe 0A33     		adds	r3, r3, #10
 8426 1000 DAB2     		uxtb	r2, r3
 8427 1002 07F54873 		add	r3, r7, #800
 8428 1006 83F83B20 		strb	r2, [r3, #59]
 8429 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8430 100e 0A33     		adds	r3, r3, #10
 8431 1010 DAB2     		uxtb	r2, r3
 8432 1012 07F54873 		add	r3, r7, #800
 8433 1016 83F83C20 		strb	r2, [r3, #60]
 8434 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8435 101e 0A33     		adds	r3, r3, #10
 8436 1020 DAB2     		uxtb	r2, r3
 8437 1022 07F54873 		add	r3, r7, #800
 8438 1026 83F83D20 		strb	r2, [r3, #61]
 8439 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8440 102e 0A33     		adds	r3, r3, #10
 8441 1030 DAB2     		uxtb	r2, r3
 8442 1032 07F54873 		add	r3, r7, #800
 8443 1036 83F83E20 		strb	r2, [r3, #62]
1066:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8444              		.loc 1 1066 0
 8445 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8446 103e D7F88015 		ldr	r1, [r7, #1408]
 8447 1042 1346     		mov	r3, r2
 8448 1044 DB00     		lsls	r3, r3, #3
 8449 1046 9B1A     		subs	r3, r3, r2
 8450 1048 1B01     		lsls	r3, r3, #4
 8451 104a 0B44     		add	r3, r3, r1
 8452 104c 03F58873 		add	r3, r3, #272
 8453 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 196


 8454              		.loc 1 1048 0
 8455 1052 1433     		adds	r3, r3, #20
 8456 1054 DAB2     		uxtb	r2, r3
 8457 1056 07F54873 		add	r3, r7, #800
 8458 105a 83F83F20 		strb	r2, [r3, #63]
1067:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8459              		.loc 1 1067 0
 8460 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8461 1062 D7F88015 		ldr	r1, [r7, #1408]
 8462 1066 1346     		mov	r3, r2
 8463 1068 DB00     		lsls	r3, r3, #3
 8464 106a 9B1A     		subs	r3, r3, r2
 8465 106c 1B01     		lsls	r3, r3, #4
 8466 106e 0B44     		add	r3, r3, r1
 8467 1070 03F58873 		add	r3, r3, #272
 8468 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8469              		.loc 1 1048 0
 8470 1076 1433     		adds	r3, r3, #20
 8471 1078 DAB2     		uxtb	r2, r3
 8472 107a 07F54873 		add	r3, r7, #800
 8473 107e 83F84020 		strb	r2, [r3, #64]
 8474 1082 07F54873 		add	r3, r7, #800
 8475 1086 1422     		movs	r2, #20
 8476 1088 83F84120 		strb	r2, [r3, #65]
 8477 108c 07F54873 		add	r3, r7, #800
 8478 1090 1522     		movs	r2, #21
 8479 1092 83F84220 		strb	r2, [r3, #66]
 8480 1096 07F54873 		add	r3, r7, #800
 8481 109a 3222     		movs	r2, #50
 8482 109c 83F84320 		strb	r2, [r3, #67]
 8483 10a0 07F54873 		add	r3, r7, #800
 8484 10a4 3222     		movs	r2, #50
 8485 10a6 83F84420 		strb	r2, [r3, #68]
 8486 10aa 07F54873 		add	r3, r7, #800
 8487 10ae 3222     		movs	r2, #50
 8488 10b0 83F84520 		strb	r2, [r3, #69]
 8489 10b4 07F54873 		add	r3, r7, #800
 8490 10b8 3222     		movs	r2, #50
 8491 10ba 83F84620 		strb	r2, [r3, #70]
 8492 10be 07F54873 		add	r3, r7, #800
 8493 10c2 6E22     		movs	r2, #110
 8494 10c4 83F84720 		strb	r2, [r3, #71]
 8495 10c8 07F54873 		add	r3, r7, #800
 8496 10cc 6E22     		movs	r2, #110
 8497 10ce 83F84820 		strb	r2, [r3, #72]
 8498 10d2 07F54873 		add	r3, r7, #800
 8499 10d6 6E22     		movs	r2, #110
 8500 10d8 83F84920 		strb	r2, [r3, #73]
 8501 10dc 07F54873 		add	r3, r7, #800
 8502 10e0 0022     		movs	r2, #0
 8503 10e2 83F84A20 		strb	r2, [r3, #74]
 8504 10e6 07F54873 		add	r3, r7, #800
 8505 10ea 6422     		movs	r2, #100
 8506 10ec 83F84B20 		strb	r2, [r3, #75]
 8507 10f0 07F54873 		add	r3, r7, #800
 8508 10f4 6422     		movs	r2, #100
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 197


 8509 10f6 83F84C20 		strb	r2, [r3, #76]
 8510 10fa 07F54873 		add	r3, r7, #800
 8511 10fe 6422     		movs	r2, #100
 8512 1100 83F84D20 		strb	r2, [r3, #77]
 8513 1104 07F54873 		add	r3, r7, #800
 8514 1108 5022     		movs	r2, #80
 8515 110a 83F84E20 		strb	r2, [r3, #78]
 8516 110e 07F54873 		add	r3, r7, #800
 8517 1112 5022     		movs	r2, #80
 8518 1114 83F84F20 		strb	r2, [r3, #79]
 8519 1118 07F54873 		add	r3, r7, #800
 8520 111c 5A22     		movs	r2, #90
 8521 111e 83F85020 		strb	r2, [r3, #80]
 8522 1122 07F54873 		add	r3, r7, #800
 8523 1126 5A22     		movs	r2, #90
 8524 1128 83F85120 		strb	r2, [r3, #81]
 8525 112c 07F54873 		add	r3, r7, #800
 8526 1130 5A22     		movs	r2, #90
 8527 1132 83F85220 		strb	r2, [r3, #82]
1068:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1069:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1070:..\src/command_processing.c ****         ST_WR_SPEC,
1071:..\src/command_processing.c ****         
1072:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1073:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1074:..\src/command_processing.c ****         
1075:..\src/command_processing.c ****     };
1076:..\src/command_processing.c ****     
1077:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8528              		.loc 1 1077 0
 8529 1136 07F5EA73 		add	r3, r7, #468
 8530 113a CE4A     		ldr	r2, .L375
 8531 113c 1846     		mov	r0, r3
 8532 113e 1146     		mov	r1, r2
 8533 1140 4FF4A673 		mov	r3, #332
 8534 1144 1A46     		mov	r2, r3
 8535 1146 FFF7FEFF 		bl	memcpy
1078:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1079:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1080:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1081:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1082:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1083:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1084:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1085:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1086:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1087:..\src/command_processing.c ****         
1088:..\src/command_processing.c ****         // GENERIC PARAMS
1089:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1090:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1091:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1092:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1093:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1094:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1095:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1096:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1097:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 198


1098:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1099:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1100:..\src/command_processing.c ****         
1101:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1102:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1103:..\src/command_processing.c ****     };
1104:..\src/command_processing.c **** 
1105:..\src/command_processing.c ****     //Parameters menu
1106:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8536              		.loc 1 1106 0
 8537 114a 07F5AE73 		add	r3, r7, #348
 8538 114e 0022     		movs	r2, #0
 8539 1150 1A60     		str	r2, [r3]
 8540 1152 0433     		adds	r3, r3, #4
 8541 1154 7222     		movs	r2, #114
 8542 1156 0021     		movs	r1, #0
 8543 1158 1846     		mov	r0, r3
 8544 115a FFF7FEFF 		bl	memset
1107:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8545              		.loc 1 1107 0
 8546 115e 07F5AE70 		add	r0, r7, #348
 8547 1162 6423     		movs	r3, #100
 8548 1164 0A22     		movs	r2, #10
 8549 1166 C449     		ldr	r1, .L375+4
 8550 1168 FFF7FEFF 		bl	sprintf
1108:..\src/command_processing.c **** 
1109:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8551              		.loc 1 1109 0
 8552 116c 07F59273 		add	r3, r7, #292
 8553 1170 0022     		movs	r2, #0
 8554 1172 1A60     		str	r2, [r3]
 8555 1174 0433     		adds	r3, r3, #4
 8556 1176 3422     		movs	r2, #52
 8557 1178 0021     		movs	r1, #0
 8558 117a 1846     		mov	r0, r3
 8559 117c FFF7FEFF 		bl	memset
1110:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8560              		.loc 1 1110 0
 8561 1180 D7F88035 		ldr	r3, [r7, #1408]
 8562 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8563 1188 042B     		cmp	r3, #4
 8564 118a 10D1     		bne	.L307
1111:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8565              		.loc 1 1111 0
 8566 118c 07F59273 		add	r3, r7, #292
 8567 1190 BA4A     		ldr	r2, .L375+8
 8568 1192 1C46     		mov	r4, r3
 8569 1194 1546     		mov	r5, r2
 8570 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8571 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8572 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8573 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8574 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8575 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8576 11a2 95E80300 		ldmia	r5, {r0, r1}
 8577 11a6 2060     		str	r0, [r4]
 8578 11a8 0434     		adds	r4, r4, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 199


 8579 11aa 2170     		strb	r1, [r4]
 8580 11ac 12E0     		b	.L308
 8581              	.L307:
1112:..\src/command_processing.c ****     }
1113:..\src/command_processing.c ****     else {
1114:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist, Slow:hand\n1 -> Slow:wrist, Fast:hand\n
 8582              		.loc 1 1114 0
 8583 11ae 07F59273 		add	r3, r7, #292
 8584 11b2 B34A     		ldr	r2, .L375+12
 8585 11b4 1C46     		mov	r4, r3
 8586 11b6 1546     		mov	r5, r2
 8587 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8588 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8589 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8590 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8591 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8592 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8593 11c4 95E80300 		ldmia	r5, {r0, r1}
 8594 11c8 2060     		str	r0, [r4]
 8595 11ca 0434     		adds	r4, r4, #4
 8596 11cc 2180     		strh	r1, [r4]	@ movhi
 8597 11ce 0234     		adds	r4, r4, #2
 8598 11d0 0B0C     		lsrs	r3, r1, #16
 8599 11d2 2370     		strb	r3, [r4]
 8600              	.L308:
1115:..\src/command_processing.c ****     }
1116:..\src/command_processing.c ****     
1117:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8601              		.loc 1 1117 0
 8602 11d4 07F1F403 		add	r3, r7, #244
 8603 11d8 AA4A     		ldr	r2, .L375+16
 8604 11da 1A60     		str	r2, [r3]
 8605 11dc 07F1F403 		add	r3, r7, #244
 8606 11e0 A94A     		ldr	r2, .L375+20
 8607 11e2 5A60     		str	r2, [r3, #4]
 8608 11e4 07F1F403 		add	r3, r7, #244
 8609 11e8 A84A     		ldr	r2, .L375+24
 8610 11ea 9A60     		str	r2, [r3, #8]
 8611 11ec 07F1F403 		add	r3, r7, #244
 8612 11f0 A74A     		ldr	r2, .L375+28
 8613 11f2 DA60     		str	r2, [r3, #12]
 8614 11f4 07F1F403 		add	r3, r7, #244
 8615 11f8 A64A     		ldr	r2, .L375+32
 8616 11fa 1A61     		str	r2, [r3, #16]
 8617 11fc 07F1F403 		add	r3, r7, #244
 8618 1200 A54A     		ldr	r2, .L375+36
 8619 1202 5A61     		str	r2, [r3, #20]
 8620 1204 07F1F403 		add	r3, r7, #244
 8621 1208 07F5AE72 		add	r2, r7, #348
 8622 120c 9A61     		str	r2, [r3, #24]
 8623 120e 07F1F403 		add	r3, r7, #244
 8624 1212 A24A     		ldr	r2, .L375+40
 8625 1214 DA61     		str	r2, [r3, #28]
 8626 1216 07F1F403 		add	r3, r7, #244
 8627 121a A14A     		ldr	r2, .L375+44
 8628 121c 1A62     		str	r2, [r3, #32]
 8629 121e 07F1F403 		add	r3, r7, #244
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 200


 8630 1222 A04A     		ldr	r2, .L375+48
 8631 1224 5A62     		str	r2, [r3, #36]
 8632 1226 07F1F403 		add	r3, r7, #244
 8633 122a 07F59272 		add	r2, r7, #292
 8634 122e 9A62     		str	r2, [r3, #40]
 8635 1230 07F1F403 		add	r3, r7, #244
 8636 1234 9C4A     		ldr	r2, .L375+52
 8637 1236 DA62     		str	r2, [r3, #44]
1118:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1119:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1120:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1121:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1122:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1123:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1124:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1125:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1126:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1127:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1128:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1129:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1130:..\src/command_processing.c ****     };   
1131:..\src/command_processing.c ****     
1132:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8638              		.loc 1 1132 0
 8639 1238 07F1D403 		add	r3, r7, #212
 8640 123c 9B4A     		ldr	r2, .L375+56
 8641 123e 1C46     		mov	r4, r3
 8642 1240 1546     		mov	r5, r2
 8643 1242 2868     		ldr	r0, [r5]	@ unaligned
 8644 1244 6968     		ldr	r1, [r5, #4]	@ unaligned
 8645 1246 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8646 1248 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8647 124a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8648 124c 2869     		ldr	r0, [r5, #16]	@ unaligned
 8649 124e 6969     		ldr	r1, [r5, #20]	@ unaligned
 8650 1250 AA69     		ldr	r2, [r5, #24]	@ unaligned
 8651 1252 EB69     		ldr	r3, [r5, #28]	@ unaligned
 8652 1254 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1133:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8653              		.loc 1 1133 0
 8654 1256 07F1C803 		add	r3, r7, #200
 8655 125a 954A     		ldr	r2, .L375+60
 8656 125c 1068     		ldr	r0, [r2]	@ unaligned
 8657 125e 5168     		ldr	r1, [r2, #4]	@ unaligned
 8658 1260 03C3     		stmia	r3!, {r0, r1}
 8659 1262 127A     		ldrb	r2, [r2, #8]
 8660 1264 1A70     		strb	r2, [r3]
1134:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8661              		.loc 1 1134 0
 8662 1266 07F1B403 		add	r3, r7, #180
 8663 126a 924A     		ldr	r2, .L375+64
 8664 126c 1C46     		mov	r4, r3
 8665 126e 1546     		mov	r5, r2
 8666 1270 2868     		ldr	r0, [r5]	@ unaligned
 8667 1272 6968     		ldr	r1, [r5, #4]	@ unaligned
 8668 1274 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8669 1276 EB68     		ldr	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 201


 8670 1278 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8671 127a 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8672 127c 2380     		strh	r3, [r4]	@ unaligned
1135:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8673              		.loc 1 1135 0
 8674 127e 2323     		movs	r3, #35
 8675 1280 87F87B35 		strb	r3, [r7, #1403]
1136:..\src/command_processing.c **** 
1137:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1138:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1139:..\src/command_processing.c ****     
1140:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1141:..\src/command_processing.c **** 
1142:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1143:..\src/command_processing.c ****     
1144:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1145:..\src/command_processing.c ****     j = 0;
 8676              		.loc 1 1145 0
 8677 1284 0023     		movs	r3, #0
 8678 1286 87F88635 		strb	r3, [r7, #1414]
1146:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8679              		.loc 1 1146 0
 8680 128a 0023     		movs	r3, #0
 8681 128c 87F88735 		strb	r3, [r7, #1415]
 8682 1290 21E0     		b	.L309
 8683              	.L312:
1147:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8684              		.loc 1 1147 0
 8685 1292 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8686 1296 07F1C802 		add	r2, r7, #200
 8687 129a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8688 129c 1A46     		mov	r2, r3
 8689 129e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8690 12a2 0133     		adds	r3, r3, #1
 8691 12a4 9A42     		cmp	r2, r3
 8692 12a6 0BD1     		bne	.L310
1148:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8693              		.loc 1 1148 0
 8694 12a8 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8695 12ac 07F16002 		add	r2, r7, #96
 8696 12b0 0121     		movs	r1, #1
 8697 12b2 D154     		strb	r1, [r2, r3]
1149:..\src/command_processing.c ****             j++;
 8698              		.loc 1 1149 0
 8699 12b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8700 12b8 0133     		adds	r3, r3, #1
 8701 12ba 87F88635 		strb	r3, [r7, #1414]
 8702 12be 05E0     		b	.L311
 8703              	.L310:
1150:..\src/command_processing.c ****         }
1151:..\src/command_processing.c ****         else {
1152:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8704              		.loc 1 1152 0
 8705 12c0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8706 12c4 07F16002 		add	r2, r7, #96
 8707 12c8 0021     		movs	r1, #0
 8708 12ca D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 202


 8709              	.L311:
1146:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8710              		.loc 1 1146 0 discriminator 2
 8711 12cc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8712 12d0 0133     		adds	r3, r3, #1
 8713 12d2 87F88735 		strb	r3, [r7, #1415]
 8714              	.L309:
1146:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8715              		.loc 1 1146 0 is_stmt 0 discriminator 1
 8716 12d6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8717 12da 522B     		cmp	r3, #82
 8718 12dc D9D9     		bls	.L312
1153:..\src/command_processing.c ****         }
1154:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1155:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1156:..\src/command_processing.c ****     j = 0;
 8719              		.loc 1 1156 0 is_stmt 1
 8720 12de 0023     		movs	r3, #0
 8721 12e0 87F88635 		strb	r3, [r7, #1414]
1157:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8722              		.loc 1 1157 0
 8723 12e4 0023     		movs	r3, #0
 8724 12e6 87F88735 		strb	r3, [r7, #1415]
 8725 12ea 21E0     		b	.L313
 8726              	.L316:
1158:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8727              		.loc 1 1158 0
 8728 12ec 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8729 12f0 07F1B402 		add	r2, r7, #180
 8730 12f4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8731 12f6 1A46     		mov	r2, r3
 8732 12f8 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8733 12fc 0133     		adds	r3, r3, #1
 8734 12fe 9A42     		cmp	r2, r3
 8735 1300 0BD1     		bne	.L314
1159:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8736              		.loc 1 1159 0
 8737 1302 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8738 1306 07F10C02 		add	r2, r7, #12
 8739 130a 0121     		movs	r1, #1
 8740 130c D154     		strb	r1, [r2, r3]
1160:..\src/command_processing.c ****             j++;
 8741              		.loc 1 1160 0
 8742 130e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8743 1312 0133     		adds	r3, r3, #1
 8744 1314 87F88635 		strb	r3, [r7, #1414]
 8745 1318 05E0     		b	.L315
 8746              	.L314:
1161:..\src/command_processing.c ****         }
1162:..\src/command_processing.c ****         else {
1163:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8747              		.loc 1 1163 0
 8748 131a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8749 131e 07F10C02 		add	r2, r7, #12
 8750 1322 0021     		movs	r1, #0
 8751 1324 D154     		strb	r1, [r2, r3]
 8752              	.L315:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 203


1157:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8753              		.loc 1 1157 0 discriminator 2
 8754 1326 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8755 132a 0133     		adds	r3, r3, #1
 8756 132c 87F88735 		strb	r3, [r7, #1415]
 8757              	.L313:
1157:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8758              		.loc 1 1157 0 is_stmt 0 discriminator 1
 8759 1330 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8760 1334 522B     		cmp	r3, #82
 8761 1336 D9D9     		bls	.L316
1164:..\src/command_processing.c ****         }
1165:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1166:..\src/command_processing.c ****         
1167:..\src/command_processing.c ****     if (!index) {
 8762              		.loc 1 1167 0 is_stmt 1
 8763 1338 BB1D     		adds	r3, r7, #6
 8764 133a 1B88     		ldrh	r3, [r3]
 8765 133c 002B     		cmp	r3, #0
 8766 133e 17D1     		bne	.L317
1168:..\src/command_processing.c ****         // Get parameters list with relative types
1169:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8767              		.loc 1 1169 0
 8768 1340 07F54874 		add	r4, r7, #800
 8769 1344 07F55D72 		add	r2, r7, #884
 8770 1348 07F57271 		add	r1, r7, #968
 8771 134c 07F21C40 		addw	r0, r7, #1052
 8772 1350 07F1F403 		add	r3, r7, #244
 8773 1354 0393     		str	r3, [sp, #12]
 8774 1356 07F16003 		add	r3, r7, #96
 8775 135a 0293     		str	r3, [sp, #8]
 8776 135c 07F5EA73 		add	r3, r7, #468
 8777 1360 0193     		str	r3, [sp, #4]
 8778 1362 07F1D403 		add	r3, r7, #212
 8779 1366 0093     		str	r3, [sp]
 8780 1368 2346     		mov	r3, r4
 8781 136a FFF7FEFF 		bl	get_param_list
1170:..\src/command_processing.c ****     }
1171:..\src/command_processing.c ****     else {
1172:..\src/command_processing.c ****         // Set specific parameter        
1173:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1174:..\src/command_processing.c ****         
1175:..\src/command_processing.c ****         // Find size of data
1176:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1177:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1178:..\src/command_processing.c ****                 sod = 1; break;
1179:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1180:..\src/command_processing.c ****                 sod = 2; break;
1181:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1182:..\src/command_processing.c ****                 sod = 4; break;
1183:..\src/command_processing.c ****         }   
1184:..\src/command_processing.c ****             
1185:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1186:..\src/command_processing.c ****             // Use default specifications for param setting
1187:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1188:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1189:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 204


1190:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1191:..\src/command_processing.c ****                     }
1192:..\src/command_processing.c ****                     break;                
1193:..\src/command_processing.c ****                 case TYPE_STRING:
1194:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1195:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1196:..\src/command_processing.c ****                     }
1197:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1198:..\src/command_processing.c ****                 break; 
1199:..\src/command_processing.c ****                 case TYPE_INT8:
1200:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1201:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1202:..\src/command_processing.c ****                     }
1203:..\src/command_processing.c ****                     break;                    
1204:..\src/command_processing.c ****                 case TYPE_INT16:
1205:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1206:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1207:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1208:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1209:..\src/command_processing.c ****                         }
1210:..\src/command_processing.c ****                     }                   
1211:..\src/command_processing.c ****                     break;
1212:..\src/command_processing.c ****                 case TYPE_UINT16:
1213:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1214:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1215:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1216:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1217:..\src/command_processing.c ****                         }
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     break;
1220:..\src/command_processing.c ****                 case TYPE_INT32:
1221:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1222:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1223:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1224:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1225:..\src/command_processing.c ****                         }
1226:..\src/command_processing.c ****                     }
1227:..\src/command_processing.c ****                     break;
1228:..\src/command_processing.c ****                 case TYPE_UINT32:
1229:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1230:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1231:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1232:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1233:..\src/command_processing.c ****                         }
1234:..\src/command_processing.c ****                     }
1235:..\src/command_processing.c ****                     break;
1236:..\src/command_processing.c ****                 case TYPE_FLOAT:
1237:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1238:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1239:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1240:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1241:..\src/command_processing.c ****                         }
1242:..\src/command_processing.c ****                     }
1243:..\src/command_processing.c ****                     break;
1244:..\src/command_processing.c ****                 default:
1245:..\src/command_processing.c ****                     break;
1246:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 205


1247:..\src/command_processing.c ****         }
1248:..\src/command_processing.c ****         else {  
1249:..\src/command_processing.c ****             // Use custom specifications for param setting
1250:..\src/command_processing.c ****             set_custom_param(index);
1251:..\src/command_processing.c ****         }
1252:..\src/command_processing.c ****         
1253:..\src/command_processing.c ****         // Store param also in user_emg structure
1254:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1255:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1256:..\src/command_processing.c ****         }
1257:..\src/command_processing.c ****         
1258:..\src/command_processing.c ****         // Perform chip reset if needed
1259:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1260:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1261:..\src/command_processing.c ****             do {
1262:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1263:..\src/command_processing.c ****                 idx++;
1264:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1265:..\src/command_processing.c ****             
1266:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1267:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1268:..\src/command_processing.c ****             }   
1269:..\src/command_processing.c ****         }
1270:..\src/command_processing.c ****     }
1271:..\src/command_processing.c **** } 
 8782              		.loc 1 1271 0
 8783 136e DFE2     		b	.L368
 8784              	.L317:
1173:..\src/command_processing.c ****         
 8785              		.loc 1 1173 0
 8786 1370 BB1D     		adds	r3, r7, #6
 8787 1372 1B88     		ldrh	r3, [r3]	@ movhi
 8788 1374 DBB2     		uxtb	r3, r3
 8789 1376 013B     		subs	r3, r3, #1
 8790 1378 87F87A35 		strb	r3, [r7, #1402]
1176:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8791              		.loc 1 1176 0
 8792 137c 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8793 1380 07F57272 		add	r2, r7, #968
 8794 1384 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8795 1386 092B     		cmp	r3, #9
 8796 1388 22D8     		bhi	.L319
 8797 138a 01A2     		adr	r2, .L321
 8798 138c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8799              		.p2align 2
 8800              	.L321:
 8801 1390 B9130000 		.word	.L320+1
 8802 1394 B9130000 		.word	.L320+1
 8803 1398 B9130000 		.word	.L320+1
 8804 139c C1130000 		.word	.L322+1
 8805 13a0 C1130000 		.word	.L322+1
 8806 13a4 C9130000 		.word	.L323+1
 8807 13a8 C9130000 		.word	.L323+1
 8808 13ac C9130000 		.word	.L323+1
 8809 13b0 D1130000 		.word	.L319+1
 8810 13b4 B9130000 		.word	.L320+1
 8811              		.p2align 1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 206


 8812              	.L320:
1178:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8813              		.loc 1 1178 0
 8814 13b8 0123     		movs	r3, #1
 8815 13ba 87F88535 		strb	r3, [r7, #1413]
 8816 13be 07E0     		b	.L319
 8817              	.L322:
1180:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8818              		.loc 1 1180 0
 8819 13c0 0223     		movs	r3, #2
 8820 13c2 87F88535 		strb	r3, [r7, #1413]
 8821 13c6 03E0     		b	.L319
 8822              	.L323:
1182:..\src/command_processing.c ****         }   
 8823              		.loc 1 1182 0
 8824 13c8 0423     		movs	r3, #4
 8825 13ca 87F88535 		strb	r3, [r7, #1413]
 8826 13ce 00BF     		nop
 8827              	.L319:
1185:..\src/command_processing.c ****             // Use default specifications for param setting
 8828              		.loc 1 1185 0
 8829 13d0 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8830 13d4 07F10C02 		add	r2, r7, #12
 8831 13d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8832 13da 002B     		cmp	r3, #0
 8833 13dc 40F03B82 		bne	.L324
1187:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8834              		.loc 1 1187 0
 8835 13e0 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8836 13e4 07F57272 		add	r2, r7, #968
 8837 13e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8838 13ea 092B     		cmp	r3, #9
 8839 13ec 00F23C82 		bhi	.L367
 8840 13f0 01A2     		adr	r2, .L327
 8841 13f2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8842 13f6 00BF     		.p2align 2
 8843              	.L327:
 8844 13f8 21140000 		.word	.L326+1
 8845 13fc 1F150000 		.word	.L328+1
 8846 1400 21140000 		.word	.L326+1
 8847 1404 71150000 		.word	.L329+1
 8848 1408 07160000 		.word	.L330+1
 8849 140c 9B160000 		.word	.L331+1
 8850 1410 2F170000 		.word	.L332+1
 8851 1414 C3170000 		.word	.L333+1
 8852 1418 69180000 		.word	.L367+1
 8853 141c 6D140000 		.word	.L334+1
 8854              		.p2align 1
 8855              	.L326:
1189:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8856              		.loc 1 1189 0
 8857 1420 0023     		movs	r3, #0
 8858 1422 87F88735 		strb	r3, [r7, #1415]
 8859 1426 17E0     		b	.L335
 8860              	.L336:
1190:..\src/command_processing.c ****                     }
 8861              		.loc 1 1190 0 discriminator 3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 207


 8862 1428 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8863 142c 07F21C43 		addw	r3, r7, #1052
 8864 1430 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8865 1434 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8866 1438 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8867 143c 01FB02F2 		mul	r2, r1, r2
 8868 1440 1344     		add	r3, r3, r2
 8869 1442 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8870 1446 0332     		adds	r2, r2, #3
 8871 1448 1B49     		ldr	r1, .L375+68
 8872 144a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8873 144c 1A70     		strb	r2, [r3]
1189:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8874              		.loc 1 1189 0 discriminator 3
 8875 144e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8876 1452 0133     		adds	r3, r3, #1
 8877 1454 87F88735 		strb	r3, [r7, #1415]
 8878              	.L335:
1189:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8879              		.loc 1 1189 0 is_stmt 0 discriminator 1
 8880 1458 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8881 145c 07F55D72 		add	r2, r7, #884
 8882 1460 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8883 1462 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8884 1466 9A42     		cmp	r2, r3
 8885 1468 DED3     		bcc	.L336
1192:..\src/command_processing.c ****                 case TYPE_STRING:
 8886              		.loc 1 1192 0 is_stmt 1
 8887 146a FEE1     		b	.L362
 8888              	.L334:
1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8889              		.loc 1 1194 0
 8890 146c 0023     		movs	r3, #0
 8891 146e 87F88735 		strb	r3, [r7, #1415]
 8892 1472 3BE0     		b	.L338
 8893              	.L376:
 8894              		.align	2
 8895              	.L375:
 8896 1474 0C0F0000 		.word	.LC128
 8897 1478 74020000 		.word	.LC129
 8898 147c E8020000 		.word	.LC130
 8899 1480 20030000 		.word	.LC131
 8900 1484 58030000 		.word	.LC132
 8901 1488 E4030000 		.word	.LC133
 8902 148c 24040000 		.word	.LC134
 8903 1490 50040000 		.word	.LC135
 8904 1494 68040000 		.word	.LC136
 8905 1498 90040000 		.word	.LC137
 8906 149c EC040000 		.word	.LC138
 8907 14a0 2C050000 		.word	.LC139
 8908 14a4 74050000 		.word	.LC140
 8909 14a8 F0050000 		.word	.LC141
 8910 14ac 58100000 		.word	.LC85
 8911 14b0 78100000 		.word	.LC86
 8912 14b4 84100000 		.word	.LC87
 8913 14b8 00000000 		.word	g_rx
 8914              	.L339:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 208


1195:..\src/command_processing.c ****                     }
 8915              		.loc 1 1195 0 discriminator 3
 8916 14bc 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8917 14c0 07F21C43 		addw	r3, r7, #1052
 8918 14c4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8919 14c8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8920 14cc 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8921 14d0 01FB02F2 		mul	r2, r1, r2
 8922 14d4 1344     		add	r3, r3, r2
 8923 14d6 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8924 14da 0332     		adds	r2, r2, #3
 8925 14dc E149     		ldr	r1, .L377
 8926 14de 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8927 14e0 1A70     		strb	r2, [r3]
1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8928              		.loc 1 1194 0 discriminator 3
 8929 14e2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8930 14e6 0133     		adds	r3, r3, #1
 8931 14e8 87F88735 		strb	r3, [r7, #1415]
 8932              	.L338:
1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8933              		.loc 1 1194 0 is_stmt 0 discriminator 1
 8934 14ec 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8935 14f0 07F55D72 		add	r2, r7, #884
 8936 14f4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8937 14f6 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8938 14fa 9A42     		cmp	r2, r3
 8939 14fc DED3     		bcc	.L339
1197:..\src/command_processing.c ****                 break; 
 8940              		.loc 1 1197 0 is_stmt 1
 8941 14fe 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8942 1502 07F21C43 		addw	r3, r7, #1052
 8943 1506 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8944 150a 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8945 150e 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8946 1512 01FB02F2 		mul	r2, r1, r2
 8947 1516 1344     		add	r3, r3, r2
 8948 1518 0022     		movs	r2, #0
 8949 151a 1A70     		strb	r2, [r3]
1198:..\src/command_processing.c ****                 case TYPE_INT8:
 8950              		.loc 1 1198 0
 8951 151c A5E1     		b	.L362
 8952              	.L328:
1200:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8953              		.loc 1 1200 0
 8954 151e 0023     		movs	r3, #0
 8955 1520 87F88735 		strb	r3, [r7, #1415]
 8956 1524 1AE0     		b	.L340
 8957              	.L341:
1201:..\src/command_processing.c ****                     }
 8958              		.loc 1 1201 0 discriminator 3
 8959 1526 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8960 152a 07F21C43 		addw	r3, r7, #1052
 8961 152e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8962 1532 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8963 1536 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8964 153a 01FB02F2 		mul	r2, r1, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 209


 8965 153e 1344     		add	r3, r3, r2
 8966 1540 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8967 1544 0332     		adds	r2, r2, #3
 8968 1546 C749     		ldr	r1, .L377
 8969 1548 0A44     		add	r2, r2, r1
 8970 154a 92F90020 		ldrsb	r2, [r2]
 8971 154e D2B2     		uxtb	r2, r2
 8972 1550 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8973              		.loc 1 1200 0 discriminator 3
 8974 1552 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8975 1556 0133     		adds	r3, r3, #1
 8976 1558 87F88735 		strb	r3, [r7, #1415]
 8977              	.L340:
1200:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8978              		.loc 1 1200 0 is_stmt 0 discriminator 1
 8979 155c 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8980 1560 07F55D72 		add	r2, r7, #884
 8981 1564 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8982 1566 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8983 156a 9A42     		cmp	r2, r3
 8984 156c DBD3     		bcc	.L341
1203:..\src/command_processing.c ****                 case TYPE_INT16:
 8985              		.loc 1 1203 0 is_stmt 1
 8986 156e 7CE1     		b	.L362
 8987              	.L329:
1205:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8988              		.loc 1 1205 0
 8989 1570 0023     		movs	r3, #0
 8990 1572 87F88735 		strb	r3, [r7, #1415]
 8991 1576 3CE0     		b	.L342
 8992              	.L345:
1206:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8993              		.loc 1 1206 0
 8994 1578 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8995 157c 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 8996 1580 02FB03F3 		mul	r3, r2, r3
 8997 1584 0333     		adds	r3, r3, #3
 8998 1586 B74A     		ldr	r2, .L377
 8999 1588 1344     		add	r3, r3, r2
 9000 158a B3F90030 		ldrsh	r3, [r3]
 9001 158e A7F87835 		strh	r3, [r7, #1400]	@ movhi
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9002              		.loc 1 1207 0
 9003 1592 0023     		movs	r3, #0
 9004 1594 87F88635 		strb	r3, [r7, #1414]
 9005 1598 20E0     		b	.L343
 9006              	.L344:
1208:..\src/command_processing.c ****                         }
 9007              		.loc 1 1208 0 discriminator 3
 9008 159a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9009 159e 07F21C43 		addw	r3, r7, #1052
 9010 15a2 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9011 15a6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9012 15aa 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9013 15ae 01FB03F3 		mul	r3, r1, r3
 9014 15b2 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 210


 9015 15b4 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9016 15b8 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9017 15bc CB1A     		subs	r3, r1, r3
 9018 15be 0344     		add	r3, r3, r0
 9019 15c0 013B     		subs	r3, r3, #1
 9020 15c2 1344     		add	r3, r3, r2
 9021 15c4 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9022 15c8 07F5AF61 		add	r1, r7, #1400
 9023 15cc 0A44     		add	r2, r2, r1
 9024 15ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9025 15d0 1A70     		strb	r2, [r3]
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9026              		.loc 1 1207 0 discriminator 3
 9027 15d2 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9028 15d6 0133     		adds	r3, r3, #1
 9029 15d8 87F88635 		strb	r3, [r7, #1414]
 9030              	.L343:
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9031              		.loc 1 1207 0 is_stmt 0 discriminator 1
 9032 15dc 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9033 15e0 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9034 15e4 9A42     		cmp	r2, r3
 9035 15e6 D8D3     		bcc	.L344
1205:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9036              		.loc 1 1205 0 is_stmt 1 discriminator 2
 9037 15e8 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9038 15ec 0133     		adds	r3, r3, #1
 9039 15ee 87F88735 		strb	r3, [r7, #1415]
 9040              	.L342:
1205:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9041              		.loc 1 1205 0 is_stmt 0 discriminator 1
 9042 15f2 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9043 15f6 07F55D72 		add	r2, r7, #884
 9044 15fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9045 15fc 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9046 1600 9A42     		cmp	r2, r3
 9047 1602 B9D3     		bcc	.L345
1211:..\src/command_processing.c ****                 case TYPE_UINT16:
 9048              		.loc 1 1211 0 is_stmt 1
 9049 1604 31E1     		b	.L362
 9050              	.L330:
1213:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9051              		.loc 1 1213 0
 9052 1606 0023     		movs	r3, #0
 9053 1608 87F88735 		strb	r3, [r7, #1415]
 9054 160c 3BE0     		b	.L346
 9055              	.L349:
1214:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9056              		.loc 1 1214 0
 9057 160e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9058 1612 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9059 1616 02FB03F3 		mul	r3, r2, r3
 9060 161a 0333     		adds	r3, r3, #3
 9061 161c 914A     		ldr	r2, .L377
 9062 161e 1344     		add	r3, r3, r2
 9063 1620 1B88     		ldrh	r3, [r3]
 9064 1622 A7F87635 		strh	r3, [r7, #1398]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 211


1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9065              		.loc 1 1215 0
 9066 1626 0023     		movs	r3, #0
 9067 1628 87F88635 		strb	r3, [r7, #1414]
 9068 162c 20E0     		b	.L347
 9069              	.L348:
1216:..\src/command_processing.c ****                         }
 9070              		.loc 1 1216 0 discriminator 3
 9071 162e 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9072 1632 07F21C43 		addw	r3, r7, #1052
 9073 1636 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9074 163a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9075 163e 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9076 1642 01FB03F3 		mul	r3, r1, r3
 9077 1646 1846     		mov	r0, r3
 9078 1648 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9079 164c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9080 1650 CB1A     		subs	r3, r1, r3
 9081 1652 0344     		add	r3, r3, r0
 9082 1654 013B     		subs	r3, r3, #1
 9083 1656 1344     		add	r3, r3, r2
 9084 1658 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9085 165c 07F27651 		addw	r1, r7, #1398
 9086 1660 0A44     		add	r2, r2, r1
 9087 1662 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9088 1664 1A70     		strb	r2, [r3]
1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9089              		.loc 1 1215 0 discriminator 3
 9090 1666 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9091 166a 0133     		adds	r3, r3, #1
 9092 166c 87F88635 		strb	r3, [r7, #1414]
 9093              	.L347:
1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9094              		.loc 1 1215 0 is_stmt 0 discriminator 1
 9095 1670 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9096 1674 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9097 1678 9A42     		cmp	r2, r3
 9098 167a D8D3     		bcc	.L348
1213:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9099              		.loc 1 1213 0 is_stmt 1 discriminator 2
 9100 167c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9101 1680 0133     		adds	r3, r3, #1
 9102 1682 87F88735 		strb	r3, [r7, #1415]
 9103              	.L346:
1213:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9104              		.loc 1 1213 0 is_stmt 0 discriminator 1
 9105 1686 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9106 168a 07F55D72 		add	r2, r7, #884
 9107 168e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9108 1690 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9109 1694 9A42     		cmp	r2, r3
 9110 1696 BAD3     		bcc	.L349
1219:..\src/command_processing.c ****                 case TYPE_INT32:
 9111              		.loc 1 1219 0 is_stmt 1
 9112 1698 E7E0     		b	.L362
 9113              	.L331:
1221:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 212


 9114              		.loc 1 1221 0
 9115 169a 0023     		movs	r3, #0
 9116 169c 87F88735 		strb	r3, [r7, #1415]
 9117 16a0 3BE0     		b	.L350
 9118              	.L353:
1222:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9119              		.loc 1 1222 0
 9120 16a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9121 16a6 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9122 16aa 02FB03F3 		mul	r3, r2, r3
 9123 16ae 0333     		adds	r3, r3, #3
 9124 16b0 6C4A     		ldr	r2, .L377
 9125 16b2 1344     		add	r3, r3, r2
 9126 16b4 1B68     		ldr	r3, [r3]
 9127 16b6 C7F87035 		str	r3, [r7, #1392]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9128              		.loc 1 1223 0
 9129 16ba 0023     		movs	r3, #0
 9130 16bc 87F88635 		strb	r3, [r7, #1414]
 9131 16c0 20E0     		b	.L351
 9132              	.L352:
1224:..\src/command_processing.c ****                         }
 9133              		.loc 1 1224 0 discriminator 3
 9134 16c2 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9135 16c6 07F21C43 		addw	r3, r7, #1052
 9136 16ca 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9137 16ce 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9138 16d2 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9139 16d6 01FB03F3 		mul	r3, r1, r3
 9140 16da 1846     		mov	r0, r3
 9141 16dc 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9142 16e0 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9143 16e4 CB1A     		subs	r3, r1, r3
 9144 16e6 0344     		add	r3, r3, r0
 9145 16e8 013B     		subs	r3, r3, #1
 9146 16ea 1344     		add	r3, r3, r2
 9147 16ec 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9148 16f0 07F5AE61 		add	r1, r7, #1392
 9149 16f4 0A44     		add	r2, r2, r1
 9150 16f6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9151 16f8 1A70     		strb	r2, [r3]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9152              		.loc 1 1223 0 discriminator 3
 9153 16fa 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9154 16fe 0133     		adds	r3, r3, #1
 9155 1700 87F88635 		strb	r3, [r7, #1414]
 9156              	.L351:
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9157              		.loc 1 1223 0 is_stmt 0 discriminator 1
 9158 1704 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9159 1708 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9160 170c 9A42     		cmp	r2, r3
 9161 170e D8D3     		bcc	.L352
1221:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9162              		.loc 1 1221 0 is_stmt 1 discriminator 2
 9163 1710 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9164 1714 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 213


 9165 1716 87F88735 		strb	r3, [r7, #1415]
 9166              	.L350:
1221:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9167              		.loc 1 1221 0 is_stmt 0 discriminator 1
 9168 171a 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9169 171e 07F55D72 		add	r2, r7, #884
 9170 1722 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9171 1724 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9172 1728 9A42     		cmp	r2, r3
 9173 172a BAD3     		bcc	.L353
1227:..\src/command_processing.c ****                 case TYPE_UINT32:
 9174              		.loc 1 1227 0 is_stmt 1
 9175 172c 9DE0     		b	.L362
 9176              	.L332:
1229:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9177              		.loc 1 1229 0
 9178 172e 0023     		movs	r3, #0
 9179 1730 87F88735 		strb	r3, [r7, #1415]
 9180 1734 3BE0     		b	.L354
 9181              	.L357:
1230:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9182              		.loc 1 1230 0
 9183 1736 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9184 173a 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9185 173e 02FB03F3 		mul	r3, r2, r3
 9186 1742 0333     		adds	r3, r3, #3
 9187 1744 474A     		ldr	r2, .L377
 9188 1746 1344     		add	r3, r3, r2
 9189 1748 1B68     		ldr	r3, [r3]
 9190 174a C7F86C35 		str	r3, [r7, #1388]
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9191              		.loc 1 1231 0
 9192 174e 0023     		movs	r3, #0
 9193 1750 87F88635 		strb	r3, [r7, #1414]
 9194 1754 20E0     		b	.L355
 9195              	.L356:
1232:..\src/command_processing.c ****                         }
 9196              		.loc 1 1232 0 discriminator 3
 9197 1756 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9198 175a 07F21C43 		addw	r3, r7, #1052
 9199 175e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9200 1762 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9201 1766 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9202 176a 01FB03F3 		mul	r3, r1, r3
 9203 176e 1846     		mov	r0, r3
 9204 1770 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9205 1774 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9206 1778 CB1A     		subs	r3, r1, r3
 9207 177a 0344     		add	r3, r3, r0
 9208 177c 013B     		subs	r3, r3, #1
 9209 177e 1344     		add	r3, r3, r2
 9210 1780 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9211 1784 07F26C51 		addw	r1, r7, #1388
 9212 1788 0A44     		add	r2, r2, r1
 9213 178a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9214 178c 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 214


 9215              		.loc 1 1231 0 discriminator 3
 9216 178e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9217 1792 0133     		adds	r3, r3, #1
 9218 1794 87F88635 		strb	r3, [r7, #1414]
 9219              	.L355:
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9220              		.loc 1 1231 0 is_stmt 0 discriminator 1
 9221 1798 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9222 179c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9223 17a0 9A42     		cmp	r2, r3
 9224 17a2 D8D3     		bcc	.L356
1229:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9225              		.loc 1 1229 0 is_stmt 1 discriminator 2
 9226 17a4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9227 17a8 0133     		adds	r3, r3, #1
 9228 17aa 87F88735 		strb	r3, [r7, #1415]
 9229              	.L354:
1229:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9230              		.loc 1 1229 0 is_stmt 0 discriminator 1
 9231 17ae 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9232 17b2 07F55D72 		add	r2, r7, #884
 9233 17b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9234 17b8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9235 17bc 9A42     		cmp	r2, r3
 9236 17be BAD3     		bcc	.L357
1235:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9237              		.loc 1 1235 0 is_stmt 1
 9238 17c0 53E0     		b	.L362
 9239              	.L333:
1237:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9240              		.loc 1 1237 0
 9241 17c2 0023     		movs	r3, #0
 9242 17c4 87F88735 		strb	r3, [r7, #1415]
 9243 17c8 3BE0     		b	.L358
 9244              	.L361:
1238:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9245              		.loc 1 1238 0
 9246 17ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9247 17ce 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9248 17d2 02FB03F3 		mul	r3, r2, r3
 9249 17d6 0333     		adds	r3, r3, #3
 9250 17d8 224A     		ldr	r2, .L377
 9251 17da 1344     		add	r3, r3, r2
 9252 17dc 1B68     		ldr	r3, [r3]	@ float
 9253 17de C7F86835 		str	r3, [r7, #1384]	@ float
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9254              		.loc 1 1239 0
 9255 17e2 0023     		movs	r3, #0
 9256 17e4 87F88635 		strb	r3, [r7, #1414]
 9257 17e8 20E0     		b	.L359
 9258              	.L360:
1240:..\src/command_processing.c ****                         }
 9259              		.loc 1 1240 0 discriminator 3
 9260 17ea 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9261 17ee 07F21C43 		addw	r3, r7, #1052
 9262 17f2 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9263 17f6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 215


 9264 17fa 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9265 17fe 01FB03F3 		mul	r3, r1, r3
 9266 1802 1846     		mov	r0, r3
 9267 1804 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9268 1808 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9269 180c CB1A     		subs	r3, r1, r3
 9270 180e 0344     		add	r3, r3, r0
 9271 1810 013B     		subs	r3, r3, #1
 9272 1812 1344     		add	r3, r3, r2
 9273 1814 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9274 1818 07F5AD61 		add	r1, r7, #1384
 9275 181c 0A44     		add	r2, r2, r1
 9276 181e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9277 1820 1A70     		strb	r2, [r3]
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9278              		.loc 1 1239 0 discriminator 3
 9279 1822 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9280 1826 0133     		adds	r3, r3, #1
 9281 1828 87F88635 		strb	r3, [r7, #1414]
 9282              	.L359:
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9283              		.loc 1 1239 0 is_stmt 0 discriminator 1
 9284 182c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9285 1830 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9286 1834 9A42     		cmp	r2, r3
 9287 1836 D8D3     		bcc	.L360
1237:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9288              		.loc 1 1237 0 is_stmt 1 discriminator 2
 9289 1838 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9290 183c 0133     		adds	r3, r3, #1
 9291 183e 87F88735 		strb	r3, [r7, #1415]
 9292              	.L358:
1237:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9293              		.loc 1 1237 0 is_stmt 0 discriminator 1
 9294 1842 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9295 1846 07F55D72 		add	r2, r7, #884
 9296 184a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9297 184c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9298 1850 9A42     		cmp	r2, r3
 9299 1852 BAD3     		bcc	.L361
1243:..\src/command_processing.c ****                 default:
 9300              		.loc 1 1243 0 is_stmt 1
 9301 1854 09E0     		b	.L362
 9302              	.L324:
1250:..\src/command_processing.c ****         }
 9303              		.loc 1 1250 0
 9304 1856 BB1D     		adds	r3, r7, #6
 9305 1858 1B88     		ldrh	r3, [r3]
 9306 185a 1846     		mov	r0, r3
 9307 185c FFF7FEFF 		bl	set_custom_param
 9308 1860 03E0     		b	.L362
 9309              	.L378:
 9310 1862 00BF     		.align	2
 9311              	.L377:
 9312 1864 00000000 		.word	g_rx
 9313              	.L367:
1245:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 216


 9314              		.loc 1 1245 0
 9315 1868 00BF     		nop
 9316              	.L362:
1254:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9317              		.loc 1 1254 0
 9318 186a 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 9319 186e 9BB2     		uxth	r3, r3
 9320 1870 BA1D     		adds	r2, r7, #6
 9321 1872 1288     		ldrh	r2, [r2]
 9322 1874 9A42     		cmp	r2, r3
 9323 1876 11D0     		beq	.L363
1255:..\src/command_processing.c ****         }
 9324              		.loc 1 1255 0
 9325 1878 D7F88035 		ldr	r3, [r7, #1408]
 9326 187c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9327 1880 5B01     		lsls	r3, r3, #5
 9328 1882 03F51273 		add	r3, r3, #584
 9329 1886 D7F88025 		ldr	r2, [r7, #1408]
 9330 188a D018     		adds	r0, r2, r3
 9331 188c D7F88035 		ldr	r3, [r7, #1408]
 9332 1890 03F5F873 		add	r3, r3, #496
 9333 1894 1022     		movs	r2, #16
 9334 1896 1946     		mov	r1, r3
 9335 1898 FFF7FEFF 		bl	memcpy
 9336              	.L363:
1259:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9337              		.loc 1 1259 0
 9338 189c 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9339 18a0 07F57272 		add	r2, r7, #968
 9340 18a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9341 18a6 002B     		cmp	r3, #0
 9342 18a8 42D1     		bne	.L368
 9343              	.LBB18:
1260:..\src/command_processing.c ****             do {
 9344              		.loc 1 1260 0
 9345 18aa 0023     		movs	r3, #0
 9346 18ac 87F87F35 		strb	r3, [r7, #1407]
 9347 18b0 FF23     		movs	r3, #255
 9348 18b2 87F87E35 		strb	r3, [r7, #1406]
 9349              	.L365:
1262:..\src/command_processing.c ****                 idx++;
 9350              		.loc 1 1262 0
 9351 18b6 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9352 18ba 07F57272 		add	r2, r7, #968
 9353 18be D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9354 18c0 002B     		cmp	r3, #0
 9355 18c2 04D1     		bne	.L364
1262:..\src/command_processing.c ****                 idx++;
 9356              		.loc 1 1262 0 is_stmt 0 discriminator 1
 9357 18c4 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9358 18c8 0133     		adds	r3, r3, #1
 9359 18ca 87F87E35 		strb	r3, [r7, #1406]
 9360              	.L364:
1263:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9361              		.loc 1 1263 0 is_stmt 1
 9362 18ce 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9363 18d2 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 217


 9364 18d4 87F87F35 		strb	r3, [r7, #1407]
1264:..\src/command_processing.c ****             
 9365              		.loc 1 1264 0
 9366 18d8 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9367 18dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9368 18e0 9A42     		cmp	r2, r3
 9369 18e2 E8D9     		bls	.L365
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9370              		.loc 1 1266 0
 9371 18e4 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9372 18e8 07F1D402 		add	r2, r7, #212
 9373 18ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9374 18ee 052B     		cmp	r3, #5
 9375 18f0 1BD0     		beq	.L366
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9376              		.loc 1 1266 0 is_stmt 0 discriminator 1
 9377 18f2 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9378 18f6 07F1D402 		add	r2, r7, #212
 9379 18fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9380 18fc 062B     		cmp	r3, #6
 9381 18fe 14D0     		beq	.L366
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9382              		.loc 1 1266 0 discriminator 2
 9383 1900 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9384 1904 07F1D402 		add	r2, r7, #212
 9385 1908 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9386 190a 082B     		cmp	r3, #8
 9387 190c 0DD0     		beq	.L366
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9388              		.loc 1 1266 0 discriminator 3
 9389 190e 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9390 1912 07F1D402 		add	r2, r7, #212
 9391 1916 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9392 1918 092B     		cmp	r3, #9
 9393 191a 06D0     		beq	.L366
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9394              		.loc 1 1266 0 discriminator 4
 9395 191c 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9396 1920 07F1D402 		add	r2, r7, #212
 9397 1924 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9398 1926 0A2B     		cmp	r3, #10
 9399 1928 02D1     		bne	.L368
 9400              	.L366:
1267:..\src/command_processing.c ****             }   
 9401              		.loc 1 1267 0 is_stmt 1
 9402 192a 044B     		ldr	r3, .L379
 9403 192c 0122     		movs	r2, #1
 9404 192e 1A70     		strb	r2, [r3]
 9405              	.L368:
 9406              	.LBE18:
 9407              		.loc 1 1271 0
 9408 1930 00BF     		nop
 9409 1932 07F5B167 		add	r7, r7, #1416
 9410              		.cfi_def_cfa_offset 16
 9411 1936 BD46     		mov	sp, r7
 9412              		.cfi_def_cfa_register 13
 9413              		@ sp needed
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 218


 9414 1938 B0BD     		pop	{r4, r5, r7, pc}
 9415              	.L380:
 9416 193a 00BF     		.align	2
 9417              	.L379:
 9418 193c 00000000 		.word	reset_PSoC_flag
 9419              		.cfi_endproc
 9420              	.LFE68:
 9421              		.size	manage_param_list, .-manage_param_list
 9422              		.global	__aeabi_fmul
 9423              		.global	__aeabi_f2iz
 9424              		.section	.text.set_custom_param,"ax",%progbits
 9425              		.align	2
 9426              		.global	set_custom_param
 9427              		.thumb
 9428              		.thumb_func
 9429              		.type	set_custom_param, %function
 9430              	set_custom_param:
 9431              	.LFB69:
1272:..\src/command_processing.c **** 
1273:..\src/command_processing.c **** //==============================================================================
1274:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1275:..\src/command_processing.c **** //==============================================================================
1276:..\src/command_processing.c **** 
1277:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9432              		.loc 1 1277 0
 9433              		.cfi_startproc
 9434              		@ args = 0, pretend = 0, frame = 24
 9435              		@ frame_needed = 1, uses_anonymous_args = 0
 9436 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9437              		.cfi_def_cfa_offset 20
 9438              		.cfi_offset 4, -20
 9439              		.cfi_offset 5, -16
 9440              		.cfi_offset 6, -12
 9441              		.cfi_offset 7, -8
 9442              		.cfi_offset 14, -4
 9443 0002 87B0     		sub	sp, sp, #28
 9444              		.cfi_def_cfa_offset 48
 9445 0004 00AF     		add	r7, sp, #0
 9446              		.cfi_def_cfa_register 7
 9447 0006 0346     		mov	r3, r0
 9448 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1278:..\src/command_processing.c **** 
1279:..\src/command_processing.c ****     uint8 CYDATA i, j;
1280:..\src/command_processing.c ****     uint8 aux_uchar;
1281:..\src/command_processing.c ****     float aux_float, aux_float2;
1282:..\src/command_processing.c **** 
1283:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9449              		.loc 1 1283 0
 9450 000a 0023     		movs	r3, #0
 9451 000c 3B75     		strb	r3, [r7, #20]
1284:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9452              		.loc 1 1284 0
 9453 000e 0123     		movs	r3, #1
 9454 0010 FB74     		strb	r3, [r7, #19]
1285:..\src/command_processing.c ****     
1286:..\src/command_processing.c ****     switch(index){
 9455              		.loc 1 1286 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 219


 9456 0012 FB88     		ldrh	r3, [r7, #6]
 9457 0014 023B     		subs	r3, r3, #2
 9458 0016 492B     		cmp	r3, #73
 9459 0018 01F2BC82 		bhi	.L476
 9460 001c 01A2     		adr	r2, .L384
 9461 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9462 0022 00BF     		.p2align 2
 9463              	.L384:
 9464 0024 4D010000 		.word	.L383+1
 9465 0028 7F030000 		.word	.L385+1
 9466 002c 95150000 		.word	.L476+1
 9467 0030 C5050000 		.word	.L386+1
 9468 0034 95150000 		.word	.L476+1
 9469 0038 95150000 		.word	.L476+1
 9470 003c 0F060000 		.word	.L387+1
 9471 0040 95150000 		.word	.L476+1
 9472 0044 95150000 		.word	.L476+1
 9473 0048 45070000 		.word	.L388+1
 9474 004c 95150000 		.word	.L476+1
 9475 0050 95150000 		.word	.L476+1
 9476 0054 95150000 		.word	.L476+1
 9477 0058 95150000 		.word	.L476+1
 9478 005c 95150000 		.word	.L476+1
 9479 0060 95150000 		.word	.L476+1
 9480 0064 95150000 		.word	.L476+1
 9481 0068 95150000 		.word	.L476+1
 9482 006c 95150000 		.word	.L476+1
 9483 0070 95150000 		.word	.L476+1
 9484 0074 95150000 		.word	.L476+1
 9485 0078 45080000 		.word	.L389+1
 9486 007c A3080000 		.word	.L390+1
 9487 0080 95150000 		.word	.L476+1
 9488 0084 95150000 		.word	.L476+1
 9489 0088 95150000 		.word	.L476+1
 9490 008c DD080000 		.word	.L391+1
 9491 0090 95150000 		.word	.L476+1
 9492 0094 95150000 		.word	.L476+1
 9493 0098 590A0000 		.word	.L392+1
 9494 009c 050B0000 		.word	.L393+1
 9495 00a0 95150000 		.word	.L476+1
 9496 00a4 95150000 		.word	.L476+1
 9497 00a8 95150000 		.word	.L476+1
 9498 00ac 95150000 		.word	.L476+1
 9499 00b0 95150000 		.word	.L476+1
 9500 00b4 3F0B0000 		.word	.L394+1
 9501 00b8 95150000 		.word	.L476+1
 9502 00bc 95150000 		.word	.L476+1
 9503 00c0 95150000 		.word	.L476+1
 9504 00c4 95150000 		.word	.L476+1
 9505 00c8 95150000 		.word	.L476+1
 9506 00cc 790B0000 		.word	.L395+1
 9507 00d0 C30D0000 		.word	.L396+1
 9508 00d4 95150000 		.word	.L476+1
 9509 00d8 F10F0000 		.word	.L397+1
 9510 00dc 95150000 		.word	.L476+1
 9511 00e0 95150000 		.word	.L476+1
 9512 00e4 59100000 		.word	.L398+1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 220


 9513 00e8 95150000 		.word	.L476+1
 9514 00ec 95150000 		.word	.L476+1
 9515 00f0 6D110000 		.word	.L399+1
 9516 00f4 95150000 		.word	.L476+1
 9517 00f8 95150000 		.word	.L476+1
 9518 00fc 95150000 		.word	.L476+1
 9519 0100 95150000 		.word	.L476+1
 9520 0104 95150000 		.word	.L476+1
 9521 0108 95150000 		.word	.L476+1
 9522 010c 95150000 		.word	.L476+1
 9523 0110 6B120000 		.word	.L400+1
 9524 0114 95150000 		.word	.L476+1
 9525 0118 95150000 		.word	.L476+1
 9526 011c 95150000 		.word	.L476+1
 9527 0120 95150000 		.word	.L476+1
 9528 0124 95150000 		.word	.L476+1
 9529 0128 95150000 		.word	.L476+1
 9530 012c 95150000 		.word	.L476+1
 9531 0130 95150000 		.word	.L476+1
 9532 0134 95150000 		.word	.L476+1
 9533 0138 95150000 		.word	.L476+1
 9534 013c 95150000 		.word	.L476+1
 9535 0140 95150000 		.word	.L476+1
 9536 0144 95150000 		.word	.L476+1
 9537 0148 B5120000 		.word	.L401+1
 9538              		.p2align 1
 9539              	.L383:
1287:..\src/command_processing.c ****         case 2:         // Position PID
1288:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9540              		.loc 1 1288 0
 9541 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9542 014e AB49     		ldr	r1, .L482
 9543 0150 1346     		mov	r3, r2
 9544 0152 DB00     		lsls	r3, r3, #3
 9545 0154 9B1A     		subs	r3, r3, r2
 9546 0156 1B01     		lsls	r3, r3, #4
 9547 0158 0B44     		add	r3, r3, r1
 9548 015a 03F20F13 		addw	r3, r3, #271
 9549 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9550 0160 032B     		cmp	r3, #3
 9551 0162 00F08680 		beq	.L402
1289:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9552              		.loc 1 1289 0
 9553 0166 A64B     		ldr	r3, .L482+4
 9554 0168 1B68     		ldr	r3, [r3]	@ float
 9555 016a FB60     		str	r3, [r7, #12]	@ float
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9556              		.loc 1 1290 0
 9557 016c 0023     		movs	r3, #0
 9558 016e BB75     		strb	r3, [r7, #22]
 9559 0170 0EE0     		b	.L403
 9560              	.L404:
1291:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9561              		.loc 1 1291 0 discriminator 3
 9562 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9563 0174 C3F10303 		rsb	r3, r3, #3
 9564 0178 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 221


 9565 017c 1344     		add	r3, r3, r2
 9566 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9567 0180 07F10C01 		add	r1, r7, #12
 9568 0184 0A44     		add	r2, r2, r1
 9569 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9570 0188 1A70     		strb	r2, [r3]
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9571              		.loc 1 1290 0 discriminator 3
 9572 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9573 018c 0133     		adds	r3, r3, #1
 9574 018e BB75     		strb	r3, [r7, #22]
 9575              	.L403:
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9576              		.loc 1 1290 0 is_stmt 0 discriminator 1
 9577 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9578 0192 032B     		cmp	r3, #3
 9579 0194 EDD9     		bls	.L404
1292:..\src/command_processing.c ****                 }
1293:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9580              		.loc 1 1293 0 is_stmt 1
 9581 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9582 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9583 019a 4FF08F41 		mov	r1, #1199570944
 9584 019e 1846     		mov	r0, r3
 9585 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9586 01a4 0346     		mov	r3, r0
 9587 01a6 1846     		mov	r0, r3
 9588 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9589 01ac 0146     		mov	r1, r0
 9590 01ae 954A     		ldr	r2, .L482+8
 9591 01b0 2346     		mov	r3, r4
 9592 01b2 DB00     		lsls	r3, r3, #3
 9593 01b4 1B1B     		subs	r3, r3, r4
 9594 01b6 1B01     		lsls	r3, r3, #4
 9595 01b8 1344     		add	r3, r3, r2
 9596 01ba B033     		adds	r3, r3, #176
 9597 01bc 1960     		str	r1, [r3]
1294:..\src/command_processing.c ****                 
1295:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9598              		.loc 1 1295 0
 9599 01be 924B     		ldr	r3, .L482+12
 9600 01c0 1B68     		ldr	r3, [r3]	@ float
 9601 01c2 FB60     		str	r3, [r7, #12]	@ float
1296:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9602              		.loc 1 1296 0
 9603 01c4 0023     		movs	r3, #0
 9604 01c6 BB75     		strb	r3, [r7, #22]
 9605 01c8 0EE0     		b	.L405
 9606              	.L406:
1297:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9607              		.loc 1 1297 0 discriminator 3
 9608 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9609 01cc C3F10303 		rsb	r3, r3, #3
 9610 01d0 07F10802 		add	r2, r7, #8
 9611 01d4 1344     		add	r3, r3, r2
 9612 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9613 01d8 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 222


 9614 01dc 0A44     		add	r2, r2, r1
 9615 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9616 01e0 1A70     		strb	r2, [r3]
1296:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9617              		.loc 1 1296 0 discriminator 3
 9618 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9619 01e4 0133     		adds	r3, r3, #1
 9620 01e6 BB75     		strb	r3, [r7, #22]
 9621              	.L405:
1296:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9622              		.loc 1 1296 0 is_stmt 0 discriminator 1
 9623 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9624 01ea 032B     		cmp	r3, #3
 9625 01ec EDD9     		bls	.L406
1298:..\src/command_processing.c ****                 }
1299:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9626              		.loc 1 1299 0 is_stmt 1
 9627 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9628 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 9629 01f2 4FF08F41 		mov	r1, #1199570944
 9630 01f6 1846     		mov	r0, r3
 9631 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9632 01fc 0346     		mov	r3, r0
 9633 01fe 1846     		mov	r0, r3
 9634 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9635 0204 0146     		mov	r1, r0
 9636 0206 7F4A     		ldr	r2, .L482+8
 9637 0208 2346     		mov	r3, r4
 9638 020a DB00     		lsls	r3, r3, #3
 9639 020c 1B1B     		subs	r3, r3, r4
 9640 020e 1B01     		lsls	r3, r3, #4
 9641 0210 1344     		add	r3, r3, r2
 9642 0212 B433     		adds	r3, r3, #180
 9643 0214 1960     		str	r1, [r3]
1300:..\src/command_processing.c ****                 
1301:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9644              		.loc 1 1301 0
 9645 0216 7D4B     		ldr	r3, .L482+16
 9646 0218 1B68     		ldr	r3, [r3]	@ float
 9647 021a FB60     		str	r3, [r7, #12]	@ float
1302:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9648              		.loc 1 1302 0
 9649 021c 0023     		movs	r3, #0
 9650 021e BB75     		strb	r3, [r7, #22]
 9651 0220 0EE0     		b	.L407
 9652              	.L408:
1303:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9653              		.loc 1 1303 0 discriminator 3
 9654 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9655 0224 C3F10303 		rsb	r3, r3, #3
 9656 0228 07F10802 		add	r2, r7, #8
 9657 022c 1344     		add	r3, r3, r2
 9658 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9659 0230 07F10C01 		add	r1, r7, #12
 9660 0234 0A44     		add	r2, r2, r1
 9661 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9662 0238 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 223


1302:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9663              		.loc 1 1302 0 discriminator 3
 9664 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9665 023c 0133     		adds	r3, r3, #1
 9666 023e BB75     		strb	r3, [r7, #22]
 9667              	.L407:
1302:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9668              		.loc 1 1302 0 is_stmt 0 discriminator 1
 9669 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9670 0242 032B     		cmp	r3, #3
 9671 0244 EDD9     		bls	.L408
1304:..\src/command_processing.c ****                 }
1305:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9672              		.loc 1 1305 0 is_stmt 1
 9673 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9674 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9675 024a 4FF08F41 		mov	r1, #1199570944
 9676 024e 1846     		mov	r0, r3
 9677 0250 FFF7FEFF 		bl	__aeabi_fmul
 9678 0254 0346     		mov	r3, r0
 9679 0256 1846     		mov	r0, r3
 9680 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9681 025c 0146     		mov	r1, r0
 9682 025e 694A     		ldr	r2, .L482+8
 9683 0260 2346     		mov	r3, r4
 9684 0262 DB00     		lsls	r3, r3, #3
 9685 0264 1B1B     		subs	r3, r3, r4
 9686 0266 1B01     		lsls	r3, r3, #4
 9687 0268 1344     		add	r3, r3, r2
 9688 026a B833     		adds	r3, r3, #184
 9689 026c 1960     		str	r1, [r3]
1306:..\src/command_processing.c ****             }
1307:..\src/command_processing.c ****             else {
1308:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1309:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1310:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1311:..\src/command_processing.c ****                 }
1312:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1313:..\src/command_processing.c ****                 
1314:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1315:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1316:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1317:..\src/command_processing.c ****                 }
1318:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1319:..\src/command_processing.c ****                 
1320:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1321:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1322:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1323:..\src/command_processing.c ****                 }
1324:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1325:..\src/command_processing.c ****             }
1326:..\src/command_processing.c ****             break;
 9690              		.loc 1 1326 0
 9691 026e 01F09CB9 		b	.L416
 9692              	.L402:
1308:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9693              		.loc 1 1308 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 224


 9694 0272 634B     		ldr	r3, .L482+4
 9695 0274 1B68     		ldr	r3, [r3]	@ float
 9696 0276 FB60     		str	r3, [r7, #12]	@ float
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9697              		.loc 1 1309 0
 9698 0278 0023     		movs	r3, #0
 9699 027a BB75     		strb	r3, [r7, #22]
 9700 027c 0EE0     		b	.L410
 9701              	.L411:
1310:..\src/command_processing.c ****                 }
 9702              		.loc 1 1310 0 discriminator 3
 9703 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9704 0280 C3F10303 		rsb	r3, r3, #3
 9705 0284 07F10802 		add	r2, r7, #8
 9706 0288 1344     		add	r3, r3, r2
 9707 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9708 028c 07F10C01 		add	r1, r7, #12
 9709 0290 0A44     		add	r2, r2, r1
 9710 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9711 0294 1A70     		strb	r2, [r3]
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9712              		.loc 1 1309 0 discriminator 3
 9713 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9714 0298 0133     		adds	r3, r3, #1
 9715 029a BB75     		strb	r3, [r7, #22]
 9716              	.L410:
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9717              		.loc 1 1309 0 is_stmt 0 discriminator 1
 9718 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9719 029e 032B     		cmp	r3, #3
 9720 02a0 EDD9     		bls	.L411
1312:..\src/command_processing.c ****                 
 9721              		.loc 1 1312 0 is_stmt 1
 9722 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9723 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9724 02a6 4FF08F41 		mov	r1, #1199570944
 9725 02aa 1846     		mov	r0, r3
 9726 02ac FFF7FEFF 		bl	__aeabi_fmul
 9727 02b0 0346     		mov	r3, r0
 9728 02b2 1846     		mov	r0, r3
 9729 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9730 02b8 0146     		mov	r1, r0
 9731 02ba 524A     		ldr	r2, .L482+8
 9732 02bc 2346     		mov	r3, r4
 9733 02be DB00     		lsls	r3, r3, #3
 9734 02c0 1B1B     		subs	r3, r3, r4
 9735 02c2 1B01     		lsls	r3, r3, #4
 9736 02c4 1344     		add	r3, r3, r2
 9737 02c6 C833     		adds	r3, r3, #200
 9738 02c8 1960     		str	r1, [r3]
1314:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9739              		.loc 1 1314 0
 9740 02ca 4F4B     		ldr	r3, .L482+12
 9741 02cc 1B68     		ldr	r3, [r3]	@ float
 9742 02ce FB60     		str	r3, [r7, #12]	@ float
1315:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9743              		.loc 1 1315 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 225


 9744 02d0 0023     		movs	r3, #0
 9745 02d2 BB75     		strb	r3, [r7, #22]
 9746 02d4 0EE0     		b	.L412
 9747              	.L413:
1316:..\src/command_processing.c ****                 }
 9748              		.loc 1 1316 0 discriminator 3
 9749 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9750 02d8 C3F10303 		rsb	r3, r3, #3
 9751 02dc 07F10802 		add	r2, r7, #8
 9752 02e0 1344     		add	r3, r3, r2
 9753 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9754 02e4 07F10C01 		add	r1, r7, #12
 9755 02e8 0A44     		add	r2, r2, r1
 9756 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9757 02ec 1A70     		strb	r2, [r3]
1315:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9758              		.loc 1 1315 0 discriminator 3
 9759 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9760 02f0 0133     		adds	r3, r3, #1
 9761 02f2 BB75     		strb	r3, [r7, #22]
 9762              	.L412:
1315:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9763              		.loc 1 1315 0 is_stmt 0 discriminator 1
 9764 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9765 02f6 032B     		cmp	r3, #3
 9766 02f8 EDD9     		bls	.L413
1318:..\src/command_processing.c ****                 
 9767              		.loc 1 1318 0 is_stmt 1
 9768 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9769 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9770 02fe 4FF08F41 		mov	r1, #1199570944
 9771 0302 1846     		mov	r0, r3
 9772 0304 FFF7FEFF 		bl	__aeabi_fmul
 9773 0308 0346     		mov	r3, r0
 9774 030a 1846     		mov	r0, r3
 9775 030c FFF7FEFF 		bl	__aeabi_f2iz
 9776 0310 0146     		mov	r1, r0
 9777 0312 3C4A     		ldr	r2, .L482+8
 9778 0314 2346     		mov	r3, r4
 9779 0316 DB00     		lsls	r3, r3, #3
 9780 0318 1B1B     		subs	r3, r3, r4
 9781 031a 1B01     		lsls	r3, r3, #4
 9782 031c 1344     		add	r3, r3, r2
 9783 031e CC33     		adds	r3, r3, #204
 9784 0320 1960     		str	r1, [r3]
1320:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9785              		.loc 1 1320 0
 9786 0322 3A4B     		ldr	r3, .L482+16
 9787 0324 1B68     		ldr	r3, [r3]	@ float
 9788 0326 FB60     		str	r3, [r7, #12]	@ float
1321:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9789              		.loc 1 1321 0
 9790 0328 0023     		movs	r3, #0
 9791 032a BB75     		strb	r3, [r7, #22]
 9792 032c 0EE0     		b	.L414
 9793              	.L415:
1322:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 226


 9794              		.loc 1 1322 0 discriminator 3
 9795 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9796 0330 C3F10303 		rsb	r3, r3, #3
 9797 0334 07F10802 		add	r2, r7, #8
 9798 0338 1344     		add	r3, r3, r2
 9799 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9800 033c 07F10C01 		add	r1, r7, #12
 9801 0340 0A44     		add	r2, r2, r1
 9802 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9803 0344 1A70     		strb	r2, [r3]
1321:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9804              		.loc 1 1321 0 discriminator 3
 9805 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9806 0348 0133     		adds	r3, r3, #1
 9807 034a BB75     		strb	r3, [r7, #22]
 9808              	.L414:
1321:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9809              		.loc 1 1321 0 is_stmt 0 discriminator 1
 9810 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9811 034e 032B     		cmp	r3, #3
 9812 0350 EDD9     		bls	.L415
1324:..\src/command_processing.c ****             }
 9813              		.loc 1 1324 0 is_stmt 1
 9814 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9815 0354 BB68     		ldr	r3, [r7, #8]	@ float
 9816 0356 4FF08F41 		mov	r1, #1199570944
 9817 035a 1846     		mov	r0, r3
 9818 035c FFF7FEFF 		bl	__aeabi_fmul
 9819 0360 0346     		mov	r3, r0
 9820 0362 1846     		mov	r0, r3
 9821 0364 FFF7FEFF 		bl	__aeabi_f2iz
 9822 0368 0146     		mov	r1, r0
 9823 036a 264A     		ldr	r2, .L482+8
 9824 036c 2346     		mov	r3, r4
 9825 036e DB00     		lsls	r3, r3, #3
 9826 0370 1B1B     		subs	r3, r3, r4
 9827 0372 1B01     		lsls	r3, r3, #4
 9828 0374 1344     		add	r3, r3, r2
 9829 0376 D033     		adds	r3, r3, #208
 9830 0378 1960     		str	r1, [r3]
 9831              		.loc 1 1326 0
 9832 037a 01F016B9 		b	.L416
 9833              	.L385:
1327:..\src/command_processing.c ****             
1328:..\src/command_processing.c ****         case 3:         //Current PID
1329:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9834              		.loc 1 1329 0
 9835 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9836 0380 1E49     		ldr	r1, .L482
 9837 0382 1346     		mov	r3, r2
 9838 0384 DB00     		lsls	r3, r3, #3
 9839 0386 9B1A     		subs	r3, r3, r2
 9840 0388 1B01     		lsls	r3, r3, #4
 9841 038a 0B44     		add	r3, r3, r1
 9842 038c 03F20F13 		addw	r3, r3, #271
 9843 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9844 0392 032B     		cmp	r3, #3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 227


 9845 0394 00F09080 		beq	.L417
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9846              		.loc 1 1330 0
 9847 0398 194B     		ldr	r3, .L482+4
 9848 039a 1B68     		ldr	r3, [r3]	@ float
 9849 039c FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9850              		.loc 1 1331 0
 9851 039e 0023     		movs	r3, #0
 9852 03a0 BB75     		strb	r3, [r7, #22]
 9853 03a2 0EE0     		b	.L418
 9854              	.L419:
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9855              		.loc 1 1332 0 discriminator 3
 9856 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9857 03a6 C3F10303 		rsb	r3, r3, #3
 9858 03aa 07F10802 		add	r2, r7, #8
 9859 03ae 1344     		add	r3, r3, r2
 9860 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9861 03b2 07F10C01 		add	r1, r7, #12
 9862 03b6 0A44     		add	r2, r2, r1
 9863 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9864 03ba 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9865              		.loc 1 1331 0 discriminator 3
 9866 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9867 03be 0133     		adds	r3, r3, #1
 9868 03c0 BB75     		strb	r3, [r7, #22]
 9869              	.L418:
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9870              		.loc 1 1331 0 is_stmt 0 discriminator 1
 9871 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9872 03c4 032B     		cmp	r3, #3
 9873 03c6 EDD9     		bls	.L419
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9874              		.loc 1 1334 0 is_stmt 1
 9875 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9876 03ca BB68     		ldr	r3, [r7, #8]	@ float
 9877 03cc 4FF08F41 		mov	r1, #1199570944
 9878 03d0 1846     		mov	r0, r3
 9879 03d2 FFF7FEFF 		bl	__aeabi_fmul
 9880 03d6 0346     		mov	r3, r0
 9881 03d8 1846     		mov	r0, r3
 9882 03da FFF7FEFF 		bl	__aeabi_f2iz
 9883 03de 0146     		mov	r1, r0
 9884 03e0 084A     		ldr	r2, .L482+8
 9885 03e2 2346     		mov	r3, r4
 9886 03e4 DB00     		lsls	r3, r3, #3
 9887 03e6 1B1B     		subs	r3, r3, r4
 9888 03e8 1B01     		lsls	r3, r3, #4
 9889 03ea 1344     		add	r3, r3, r2
 9890 03ec BC33     		adds	r3, r3, #188
 9891 03ee 1960     		str	r1, [r3]
1335:..\src/command_processing.c ****                 
1336:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9892              		.loc 1 1336 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 228


 9893 03f0 054B     		ldr	r3, .L482+12
 9894 03f2 1B68     		ldr	r3, [r3]	@ float
 9895 03f4 FB60     		str	r3, [r7, #12]	@ float
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9896              		.loc 1 1337 0
 9897 03f6 0023     		movs	r3, #0
 9898 03f8 BB75     		strb	r3, [r7, #22]
 9899 03fa 18E0     		b	.L420
 9900              	.L483:
 9901              		.align	2
 9902              	.L482:
 9903 03fc 00000000 		.word	c_mem
 9904 0400 03000000 		.word	g_rx+3
 9905 0404 00000000 		.word	g_mem
 9906 0408 07000000 		.word	g_rx+7
 9907 040c 0B000000 		.word	g_rx+11
 9908              	.L421:
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9909              		.loc 1 1338 0 discriminator 3
 9910 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9911 0412 C3F10303 		rsb	r3, r3, #3
 9912 0416 07F10802 		add	r2, r7, #8
 9913 041a 1344     		add	r3, r3, r2
 9914 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9915 041e 07F10C01 		add	r1, r7, #12
 9916 0422 0A44     		add	r2, r2, r1
 9917 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9918 0426 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9919              		.loc 1 1337 0 discriminator 3
 9920 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9921 042a 0133     		adds	r3, r3, #1
 9922 042c BB75     		strb	r3, [r7, #22]
 9923              	.L420:
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9924              		.loc 1 1337 0 is_stmt 0 discriminator 1
 9925 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9926 0430 032B     		cmp	r3, #3
 9927 0432 EDD9     		bls	.L421
1339:..\src/command_processing.c ****                 }
1340:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9928              		.loc 1 1340 0 is_stmt 1
 9929 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9930 0436 BB68     		ldr	r3, [r7, #8]	@ float
 9931 0438 4FF08F41 		mov	r1, #1199570944
 9932 043c 1846     		mov	r0, r3
 9933 043e FFF7FEFF 		bl	__aeabi_fmul
 9934 0442 0346     		mov	r3, r0
 9935 0444 1846     		mov	r0, r3
 9936 0446 FFF7FEFF 		bl	__aeabi_f2iz
 9937 044a 0146     		mov	r1, r0
 9938 044c B54A     		ldr	r2, .L484
 9939 044e 2346     		mov	r3, r4
 9940 0450 DB00     		lsls	r3, r3, #3
 9941 0452 1B1B     		subs	r3, r3, r4
 9942 0454 1B01     		lsls	r3, r3, #4
 9943 0456 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 229


 9944 0458 C033     		adds	r3, r3, #192
 9945 045a 1960     		str	r1, [r3]
1341:..\src/command_processing.c ****                 
1342:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9946              		.loc 1 1342 0
 9947 045c B24B     		ldr	r3, .L484+4
 9948 045e 1B68     		ldr	r3, [r3]	@ float
 9949 0460 FB60     		str	r3, [r7, #12]	@ float
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9950              		.loc 1 1343 0
 9951 0462 0023     		movs	r3, #0
 9952 0464 BB75     		strb	r3, [r7, #22]
 9953 0466 0EE0     		b	.L422
 9954              	.L423:
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9955              		.loc 1 1344 0 discriminator 3
 9956 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9957 046a C3F10303 		rsb	r3, r3, #3
 9958 046e 07F10802 		add	r2, r7, #8
 9959 0472 1344     		add	r3, r3, r2
 9960 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9961 0476 07F10C01 		add	r1, r7, #12
 9962 047a 0A44     		add	r2, r2, r1
 9963 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9964 047e 1A70     		strb	r2, [r3]
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9965              		.loc 1 1343 0 discriminator 3
 9966 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9967 0482 0133     		adds	r3, r3, #1
 9968 0484 BB75     		strb	r3, [r7, #22]
 9969              	.L422:
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9970              		.loc 1 1343 0 is_stmt 0 discriminator 1
 9971 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9972 0488 032B     		cmp	r3, #3
 9973 048a EDD9     		bls	.L423
1345:..\src/command_processing.c ****                 }
1346:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9974              		.loc 1 1346 0 is_stmt 1
 9975 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9976 048e BB68     		ldr	r3, [r7, #8]	@ float
 9977 0490 4FF08F41 		mov	r1, #1199570944
 9978 0494 1846     		mov	r0, r3
 9979 0496 FFF7FEFF 		bl	__aeabi_fmul
 9980 049a 0346     		mov	r3, r0
 9981 049c 1846     		mov	r0, r3
 9982 049e FFF7FEFF 		bl	__aeabi_f2iz
 9983 04a2 0146     		mov	r1, r0
 9984 04a4 9F4A     		ldr	r2, .L484
 9985 04a6 2346     		mov	r3, r4
 9986 04a8 DB00     		lsls	r3, r3, #3
 9987 04aa 1B1B     		subs	r3, r3, r4
 9988 04ac 1B01     		lsls	r3, r3, #4
 9989 04ae 1344     		add	r3, r3, r2
 9990 04b0 C433     		adds	r3, r3, #196
 9991 04b2 1960     		str	r1, [r3]
1347:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 230


1348:..\src/command_processing.c ****             else {
1349:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1350:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1351:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1352:..\src/command_processing.c ****                 }
1353:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1354:..\src/command_processing.c ****                 
1355:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1357:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1358:..\src/command_processing.c ****                 }
1359:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1360:..\src/command_processing.c ****                 
1361:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1363:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1364:..\src/command_processing.c ****                 }
1365:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1366:..\src/command_processing.c ****             }            
1367:..\src/command_processing.c ****             break;  
 9992              		.loc 1 1367 0
 9993 04b4 01F079B8 		b	.L416
 9994              	.L417:
1349:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9995              		.loc 1 1349 0
 9996 04b8 9C4B     		ldr	r3, .L484+8
 9997 04ba 1B68     		ldr	r3, [r3]	@ float
 9998 04bc FB60     		str	r3, [r7, #12]	@ float
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9999              		.loc 1 1350 0
 10000 04be 0023     		movs	r3, #0
 10001 04c0 BB75     		strb	r3, [r7, #22]
 10002 04c2 0EE0     		b	.L425
 10003              	.L426:
1351:..\src/command_processing.c ****                 }
 10004              		.loc 1 1351 0 discriminator 3
 10005 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10006 04c6 C3F10303 		rsb	r3, r3, #3
 10007 04ca 07F10802 		add	r2, r7, #8
 10008 04ce 1344     		add	r3, r3, r2
 10009 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10010 04d2 07F10C01 		add	r1, r7, #12
 10011 04d6 0A44     		add	r2, r2, r1
 10012 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10013 04da 1A70     		strb	r2, [r3]
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10014              		.loc 1 1350 0 discriminator 3
 10015 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10016 04de 0133     		adds	r3, r3, #1
 10017 04e0 BB75     		strb	r3, [r7, #22]
 10018              	.L425:
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10019              		.loc 1 1350 0 is_stmt 0 discriminator 1
 10020 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10021 04e4 032B     		cmp	r3, #3
 10022 04e6 EDD9     		bls	.L426
1353:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 231


 10023              		.loc 1 1353 0 is_stmt 1
 10024 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10025 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10026 04ec 4FF08F41 		mov	r1, #1199570944
 10027 04f0 1846     		mov	r0, r3
 10028 04f2 FFF7FEFF 		bl	__aeabi_fmul
 10029 04f6 0346     		mov	r3, r0
 10030 04f8 1846     		mov	r0, r3
 10031 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10032 04fe 0146     		mov	r1, r0
 10033 0500 884A     		ldr	r2, .L484
 10034 0502 2346     		mov	r3, r4
 10035 0504 DB00     		lsls	r3, r3, #3
 10036 0506 1B1B     		subs	r3, r3, r4
 10037 0508 1B01     		lsls	r3, r3, #4
 10038 050a 1344     		add	r3, r3, r2
 10039 050c D433     		adds	r3, r3, #212
 10040 050e 1960     		str	r1, [r3]
1355:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10041              		.loc 1 1355 0
 10042 0510 874B     		ldr	r3, .L484+12
 10043 0512 1B68     		ldr	r3, [r3]	@ float
 10044 0514 FB60     		str	r3, [r7, #12]	@ float
1356:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10045              		.loc 1 1356 0
 10046 0516 0023     		movs	r3, #0
 10047 0518 BB75     		strb	r3, [r7, #22]
 10048 051a 0EE0     		b	.L427
 10049              	.L428:
1357:..\src/command_processing.c ****                 }
 10050              		.loc 1 1357 0 discriminator 3
 10051 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10052 051e C3F10303 		rsb	r3, r3, #3
 10053 0522 07F10802 		add	r2, r7, #8
 10054 0526 1344     		add	r3, r3, r2
 10055 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10056 052a 07F10C01 		add	r1, r7, #12
 10057 052e 0A44     		add	r2, r2, r1
 10058 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10059 0532 1A70     		strb	r2, [r3]
1356:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10060              		.loc 1 1356 0 discriminator 3
 10061 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10062 0536 0133     		adds	r3, r3, #1
 10063 0538 BB75     		strb	r3, [r7, #22]
 10064              	.L427:
1356:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10065              		.loc 1 1356 0 is_stmt 0 discriminator 1
 10066 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10067 053c 032B     		cmp	r3, #3
 10068 053e EDD9     		bls	.L428
1359:..\src/command_processing.c ****                 
 10069              		.loc 1 1359 0 is_stmt 1
 10070 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10071 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10072 0544 4FF08F41 		mov	r1, #1199570944
 10073 0548 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 232


 10074 054a FFF7FEFF 		bl	__aeabi_fmul
 10075 054e 0346     		mov	r3, r0
 10076 0550 1846     		mov	r0, r3
 10077 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10078 0556 0146     		mov	r1, r0
 10079 0558 724A     		ldr	r2, .L484
 10080 055a 2346     		mov	r3, r4
 10081 055c DB00     		lsls	r3, r3, #3
 10082 055e 1B1B     		subs	r3, r3, r4
 10083 0560 1B01     		lsls	r3, r3, #4
 10084 0562 1344     		add	r3, r3, r2
 10085 0564 D833     		adds	r3, r3, #216
 10086 0566 1960     		str	r1, [r3]
1361:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10087              		.loc 1 1361 0
 10088 0568 6F4B     		ldr	r3, .L484+4
 10089 056a 1B68     		ldr	r3, [r3]	@ float
 10090 056c FB60     		str	r3, [r7, #12]	@ float
1362:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10091              		.loc 1 1362 0
 10092 056e 0023     		movs	r3, #0
 10093 0570 BB75     		strb	r3, [r7, #22]
 10094 0572 0EE0     		b	.L429
 10095              	.L430:
1363:..\src/command_processing.c ****                 }
 10096              		.loc 1 1363 0 discriminator 3
 10097 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10098 0576 C3F10303 		rsb	r3, r3, #3
 10099 057a 07F10802 		add	r2, r7, #8
 10100 057e 1344     		add	r3, r3, r2
 10101 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10102 0582 07F10C01 		add	r1, r7, #12
 10103 0586 0A44     		add	r2, r2, r1
 10104 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10105 058a 1A70     		strb	r2, [r3]
1362:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10106              		.loc 1 1362 0 discriminator 3
 10107 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10108 058e 0133     		adds	r3, r3, #1
 10109 0590 BB75     		strb	r3, [r7, #22]
 10110              	.L429:
1362:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10111              		.loc 1 1362 0 is_stmt 0 discriminator 1
 10112 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10113 0594 032B     		cmp	r3, #3
 10114 0596 EDD9     		bls	.L430
1365:..\src/command_processing.c ****             }            
 10115              		.loc 1 1365 0 is_stmt 1
 10116 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10117 059a BB68     		ldr	r3, [r7, #8]	@ float
 10118 059c 4FF08F41 		mov	r1, #1199570944
 10119 05a0 1846     		mov	r0, r3
 10120 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10121 05a6 0346     		mov	r3, r0
 10122 05a8 1846     		mov	r0, r3
 10123 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10124 05ae 0146     		mov	r1, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 233


 10125 05b0 5C4A     		ldr	r2, .L484
 10126 05b2 2346     		mov	r3, r4
 10127 05b4 DB00     		lsls	r3, r3, #3
 10128 05b6 1B1B     		subs	r3, r3, r4
 10129 05b8 1B01     		lsls	r3, r3, #4
 10130 05ba 1344     		add	r3, r3, r2
 10131 05bc DC33     		adds	r3, r3, #220
 10132 05be 1960     		str	r1, [r3]
 10133              		.loc 1 1367 0
 10134 05c0 00F0F3BF 		b	.L416
 10135              	.L386:
1368:..\src/command_processing.c ****             
1369:..\src/command_processing.c ****         case 5:         //Input mode
1370:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10136              		.loc 1 1370 0
 10137 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10138 05c6 5B4B     		ldr	r3, .L484+16
 10139 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10140 05ca 5649     		ldr	r1, .L484
 10141 05cc 1346     		mov	r3, r2
 10142 05ce DB00     		lsls	r3, r3, #3
 10143 05d0 9B1A     		subs	r3, r3, r2
 10144 05d2 1B01     		lsls	r3, r3, #4
 10145 05d4 0B44     		add	r3, r3, r1
 10146 05d6 03F58773 		add	r3, r3, #270
 10147 05da 0246     		mov	r2, r0
 10148 05dc 1A70     		strb	r2, [r3]
1371:..\src/command_processing.c ****             
1372:..\src/command_processing.c ****             // Hold the actual position
1373:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10149              		.loc 1 1373 0
 10150 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10151 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10152 05e2 5048     		ldr	r0, .L484
 10153 05e4 1346     		mov	r3, r2
 10154 05e6 DB00     		lsls	r3, r3, #3
 10155 05e8 9B1A     		subs	r3, r3, r2
 10156 05ea 1B01     		lsls	r3, r3, #4
 10157 05ec 0344     		add	r3, r3, r0
 10158 05ee 03F58873 		add	r3, r3, #272
 10159 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10160 05f4 1846     		mov	r0, r3
 10161 05f6 504A     		ldr	r2, .L484+20
 10162 05f8 3423     		movs	r3, #52
 10163 05fa 03FB00F3 		mul	r3, r3, r0
 10164 05fe 1344     		add	r3, r3, r2
 10165 0600 1A68     		ldr	r2, [r3]
 10166 0602 4E48     		ldr	r0, .L484+24
 10167 0604 0B01     		lsls	r3, r1, #4
 10168 0606 0344     		add	r3, r3, r0
 10169 0608 1A60     		str	r2, [r3]
1374:..\src/command_processing.c ****             break;   
 10170              		.loc 1 1374 0
 10171 060a 00F0CEBF 		b	.L416
 10172              	.L387:
1375:..\src/command_processing.c **** 
1376:..\src/command_processing.c ****         case 8:         //Measurement Offset
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 234


1377:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10173              		.loc 1 1377 0
 10174 060e 0023     		movs	r3, #0
 10175 0610 FB75     		strb	r3, [r7, #23]
 10176 0612 7EE0     		b	.L431
 10177              	.L432:
1378:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10178              		.loc 1 1378 0 discriminator 3
 10179 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10180 0616 4349     		ldr	r1, .L484
 10181 0618 1346     		mov	r3, r2
 10182 061a DB00     		lsls	r3, r3, #3
 10183 061c 9B1A     		subs	r3, r3, r2
 10184 061e 1B01     		lsls	r3, r3, #4
 10185 0620 0B44     		add	r3, r3, r1
 10186 0622 03F58873 		add	r3, r3, #272
 10187 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10188 0628 1C46     		mov	r4, r3
 10189 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10190 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10191 062e 5B00     		lsls	r3, r3, #1
 10192 0630 0333     		adds	r3, r3, #3
 10193 0632 4049     		ldr	r1, .L484+16
 10194 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10195 0636 1B02     		lsls	r3, r3, #8
 10196 0638 19B2     		sxth	r1, r3
 10197 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10198 063c 0233     		adds	r3, r3, #2
 10199 063e 5B00     		lsls	r3, r3, #1
 10200 0640 3C48     		ldr	r0, .L484+16
 10201 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10202 0644 1BB2     		sxth	r3, r3
 10203 0646 0B43     		orrs	r3, r3, r1
 10204 0648 1BB2     		sxth	r3, r3
 10205 064a 1846     		mov	r0, r3
 10206 064c 3549     		ldr	r1, .L484
 10207 064e 2346     		mov	r3, r4
 10208 0650 5B00     		lsls	r3, r3, #1
 10209 0652 2344     		add	r3, r3, r4
 10210 0654 9B00     		lsls	r3, r3, #2
 10211 0656 1344     		add	r3, r3, r2
 10212 0658 6633     		adds	r3, r3, #102
 10213 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1379:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10214              		.loc 1 1379 0 discriminator 3
 10215 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10216 0660 3049     		ldr	r1, .L484
 10217 0662 1346     		mov	r3, r2
 10218 0664 DB00     		lsls	r3, r3, #3
 10219 0666 9B1A     		subs	r3, r3, r2
 10220 0668 1B01     		lsls	r3, r3, #4
 10221 066a 0B44     		add	r3, r3, r1
 10222 066c 03F58873 		add	r3, r3, #272
 10223 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10224 0672 1D46     		mov	r5, r3
 10225 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10226 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 235


 10227 0678 2A48     		ldr	r0, .L484
 10228 067a 1346     		mov	r3, r2
 10229 067c DB00     		lsls	r3, r3, #3
 10230 067e 9B1A     		subs	r3, r3, r2
 10231 0680 1B01     		lsls	r3, r3, #4
 10232 0682 0344     		add	r3, r3, r0
 10233 0684 03F58873 		add	r3, r3, #272
 10234 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10235 068a 1C46     		mov	r4, r3
 10236 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10237 068e 2548     		ldr	r0, .L484
 10238 0690 2346     		mov	r3, r4
 10239 0692 5B00     		lsls	r3, r3, #1
 10240 0694 2344     		add	r3, r3, r4
 10241 0696 9B00     		lsls	r3, r3, #2
 10242 0698 1344     		add	r3, r3, r2
 10243 069a 6633     		adds	r3, r3, #102
 10244 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10245 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10246 06a2 204C     		ldr	r4, .L484
 10247 06a4 1346     		mov	r3, r2
 10248 06a6 DB00     		lsls	r3, r3, #3
 10249 06a8 9B1A     		subs	r3, r3, r2
 10250 06aa 1B01     		lsls	r3, r3, #4
 10251 06ac 2344     		add	r3, r3, r4
 10252 06ae 03F58873 		add	r3, r3, #272
 10253 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10254 06b4 1E46     		mov	r6, r3
 10255 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10256 06b8 1A4C     		ldr	r4, .L484
 10257 06ba 3346     		mov	r3, r6
 10258 06bc 5B00     		lsls	r3, r3, #1
 10259 06be 3344     		add	r3, r3, r6
 10260 06c0 1B01     		lsls	r3, r3, #4
 10261 06c2 2344     		add	r3, r3, r4
 10262 06c4 1344     		add	r3, r3, r2
 10263 06c6 03F29513 		addw	r3, r3, #405
 10264 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10265 06cc 00FA03F2 		lsl	r2, r0, r3
 10266 06d0 1448     		ldr	r0, .L484
 10267 06d2 2B46     		mov	r3, r5
 10268 06d4 5B00     		lsls	r3, r3, #1
 10269 06d6 2B44     		add	r3, r3, r5
 10270 06d8 9B00     		lsls	r3, r3, #2
 10271 06da 0B44     		add	r3, r3, r1
 10272 06dc 6633     		adds	r3, r3, #102
 10273 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1380:..\src/command_processing.c **** 
1381:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10274              		.loc 1 1381 0 discriminator 3
 10275 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10276 06e4 0F49     		ldr	r1, .L484
 10277 06e6 1346     		mov	r3, r2
 10278 06e8 DB00     		lsls	r3, r3, #3
 10279 06ea 9B1A     		subs	r3, r3, r2
 10280 06ec 1B01     		lsls	r3, r3, #4
 10281 06ee 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 236


 10282 06f0 03F58873 		add	r3, r3, #272
 10283 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10284 06f6 1846     		mov	r0, r3
 10285 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10286 06fa 0F49     		ldr	r1, .L484+20
 10287 06fc 3422     		movs	r2, #52
 10288 06fe 02FB00F2 		mul	r2, r2, r0
 10289 0702 0A44     		add	r2, r2, r1
 10290 0704 1344     		add	r3, r3, r2
 10291 0706 1833     		adds	r3, r3, #24
 10292 0708 0022     		movs	r2, #0
 10293 070a 1A70     		strb	r2, [r3]
1377:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10294              		.loc 1 1377 0 discriminator 3
 10295 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10296 070e 0133     		adds	r3, r3, #1
 10297 0710 FB75     		strb	r3, [r7, #23]
 10298              	.L431:
1377:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10299              		.loc 1 1377 0 is_stmt 0 discriminator 1
 10300 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10301 0714 022B     		cmp	r3, #2
 10302 0716 7FF67DAF 		bls	.L432
1382:..\src/command_processing.c ****             }
1383:..\src/command_processing.c ****             reset_last_value_flag = 1;
 10303              		.loc 1 1383 0 is_stmt 1
 10304 071a 094B     		ldr	r3, .L484+28
 10305 071c 0122     		movs	r2, #1
 10306 071e 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****             break;
 10307              		.loc 1 1384 0
 10308 0720 00F043BF 		b	.L416
 10309              	.L485:
 10310              		.align	2
 10311              	.L484:
 10312 0724 00000000 		.word	g_mem
 10313 0728 0B000000 		.word	g_rx+11
 10314 072c 03000000 		.word	g_rx+3
 10315 0730 07000000 		.word	g_rx+7
 10316 0734 00000000 		.word	g_rx
 10317 0738 00000000 		.word	g_meas
 10318 073c 00000000 		.word	g_refNew
 10319 0740 00000000 		.word	reset_last_value_flag
 10320              	.L388:
1385:..\src/command_processing.c ****     
1386:..\src/command_processing.c ****         case 11:        //Position limits
1387:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10321              		.loc 1 1387 0
 10322 0744 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10323 0746 C14B     		ldr	r3, .L486
 10324 0748 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10325 074a 1906     		lsls	r1, r3, #24
 10326 074c BF4B     		ldr	r3, .L486
 10327 074e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10328 0750 1B04     		lsls	r3, r3, #16
 10329 0752 1943     		orrs	r1, r1, r3
 10330 0754 BD4B     		ldr	r3, .L486
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 237


 10331 0756 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10332 0758 1B02     		lsls	r3, r3, #8
 10333 075a 0B43     		orrs	r3, r3, r1
 10334 075c BB49     		ldr	r1, .L486
 10335 075e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10336 0760 1943     		orrs	r1, r1, r3
 10337 0762 BB48     		ldr	r0, .L486+4
 10338 0764 1346     		mov	r3, r2
 10339 0766 DB00     		lsls	r3, r3, #3
 10340 0768 9B1A     		subs	r3, r3, r2
 10341 076a 1B01     		lsls	r3, r3, #4
 10342 076c 0344     		add	r3, r3, r0
 10343 076e E433     		adds	r3, r3, #228
 10344 0770 1960     		str	r1, [r3]
1388:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10345              		.loc 1 1388 0
 10346 0772 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10347 0774 B54B     		ldr	r3, .L486
 10348 0776 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10349 0778 1906     		lsls	r1, r3, #24
 10350 077a B44B     		ldr	r3, .L486
 10351 077c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10352 077e 1B04     		lsls	r3, r3, #16
 10353 0780 1943     		orrs	r1, r1, r3
 10354 0782 B24B     		ldr	r3, .L486
 10355 0784 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10356 0786 1B02     		lsls	r3, r3, #8
 10357 0788 0B43     		orrs	r3, r3, r1
 10358 078a B049     		ldr	r1, .L486
 10359 078c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10360 078e 1943     		orrs	r1, r1, r3
 10361 0790 AF48     		ldr	r0, .L486+4
 10362 0792 1346     		mov	r3, r2
 10363 0794 DB00     		lsls	r3, r3, #3
 10364 0796 9B1A     		subs	r3, r3, r2
 10365 0798 1B01     		lsls	r3, r3, #4
 10366 079a 0344     		add	r3, r3, r0
 10367 079c E833     		adds	r3, r3, #232
 10368 079e 1960     		str	r1, [r3]
1389:..\src/command_processing.c **** 
1390:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10369              		.loc 1 1390 0
 10370 07a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10371 07a2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10372 07a4 AA48     		ldr	r0, .L486+4
 10373 07a6 0B46     		mov	r3, r1
 10374 07a8 DB00     		lsls	r3, r3, #3
 10375 07aa 5B1A     		subs	r3, r3, r1
 10376 07ac 1B01     		lsls	r3, r3, #4
 10377 07ae 0344     		add	r3, r3, r0
 10378 07b0 E433     		adds	r3, r3, #228
 10379 07b2 1868     		ldr	r0, [r3]
 10380 07b4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10381 07b6 A64C     		ldr	r4, .L486+4
 10382 07b8 0B46     		mov	r3, r1
 10383 07ba DB00     		lsls	r3, r3, #3
 10384 07bc 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 238


 10385 07be 1B01     		lsls	r3, r3, #4
 10386 07c0 2344     		add	r3, r3, r4
 10387 07c2 03F58873 		add	r3, r3, #272
 10388 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10389 07c8 1C46     		mov	r4, r3
 10390 07ca A149     		ldr	r1, .L486+4
 10391 07cc 2346     		mov	r3, r4
 10392 07ce 5B00     		lsls	r3, r3, #1
 10393 07d0 2344     		add	r3, r3, r4
 10394 07d2 1B01     		lsls	r3, r3, #4
 10395 07d4 0B44     		add	r3, r3, r1
 10396 07d6 03F29513 		addw	r3, r3, #405
 10397 07da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10398 07dc 00FA03F1 		lsl	r1, r0, r3
 10399 07e0 9B48     		ldr	r0, .L486+4
 10400 07e2 1346     		mov	r3, r2
 10401 07e4 DB00     		lsls	r3, r3, #3
 10402 07e6 9B1A     		subs	r3, r3, r2
 10403 07e8 1B01     		lsls	r3, r3, #4
 10404 07ea 0344     		add	r3, r3, r0
 10405 07ec E433     		adds	r3, r3, #228
 10406 07ee 1960     		str	r1, [r3]
1391:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10407              		.loc 1 1391 0
 10408 07f0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10409 07f2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10410 07f4 9648     		ldr	r0, .L486+4
 10411 07f6 0B46     		mov	r3, r1
 10412 07f8 DB00     		lsls	r3, r3, #3
 10413 07fa 5B1A     		subs	r3, r3, r1
 10414 07fc 1B01     		lsls	r3, r3, #4
 10415 07fe 0344     		add	r3, r3, r0
 10416 0800 E833     		adds	r3, r3, #232
 10417 0802 1868     		ldr	r0, [r3]
 10418 0804 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10419 0806 924C     		ldr	r4, .L486+4
 10420 0808 0B46     		mov	r3, r1
 10421 080a DB00     		lsls	r3, r3, #3
 10422 080c 5B1A     		subs	r3, r3, r1
 10423 080e 1B01     		lsls	r3, r3, #4
 10424 0810 2344     		add	r3, r3, r4
 10425 0812 03F58873 		add	r3, r3, #272
 10426 0816 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10427 0818 1C46     		mov	r4, r3
 10428 081a 8D49     		ldr	r1, .L486+4
 10429 081c 2346     		mov	r3, r4
 10430 081e 5B00     		lsls	r3, r3, #1
 10431 0820 2344     		add	r3, r3, r4
 10432 0822 1B01     		lsls	r3, r3, #4
 10433 0824 0B44     		add	r3, r3, r1
 10434 0826 03F29513 		addw	r3, r3, #405
 10435 082a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10436 082c 00FA03F1 		lsl	r1, r0, r3
 10437 0830 8748     		ldr	r0, .L486+4
 10438 0832 1346     		mov	r3, r2
 10439 0834 DB00     		lsls	r3, r3, #3
 10440 0836 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 239


 10441 0838 1B01     		lsls	r3, r3, #4
 10442 083a 0344     		add	r3, r3, r0
 10443 083c E833     		adds	r3, r3, #232
 10444 083e 1960     		str	r1, [r3]
1392:..\src/command_processing.c ****             break;            
 10445              		.loc 1 1392 0
 10446 0840 00F0B3BE 		b	.L416
 10447              	.L389:
1393:..\src/command_processing.c **** 
1394:..\src/command_processing.c ****         case 23:        //Rest Position
1395:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10448              		.loc 1 1395 0
 10449 0844 814B     		ldr	r3, .L486
 10450 0846 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10451 0848 1A06     		lsls	r2, r3, #24
 10452 084a 804B     		ldr	r3, .L486
 10453 084c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10454 084e 1B04     		lsls	r3, r3, #16
 10455 0850 1A43     		orrs	r2, r2, r3
 10456 0852 7E4B     		ldr	r3, .L486
 10457 0854 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10458 0856 1B02     		lsls	r3, r3, #8
 10459 0858 1343     		orrs	r3, r3, r2
 10460 085a 7C4A     		ldr	r2, .L486
 10461 085c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10462 085e 1343     		orrs	r3, r3, r2
 10463 0860 7B4A     		ldr	r2, .L486+4
 10464 0862 C2F8A032 		str	r3, [r2, #672]
1396:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10465              		.loc 1 1396 0
 10466 0866 7A4B     		ldr	r3, .L486+4
 10467 0868 D3F8A012 		ldr	r1, [r3, #672]
 10468 086c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10469 086e 7848     		ldr	r0, .L486+4
 10470 0870 1346     		mov	r3, r2
 10471 0872 DB00     		lsls	r3, r3, #3
 10472 0874 9B1A     		subs	r3, r3, r2
 10473 0876 1B01     		lsls	r3, r3, #4
 10474 0878 0344     		add	r3, r3, r0
 10475 087a 03F58873 		add	r3, r3, #272
 10476 087e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10477 0880 1846     		mov	r0, r3
 10478 0882 734A     		ldr	r2, .L486+4
 10479 0884 0346     		mov	r3, r0
 10480 0886 5B00     		lsls	r3, r3, #1
 10481 0888 0344     		add	r3, r3, r0
 10482 088a 1B01     		lsls	r3, r3, #4
 10483 088c 1344     		add	r3, r3, r2
 10484 088e 03F29513 		addw	r3, r3, #405
 10485 0892 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10486 0894 01FA03F3 		lsl	r3, r1, r3
 10487 0898 6D4A     		ldr	r2, .L486+4
 10488 089a C2F8A032 		str	r3, [r2, #672]
1397:..\src/command_processing.c ****             break; 
 10489              		.loc 1 1397 0
 10490 089e 00F084BE 		b	.L416
 10491              	.L390:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 240


1398:..\src/command_processing.c ****             
1399:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1400:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10492              		.loc 1 1400 0
 10493 08a2 6A4B     		ldr	r3, .L486
 10494 08a4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10495 08a6 1A06     		lsls	r2, r3, #24
 10496 08a8 684B     		ldr	r3, .L486
 10497 08aa 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10498 08ac 1B04     		lsls	r3, r3, #16
 10499 08ae 1A43     		orrs	r2, r2, r3
 10500 08b0 664B     		ldr	r3, .L486
 10501 08b2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10502 08b4 1B02     		lsls	r3, r3, #8
 10503 08b6 1343     		orrs	r3, r3, r2
 10504 08b8 644A     		ldr	r2, .L486
 10505 08ba 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10506 08bc 1343     		orrs	r3, r3, r2
 10507 08be 644A     		ldr	r2, .L486+4
 10508 08c0 C2F8A432 		str	r3, [r2, #676]
1401:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10509              		.loc 1 1401 0
 10510 08c4 624B     		ldr	r3, .L486+4
 10511 08c6 D3F8A432 		ldr	r3, [r3, #676]
 10512 08ca 092B     		cmp	r3, #9
 10513 08cc 00F36486 		bgt	.L477
 10514              		.loc 1 1401 0 is_stmt 0 discriminator 1
 10515 08d0 5F4B     		ldr	r3, .L486+4
 10516 08d2 0A22     		movs	r2, #10
 10517 08d4 C3F8A422 		str	r2, [r3, #676]
1402:..\src/command_processing.c ****            break; 
 10518              		.loc 1 1402 0 is_stmt 1 discriminator 1
 10519 08d8 00F05EBE 		b	.L477
 10520              	.L391:
1403:..\src/command_processing.c ****             
1404:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1405:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10521              		.loc 1 1405 0
 10522 08dc 5B4B     		ldr	r3, .L486
 10523 08de DB78     		ldrb	r3, [r3, #3]
 10524 08e0 BB74     		strb	r3, [r7, #18]
1406:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10525              		.loc 1 1406 0
 10526 08e2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10527 08e4 002B     		cmp	r3, #0
 10528 08e6 04D0     		beq	.L434
1407:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10529              		.loc 1 1407 0
 10530 08e8 594B     		ldr	r3, .L486+4
 10531 08ea 0122     		movs	r2, #1
 10532 08ec 83F8A720 		strb	r2, [r3, #167]
 10533 08f0 03E0     		b	.L435
 10534              	.L434:
1408:..\src/command_processing.c ****             } else {            // 0
1409:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10535              		.loc 1 1409 0
 10536 08f2 574B     		ldr	r3, .L486+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 241


 10537 08f4 0022     		movs	r2, #0
 10538 08f6 83F8A720 		strb	r2, [r3, #167]
 10539              	.L435:
1410:..\src/command_processing.c ****             }
1411:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 10540              		.loc 1 1411 0
 10541 08fa 564B     		ldr	r3, .L486+8
 10542 08fc 0122     		movs	r2, #1
 10543 08fe 1A70     		strb	r2, [r3]
1412:..\src/command_processing.c **** 
1413:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10544              		.loc 1 1413 0
 10545 0900 534B     		ldr	r3, .L486+4
 10546 0902 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10547 0906 002B     		cmp	r3, #0
 10548 0908 40F04886 		bne	.L478
1414:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1415:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10549              		.loc 1 1415 0
 10550 090c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10551 090e 504B     		ldr	r3, .L486+4
 10552 0910 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10553 0914 4E49     		ldr	r1, .L486+4
 10554 0916 1346     		mov	r3, r2
 10555 0918 DB00     		lsls	r3, r3, #3
 10556 091a 9B1A     		subs	r3, r3, r2
 10557 091c 1B01     		lsls	r3, r3, #4
 10558 091e 0B44     		add	r3, r3, r1
 10559 0920 03F58873 		add	r3, r3, #272
 10560 0924 0246     		mov	r2, r0
 10561 0926 1A70     		strb	r2, [r3]
1416:..\src/command_processing.c ****                 
1417:..\src/command_processing.c ****                 // Change also gears parameters
1418:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10562              		.loc 1 1418 0
 10563 0928 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10564 092a 4949     		ldr	r1, .L486+4
 10565 092c 1346     		mov	r3, r2
 10566 092e DB00     		lsls	r3, r3, #3
 10567 0930 9B1A     		subs	r3, r3, r2
 10568 0932 1B01     		lsls	r3, r3, #4
 10569 0934 0B44     		add	r3, r3, r1
 10570 0936 03F58873 		add	r3, r3, #272
 10571 093a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10572 093c 1946     		mov	r1, r3
 10573 093e 444A     		ldr	r2, .L486+4
 10574 0940 0B46     		mov	r3, r1
 10575 0942 5B00     		lsls	r3, r3, #1
 10576 0944 0B44     		add	r3, r3, r1
 10577 0946 1B01     		lsls	r3, r3, #4
 10578 0948 1344     		add	r3, r3, r2
 10579 094a 03F5D873 		add	r3, r3, #432
 10580 094e 0122     		movs	r2, #1
 10581 0950 1A70     		strb	r2, [r3]
1419:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10582              		.loc 1 1419 0
 10583 0952 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 242


 10584 0954 3E49     		ldr	r1, .L486+4
 10585 0956 1346     		mov	r3, r2
 10586 0958 DB00     		lsls	r3, r3, #3
 10587 095a 9B1A     		subs	r3, r3, r2
 10588 095c 1B01     		lsls	r3, r3, #4
 10589 095e 0B44     		add	r3, r3, r1
 10590 0960 03F58873 		add	r3, r3, #272
 10591 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10592 0966 1946     		mov	r1, r3
 10593 0968 394A     		ldr	r2, .L486+4
 10594 096a 0B46     		mov	r3, r1
 10595 096c 5B00     		lsls	r3, r3, #1
 10596 096e 0B44     		add	r3, r3, r1
 10597 0970 1B01     		lsls	r3, r3, #4
 10598 0972 1344     		add	r3, r3, r2
 10599 0974 03F2B513 		addw	r3, r3, #437
 10600 0978 2322     		movs	r2, #35
 10601 097a 1A70     		strb	r2, [r3]
1420:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10602              		.loc 1 1420 0
 10603 097c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10604 097e 3449     		ldr	r1, .L486+4
 10605 0980 1346     		mov	r3, r2
 10606 0982 DB00     		lsls	r3, r3, #3
 10607 0984 9B1A     		subs	r3, r3, r2
 10608 0986 1B01     		lsls	r3, r3, #4
 10609 0988 0B44     		add	r3, r3, r1
 10610 098a 03F58873 		add	r3, r3, #272
 10611 098e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10612 0990 1946     		mov	r1, r3
 10613 0992 2F4A     		ldr	r2, .L486+4
 10614 0994 0B46     		mov	r3, r1
 10615 0996 5B00     		lsls	r3, r3, #1
 10616 0998 0B44     		add	r3, r3, r1
 10617 099a 1B01     		lsls	r3, r3, #4
 10618 099c 1344     		add	r3, r3, r2
 10619 099e 03F5DB73 		add	r3, r3, #438
 10620 09a2 0322     		movs	r2, #3
 10621 09a4 1A70     		strb	r2, [r3]
1421:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10622              		.loc 1 1421 0
 10623 09a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10624 09a8 2949     		ldr	r1, .L486+4
 10625 09aa 1346     		mov	r3, r2
 10626 09ac DB00     		lsls	r3, r3, #3
 10627 09ae 9B1A     		subs	r3, r3, r2
 10628 09b0 1B01     		lsls	r3, r3, #4
 10629 09b2 0B44     		add	r3, r3, r1
 10630 09b4 03F58873 		add	r3, r3, #272
 10631 09b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10632 09ba 1946     		mov	r1, r3
 10633 09bc 244A     		ldr	r2, .L486+4
 10634 09be 0B46     		mov	r3, r1
 10635 09c0 5B00     		lsls	r3, r3, #1
 10636 09c2 0B44     		add	r3, r3, r1
 10637 09c4 1B01     		lsls	r3, r3, #4
 10638 09c6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 243


 10639 09c8 03F2B713 		addw	r3, r3, #439
 10640 09cc FF22     		movs	r2, #255
 10641 09ce 1A70     		strb	r2, [r3]
1422:..\src/command_processing.c ****                 
1423:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1424:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10642              		.loc 1 1424 0
 10643 09d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10644 09d2 1F49     		ldr	r1, .L486+4
 10645 09d4 1346     		mov	r3, r2
 10646 09d6 DB00     		lsls	r3, r3, #3
 10647 09d8 9B1A     		subs	r3, r3, r2
 10648 09da 1B01     		lsls	r3, r3, #4
 10649 09dc 0B44     		add	r3, r3, r1
 10650 09de 03F21113 		addw	r3, r3, #273
 10651 09e2 0122     		movs	r2, #1
 10652 09e4 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10653              		.loc 1 1425 0
 10654 09e6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10655 09e8 1949     		ldr	r1, .L486+4
 10656 09ea 1346     		mov	r3, r2
 10657 09ec DB00     		lsls	r3, r3, #3
 10658 09ee 9B1A     		subs	r3, r3, r2
 10659 09f0 1B01     		lsls	r3, r3, #4
 10660 09f2 0B44     		add	r3, r3, r1
 10661 09f4 03F58973 		add	r3, r3, #274
 10662 09f8 0122     		movs	r2, #1
 10663 09fa 1A70     		strb	r2, [r3]
1426:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10664              		.loc 1 1426 0
 10665 09fc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10666 09fe 1449     		ldr	r1, .L486+4
 10667 0a00 1346     		mov	r3, r2
 10668 0a02 DB00     		lsls	r3, r3, #3
 10669 0a04 9B1A     		subs	r3, r3, r2
 10670 0a06 1B01     		lsls	r3, r3, #4
 10671 0a08 0B44     		add	r3, r3, r1
 10672 0a0a E433     		adds	r3, r3, #228
 10673 0a0c 0022     		movs	r2, #0
 10674 0a0e 1A60     		str	r2, [r3]
1427:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10675              		.loc 1 1427 0
 10676 0a10 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10677 0a12 0F4B     		ldr	r3, .L486+4
 10678 0a14 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10679 0a18 1846     		mov	r0, r3
 10680 0a1a 0D49     		ldr	r1, .L486+4
 10681 0a1c 0346     		mov	r3, r0
 10682 0a1e 5B00     		lsls	r3, r3, #1
 10683 0a20 0344     		add	r3, r3, r0
 10684 0a22 1B01     		lsls	r3, r3, #4
 10685 0a24 0B44     		add	r3, r3, r1
 10686 0a26 03F29513 		addw	r3, r3, #405
 10687 0a2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10688 0a2c 1946     		mov	r1, r3
 10689 0a2e 4FF47A53 		mov	r3, #16000
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 244


 10690 0a32 03FA01F1 		lsl	r1, r3, r1
 10691 0a36 0648     		ldr	r0, .L486+4
 10692 0a38 1346     		mov	r3, r2
 10693 0a3a DB00     		lsls	r3, r3, #3
 10694 0a3c 9B1A     		subs	r3, r3, r2
 10695 0a3e 1B01     		lsls	r3, r3, #4
 10696 0a40 0344     		add	r3, r3, r0
 10697 0a42 E833     		adds	r3, r3, #232
 10698 0a44 1960     		str	r1, [r3]
1428:..\src/command_processing.c ****             }    
1429:..\src/command_processing.c **** 
1430:..\src/command_processing.c ****             break; 
 10699              		.loc 1 1430 0
 10700 0a46 00F0A9BD 		b	.L478
 10701              	.L487:
 10702 0a4a 00BF     		.align	2
 10703              	.L486:
 10704 0a4c 00000000 		.word	g_rx
 10705 0a50 00000000 		.word	g_mem
 10706 0a54 00000000 		.word	reset_last_value_flag
 10707              	.L392:
1431:..\src/command_processing.c **** 
1432:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1433:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10708              		.loc 1 1433 0
 10709 0a58 AA4B     		ldr	r3, .L488
 10710 0a5a DB78     		ldrb	r3, [r3, #3]
 10711 0a5c BB74     		strb	r3, [r7, #18]
1434:..\src/command_processing.c ****             if (aux_uchar) {
 10712              		.loc 1 1434 0
 10713 0a5e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10714 0a60 002B     		cmp	r3, #0
 10715 0a62 05D0     		beq	.L437
1435:..\src/command_processing.c ****                 reset_counters();
 10716              		.loc 1 1435 0
 10717 0a64 FFF7FEFF 		bl	reset_counters
1436:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10718              		.loc 1 1436 0
 10719 0a68 A74B     		ldr	r3, .L488+4
 10720 0a6a 0022     		movs	r2, #0
 10721 0a6c 83F8A820 		strb	r2, [r3, #168]
 10722              	.L437:
1437:..\src/command_processing.c ****             }
1438:..\src/command_processing.c ****             
1439:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10723              		.loc 1 1439 0
 10724 0a70 A64B     		ldr	r3, .L488+8
 10725 0a72 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10726 0a76 012B     		cmp	r3, #1
 10727 0a78 40F09285 		bne	.L479
1440:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1441:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10728              		.loc 1 1441 0
 10729 0a7c 8720     		movs	r0, #135
 10730 0a7e FFF7FEFF 		bl	DS1302_read
 10731 0a82 0346     		mov	r3, r0
 10732 0a84 BB74     		strb	r3, [r7, #18]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 245


1442:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10733              		.loc 1 1442 0
 10734 0a86 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10735 0a88 1B09     		lsrs	r3, r3, #4
 10736 0a8a DBB2     		uxtb	r3, r3
 10737 0a8c 1A46     		mov	r2, r3
 10738 0a8e 9200     		lsls	r2, r2, #2
 10739 0a90 1344     		add	r3, r3, r2
 10740 0a92 5B00     		lsls	r3, r3, #1
 10741 0a94 DAB2     		uxtb	r2, r3
 10742 0a96 BB7C     		ldrb	r3, [r7, #18]
 10743 0a98 03F00F03 		and	r3, r3, #15
 10744 0a9c DBB2     		uxtb	r3, r3
 10745 0a9e 1344     		add	r3, r3, r2
 10746 0aa0 DAB2     		uxtb	r2, r3
 10747 0aa2 994B     		ldr	r3, .L488+4
 10748 0aa4 83F8A420 		strb	r2, [r3, #164]
1443:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10749              		.loc 1 1443 0
 10750 0aa8 8920     		movs	r0, #137
 10751 0aaa FFF7FEFF 		bl	DS1302_read
 10752 0aae 0346     		mov	r3, r0
 10753 0ab0 BB74     		strb	r3, [r7, #18]
1444:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10754              		.loc 1 1444 0
 10755 0ab2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10756 0ab4 1B09     		lsrs	r3, r3, #4
 10757 0ab6 DBB2     		uxtb	r3, r3
 10758 0ab8 1A46     		mov	r2, r3
 10759 0aba 9200     		lsls	r2, r2, #2
 10760 0abc 1344     		add	r3, r3, r2
 10761 0abe 5B00     		lsls	r3, r3, #1
 10762 0ac0 DAB2     		uxtb	r2, r3
 10763 0ac2 BB7C     		ldrb	r3, [r7, #18]
 10764 0ac4 03F00F03 		and	r3, r3, #15
 10765 0ac8 DBB2     		uxtb	r3, r3
 10766 0aca 1344     		add	r3, r3, r2
 10767 0acc DAB2     		uxtb	r2, r3
 10768 0ace 8E4B     		ldr	r3, .L488+4
 10769 0ad0 83F8A520 		strb	r2, [r3, #165]
1445:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10770              		.loc 1 1445 0
 10771 0ad4 8D20     		movs	r0, #141
 10772 0ad6 FFF7FEFF 		bl	DS1302_read
 10773 0ada 0346     		mov	r3, r0
 10774 0adc BB74     		strb	r3, [r7, #18]
1446:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10775              		.loc 1 1446 0
 10776 0ade BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10777 0ae0 1B09     		lsrs	r3, r3, #4
 10778 0ae2 DBB2     		uxtb	r3, r3
 10779 0ae4 1A46     		mov	r2, r3
 10780 0ae6 9200     		lsls	r2, r2, #2
 10781 0ae8 1344     		add	r3, r3, r2
 10782 0aea 5B00     		lsls	r3, r3, #1
 10783 0aec DAB2     		uxtb	r2, r3
 10784 0aee BB7C     		ldrb	r3, [r7, #18]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 246


 10785 0af0 03F00F03 		and	r3, r3, #15
 10786 0af4 DBB2     		uxtb	r3, r3
 10787 0af6 1344     		add	r3, r3, r2
 10788 0af8 DAB2     		uxtb	r2, r3
 10789 0afa 834B     		ldr	r3, .L488+4
 10790 0afc 83F8A620 		strb	r2, [r3, #166]
1447:..\src/command_processing.c ****             }
1448:..\src/command_processing.c ****             break;             
 10791              		.loc 1 1448 0
 10792 0b00 00F04EBD 		b	.L479
 10793              	.L393:
 10794              	.LBB19:
1449:..\src/command_processing.c ****             
1450:..\src/command_processing.c ****         case 32:         //Current Time
1451:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10795              		.loc 1 1451 0
 10796 0b04 0023     		movs	r3, #0
 10797 0b06 7B75     		strb	r3, [r7, #21]
 10798 0b08 0CE0     		b	.L439
 10799              	.L440:
1452:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10800              		.loc 1 1452 0 discriminator 3
 10801 0b0a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10802 0b0c 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10803 0b0e 0332     		adds	r2, r2, #3
 10804 0b10 7C49     		ldr	r1, .L488
 10805 0b12 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10806 0b14 7C4A     		ldr	r2, .L488+4
 10807 0b16 1344     		add	r3, r3, r2
 10808 0b18 0A46     		mov	r2, r1
 10809 0b1a 83F82022 		strb	r2, [r3, #544]
1451:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10810              		.loc 1 1451 0 discriminator 3
 10811 0b1e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10812 0b20 0133     		adds	r3, r3, #1
 10813 0b22 7B75     		strb	r3, [r7, #21]
 10814              	.L439:
1451:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10815              		.loc 1 1451 0 is_stmt 0 discriminator 1
 10816 0b24 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10817 0b26 052B     		cmp	r3, #5
 10818 0b28 EFD9     		bls	.L440
 10819              	.LBE19:
1453:..\src/command_processing.c ****             }
1454:..\src/command_processing.c ****             
1455:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10820              		.loc 1 1455 0 is_stmt 1
 10821 0b2a 774B     		ldr	r3, .L488+4
 10822 0b2c 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10823 0b30 012B     		cmp	r3, #1
 10824 0b32 40F03785 		bne	.L480
1456:..\src/command_processing.c ****                 set_RTC_time();
 10825              		.loc 1 1456 0
 10826 0b36 FFF7FEFF 		bl	set_RTC_time
1457:..\src/command_processing.c ****             }
1458:..\src/command_processing.c ****             break;
 10827              		.loc 1 1458 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 247


 10828 0b3a 00F033BD 		b	.L480
 10829              	.L394:
1459:..\src/command_processing.c ****            
1460:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1461:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10830              		.loc 1 1461 0
 10831 0b3e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10832 0b40 704B     		ldr	r3, .L488
 10833 0b42 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10834 0b44 7049     		ldr	r1, .L488+4
 10835 0b46 1346     		mov	r3, r2
 10836 0b48 DB00     		lsls	r3, r3, #3
 10837 0b4a 9B1A     		subs	r3, r3, r2
 10838 0b4c 1B01     		lsls	r3, r3, #4
 10839 0b4e 0B44     		add	r3, r3, r1
 10840 0b50 E233     		adds	r3, r3, #226
 10841 0b52 0246     		mov	r2, r0
 10842 0b54 1A70     		strb	r2, [r3]
1462:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10843              		.loc 1 1462 0
 10844 0b56 6C4B     		ldr	r3, .L488+4
 10845 0b58 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10846 0b5c 5B00     		lsls	r3, r3, #1
 10847 0b5e 5AB2     		sxtb	r2, r3
 10848 0b60 694B     		ldr	r3, .L488+4
 10849 0b62 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10850 0b66 5BB2     		sxtb	r3, r3
 10851 0b68 1343     		orrs	r3, r3, r2
 10852 0b6a 5BB2     		sxtb	r3, r3
 10853 0b6c DBB2     		uxtb	r3, r3
 10854 0b6e 1846     		mov	r0, r3
 10855 0b70 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1463:..\src/command_processing.c ****             break;
 10856              		.loc 1 1463 0
 10857 0b74 00F019BD 		b	.L416
 10858              	.L395:
1464:..\src/command_processing.c ****             
1465:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1466:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10859              		.loc 1 1466 0
 10860 0b78 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10861 0b7a 6449     		ldr	r1, .L488+8
 10862 0b7c 1346     		mov	r3, r2
 10863 0b7e DB00     		lsls	r3, r3, #3
 10864 0b80 9B1A     		subs	r3, r3, r2
 10865 0b82 1B01     		lsls	r3, r3, #4
 10866 0b84 0B44     		add	r3, r3, r1
 10867 0b86 03F20F13 		addw	r3, r3, #271
 10868 0b8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10869 0b8c 032B     		cmp	r3, #3
 10870 0b8e 00F08680 		beq	.L442
1467:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10871              		.loc 1 1467 0
 10872 0b92 5F4B     		ldr	r3, .L488+12
 10873 0b94 1B68     		ldr	r3, [r3]	@ float
 10874 0b96 FB60     		str	r3, [r7, #12]	@ float
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 248


 10875              		.loc 1 1468 0
 10876 0b98 0023     		movs	r3, #0
 10877 0b9a BB75     		strb	r3, [r7, #22]
 10878 0b9c 0EE0     		b	.L443
 10879              	.L444:
1469:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10880              		.loc 1 1469 0 discriminator 3
 10881 0b9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10882 0ba0 C3F10303 		rsb	r3, r3, #3
 10883 0ba4 07F10802 		add	r2, r7, #8
 10884 0ba8 1344     		add	r3, r3, r2
 10885 0baa BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10886 0bac 07F10C01 		add	r1, r7, #12
 10887 0bb0 0A44     		add	r2, r2, r1
 10888 0bb2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10889 0bb4 1A70     		strb	r2, [r3]
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10890              		.loc 1 1468 0 discriminator 3
 10891 0bb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10892 0bb8 0133     		adds	r3, r3, #1
 10893 0bba BB75     		strb	r3, [r7, #22]
 10894              	.L443:
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10895              		.loc 1 1468 0 is_stmt 0 discriminator 1
 10896 0bbc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10897 0bbe 032B     		cmp	r3, #3
 10898 0bc0 EDD9     		bls	.L444
1470:..\src/command_processing.c ****                 }
1471:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10899              		.loc 1 1471 0 is_stmt 1
 10900 0bc2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10901 0bc4 BB68     		ldr	r3, [r7, #8]	@ float
 10902 0bc6 4FF08F41 		mov	r1, #1199570944
 10903 0bca 1846     		mov	r0, r3
 10904 0bcc FFF7FEFF 		bl	__aeabi_fmul
 10905 0bd0 0346     		mov	r3, r0
 10906 0bd2 1846     		mov	r0, r3
 10907 0bd4 FFF7FEFF 		bl	__aeabi_f2iz
 10908 0bd8 0146     		mov	r1, r0
 10909 0bda 4B4A     		ldr	r2, .L488+4
 10910 0bdc 2346     		mov	r3, r4
 10911 0bde DB00     		lsls	r3, r3, #3
 10912 0be0 1B1B     		subs	r3, r3, r4
 10913 0be2 1B01     		lsls	r3, r3, #4
 10914 0be4 1344     		add	r3, r3, r2
 10915 0be6 B033     		adds	r3, r3, #176
 10916 0be8 1960     		str	r1, [r3]
1472:..\src/command_processing.c ****                 
1473:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10917              		.loc 1 1473 0
 10918 0bea 4A4B     		ldr	r3, .L488+16
 10919 0bec 1B68     		ldr	r3, [r3]	@ float
 10920 0bee FB60     		str	r3, [r7, #12]	@ float
1474:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10921              		.loc 1 1474 0
 10922 0bf0 0023     		movs	r3, #0
 10923 0bf2 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 249


 10924 0bf4 0EE0     		b	.L445
 10925              	.L446:
1475:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10926              		.loc 1 1475 0 discriminator 3
 10927 0bf6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10928 0bf8 C3F10303 		rsb	r3, r3, #3
 10929 0bfc 07F10802 		add	r2, r7, #8
 10930 0c00 1344     		add	r3, r3, r2
 10931 0c02 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10932 0c04 07F10C01 		add	r1, r7, #12
 10933 0c08 0A44     		add	r2, r2, r1
 10934 0c0a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10935 0c0c 1A70     		strb	r2, [r3]
1474:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10936              		.loc 1 1474 0 discriminator 3
 10937 0c0e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10938 0c10 0133     		adds	r3, r3, #1
 10939 0c12 BB75     		strb	r3, [r7, #22]
 10940              	.L445:
1474:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10941              		.loc 1 1474 0 is_stmt 0 discriminator 1
 10942 0c14 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10943 0c16 032B     		cmp	r3, #3
 10944 0c18 EDD9     		bls	.L446
1476:..\src/command_processing.c ****                 }
1477:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10945              		.loc 1 1477 0 is_stmt 1
 10946 0c1a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10947 0c1c BB68     		ldr	r3, [r7, #8]	@ float
 10948 0c1e 4FF08F41 		mov	r1, #1199570944
 10949 0c22 1846     		mov	r0, r3
 10950 0c24 FFF7FEFF 		bl	__aeabi_fmul
 10951 0c28 0346     		mov	r3, r0
 10952 0c2a 1846     		mov	r0, r3
 10953 0c2c FFF7FEFF 		bl	__aeabi_f2iz
 10954 0c30 0146     		mov	r1, r0
 10955 0c32 354A     		ldr	r2, .L488+4
 10956 0c34 2346     		mov	r3, r4
 10957 0c36 DB00     		lsls	r3, r3, #3
 10958 0c38 1B1B     		subs	r3, r3, r4
 10959 0c3a 1B01     		lsls	r3, r3, #4
 10960 0c3c 1344     		add	r3, r3, r2
 10961 0c3e B433     		adds	r3, r3, #180
 10962 0c40 1960     		str	r1, [r3]
1478:..\src/command_processing.c ****                 
1479:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10963              		.loc 1 1479 0
 10964 0c42 354B     		ldr	r3, .L488+20
 10965 0c44 1B68     		ldr	r3, [r3]	@ float
 10966 0c46 FB60     		str	r3, [r7, #12]	@ float
1480:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10967              		.loc 1 1480 0
 10968 0c48 0023     		movs	r3, #0
 10969 0c4a BB75     		strb	r3, [r7, #22]
 10970 0c4c 0EE0     		b	.L447
 10971              	.L448:
1481:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 250


 10972              		.loc 1 1481 0 discriminator 3
 10973 0c4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10974 0c50 C3F10303 		rsb	r3, r3, #3
 10975 0c54 07F10802 		add	r2, r7, #8
 10976 0c58 1344     		add	r3, r3, r2
 10977 0c5a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10978 0c5c 07F10C01 		add	r1, r7, #12
 10979 0c60 0A44     		add	r2, r2, r1
 10980 0c62 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10981 0c64 1A70     		strb	r2, [r3]
1480:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10982              		.loc 1 1480 0 discriminator 3
 10983 0c66 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10984 0c68 0133     		adds	r3, r3, #1
 10985 0c6a BB75     		strb	r3, [r7, #22]
 10986              	.L447:
1480:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10987              		.loc 1 1480 0 is_stmt 0 discriminator 1
 10988 0c6c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10989 0c6e 032B     		cmp	r3, #3
 10990 0c70 EDD9     		bls	.L448
1482:..\src/command_processing.c ****                 }
1483:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10991              		.loc 1 1483 0 is_stmt 1
 10992 0c72 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10993 0c74 BB68     		ldr	r3, [r7, #8]	@ float
 10994 0c76 4FF08F41 		mov	r1, #1199570944
 10995 0c7a 1846     		mov	r0, r3
 10996 0c7c FFF7FEFF 		bl	__aeabi_fmul
 10997 0c80 0346     		mov	r3, r0
 10998 0c82 1846     		mov	r0, r3
 10999 0c84 FFF7FEFF 		bl	__aeabi_f2iz
 11000 0c88 0146     		mov	r1, r0
 11001 0c8a 1F4A     		ldr	r2, .L488+4
 11002 0c8c 2346     		mov	r3, r4
 11003 0c8e DB00     		lsls	r3, r3, #3
 11004 0c90 1B1B     		subs	r3, r3, r4
 11005 0c92 1B01     		lsls	r3, r3, #4
 11006 0c94 1344     		add	r3, r3, r2
 11007 0c96 B833     		adds	r3, r3, #184
 11008 0c98 1960     		str	r1, [r3]
1484:..\src/command_processing.c ****             }
1485:..\src/command_processing.c ****             else {
1486:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1487:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1488:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1489:..\src/command_processing.c ****                 }
1490:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1491:..\src/command_processing.c ****                 
1492:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1493:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1494:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1495:..\src/command_processing.c ****                 }
1496:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1497:..\src/command_processing.c ****                 
1498:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1499:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 251


1500:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1501:..\src/command_processing.c ****                 }
1502:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1503:..\src/command_processing.c ****             }
1504:..\src/command_processing.c ****             break;
 11009              		.loc 1 1504 0
 11010 0c9a 00F086BC 		b	.L416
 11011              	.L442:
1486:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11012              		.loc 1 1486 0
 11013 0c9e 1C4B     		ldr	r3, .L488+12
 11014 0ca0 1B68     		ldr	r3, [r3]	@ float
 11015 0ca2 FB60     		str	r3, [r7, #12]	@ float
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11016              		.loc 1 1487 0
 11017 0ca4 0023     		movs	r3, #0
 11018 0ca6 BB75     		strb	r3, [r7, #22]
 11019 0ca8 0EE0     		b	.L450
 11020              	.L451:
1488:..\src/command_processing.c ****                 }
 11021              		.loc 1 1488 0 discriminator 3
 11022 0caa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11023 0cac C3F10303 		rsb	r3, r3, #3
 11024 0cb0 07F10802 		add	r2, r7, #8
 11025 0cb4 1344     		add	r3, r3, r2
 11026 0cb6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11027 0cb8 07F10C01 		add	r1, r7, #12
 11028 0cbc 0A44     		add	r2, r2, r1
 11029 0cbe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11030 0cc0 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11031              		.loc 1 1487 0 discriminator 3
 11032 0cc2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11033 0cc4 0133     		adds	r3, r3, #1
 11034 0cc6 BB75     		strb	r3, [r7, #22]
 11035              	.L450:
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11036              		.loc 1 1487 0 is_stmt 0 discriminator 1
 11037 0cc8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11038 0cca 032B     		cmp	r3, #3
 11039 0ccc EDD9     		bls	.L451
1490:..\src/command_processing.c ****                 
 11040              		.loc 1 1490 0 is_stmt 1
 11041 0cce FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11042 0cd0 BB68     		ldr	r3, [r7, #8]	@ float
 11043 0cd2 4FF08F41 		mov	r1, #1199570944
 11044 0cd6 1846     		mov	r0, r3
 11045 0cd8 FFF7FEFF 		bl	__aeabi_fmul
 11046 0cdc 0346     		mov	r3, r0
 11047 0cde 1846     		mov	r0, r3
 11048 0ce0 FFF7FEFF 		bl	__aeabi_f2iz
 11049 0ce4 0146     		mov	r1, r0
 11050 0ce6 084A     		ldr	r2, .L488+4
 11051 0ce8 2346     		mov	r3, r4
 11052 0cea DB00     		lsls	r3, r3, #3
 11053 0cec 1B1B     		subs	r3, r3, r4
 11054 0cee 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 252


 11055 0cf0 1344     		add	r3, r3, r2
 11056 0cf2 C833     		adds	r3, r3, #200
 11057 0cf4 1960     		str	r1, [r3]
1492:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11058              		.loc 1 1492 0
 11059 0cf6 074B     		ldr	r3, .L488+16
 11060 0cf8 1B68     		ldr	r3, [r3]	@ float
 11061 0cfa FB60     		str	r3, [r7, #12]	@ float
1493:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11062              		.loc 1 1493 0
 11063 0cfc 0023     		movs	r3, #0
 11064 0cfe BB75     		strb	r3, [r7, #22]
 11065 0d00 1BE0     		b	.L452
 11066              	.L489:
 11067 0d02 00BF     		.align	2
 11068              	.L488:
 11069 0d04 00000000 		.word	g_rx
 11070 0d08 00000000 		.word	g_mem
 11071 0d0c 00000000 		.word	c_mem
 11072 0d10 03000000 		.word	g_rx+3
 11073 0d14 07000000 		.word	g_rx+7
 11074 0d18 0B000000 		.word	g_rx+11
 11075              	.L453:
1494:..\src/command_processing.c ****                 }
 11076              		.loc 1 1494 0 discriminator 3
 11077 0d1c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11078 0d1e C3F10303 		rsb	r3, r3, #3
 11079 0d22 07F10802 		add	r2, r7, #8
 11080 0d26 1344     		add	r3, r3, r2
 11081 0d28 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11082 0d2a 07F10C01 		add	r1, r7, #12
 11083 0d2e 0A44     		add	r2, r2, r1
 11084 0d30 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11085 0d32 1A70     		strb	r2, [r3]
1493:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11086              		.loc 1 1493 0 discriminator 3
 11087 0d34 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11088 0d36 0133     		adds	r3, r3, #1
 11089 0d38 BB75     		strb	r3, [r7, #22]
 11090              	.L452:
1493:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11091              		.loc 1 1493 0 is_stmt 0 discriminator 1
 11092 0d3a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11093 0d3c 032B     		cmp	r3, #3
 11094 0d3e EDD9     		bls	.L453
1496:..\src/command_processing.c ****                 
 11095              		.loc 1 1496 0 is_stmt 1
 11096 0d40 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11097 0d42 BB68     		ldr	r3, [r7, #8]	@ float
 11098 0d44 4FF08F41 		mov	r1, #1199570944
 11099 0d48 1846     		mov	r0, r3
 11100 0d4a FFF7FEFF 		bl	__aeabi_fmul
 11101 0d4e 0346     		mov	r3, r0
 11102 0d50 1846     		mov	r0, r3
 11103 0d52 FFF7FEFF 		bl	__aeabi_f2iz
 11104 0d56 0146     		mov	r1, r0
 11105 0d58 B74A     		ldr	r2, .L490
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 253


 11106 0d5a 2346     		mov	r3, r4
 11107 0d5c DB00     		lsls	r3, r3, #3
 11108 0d5e 1B1B     		subs	r3, r3, r4
 11109 0d60 1B01     		lsls	r3, r3, #4
 11110 0d62 1344     		add	r3, r3, r2
 11111 0d64 CC33     		adds	r3, r3, #204
 11112 0d66 1960     		str	r1, [r3]
1498:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11113              		.loc 1 1498 0
 11114 0d68 B44B     		ldr	r3, .L490+4
 11115 0d6a 1B68     		ldr	r3, [r3]	@ float
 11116 0d6c FB60     		str	r3, [r7, #12]	@ float
1499:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11117              		.loc 1 1499 0
 11118 0d6e 0023     		movs	r3, #0
 11119 0d70 BB75     		strb	r3, [r7, #22]
 11120 0d72 0EE0     		b	.L454
 11121              	.L455:
1500:..\src/command_processing.c ****                 }
 11122              		.loc 1 1500 0 discriminator 3
 11123 0d74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11124 0d76 C3F10303 		rsb	r3, r3, #3
 11125 0d7a 07F10802 		add	r2, r7, #8
 11126 0d7e 1344     		add	r3, r3, r2
 11127 0d80 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11128 0d82 07F10C01 		add	r1, r7, #12
 11129 0d86 0A44     		add	r2, r2, r1
 11130 0d88 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11131 0d8a 1A70     		strb	r2, [r3]
1499:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11132              		.loc 1 1499 0 discriminator 3
 11133 0d8c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11134 0d8e 0133     		adds	r3, r3, #1
 11135 0d90 BB75     		strb	r3, [r7, #22]
 11136              	.L454:
1499:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11137              		.loc 1 1499 0 is_stmt 0 discriminator 1
 11138 0d92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11139 0d94 032B     		cmp	r3, #3
 11140 0d96 EDD9     		bls	.L455
1502:..\src/command_processing.c ****             }
 11141              		.loc 1 1502 0 is_stmt 1
 11142 0d98 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11143 0d9a BB68     		ldr	r3, [r7, #8]	@ float
 11144 0d9c 4FF08F41 		mov	r1, #1199570944
 11145 0da0 1846     		mov	r0, r3
 11146 0da2 FFF7FEFF 		bl	__aeabi_fmul
 11147 0da6 0346     		mov	r3, r0
 11148 0da8 1846     		mov	r0, r3
 11149 0daa FFF7FEFF 		bl	__aeabi_f2iz
 11150 0dae 0146     		mov	r1, r0
 11151 0db0 A14A     		ldr	r2, .L490
 11152 0db2 2346     		mov	r3, r4
 11153 0db4 DB00     		lsls	r3, r3, #3
 11154 0db6 1B1B     		subs	r3, r3, r4
 11155 0db8 1B01     		lsls	r3, r3, #4
 11156 0dba 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 254


 11157 0dbc D033     		adds	r3, r3, #208
 11158 0dbe 1960     		str	r1, [r3]
 11159              		.loc 1 1504 0
 11160 0dc0 F3E3     		b	.L416
 11161              	.L396:
1505:..\src/command_processing.c ****             
1506:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1507:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11162              		.loc 1 1507 0
 11163 0dc2 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11164 0dc4 9E49     		ldr	r1, .L490+8
 11165 0dc6 1346     		mov	r3, r2
 11166 0dc8 DB00     		lsls	r3, r3, #3
 11167 0dca 9B1A     		subs	r3, r3, r2
 11168 0dcc 1B01     		lsls	r3, r3, #4
 11169 0dce 0B44     		add	r3, r3, r1
 11170 0dd0 03F20F13 		addw	r3, r3, #271
 11171 0dd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11172 0dd6 032B     		cmp	r3, #3
 11173 0dd8 00F08580 		beq	.L456
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11174              		.loc 1 1508 0
 11175 0ddc 994B     		ldr	r3, .L490+12
 11176 0dde 1B68     		ldr	r3, [r3]	@ float
 11177 0de0 FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11178              		.loc 1 1509 0
 11179 0de2 0023     		movs	r3, #0
 11180 0de4 BB75     		strb	r3, [r7, #22]
 11181 0de6 0EE0     		b	.L457
 11182              	.L458:
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11183              		.loc 1 1510 0 discriminator 3
 11184 0de8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11185 0dea C3F10303 		rsb	r3, r3, #3
 11186 0dee 07F10802 		add	r2, r7, #8
 11187 0df2 1344     		add	r3, r3, r2
 11188 0df4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11189 0df6 07F10C01 		add	r1, r7, #12
 11190 0dfa 0A44     		add	r2, r2, r1
 11191 0dfc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11192 0dfe 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11193              		.loc 1 1509 0 discriminator 3
 11194 0e00 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11195 0e02 0133     		adds	r3, r3, #1
 11196 0e04 BB75     		strb	r3, [r7, #22]
 11197              	.L457:
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11198              		.loc 1 1509 0 is_stmt 0 discriminator 1
 11199 0e06 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11200 0e08 032B     		cmp	r3, #3
 11201 0e0a EDD9     		bls	.L458
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11202              		.loc 1 1512 0 is_stmt 1
 11203 0e0c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 255


 11204 0e0e BB68     		ldr	r3, [r7, #8]	@ float
 11205 0e10 4FF08F41 		mov	r1, #1199570944
 11206 0e14 1846     		mov	r0, r3
 11207 0e16 FFF7FEFF 		bl	__aeabi_fmul
 11208 0e1a 0346     		mov	r3, r0
 11209 0e1c 1846     		mov	r0, r3
 11210 0e1e FFF7FEFF 		bl	__aeabi_f2iz
 11211 0e22 0146     		mov	r1, r0
 11212 0e24 844A     		ldr	r2, .L490
 11213 0e26 2346     		mov	r3, r4
 11214 0e28 DB00     		lsls	r3, r3, #3
 11215 0e2a 1B1B     		subs	r3, r3, r4
 11216 0e2c 1B01     		lsls	r3, r3, #4
 11217 0e2e 1344     		add	r3, r3, r2
 11218 0e30 BC33     		adds	r3, r3, #188
 11219 0e32 1960     		str	r1, [r3]
1513:..\src/command_processing.c ****                 
1514:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11220              		.loc 1 1514 0
 11221 0e34 844B     		ldr	r3, .L490+16
 11222 0e36 1B68     		ldr	r3, [r3]	@ float
 11223 0e38 FB60     		str	r3, [r7, #12]	@ float
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11224              		.loc 1 1515 0
 11225 0e3a 0023     		movs	r3, #0
 11226 0e3c BB75     		strb	r3, [r7, #22]
 11227 0e3e 0EE0     		b	.L459
 11228              	.L460:
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11229              		.loc 1 1516 0 discriminator 3
 11230 0e40 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11231 0e42 C3F10303 		rsb	r3, r3, #3
 11232 0e46 07F10802 		add	r2, r7, #8
 11233 0e4a 1344     		add	r3, r3, r2
 11234 0e4c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11235 0e4e 07F10C01 		add	r1, r7, #12
 11236 0e52 0A44     		add	r2, r2, r1
 11237 0e54 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11238 0e56 1A70     		strb	r2, [r3]
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11239              		.loc 1 1515 0 discriminator 3
 11240 0e58 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11241 0e5a 0133     		adds	r3, r3, #1
 11242 0e5c BB75     		strb	r3, [r7, #22]
 11243              	.L459:
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11244              		.loc 1 1515 0 is_stmt 0 discriminator 1
 11245 0e5e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11246 0e60 032B     		cmp	r3, #3
 11247 0e62 EDD9     		bls	.L460
1517:..\src/command_processing.c ****                 }
1518:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11248              		.loc 1 1518 0 is_stmt 1
 11249 0e64 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11250 0e66 BB68     		ldr	r3, [r7, #8]	@ float
 11251 0e68 4FF08F41 		mov	r1, #1199570944
 11252 0e6c 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 256


 11253 0e6e FFF7FEFF 		bl	__aeabi_fmul
 11254 0e72 0346     		mov	r3, r0
 11255 0e74 1846     		mov	r0, r3
 11256 0e76 FFF7FEFF 		bl	__aeabi_f2iz
 11257 0e7a 0146     		mov	r1, r0
 11258 0e7c 6E4A     		ldr	r2, .L490
 11259 0e7e 2346     		mov	r3, r4
 11260 0e80 DB00     		lsls	r3, r3, #3
 11261 0e82 1B1B     		subs	r3, r3, r4
 11262 0e84 1B01     		lsls	r3, r3, #4
 11263 0e86 1344     		add	r3, r3, r2
 11264 0e88 C033     		adds	r3, r3, #192
 11265 0e8a 1960     		str	r1, [r3]
1519:..\src/command_processing.c ****                 
1520:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11266              		.loc 1 1520 0
 11267 0e8c 6B4B     		ldr	r3, .L490+4
 11268 0e8e 1B68     		ldr	r3, [r3]	@ float
 11269 0e90 FB60     		str	r3, [r7, #12]	@ float
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11270              		.loc 1 1521 0
 11271 0e92 0023     		movs	r3, #0
 11272 0e94 BB75     		strb	r3, [r7, #22]
 11273 0e96 0EE0     		b	.L461
 11274              	.L462:
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11275              		.loc 1 1522 0 discriminator 3
 11276 0e98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11277 0e9a C3F10303 		rsb	r3, r3, #3
 11278 0e9e 07F10802 		add	r2, r7, #8
 11279 0ea2 1344     		add	r3, r3, r2
 11280 0ea4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11281 0ea6 07F10C01 		add	r1, r7, #12
 11282 0eaa 0A44     		add	r2, r2, r1
 11283 0eac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11284 0eae 1A70     		strb	r2, [r3]
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11285              		.loc 1 1521 0 discriminator 3
 11286 0eb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11287 0eb2 0133     		adds	r3, r3, #1
 11288 0eb4 BB75     		strb	r3, [r7, #22]
 11289              	.L461:
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11290              		.loc 1 1521 0 is_stmt 0 discriminator 1
 11291 0eb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11292 0eb8 032B     		cmp	r3, #3
 11293 0eba EDD9     		bls	.L462
1523:..\src/command_processing.c ****                 }
1524:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11294              		.loc 1 1524 0 is_stmt 1
 11295 0ebc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11296 0ebe BB68     		ldr	r3, [r7, #8]	@ float
 11297 0ec0 4FF08F41 		mov	r1, #1199570944
 11298 0ec4 1846     		mov	r0, r3
 11299 0ec6 FFF7FEFF 		bl	__aeabi_fmul
 11300 0eca 0346     		mov	r3, r0
 11301 0ecc 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 257


 11302 0ece FFF7FEFF 		bl	__aeabi_f2iz
 11303 0ed2 0146     		mov	r1, r0
 11304 0ed4 584A     		ldr	r2, .L490
 11305 0ed6 2346     		mov	r3, r4
 11306 0ed8 DB00     		lsls	r3, r3, #3
 11307 0eda 1B1B     		subs	r3, r3, r4
 11308 0edc 1B01     		lsls	r3, r3, #4
 11309 0ede 1344     		add	r3, r3, r2
 11310 0ee0 C433     		adds	r3, r3, #196
 11311 0ee2 1960     		str	r1, [r3]
1525:..\src/command_processing.c ****             }
1526:..\src/command_processing.c ****             else {
1527:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1528:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1529:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1530:..\src/command_processing.c ****                 }
1531:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1532:..\src/command_processing.c ****                 
1533:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1534:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1535:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1536:..\src/command_processing.c ****                 }
1537:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1538:..\src/command_processing.c ****                 
1539:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1540:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1541:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1542:..\src/command_processing.c ****                 }
1543:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1544:..\src/command_processing.c ****             }            
1545:..\src/command_processing.c ****             break;  
 11312              		.loc 1 1545 0
 11313 0ee4 61E3     		b	.L416
 11314              	.L456:
1527:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11315              		.loc 1 1527 0
 11316 0ee6 574B     		ldr	r3, .L490+12
 11317 0ee8 1B68     		ldr	r3, [r3]	@ float
 11318 0eea FB60     		str	r3, [r7, #12]	@ float
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11319              		.loc 1 1528 0
 11320 0eec 0023     		movs	r3, #0
 11321 0eee BB75     		strb	r3, [r7, #22]
 11322 0ef0 0EE0     		b	.L464
 11323              	.L465:
1529:..\src/command_processing.c ****                 }
 11324              		.loc 1 1529 0 discriminator 3
 11325 0ef2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11326 0ef4 C3F10303 		rsb	r3, r3, #3
 11327 0ef8 07F10802 		add	r2, r7, #8
 11328 0efc 1344     		add	r3, r3, r2
 11329 0efe BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11330 0f00 07F10C01 		add	r1, r7, #12
 11331 0f04 0A44     		add	r2, r2, r1
 11332 0f06 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11333 0f08 1A70     		strb	r2, [r3]
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 258


 11334              		.loc 1 1528 0 discriminator 3
 11335 0f0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11336 0f0c 0133     		adds	r3, r3, #1
 11337 0f0e BB75     		strb	r3, [r7, #22]
 11338              	.L464:
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11339              		.loc 1 1528 0 is_stmt 0 discriminator 1
 11340 0f10 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11341 0f12 032B     		cmp	r3, #3
 11342 0f14 EDD9     		bls	.L465
1531:..\src/command_processing.c ****                 
 11343              		.loc 1 1531 0 is_stmt 1
 11344 0f16 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11345 0f18 BB68     		ldr	r3, [r7, #8]	@ float
 11346 0f1a 4FF08F41 		mov	r1, #1199570944
 11347 0f1e 1846     		mov	r0, r3
 11348 0f20 FFF7FEFF 		bl	__aeabi_fmul
 11349 0f24 0346     		mov	r3, r0
 11350 0f26 1846     		mov	r0, r3
 11351 0f28 FFF7FEFF 		bl	__aeabi_f2iz
 11352 0f2c 0146     		mov	r1, r0
 11353 0f2e 424A     		ldr	r2, .L490
 11354 0f30 2346     		mov	r3, r4
 11355 0f32 DB00     		lsls	r3, r3, #3
 11356 0f34 1B1B     		subs	r3, r3, r4
 11357 0f36 1B01     		lsls	r3, r3, #4
 11358 0f38 1344     		add	r3, r3, r2
 11359 0f3a D433     		adds	r3, r3, #212
 11360 0f3c 1960     		str	r1, [r3]
1533:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11361              		.loc 1 1533 0
 11362 0f3e 424B     		ldr	r3, .L490+16
 11363 0f40 1B68     		ldr	r3, [r3]	@ float
 11364 0f42 FB60     		str	r3, [r7, #12]	@ float
1534:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11365              		.loc 1 1534 0
 11366 0f44 0023     		movs	r3, #0
 11367 0f46 BB75     		strb	r3, [r7, #22]
 11368 0f48 0EE0     		b	.L466
 11369              	.L467:
1535:..\src/command_processing.c ****                 }
 11370              		.loc 1 1535 0 discriminator 3
 11371 0f4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11372 0f4c C3F10303 		rsb	r3, r3, #3
 11373 0f50 07F10802 		add	r2, r7, #8
 11374 0f54 1344     		add	r3, r3, r2
 11375 0f56 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11376 0f58 07F10C01 		add	r1, r7, #12
 11377 0f5c 0A44     		add	r2, r2, r1
 11378 0f5e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11379 0f60 1A70     		strb	r2, [r3]
1534:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11380              		.loc 1 1534 0 discriminator 3
 11381 0f62 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11382 0f64 0133     		adds	r3, r3, #1
 11383 0f66 BB75     		strb	r3, [r7, #22]
 11384              	.L466:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 259


1534:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11385              		.loc 1 1534 0 is_stmt 0 discriminator 1
 11386 0f68 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11387 0f6a 032B     		cmp	r3, #3
 11388 0f6c EDD9     		bls	.L467
1537:..\src/command_processing.c ****                 
 11389              		.loc 1 1537 0 is_stmt 1
 11390 0f6e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11391 0f70 BB68     		ldr	r3, [r7, #8]	@ float
 11392 0f72 4FF08F41 		mov	r1, #1199570944
 11393 0f76 1846     		mov	r0, r3
 11394 0f78 FFF7FEFF 		bl	__aeabi_fmul
 11395 0f7c 0346     		mov	r3, r0
 11396 0f7e 1846     		mov	r0, r3
 11397 0f80 FFF7FEFF 		bl	__aeabi_f2iz
 11398 0f84 0146     		mov	r1, r0
 11399 0f86 2C4A     		ldr	r2, .L490
 11400 0f88 2346     		mov	r3, r4
 11401 0f8a DB00     		lsls	r3, r3, #3
 11402 0f8c 1B1B     		subs	r3, r3, r4
 11403 0f8e 1B01     		lsls	r3, r3, #4
 11404 0f90 1344     		add	r3, r3, r2
 11405 0f92 D833     		adds	r3, r3, #216
 11406 0f94 1960     		str	r1, [r3]
1539:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11407              		.loc 1 1539 0
 11408 0f96 294B     		ldr	r3, .L490+4
 11409 0f98 1B68     		ldr	r3, [r3]	@ float
 11410 0f9a FB60     		str	r3, [r7, #12]	@ float
1540:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11411              		.loc 1 1540 0
 11412 0f9c 0023     		movs	r3, #0
 11413 0f9e BB75     		strb	r3, [r7, #22]
 11414 0fa0 0EE0     		b	.L468
 11415              	.L469:
1541:..\src/command_processing.c ****                 }
 11416              		.loc 1 1541 0 discriminator 3
 11417 0fa2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11418 0fa4 C3F10303 		rsb	r3, r3, #3
 11419 0fa8 07F10802 		add	r2, r7, #8
 11420 0fac 1344     		add	r3, r3, r2
 11421 0fae BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11422 0fb0 07F10C01 		add	r1, r7, #12
 11423 0fb4 0A44     		add	r2, r2, r1
 11424 0fb6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11425 0fb8 1A70     		strb	r2, [r3]
1540:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11426              		.loc 1 1540 0 discriminator 3
 11427 0fba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11428 0fbc 0133     		adds	r3, r3, #1
 11429 0fbe BB75     		strb	r3, [r7, #22]
 11430              	.L468:
1540:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11431              		.loc 1 1540 0 is_stmt 0 discriminator 1
 11432 0fc0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11433 0fc2 032B     		cmp	r3, #3
 11434 0fc4 EDD9     		bls	.L469
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 260


1543:..\src/command_processing.c ****             }            
 11435              		.loc 1 1543 0 is_stmt 1
 11436 0fc6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11437 0fc8 BB68     		ldr	r3, [r7, #8]	@ float
 11438 0fca 4FF08F41 		mov	r1, #1199570944
 11439 0fce 1846     		mov	r0, r3
 11440 0fd0 FFF7FEFF 		bl	__aeabi_fmul
 11441 0fd4 0346     		mov	r3, r0
 11442 0fd6 1846     		mov	r0, r3
 11443 0fd8 FFF7FEFF 		bl	__aeabi_f2iz
 11444 0fdc 0146     		mov	r1, r0
 11445 0fde 164A     		ldr	r2, .L490
 11446 0fe0 2346     		mov	r3, r4
 11447 0fe2 DB00     		lsls	r3, r3, #3
 11448 0fe4 1B1B     		subs	r3, r3, r4
 11449 0fe6 1B01     		lsls	r3, r3, #4
 11450 0fe8 1344     		add	r3, r3, r2
 11451 0fea DC33     		adds	r3, r3, #220
 11452 0fec 1960     		str	r1, [r3]
 11453              		.loc 1 1545 0
 11454 0fee DCE2     		b	.L416
 11455              	.L397:
1546:..\src/command_processing.c ****             
1547:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1548:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11456              		.loc 1 1548 0
 11457 0ff0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11458 0ff2 164B     		ldr	r3, .L490+20
 11459 0ff4 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11460 0ff6 1049     		ldr	r1, .L490
 11461 0ff8 1346     		mov	r3, r2
 11462 0ffa DB00     		lsls	r3, r3, #3
 11463 0ffc 9B1A     		subs	r3, r3, r2
 11464 0ffe 1B01     		lsls	r3, r3, #4
 11465 1000 0B44     		add	r3, r3, r1
 11466 1002 03F58773 		add	r3, r3, #270
 11467 1006 0246     		mov	r2, r0
 11468 1008 1A70     		strb	r2, [r3]
1549:..\src/command_processing.c ****             
1550:..\src/command_processing.c ****             // Hold the actual position
1551:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11469              		.loc 1 1551 0
 11470 100a F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11471 100c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11472 100e 0A48     		ldr	r0, .L490
 11473 1010 1346     		mov	r3, r2
 11474 1012 DB00     		lsls	r3, r3, #3
 11475 1014 9B1A     		subs	r3, r3, r2
 11476 1016 1B01     		lsls	r3, r3, #4
 11477 1018 0344     		add	r3, r3, r0
 11478 101a 03F58873 		add	r3, r3, #272
 11479 101e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11480 1020 1846     		mov	r0, r3
 11481 1022 0B4A     		ldr	r2, .L490+24
 11482 1024 3423     		movs	r3, #52
 11483 1026 03FB00F3 		mul	r3, r3, r0
 11484 102a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 261


 11485 102c 1A68     		ldr	r2, [r3]
 11486 102e 0948     		ldr	r0, .L490+28
 11487 1030 0B01     		lsls	r3, r1, #4
 11488 1032 0344     		add	r3, r3, r0
 11489 1034 1A60     		str	r2, [r3]
1552:..\src/command_processing.c ****             break;   
 11490              		.loc 1 1552 0
 11491 1036 B8E2     		b	.L416
 11492              	.L491:
 11493              		.align	2
 11494              	.L490:
 11495 1038 00000000 		.word	g_mem
 11496 103c 0B000000 		.word	g_rx+11
 11497 1040 00000000 		.word	c_mem
 11498 1044 03000000 		.word	g_rx+3
 11499 1048 07000000 		.word	g_rx+7
 11500 104c 00000000 		.word	g_rx
 11501 1050 00000000 		.word	g_meas
 11502 1054 00000000 		.word	g_refNew
 11503              	.L398:
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1555:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11504              		.loc 1 1555 0
 11505 1058 0023     		movs	r3, #0
 11506 105a FB75     		strb	r3, [r7, #23]
 11507 105c 7EE0     		b	.L470
 11508              	.L471:
1556:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11509              		.loc 1 1556 0 discriminator 3
 11510 105e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11511 1060 9049     		ldr	r1, .L492
 11512 1062 1346     		mov	r3, r2
 11513 1064 DB00     		lsls	r3, r3, #3
 11514 1066 9B1A     		subs	r3, r3, r2
 11515 1068 1B01     		lsls	r3, r3, #4
 11516 106a 0B44     		add	r3, r3, r1
 11517 106c 03F58873 		add	r3, r3, #272
 11518 1070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11519 1072 1C46     		mov	r4, r3
 11520 1074 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11521 1076 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11522 1078 5B00     		lsls	r3, r3, #1
 11523 107a 0333     		adds	r3, r3, #3
 11524 107c 8A49     		ldr	r1, .L492+4
 11525 107e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11526 1080 1B02     		lsls	r3, r3, #8
 11527 1082 19B2     		sxth	r1, r3
 11528 1084 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11529 1086 0233     		adds	r3, r3, #2
 11530 1088 5B00     		lsls	r3, r3, #1
 11531 108a 8748     		ldr	r0, .L492+4
 11532 108c C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11533 108e 1BB2     		sxth	r3, r3
 11534 1090 0B43     		orrs	r3, r3, r1
 11535 1092 1BB2     		sxth	r3, r3
 11536 1094 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 262


 11537 1096 8349     		ldr	r1, .L492
 11538 1098 2346     		mov	r3, r4
 11539 109a 5B00     		lsls	r3, r3, #1
 11540 109c 2344     		add	r3, r3, r4
 11541 109e 9B00     		lsls	r3, r3, #2
 11542 10a0 1344     		add	r3, r3, r2
 11543 10a2 6633     		adds	r3, r3, #102
 11544 10a4 41F82300 		str	r0, [r1, r3, lsl #2]
1557:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11545              		.loc 1 1557 0 discriminator 3
 11546 10a8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11547 10aa 7E49     		ldr	r1, .L492
 11548 10ac 1346     		mov	r3, r2
 11549 10ae DB00     		lsls	r3, r3, #3
 11550 10b0 9B1A     		subs	r3, r3, r2
 11551 10b2 1B01     		lsls	r3, r3, #4
 11552 10b4 0B44     		add	r3, r3, r1
 11553 10b6 03F58873 		add	r3, r3, #272
 11554 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11555 10bc 1D46     		mov	r5, r3
 11556 10be F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11557 10c0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11558 10c2 7848     		ldr	r0, .L492
 11559 10c4 1346     		mov	r3, r2
 11560 10c6 DB00     		lsls	r3, r3, #3
 11561 10c8 9B1A     		subs	r3, r3, r2
 11562 10ca 1B01     		lsls	r3, r3, #4
 11563 10cc 0344     		add	r3, r3, r0
 11564 10ce 03F58873 		add	r3, r3, #272
 11565 10d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11566 10d4 1C46     		mov	r4, r3
 11567 10d6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11568 10d8 7248     		ldr	r0, .L492
 11569 10da 2346     		mov	r3, r4
 11570 10dc 5B00     		lsls	r3, r3, #1
 11571 10de 2344     		add	r3, r3, r4
 11572 10e0 9B00     		lsls	r3, r3, #2
 11573 10e2 1344     		add	r3, r3, r2
 11574 10e4 6633     		adds	r3, r3, #102
 11575 10e6 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11576 10ea FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11577 10ec 6D4C     		ldr	r4, .L492
 11578 10ee 1346     		mov	r3, r2
 11579 10f0 DB00     		lsls	r3, r3, #3
 11580 10f2 9B1A     		subs	r3, r3, r2
 11581 10f4 1B01     		lsls	r3, r3, #4
 11582 10f6 2344     		add	r3, r3, r4
 11583 10f8 03F58873 		add	r3, r3, #272
 11584 10fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11585 10fe 1E46     		mov	r6, r3
 11586 1100 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11587 1102 684C     		ldr	r4, .L492
 11588 1104 3346     		mov	r3, r6
 11589 1106 5B00     		lsls	r3, r3, #1
 11590 1108 3344     		add	r3, r3, r6
 11591 110a 1B01     		lsls	r3, r3, #4
 11592 110c 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 263


 11593 110e 1344     		add	r3, r3, r2
 11594 1110 03F29513 		addw	r3, r3, #405
 11595 1114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11596 1116 00FA03F2 		lsl	r2, r0, r3
 11597 111a 6248     		ldr	r0, .L492
 11598 111c 2B46     		mov	r3, r5
 11599 111e 5B00     		lsls	r3, r3, #1
 11600 1120 2B44     		add	r3, r3, r5
 11601 1122 9B00     		lsls	r3, r3, #2
 11602 1124 0B44     		add	r3, r3, r1
 11603 1126 6633     		adds	r3, r3, #102
 11604 1128 40F82320 		str	r2, [r0, r3, lsl #2]
1558:..\src/command_processing.c **** 
1559:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11605              		.loc 1 1559 0 discriminator 3
 11606 112c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11607 112e 5D49     		ldr	r1, .L492
 11608 1130 1346     		mov	r3, r2
 11609 1132 DB00     		lsls	r3, r3, #3
 11610 1134 9B1A     		subs	r3, r3, r2
 11611 1136 1B01     		lsls	r3, r3, #4
 11612 1138 0B44     		add	r3, r3, r1
 11613 113a 03F58873 		add	r3, r3, #272
 11614 113e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11615 1140 1846     		mov	r0, r3
 11616 1142 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11617 1144 5949     		ldr	r1, .L492+8
 11618 1146 3422     		movs	r2, #52
 11619 1148 02FB00F2 		mul	r2, r2, r0
 11620 114c 0A44     		add	r2, r2, r1
 11621 114e 1344     		add	r3, r3, r2
 11622 1150 1833     		adds	r3, r3, #24
 11623 1152 0022     		movs	r2, #0
 11624 1154 1A70     		strb	r2, [r3]
1555:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11625              		.loc 1 1555 0 discriminator 3
 11626 1156 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11627 1158 0133     		adds	r3, r3, #1
 11628 115a FB75     		strb	r3, [r7, #23]
 11629              	.L470:
1555:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11630              		.loc 1 1555 0 is_stmt 0 discriminator 1
 11631 115c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11632 115e 022B     		cmp	r3, #2
 11633 1160 7FF67DAF 		bls	.L471
1560:..\src/command_processing.c ****             }
1561:..\src/command_processing.c ****             reset_last_value_flag = 1;
 11634              		.loc 1 1561 0 is_stmt 1
 11635 1164 524B     		ldr	r3, .L492+12
 11636 1166 0122     		movs	r2, #1
 11637 1168 1A70     		strb	r2, [r3]
1562:..\src/command_processing.c ****             break;
 11638              		.loc 1 1562 0
 11639 116a 1EE2     		b	.L416
 11640              	.L399:
1563:..\src/command_processing.c ****     
1564:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 264


1565:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11641              		.loc 1 1565 0
 11642 116c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11643 116e 4E4B     		ldr	r3, .L492+4
 11644 1170 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11645 1172 1906     		lsls	r1, r3, #24
 11646 1174 4C4B     		ldr	r3, .L492+4
 11647 1176 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11648 1178 1B04     		lsls	r3, r3, #16
 11649 117a 1943     		orrs	r1, r1, r3
 11650 117c 4A4B     		ldr	r3, .L492+4
 11651 117e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11652 1180 1B02     		lsls	r3, r3, #8
 11653 1182 0B43     		orrs	r3, r3, r1
 11654 1184 4849     		ldr	r1, .L492+4
 11655 1186 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11656 1188 1943     		orrs	r1, r1, r3
 11657 118a 4648     		ldr	r0, .L492
 11658 118c 1346     		mov	r3, r2
 11659 118e DB00     		lsls	r3, r3, #3
 11660 1190 9B1A     		subs	r3, r3, r2
 11661 1192 1B01     		lsls	r3, r3, #4
 11662 1194 0344     		add	r3, r3, r0
 11663 1196 E433     		adds	r3, r3, #228
 11664 1198 1960     		str	r1, [r3]
1566:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11665              		.loc 1 1566 0
 11666 119a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11667 119c 424B     		ldr	r3, .L492+4
 11668 119e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11669 11a0 1906     		lsls	r1, r3, #24
 11670 11a2 414B     		ldr	r3, .L492+4
 11671 11a4 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11672 11a6 1B04     		lsls	r3, r3, #16
 11673 11a8 1943     		orrs	r1, r1, r3
 11674 11aa 3F4B     		ldr	r3, .L492+4
 11675 11ac 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11676 11ae 1B02     		lsls	r3, r3, #8
 11677 11b0 0B43     		orrs	r3, r3, r1
 11678 11b2 3D49     		ldr	r1, .L492+4
 11679 11b4 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11680 11b6 1943     		orrs	r1, r1, r3
 11681 11b8 3A48     		ldr	r0, .L492
 11682 11ba 1346     		mov	r3, r2
 11683 11bc DB00     		lsls	r3, r3, #3
 11684 11be 9B1A     		subs	r3, r3, r2
 11685 11c0 1B01     		lsls	r3, r3, #4
 11686 11c2 0344     		add	r3, r3, r0
 11687 11c4 E833     		adds	r3, r3, #232
 11688 11c6 1960     		str	r1, [r3]
1567:..\src/command_processing.c **** 
1568:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11689              		.loc 1 1568 0
 11690 11c8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11691 11ca F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11692 11cc 3548     		ldr	r0, .L492
 11693 11ce 0B46     		mov	r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 265


 11694 11d0 DB00     		lsls	r3, r3, #3
 11695 11d2 5B1A     		subs	r3, r3, r1
 11696 11d4 1B01     		lsls	r3, r3, #4
 11697 11d6 0344     		add	r3, r3, r0
 11698 11d8 E433     		adds	r3, r3, #228
 11699 11da 1868     		ldr	r0, [r3]
 11700 11dc F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11701 11de 314C     		ldr	r4, .L492
 11702 11e0 0B46     		mov	r3, r1
 11703 11e2 DB00     		lsls	r3, r3, #3
 11704 11e4 5B1A     		subs	r3, r3, r1
 11705 11e6 1B01     		lsls	r3, r3, #4
 11706 11e8 2344     		add	r3, r3, r4
 11707 11ea 03F58873 		add	r3, r3, #272
 11708 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11709 11f0 1C46     		mov	r4, r3
 11710 11f2 2C49     		ldr	r1, .L492
 11711 11f4 2346     		mov	r3, r4
 11712 11f6 5B00     		lsls	r3, r3, #1
 11713 11f8 2344     		add	r3, r3, r4
 11714 11fa 1B01     		lsls	r3, r3, #4
 11715 11fc 0B44     		add	r3, r3, r1
 11716 11fe 03F29513 		addw	r3, r3, #405
 11717 1202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11718 1204 00FA03F1 		lsl	r1, r0, r3
 11719 1208 2648     		ldr	r0, .L492
 11720 120a 1346     		mov	r3, r2
 11721 120c DB00     		lsls	r3, r3, #3
 11722 120e 9B1A     		subs	r3, r3, r2
 11723 1210 1B01     		lsls	r3, r3, #4
 11724 1212 0344     		add	r3, r3, r0
 11725 1214 E433     		adds	r3, r3, #228
 11726 1216 1960     		str	r1, [r3]
1569:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11727              		.loc 1 1569 0
 11728 1218 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11729 121a F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11730 121c 2148     		ldr	r0, .L492
 11731 121e 0B46     		mov	r3, r1
 11732 1220 DB00     		lsls	r3, r3, #3
 11733 1222 5B1A     		subs	r3, r3, r1
 11734 1224 1B01     		lsls	r3, r3, #4
 11735 1226 0344     		add	r3, r3, r0
 11736 1228 E833     		adds	r3, r3, #232
 11737 122a 1868     		ldr	r0, [r3]
 11738 122c F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11739 122e 1D4C     		ldr	r4, .L492
 11740 1230 0B46     		mov	r3, r1
 11741 1232 DB00     		lsls	r3, r3, #3
 11742 1234 5B1A     		subs	r3, r3, r1
 11743 1236 1B01     		lsls	r3, r3, #4
 11744 1238 2344     		add	r3, r3, r4
 11745 123a 03F58873 		add	r3, r3, #272
 11746 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11747 1240 1C46     		mov	r4, r3
 11748 1242 1849     		ldr	r1, .L492
 11749 1244 2346     		mov	r3, r4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 266


 11750 1246 5B00     		lsls	r3, r3, #1
 11751 1248 2344     		add	r3, r3, r4
 11752 124a 1B01     		lsls	r3, r3, #4
 11753 124c 0B44     		add	r3, r3, r1
 11754 124e 03F29513 		addw	r3, r3, #405
 11755 1252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11756 1254 00FA03F1 		lsl	r1, r0, r3
 11757 1258 1248     		ldr	r0, .L492
 11758 125a 1346     		mov	r3, r2
 11759 125c DB00     		lsls	r3, r3, #3
 11760 125e 9B1A     		subs	r3, r3, r2
 11761 1260 1B01     		lsls	r3, r3, #4
 11762 1262 0344     		add	r3, r3, r0
 11763 1264 E833     		adds	r3, r3, #232
 11764 1266 1960     		str	r1, [r3]
1570:..\src/command_processing.c ****             break;
 11765              		.loc 1 1570 0
 11766 1268 9FE1     		b	.L416
 11767              	.L400:
1571:..\src/command_processing.c ****             
1572:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1573:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11768              		.loc 1 1573 0
 11769 126a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11770 126c 0E4B     		ldr	r3, .L492+4
 11771 126e D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11772 1270 0C49     		ldr	r1, .L492
 11773 1272 1346     		mov	r3, r2
 11774 1274 DB00     		lsls	r3, r3, #3
 11775 1276 9B1A     		subs	r3, r3, r2
 11776 1278 1B01     		lsls	r3, r3, #4
 11777 127a 0B44     		add	r3, r3, r1
 11778 127c E233     		adds	r3, r3, #226
 11779 127e 0246     		mov	r2, r0
 11780 1280 1A70     		strb	r2, [r3]
1574:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11781              		.loc 1 1574 0
 11782 1282 084B     		ldr	r3, .L492
 11783 1284 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11784 1288 5B00     		lsls	r3, r3, #1
 11785 128a 5AB2     		sxtb	r2, r3
 11786 128c 054B     		ldr	r3, .L492
 11787 128e 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11788 1292 5BB2     		sxtb	r3, r3
 11789 1294 1343     		orrs	r3, r3, r2
 11790 1296 5BB2     		sxtb	r3, r3
 11791 1298 DBB2     		uxtb	r3, r3
 11792 129a 1846     		mov	r0, r3
 11793 129c FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1575:..\src/command_processing.c ****             break;
 11794              		.loc 1 1575 0
 11795 12a0 83E1     		b	.L416
 11796              	.L493:
 11797 12a2 00BF     		.align	2
 11798              	.L492:
 11799 12a4 00000000 		.word	g_mem
 11800 12a8 00000000 		.word	g_rx
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 267


 11801 12ac 00000000 		.word	g_meas
 11802 12b0 00000000 		.word	reset_last_value_flag
 11803              	.L401:
1576:..\src/command_processing.c **** 
1577:..\src/command_processing.c ****         case 75:        // Device type
1578:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11804              		.loc 1 1578 0
 11805 12b4 BF4B     		ldr	r3, .L494
 11806 12b6 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11807 12b8 BF4B     		ldr	r3, .L494+4
 11808 12ba 83F8AC20 		strb	r2, [r3, #172]
1579:..\src/command_processing.c ****             
1580:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11809              		.loc 1 1580 0
 11810 12be BE4B     		ldr	r3, .L494+4
 11811 12c0 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11812 12c4 002B     		cmp	r3, #0
 11813 12c6 40F0A480 		bne	.L472
1581:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11814              		.loc 1 1581 0
 11815 12ca 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11816 12cc BA49     		ldr	r1, .L494+4
 11817 12ce 1346     		mov	r3, r2
 11818 12d0 DB00     		lsls	r3, r3, #3
 11819 12d2 9B1A     		subs	r3, r3, r2
 11820 12d4 1B01     		lsls	r3, r3, #4
 11821 12d6 0B44     		add	r3, r3, r1
 11822 12d8 03F58873 		add	r3, r3, #272
 11823 12dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11824 12de 1946     		mov	r1, r3
 11825 12e0 B54A     		ldr	r2, .L494+4
 11826 12e2 0B46     		mov	r3, r1
 11827 12e4 5B00     		lsls	r3, r3, #1
 11828 12e6 0B44     		add	r3, r3, r1
 11829 12e8 1B01     		lsls	r3, r3, #4
 11830 12ea 1344     		add	r3, r3, r2
 11831 12ec 03F5D873 		add	r3, r3, #432
 11832 12f0 0122     		movs	r2, #1
 11833 12f2 1A70     		strb	r2, [r3]
1582:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11834              		.loc 1 1582 0
 11835 12f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11836 12f6 B049     		ldr	r1, .L494+4
 11837 12f8 1346     		mov	r3, r2
 11838 12fa DB00     		lsls	r3, r3, #3
 11839 12fc 9B1A     		subs	r3, r3, r2
 11840 12fe 1B01     		lsls	r3, r3, #4
 11841 1300 0B44     		add	r3, r3, r1
 11842 1302 03F58873 		add	r3, r3, #272
 11843 1306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11844 1308 1946     		mov	r1, r3
 11845 130a AB4A     		ldr	r2, .L494+4
 11846 130c 0B46     		mov	r3, r1
 11847 130e 5B00     		lsls	r3, r3, #1
 11848 1310 0B44     		add	r3, r3, r1
 11849 1312 1B01     		lsls	r3, r3, #4
 11850 1314 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 268


 11851 1316 03F2B513 		addw	r3, r3, #437
 11852 131a 2322     		movs	r2, #35
 11853 131c 1A70     		strb	r2, [r3]
1583:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11854              		.loc 1 1583 0
 11855 131e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11856 1320 A549     		ldr	r1, .L494+4
 11857 1322 1346     		mov	r3, r2
 11858 1324 DB00     		lsls	r3, r3, #3
 11859 1326 9B1A     		subs	r3, r3, r2
 11860 1328 1B01     		lsls	r3, r3, #4
 11861 132a 0B44     		add	r3, r3, r1
 11862 132c 03F58873 		add	r3, r3, #272
 11863 1330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11864 1332 1946     		mov	r1, r3
 11865 1334 A04A     		ldr	r2, .L494+4
 11866 1336 0B46     		mov	r3, r1
 11867 1338 5B00     		lsls	r3, r3, #1
 11868 133a 0B44     		add	r3, r3, r1
 11869 133c 1B01     		lsls	r3, r3, #4
 11870 133e 1344     		add	r3, r3, r2
 11871 1340 03F5DB73 		add	r3, r3, #438
 11872 1344 0322     		movs	r2, #3
 11873 1346 1A70     		strb	r2, [r3]
1584:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11874              		.loc 1 1584 0
 11875 1348 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11876 134a 9B49     		ldr	r1, .L494+4
 11877 134c 1346     		mov	r3, r2
 11878 134e DB00     		lsls	r3, r3, #3
 11879 1350 9B1A     		subs	r3, r3, r2
 11880 1352 1B01     		lsls	r3, r3, #4
 11881 1354 0B44     		add	r3, r3, r1
 11882 1356 03F58873 		add	r3, r3, #272
 11883 135a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11884 135c 1946     		mov	r1, r3
 11885 135e 964A     		ldr	r2, .L494+4
 11886 1360 0B46     		mov	r3, r1
 11887 1362 5B00     		lsls	r3, r3, #1
 11888 1364 0B44     		add	r3, r3, r1
 11889 1366 1B01     		lsls	r3, r3, #4
 11890 1368 1344     		add	r3, r3, r2
 11891 136a 03F2B713 		addw	r3, r3, #439
 11892 136e FF22     		movs	r2, #255
 11893 1370 1A70     		strb	r2, [r3]
1585:..\src/command_processing.c ****                 
1586:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1587:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11894              		.loc 1 1587 0
 11895 1372 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11896 1374 904B     		ldr	r3, .L494+4
 11897 1376 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11898 137a 8F49     		ldr	r1, .L494+4
 11899 137c 1346     		mov	r3, r2
 11900 137e DB00     		lsls	r3, r3, #3
 11901 1380 9B1A     		subs	r3, r3, r2
 11902 1382 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 269


 11903 1384 0B44     		add	r3, r3, r1
 11904 1386 03F58873 		add	r3, r3, #272
 11905 138a 0246     		mov	r2, r0
 11906 138c 1A70     		strb	r2, [r3]
1588:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11907              		.loc 1 1588 0
 11908 138e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11909 1390 8949     		ldr	r1, .L494+4
 11910 1392 1346     		mov	r3, r2
 11911 1394 DB00     		lsls	r3, r3, #3
 11912 1396 9B1A     		subs	r3, r3, r2
 11913 1398 1B01     		lsls	r3, r3, #4
 11914 139a 0B44     		add	r3, r3, r1
 11915 139c 03F21113 		addw	r3, r3, #273
 11916 13a0 0122     		movs	r2, #1
 11917 13a2 1A70     		strb	r2, [r3]
1589:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11918              		.loc 1 1589 0
 11919 13a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11920 13a6 8449     		ldr	r1, .L494+4
 11921 13a8 1346     		mov	r3, r2
 11922 13aa DB00     		lsls	r3, r3, #3
 11923 13ac 9B1A     		subs	r3, r3, r2
 11924 13ae 1B01     		lsls	r3, r3, #4
 11925 13b0 0B44     		add	r3, r3, r1
 11926 13b2 03F58973 		add	r3, r3, #274
 11927 13b6 0122     		movs	r2, #1
 11928 13b8 1A70     		strb	r2, [r3]
1590:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11929              		.loc 1 1590 0
 11930 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11931 13bc 7E49     		ldr	r1, .L494+4
 11932 13be 1346     		mov	r3, r2
 11933 13c0 DB00     		lsls	r3, r3, #3
 11934 13c2 9B1A     		subs	r3, r3, r2
 11935 13c4 1B01     		lsls	r3, r3, #4
 11936 13c6 0B44     		add	r3, r3, r1
 11937 13c8 E433     		adds	r3, r3, #228
 11938 13ca 0022     		movs	r2, #0
 11939 13cc 1A60     		str	r2, [r3]
1591:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 11940              		.loc 1 1591 0
 11941 13ce 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11942 13d0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 11943 13d2 7948     		ldr	r0, .L494+4
 11944 13d4 0B46     		mov	r3, r1
 11945 13d6 DB00     		lsls	r3, r3, #3
 11946 13d8 5B1A     		subs	r3, r3, r1
 11947 13da 1B01     		lsls	r3, r3, #4
 11948 13dc 0344     		add	r3, r3, r0
 11949 13de 03F58873 		add	r3, r3, #272
 11950 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11951 13e4 1846     		mov	r0, r3
 11952 13e6 7449     		ldr	r1, .L494+4
 11953 13e8 0346     		mov	r3, r0
 11954 13ea 5B00     		lsls	r3, r3, #1
 11955 13ec 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 270


 11956 13ee 1B01     		lsls	r3, r3, #4
 11957 13f0 0B44     		add	r3, r3, r1
 11958 13f2 03F29513 		addw	r3, r3, #405
 11959 13f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11960 13f8 1946     		mov	r1, r3
 11961 13fa 4FF47A53 		mov	r3, #16000
 11962 13fe 03FA01F1 		lsl	r1, r3, r1
 11963 1402 6D48     		ldr	r0, .L494+4
 11964 1404 1346     		mov	r3, r2
 11965 1406 DB00     		lsls	r3, r3, #3
 11966 1408 9B1A     		subs	r3, r3, r2
 11967 140a 1B01     		lsls	r3, r3, #4
 11968 140c 0344     		add	r3, r3, r0
 11969 140e E833     		adds	r3, r3, #232
 11970 1410 1960     		str	r1, [r3]
 11971              	.L472:
1592:..\src/command_processing.c ****             }      
1593:..\src/command_processing.c ****             
1594:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 11972              		.loc 1 1594 0
 11973 1412 694B     		ldr	r3, .L494+4
 11974 1414 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11975 1418 042B     		cmp	r3, #4
 11976 141a 40F0C580 		bne	.L481
1595:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 11977              		.loc 1 1595 0
 11978 141e 664B     		ldr	r3, .L494+4
 11979 1420 0122     		movs	r2, #1
 11980 1422 83F8A920 		strb	r2, [r3, #169]
1596:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11981              		.loc 1 1596 0
 11982 1426 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11983 1428 6349     		ldr	r1, .L494+4
 11984 142a 1346     		mov	r3, r2
 11985 142c DB00     		lsls	r3, r3, #3
 11986 142e 9B1A     		subs	r3, r3, r2
 11987 1430 1B01     		lsls	r3, r3, #4
 11988 1432 0B44     		add	r3, r3, r1
 11989 1434 03F58873 		add	r3, r3, #272
 11990 1438 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11991 143a 1946     		mov	r1, r3
 11992 143c 5E4A     		ldr	r2, .L494+4
 11993 143e 0B46     		mov	r3, r1
 11994 1440 5B00     		lsls	r3, r3, #1
 11995 1442 0B44     		add	r3, r3, r1
 11996 1444 1B01     		lsls	r3, r3, #4
 11997 1446 1344     		add	r3, r3, r2
 11998 1448 03F5D873 		add	r3, r3, #432
 11999 144c 0122     		movs	r2, #1
 12000 144e 1A70     		strb	r2, [r3]
1597:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12001              		.loc 1 1597 0
 12002 1450 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12003 1452 5949     		ldr	r1, .L494+4
 12004 1454 1346     		mov	r3, r2
 12005 1456 DB00     		lsls	r3, r3, #3
 12006 1458 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 271


 12007 145a 1B01     		lsls	r3, r3, #4
 12008 145c 0B44     		add	r3, r3, r1
 12009 145e 03F58873 		add	r3, r3, #272
 12010 1462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12011 1464 1946     		mov	r1, r3
 12012 1466 544A     		ldr	r2, .L494+4
 12013 1468 0B46     		mov	r3, r1
 12014 146a 5B00     		lsls	r3, r3, #1
 12015 146c 0B44     		add	r3, r3, r1
 12016 146e 1B01     		lsls	r3, r3, #4
 12017 1470 1344     		add	r3, r3, r2
 12018 1472 03F5D873 		add	r3, r3, #432
 12019 1476 0122     		movs	r2, #1
 12020 1478 1A70     		strb	r2, [r3]
1598:..\src/command_processing.c ****                 
1599:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 12021              		.loc 1 1599 0
 12022 147a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12023 147c 4E49     		ldr	r1, .L494+4
 12024 147e 1346     		mov	r3, r2
 12025 1480 DB00     		lsls	r3, r3, #3
 12026 1482 9B1A     		subs	r3, r3, r2
 12027 1484 1B01     		lsls	r3, r3, #4
 12028 1486 0B44     		add	r3, r3, r1
 12029 1488 E433     		adds	r3, r3, #228
 12030 148a 0022     		movs	r2, #0
 12031 148c 1A60     		str	r2, [r3]
1600:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 12032              		.loc 1 1600 0
 12033 148e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12034 1490 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 12035 1492 4948     		ldr	r0, .L494+4
 12036 1494 0B46     		mov	r3, r1
 12037 1496 DB00     		lsls	r3, r3, #3
 12038 1498 5B1A     		subs	r3, r3, r1
 12039 149a 1B01     		lsls	r3, r3, #4
 12040 149c 0344     		add	r3, r3, r0
 12041 149e 03F58873 		add	r3, r3, #272
 12042 14a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12043 14a4 1846     		mov	r0, r3
 12044 14a6 4449     		ldr	r1, .L494+4
 12045 14a8 0346     		mov	r3, r0
 12046 14aa 5B00     		lsls	r3, r3, #1
 12047 14ac 0344     		add	r3, r3, r0
 12048 14ae 1B01     		lsls	r3, r3, #4
 12049 14b0 0B44     		add	r3, r3, r1
 12050 14b2 03F29513 		addw	r3, r3, #405
 12051 14b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12052 14b8 1946     		mov	r1, r3
 12053 14ba 4FF47A53 		mov	r3, #16000
 12054 14be 03FA01F1 		lsl	r1, r3, r1
 12055 14c2 3D48     		ldr	r0, .L494+4
 12056 14c4 1346     		mov	r3, r2
 12057 14c6 DB00     		lsls	r3, r3, #3
 12058 14c8 9B1A     		subs	r3, r3, r2
 12059 14ca 1B01     		lsls	r3, r3, #4
 12060 14cc 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 272


 12061 14ce E833     		adds	r3, r3, #232
 12062 14d0 1960     		str	r1, [r3]
1601:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(-16000) << g_mem.enc[g_mem.moto
 12063              		.loc 1 1601 0
 12064 14d2 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12065 14d4 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 12066 14d6 3848     		ldr	r0, .L494+4
 12067 14d8 0B46     		mov	r3, r1
 12068 14da DB00     		lsls	r3, r3, #3
 12069 14dc 5B1A     		subs	r3, r3, r1
 12070 14de 1B01     		lsls	r3, r3, #4
 12071 14e0 0344     		add	r3, r3, r0
 12072 14e2 03F58873 		add	r3, r3, #272
 12073 14e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12074 14e8 1846     		mov	r0, r3
 12075 14ea 3349     		ldr	r1, .L494+4
 12076 14ec 0346     		mov	r3, r0
 12077 14ee 5B00     		lsls	r3, r3, #1
 12078 14f0 0344     		add	r3, r3, r0
 12079 14f2 1B01     		lsls	r3, r3, #4
 12080 14f4 0B44     		add	r3, r3, r1
 12081 14f6 03F29513 		addw	r3, r3, #405
 12082 14fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12083 14fc 1946     		mov	r1, r3
 12084 14fe 2F4B     		ldr	r3, .L494+8
 12085 1500 03FA01F1 		lsl	r1, r3, r1
 12086 1504 2C48     		ldr	r0, .L494+4
 12087 1506 1346     		mov	r3, r2
 12088 1508 DB00     		lsls	r3, r3, #3
 12089 150a 9B1A     		subs	r3, r3, r2
 12090 150c 1B01     		lsls	r3, r3, #4
 12091 150e 0344     		add	r3, r3, r0
 12092 1510 E833     		adds	r3, r3, #232
 12093 1512 1960     		str	r1, [r3]
1602:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
 12094              		.loc 1 1602 0
 12095 1514 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12096 1516 2849     		ldr	r1, .L494+4
 12097 1518 1346     		mov	r3, r2
 12098 151a DB00     		lsls	r3, r3, #3
 12099 151c 9B1A     		subs	r3, r3, r2
 12100 151e 1B01     		lsls	r3, r3, #4
 12101 1520 0B44     		add	r3, r3, r1
 12102 1522 E833     		adds	r3, r3, #232
 12103 1524 0022     		movs	r2, #0
 12104 1526 1A60     		str	r2, [r3]
1603:..\src/command_processing.c ****                 
1604:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 12105              		.loc 1 1604 0
 12106 1528 0023     		movs	r3, #0
 12107 152a FB75     		strb	r3, [r7, #23]
 12108 152c 2EE0     		b	.L474
 12109              	.L475:
1605:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12110              		.loc 1 1605 0 discriminator 3
 12111 152e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12112 1530 2149     		ldr	r1, .L494+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 273


 12113 1532 1346     		mov	r3, r2
 12114 1534 DB00     		lsls	r3, r3, #3
 12115 1536 9B1A     		subs	r3, r3, r2
 12116 1538 1B01     		lsls	r3, r3, #4
 12117 153a 0B44     		add	r3, r3, r1
 12118 153c 03F58673 		add	r3, r3, #268
 12119 1540 4FF44872 		mov	r2, #800
 12120 1544 1A80     		strh	r2, [r3]	@ movhi
1606:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 12121              		.loc 1 1606 0 discriminator 3
 12122 1546 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12123 1548 1B49     		ldr	r1, .L494+4
 12124 154a 1346     		mov	r3, r2
 12125 154c DB00     		lsls	r3, r3, #3
 12126 154e 9B1A     		subs	r3, r3, r2
 12127 1550 1B01     		lsls	r3, r3, #4
 12128 1552 0B44     		add	r3, r3, r1
 12129 1554 B033     		adds	r3, r3, #176
 12130 1556 41F6B862 		movw	r2, #7864
 12131 155a 1A60     		str	r2, [r3]
1607:..\src/command_processing.c ****                     g_mem.motor[i].k_i           = 0;
 12132              		.loc 1 1607 0 discriminator 3
 12133 155c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12134 155e 1649     		ldr	r1, .L494+4
 12135 1560 1346     		mov	r3, r2
 12136 1562 DB00     		lsls	r3, r3, #3
 12137 1564 9B1A     		subs	r3, r3, r2
 12138 1566 1B01     		lsls	r3, r3, #4
 12139 1568 0B44     		add	r3, r3, r1
 12140 156a B433     		adds	r3, r3, #180
 12141 156c 0022     		movs	r2, #0
 12142 156e 1A60     		str	r2, [r3]
1608:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 12143              		.loc 1 1608 0 discriminator 3
 12144 1570 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12145 1572 1149     		ldr	r1, .L494+4
 12146 1574 1346     		mov	r3, r2
 12147 1576 DB00     		lsls	r3, r3, #3
 12148 1578 9B1A     		subs	r3, r3, r2
 12149 157a 1B01     		lsls	r3, r3, #4
 12150 157c 0B44     		add	r3, r3, r1
 12151 157e B833     		adds	r3, r3, #184
 12152 1580 40F6CC42 		movw	r2, #3276
 12153 1584 1A60     		str	r2, [r3]
1604:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12154              		.loc 1 1604 0 discriminator 3
 12155 1586 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12156 1588 0133     		adds	r3, r3, #1
 12157 158a FB75     		strb	r3, [r7, #23]
 12158              	.L474:
1604:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12159              		.loc 1 1604 0 is_stmt 0 discriminator 1
 12160 158c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12161 158e 012B     		cmp	r3, #1
 12162 1590 CDD9     		bls	.L475
1609:..\src/command_processing.c ****                 }
1610:..\src/command_processing.c ****             }      
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 274


1611:..\src/command_processing.c ****             
1612:..\src/command_processing.c ****             break;
 12163              		.loc 1 1612 0 is_stmt 1
 12164 1592 09E0     		b	.L481
 12165              	.L476:
1613:..\src/command_processing.c ****             
1614:..\src/command_processing.c ****         default:
1615:..\src/command_processing.c ****             break;
 12166              		.loc 1 1615 0
 12167 1594 00BF     		nop
 12168 1596 08E0     		b	.L416
 12169              	.L477:
1402:..\src/command_processing.c ****             
 12170              		.loc 1 1402 0
 12171 1598 00BF     		nop
 12172 159a 06E0     		b	.L416
 12173              	.L478:
1430:..\src/command_processing.c **** 
 12174              		.loc 1 1430 0
 12175 159c 00BF     		nop
 12176 159e 04E0     		b	.L416
 12177              	.L479:
1448:..\src/command_processing.c ****             
 12178              		.loc 1 1448 0
 12179 15a0 00BF     		nop
 12180 15a2 02E0     		b	.L416
 12181              	.L480:
1458:..\src/command_processing.c ****            
 12182              		.loc 1 1458 0
 12183 15a4 00BF     		nop
 12184 15a6 00E0     		b	.L416
 12185              	.L481:
1612:..\src/command_processing.c ****             
 12186              		.loc 1 1612 0
 12187 15a8 00BF     		nop
 12188              	.L416:
1616:..\src/command_processing.c ****     }
1617:..\src/command_processing.c **** }
 12189              		.loc 1 1617 0 discriminator 1
 12190 15aa 00BF     		nop
 12191 15ac 1C37     		adds	r7, r7, #28
 12192              		.cfi_def_cfa_offset 20
 12193 15ae BD46     		mov	sp, r7
 12194              		.cfi_def_cfa_register 13
 12195              		@ sp needed
 12196 15b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 12197              	.L495:
 12198 15b2 00BF     		.align	2
 12199              	.L494:
 12200 15b4 00000000 		.word	g_rx
 12201 15b8 00000000 		.word	g_mem
 12202 15bc 80C1FFFF 		.word	-16000
 12203              		.cfi_endproc
 12204              	.LFE69:
 12205              		.size	set_custom_param, .-set_custom_param
 12206              		.section	.rodata
 12207 1096 0000     		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 275


 12208              	.LC144:
 12209 1098 506F7274 		.ascii	"Port %u ID:\000"
 12209      20257520 
 12209      49443A00 
 12210              		.align	2
 12211              	.LC145:
 12212 10a4 2575202D 		.ascii	"%u - Device ID:\000"
 12212      20446576 
 12212      69636520 
 12212      49443A00 
 12213              		.align	2
 12214              	.LC146:
 12215 10b4 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12215      20494D55 
 12215      20256420 
 12215      636F6E66 
 12215      69677572 
 12216 10cf 00       		.align	2
 12217              	.LC147:
 12218 10d0 2575202D 		.ascii	"%u - SPI read delay:\000"
 12218      20535049 
 12218      20726561 
 12218      64206465 
 12218      6C61793A 
 12219 10e5 000000   		.align	2
 12220              	.LC148:
 12221 10e8 204E6F6E 		.ascii	" None\000"
 12221      6500
 12222 10ee 0000     		.align	2
 12223              	.LC149:
 12224 10f0 204C6F77 		.ascii	" Low\000"
 12224      00
 12225 10f5 000000   		.align	2
 12226              	.LC150:
 12227 10f8 20486967 		.ascii	" High\000"
 12227      6800
 12228 10fe 0000     		.align	2
 12229              	.LC142:
 12230 1100 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12230      6572206F 
 12230      6620636F 
 12230      6E6E6563 
 12230      74656420 
 12231 111a 0000     		.align	2
 12232              	.LC143:
 12233 111c 4D616720 		.ascii	"Mag cal parameters:\000"
 12233      63616C20 
 12233      70617261 
 12233      6D657465 
 12233      72733A00 
 12234              		.section	.text.get_IMU_param_list,"ax",%progbits
 12235              		.align	2
 12236              		.global	get_IMU_param_list
 12237              		.thumb
 12238              		.thumb_func
 12239              		.type	get_IMU_param_list, %function
 12240              	get_IMU_param_list:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 276


 12241              	.LFB70:
1618:..\src/command_processing.c **** 
1619:..\src/command_processing.c **** //==============================================================================
1620:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1621:..\src/command_processing.c **** //==============================================================================
1622:..\src/command_processing.c **** 
1623:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1624:..\src/command_processing.c **** {
 12242              		.loc 1 1624 0
 12243              		.cfi_startproc
 12244              		@ args = 0, pretend = 0, frame = 1704
 12245              		@ frame_needed = 1, uses_anonymous_args = 0
 12246 0000 B0B5     		push	{r4, r5, r7, lr}
 12247              		.cfi_def_cfa_offset 16
 12248              		.cfi_offset 4, -16
 12249              		.cfi_offset 5, -12
 12250              		.cfi_offset 7, -8
 12251              		.cfi_offset 14, -4
 12252 0002 ADF5D56D 		sub	sp, sp, #1704
 12253              		.cfi_def_cfa_offset 1720
 12254 0006 00AF     		add	r7, sp, #0
 12255              		.cfi_def_cfa_register 7
 12256 0008 0246     		mov	r2, r0
 12257 000a BB1D     		adds	r3, r7, #6
 12258 000c 1A80     		strh	r2, [r3]	@ movhi
1625:..\src/command_processing.c ****     //Package to be sent variables
1626:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12259              		.loc 1 1626 0
 12260 000e 07F58A73 		add	r3, r7, #276
 12261 0012 0022     		movs	r2, #0
 12262 0014 1A60     		str	r2, [r3]
 12263 0016 0433     		adds	r3, r3, #4
 12264 0018 40F27552 		movw	r2, #1397
 12265 001c 0021     		movs	r1, #0
 12266 001e 1846     		mov	r0, r3
 12267 0020 FFF7FEFF 		bl	memset
1627:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1628:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1629:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1630:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1631:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1632:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1633:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12268              		.loc 1 1633 0
 12269 0024 0723     		movs	r3, #7
 12270 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1634:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12271              		.loc 1 1634 0
 12272 002a 0023     		movs	r3, #0
 12273 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1635:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12274              		.loc 1 1635 0
 12275 0030 0223     		movs	r3, #2
 12276 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1636:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12277              		.loc 1 1636 0
 12278 0036 B7F89A36 		ldrh	r3, [r7, #1690]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 277


 12279 003a 5A1C     		adds	r2, r3, #1
1637:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12280              		.loc 1 1637 0
 12281 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12282 0040 1344     		add	r3, r3, r2
1638:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12283              		.loc 1 1638 0
 12284 0042 0133     		adds	r3, r3, #1
1636:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12285              		.loc 1 1636 0
 12286 0044 9AB2     		uxth	r2, r3
 12287 0046 D24B     		ldr	r3, .L542
 12288 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12289 004a 9BB2     		uxth	r3, r3
 12290 004c 1344     		add	r3, r3, r2
 12291 004e 9BB2     		uxth	r3, r3
 12292 0050 1A46     		mov	r2, r3	@ movhi
 12293 0052 9200     		lsls	r2, r2, #2
 12294 0054 1344     		add	r3, r3, r2
 12295 0056 1A46     		mov	r2, r3	@ movhi
 12296 0058 9100     		lsls	r1, r2, #2
 12297 005a 1A46     		mov	r2, r3	@ movhi
 12298 005c 0B46     		mov	r3, r1	@ movhi
 12299 005e 1344     		add	r3, r3, r2
 12300 0060 5B00     		lsls	r3, r3, #1
 12301 0062 9BB2     		uxth	r3, r3
 12302 0064 FB33     		adds	r3, r3, #251
 12303 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1639:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1640:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1641:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1642:..\src/command_processing.c **** 
1643:..\src/command_processing.c ****     //Auxiliary variables
1644:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1645:..\src/command_processing.c ****     uint16 start_byte = 0;
 12304              		.loc 1 1645 0
 12305 006a 0023     		movs	r3, #0
 12306 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1646:..\src/command_processing.c **** 
1647:..\src/command_processing.c ****     //Parameters menu string definitions
1648:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12307              		.loc 1 1648 0
 12308 0070 07F1F803 		add	r3, r7, #248
 12309 0074 C74A     		ldr	r2, .L542+4
 12310 0076 1C46     		mov	r4, r3
 12311 0078 1546     		mov	r5, r2
 12312 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12313 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12314 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12315 0082 03C4     		stmia	r4!, {r0, r1}
 12316 0084 2280     		strh	r2, [r4]	@ movhi
1649:..\src/command_processing.c ****     char ids_str[11]            = "";
 12317              		.loc 1 1649 0
 12318 0086 07F1EC03 		add	r3, r7, #236
 12319 008a 0022     		movs	r2, #0
 12320 008c 1A60     		str	r2, [r3]
 12321 008e 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 278


 12322 0090 0022     		movs	r2, #0
 12323 0092 1A60     		str	r2, [r3]
 12324 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1650:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12325              		.loc 1 1650 0
 12326 0098 07F1D803 		add	r3, r7, #216
 12327 009c BE4A     		ldr	r2, .L542+8
 12328 009e 1C46     		mov	r4, r3
 12329 00a0 1546     		mov	r5, r2
 12330 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12331 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12332 00a6 2B68     		ldr	r3, [r5]
 12333 00a8 2360     		str	r3, [r4]
1651:..\src/command_processing.c ****     char id_str[16]             = "";
 12334              		.loc 1 1651 0
 12335 00aa 07F1C803 		add	r3, r7, #200
 12336 00ae 0022     		movs	r2, #0
 12337 00b0 1A60     		str	r2, [r3]
 12338 00b2 0433     		adds	r3, r3, #4
 12339 00b4 0022     		movs	r2, #0
 12340 00b6 1A60     		str	r2, [r3]
 12341 00b8 5A60     		str	r2, [r3, #4]
 12342 00ba 9A60     		str	r2, [r3, #8]
1652:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12343              		.loc 1 1652 0
 12344 00bc 07F19C03 		add	r3, r7, #156
 12345 00c0 0022     		movs	r2, #0
 12346 00c2 1A60     		str	r2, [r3]
 12347 00c4 0433     		adds	r3, r3, #4
 12348 00c6 2622     		movs	r2, #38
 12349 00c8 0021     		movs	r1, #0
 12350 00ca 1846     		mov	r0, r3
 12351 00cc FFF7FEFF 		bl	memset
1653:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12352              		.loc 1 1653 0
 12353 00d0 07F18003 		add	r3, r7, #128
 12354 00d4 0022     		movs	r2, #0
 12355 00d6 1A60     		str	r2, [r3]
 12356 00d8 0433     		adds	r3, r3, #4
 12357 00da 0022     		movs	r2, #0
 12358 00dc 1A60     		str	r2, [r3]
 12359 00de 5A60     		str	r2, [r3, #4]
 12360 00e0 9A60     		str	r2, [r3, #8]
 12361 00e2 DA60     		str	r2, [r3, #12]
 12362 00e4 1A61     		str	r2, [r3, #16]
 12363 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1654:..\src/command_processing.c ****     
1655:..\src/command_processing.c ****     //Strings lenghts
1656:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12364              		.loc 1 1656 0
 12365 00e8 07F1C803 		add	r3, r7, #200
 12366 00ec 1846     		mov	r0, r3
 12367 00ee FFF7FEFF 		bl	strlen
 12368 00f2 0346     		mov	r3, r0
 12369 00f4 87F89336 		strb	r3, [r7, #1683]
1657:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12370              		.loc 1 1657 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 279


 12371 00f8 07F1F803 		add	r3, r7, #248
 12372 00fc 1846     		mov	r0, r3
 12373 00fe FFF7FEFF 		bl	strlen
 12374 0102 0346     		mov	r3, r0
 12375 0104 87F89236 		strb	r3, [r7, #1682]
1658:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12376              		.loc 1 1658 0
 12377 0108 07F1EC03 		add	r3, r7, #236
 12378 010c 1846     		mov	r0, r3
 12379 010e FFF7FEFF 		bl	strlen
 12380 0112 0346     		mov	r3, r0
 12381 0114 87F89136 		strb	r3, [r7, #1681]
1659:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12382              		.loc 1 1659 0
 12383 0118 07F1D803 		add	r3, r7, #216
 12384 011c 1846     		mov	r0, r3
 12385 011e FFF7FEFF 		bl	strlen
 12386 0122 0346     		mov	r3, r0
 12387 0124 87F89036 		strb	r3, [r7, #1680]
1660:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12388              		.loc 1 1660 0
 12389 0128 07F19C03 		add	r3, r7, #156
 12390 012c 1846     		mov	r0, r3
 12391 012e FFF7FEFF 		bl	strlen
 12392 0132 0346     		mov	r3, r0
 12393 0134 87F88F36 		strb	r3, [r7, #1679]
1661:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12394              		.loc 1 1661 0
 12395 0138 07F18003 		add	r3, r7, #128
 12396 013c 1846     		mov	r0, r3
 12397 013e FFF7FEFF 		bl	strlen
 12398 0142 0346     		mov	r3, r0
 12399 0144 87F89D36 		strb	r3, [r7, #1693]
1662:..\src/command_processing.c ****     
1663:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12400              		.loc 1 1663 0
 12401 0148 07F10803 		add	r3, r7, #8
 12402 014c 0022     		movs	r2, #0
 12403 014e 1A60     		str	r2, [r3]
 12404 0150 0433     		adds	r3, r3, #4
 12405 0152 7222     		movs	r2, #114
 12406 0154 0021     		movs	r1, #0
 12407 0156 1846     		mov	r0, r3
 12408 0158 FFF7FEFF 		bl	memset
1664:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1665:..\src/command_processing.c ****  
1666:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12409              		.loc 1 1666 0
 12410 015c 07F10800 		add	r0, r7, #8
 12411 0160 6423     		movs	r3, #100
 12412 0162 0A22     		movs	r2, #10
 12413 0164 8D49     		ldr	r1, .L542+12
 12414 0166 FFF7FEFF 		bl	sprintf
1667:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12415              		.loc 1 1667 0
 12416 016a 07F10803 		add	r3, r7, #8
 12417 016e 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 280


 12418 0170 FFF7FEFF 		bl	strlen
 12419 0174 0346     		mov	r3, r0
 12420 0176 87F88E36 		strb	r3, [r7, #1678]
1668:..\src/command_processing.c **** 
1669:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1670:..\src/command_processing.c ****     // update packet_length
1671:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12421              		.loc 1 1671 0
 12422 017a 854B     		ldr	r3, .L542
 12423 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12424 017e 5B08     		lsrs	r3, r3, #1
 12425 0180 DBB2     		uxtb	r3, r3
 12426 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1672:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12427              		.loc 1 1672 0
 12428 0186 824B     		ldr	r3, .L542
 12429 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12430 018a 1A46     		mov	r2, r3
 12431 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12432 0190 5B00     		lsls	r3, r3, #1
 12433 0192 D31A     		subs	r3, r2, r3
 12434 0194 002B     		cmp	r3, #0
 12435 0196 04DD     		ble	.L497
 12436              		.loc 1 1672 0 is_stmt 0 discriminator 1
 12437 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12438 019c 0133     		adds	r3, r3, #1
 12439 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12440              	.L497:
1673:..\src/command_processing.c ****     
1674:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12441              		.loc 1 1674 0 is_stmt 1
 12442 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12443 01a6 5A1C     		adds	r2, r3, #1
1675:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12444              		.loc 1 1675 0
 12445 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12446 01ac 1344     		add	r3, r3, r2
1676:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12447              		.loc 1 1676 0
 12448 01ae 0133     		adds	r3, r3, #1
1674:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12449              		.loc 1 1674 0
 12450 01b0 9AB2     		uxth	r2, r3
 12451 01b2 774B     		ldr	r3, .L542
 12452 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12453 01b6 9BB2     		uxth	r3, r3
 12454 01b8 1344     		add	r3, r3, r2
 12455 01ba 9BB2     		uxth	r3, r3
 12456 01bc 1A46     		mov	r2, r3	@ movhi
 12457 01be 9200     		lsls	r2, r2, #2
 12458 01c0 1344     		add	r3, r3, r2
 12459 01c2 1A46     		mov	r2, r3	@ movhi
 12460 01c4 9100     		lsls	r1, r2, #2
 12461 01c6 1A46     		mov	r2, r3	@ movhi
 12462 01c8 0B46     		mov	r3, r1	@ movhi
 12463 01ca 1344     		add	r3, r3, r2
 12464 01cc 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 281


 12465 01ce 9BB2     		uxth	r3, r3
 12466 01d0 C933     		adds	r3, r3, #201
 12467 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1677:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1678:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1679:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1680:..\src/command_processing.c **** 
1681:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12468              		.loc 1 1681 0
 12469 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12470 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12471 01de 1344     		add	r3, r3, r2
 12472 01e0 9BB2     		uxth	r3, r3
 12473 01e2 0333     		adds	r3, r3, #3
 12474 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1682:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12475              		.loc 1 1682 0
 12476 01e8 07F58A73 		add	r3, r7, #276
 12477 01ec A222     		movs	r2, #162
 12478 01ee 1A70     		strb	r2, [r3]
1683:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12479              		.loc 1 1683 0
 12480 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12481 01f4 DAB2     		uxtb	r2, r3
 12482 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12483 01fa DBB2     		uxtb	r3, r3
 12484 01fc 1344     		add	r3, r3, r2
 12485 01fe DAB2     		uxtb	r2, r3
 12486 0200 634B     		ldr	r3, .L542
 12487 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12488 0204 1344     		add	r3, r3, r2
 12489 0206 DBB2     		uxtb	r3, r3
 12490 0208 0333     		adds	r3, r3, #3
 12491 020a DAB2     		uxtb	r2, r3
 12492 020c 07F58A73 		add	r3, r7, #276
 12493 0210 5A70     		strb	r2, [r3, #1]
1684:..\src/command_processing.c **** 
1685:..\src/command_processing.c ****     switch(index) {
 12494              		.loc 1 1685 0
 12495 0212 BB1D     		adds	r3, r7, #6
 12496 0214 1B88     		ldrh	r3, [r3]
 12497 0216 002B     		cmp	r3, #0
 12498 0218 40F0D084 		bne	.L540
1686:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1687:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1688:..\src/command_processing.c ****             start_byte = 0;
 12499              		.loc 1 1688 0
 12500 021c 0023     		movs	r3, #0
 12501 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1689:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12502              		.loc 1 1689 0
 12503 0222 07F58A73 		add	r3, r7, #276
 12504 0226 0222     		movs	r2, #2
 12505 0228 9A70     		strb	r2, [r3, #2]
1690:..\src/command_processing.c ****             packet_data[3] = 1;
 12506              		.loc 1 1690 0
 12507 022a 07F58A73 		add	r3, r7, #276
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 282


 12508 022e 0122     		movs	r2, #1
 12509 0230 DA70     		strb	r2, [r3, #3]
1691:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12510              		.loc 1 1691 0
 12511 0232 574B     		ldr	r3, .L542
 12512 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12513 0236 07F58A73 		add	r3, r7, #276
 12514 023a 1A71     		strb	r2, [r3, #4]
1692:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12515              		.loc 1 1692 0
 12516 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12517 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12518 0244 15E0     		b	.L500
 12519              	.L501:
1693:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12520              		.loc 1 1693 0 discriminator 3
 12521 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12522 024a 5A1D     		adds	r2, r3, #5
 12523 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12524 0250 D31A     		subs	r3, r2, r3
 12525 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12526 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12527 025a 8A1A     		subs	r2, r1, r2
 12528 025c 07F1F801 		add	r1, r7, #248
 12529 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12530 0262 07F58A72 		add	r2, r7, #276
 12531 0266 D154     		strb	r1, [r2, r3]
1692:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12532              		.loc 1 1692 0 discriminator 3
 12533 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12534 026c 013B     		subs	r3, r3, #1
 12535 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12536              	.L500:
1692:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12537              		.loc 1 1692 0 is_stmt 0 discriminator 1
 12538 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12539 0276 002B     		cmp	r3, #0
 12540 0278 E5D1     		bne	.L501
1694:..\src/command_processing.c ****                 
1695:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1696:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12541              		.loc 1 1696 0 is_stmt 1
 12542 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12543 027e 3233     		adds	r3, r3, #50
 12544 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1697:..\src/command_processing.c ****             i = 0;
 12545              		.loc 1 1697 0
 12546 0284 0023     		movs	r3, #0
 12547 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1698:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12548              		.loc 1 1698 0
 12549 028a 0023     		movs	r3, #0
 12550 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12551 0290 B2E0     		b	.L502
 12552              	.L509:
1699:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12553              		.loc 1 1699 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 283


 12554 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12555 0296 07F1EC03 		add	r3, r7, #236
 12556 029a 4149     		ldr	r1, .L542+16
 12557 029c 1846     		mov	r0, r3
 12558 029e FFF7FEFF 		bl	sprintf
1700:..\src/command_processing.c ****                 h = 4;
 12559              		.loc 1 1700 0
 12560 02a2 0423     		movs	r3, #4
 12561 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1701:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12562              		.loc 1 1701 0
 12563 02a8 07F1EC03 		add	r3, r7, #236
 12564 02ac 1846     		mov	r0, r3
 12565 02ae FFF7FEFF 		bl	strlen
 12566 02b2 0346     		mov	r3, r0
 12567 02b4 87F89136 		strb	r3, [r7, #1681]
1702:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12568              		.loc 1 1702 0
 12569 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12570 02bc 9A1C     		adds	r2, r3, #2
 12571 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12572 02c2 3221     		movs	r1, #50
 12573 02c4 01FB03F3 		mul	r3, r1, r3
 12574 02c8 1344     		add	r3, r3, r2
 12575 02ca 07F58A72 		add	r2, r7, #276
 12576 02ce 0221     		movs	r1, #2
 12577 02d0 D154     		strb	r1, [r2, r3]
1703:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12578              		.loc 1 1703 0
 12579 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12580 02d6 DA1C     		adds	r2, r3, #3
 12581 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12582 02dc 3221     		movs	r1, #50
 12583 02de 01FB03F3 		mul	r3, r1, r3
 12584 02e2 1344     		add	r3, r3, r2
 12585 02e4 07F58A72 		add	r2, r7, #276
 12586 02e8 0321     		movs	r1, #3
 12587 02ea D154     		strb	r1, [r2, r3]
1704:..\src/command_processing.c ****                 
1705:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12588              		.loc 1 1705 0
 12589 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12590 02f0 1A46     		mov	r2, r3	@ movhi
 12591 02f2 5200     		lsls	r2, r2, #1
 12592 02f4 1344     		add	r3, r3, r2
 12593 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12594 02fa 39E0     		b	.L503
 12595              	.L506:
1706:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12596              		.loc 1 1706 0
 12597 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12598 0300 284A     		ldr	r2, .L542+20
 12599 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12600 0304 9BB2     		uxth	r3, r3
 12601 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12602 030a 9A42     		cmp	r2, r3
 12603 030c 17D1     		bne	.L504
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 284


1707:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12604              		.loc 1 1707 0
 12605 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12606 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12607 0316 1A44     		add	r2, r2, r3
 12608 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12609 031c 3221     		movs	r1, #50
 12610 031e 01FB03F3 		mul	r3, r1, r3
 12611 0322 1344     		add	r3, r3, r2
 12612 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12613 0328 1E49     		ldr	r1, .L542+20
 12614 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12615 032c 07F58A72 		add	r2, r7, #276
 12616 0330 D154     		strb	r1, [r2, r3]
1708:..\src/command_processing.c ****                         i++;
 12617              		.loc 1 1708 0
 12618 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12619 0336 0133     		adds	r3, r3, #1
 12620 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12621 033c 0EE0     		b	.L505
 12622              	.L504:
1709:..\src/command_processing.c ****                     } 
1710:..\src/command_processing.c ****                     else {
1711:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12623              		.loc 1 1711 0
 12624 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12625 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12626 0346 1A44     		add	r2, r2, r3
 12627 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12628 034c 3221     		movs	r1, #50
 12629 034e 01FB03F3 		mul	r3, r1, r3
 12630 0352 1344     		add	r3, r3, r2
 12631 0354 07F58A72 		add	r2, r7, #276
 12632 0358 FF21     		movs	r1, #255
 12633 035a D154     		strb	r1, [r2, r3]
 12634              	.L505:
1712:..\src/command_processing.c ****                     }
1713:..\src/command_processing.c ****                     h++;
 12635              		.loc 1 1713 0 discriminator 2
 12636 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12637 0360 0133     		adds	r3, r3, #1
 12638 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1705:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12639              		.loc 1 1705 0 discriminator 2
 12640 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12641 036a 0133     		adds	r3, r3, #1
 12642 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12643              	.L503:
1705:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12644              		.loc 1 1705 0 is_stmt 0 discriminator 1
 12645 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12646 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12647 0378 1346     		mov	r3, r2
 12648 037a 5B00     		lsls	r3, r3, #1
 12649 037c 1344     		add	r3, r3, r2
 12650 037e 0233     		adds	r3, r3, #2
 12651 0380 9942     		cmp	r1, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 285


 12652 0382 BBDD     		ble	.L506
1714:..\src/command_processing.c ****                 }
1715:..\src/command_processing.c **** 
1716:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1717:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12653              		.loc 1 1717 0 is_stmt 1
 12654 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12655 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12656 038c 2BE0     		b	.L507
 12657              	.L543:
 12658 038e 00BF     		.align	2
 12659              	.L542:
 12660 0390 00000000 		.word	N_IMU_Connected
 12661 0394 00110000 		.word	.LC142
 12662 0398 1C110000 		.word	.LC143
 12663 039c 74020000 		.word	.LC129
 12664 03a0 98100000 		.word	.LC144
 12665 03a4 00000000 		.word	IMU_connected
 12666              	.L508:
1718:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12667              		.loc 1 1718 0 discriminator 3
 12668 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12669 03ac DA1D     		adds	r2, r3, #7
 12670 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12671 03b2 3221     		movs	r1, #50
 12672 03b4 01FB03F3 		mul	r3, r1, r3
 12673 03b8 1A44     		add	r2, r2, r3
 12674 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12675 03be 1A44     		add	r2, r2, r3
 12676 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12677 03c4 D31A     		subs	r3, r2, r3
 12678 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12679 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12680 03ce 8A1A     		subs	r2, r1, r2
 12681 03d0 07F1EC01 		add	r1, r7, #236
 12682 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12683 03d6 07F58A72 		add	r2, r7, #276
 12684 03da D154     		strb	r1, [r2, r3]
1717:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12685              		.loc 1 1717 0 discriminator 3
 12686 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12687 03e0 013B     		subs	r3, r3, #1
 12688 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12689              	.L507:
1717:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12690              		.loc 1 1717 0 is_stmt 0 discriminator 1
 12691 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12692 03ea 002B     		cmp	r3, #0
 12693 03ec DCD1     		bne	.L508
1698:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12694              		.loc 1 1698 0 is_stmt 1 discriminator 2
 12695 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12696 03f2 0133     		adds	r3, r3, #1
 12697 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12698              	.L502:
1698:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12699              		.loc 1 1698 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 286


 12700 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12701 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12702 0400 9A42     		cmp	r2, r3
 12703 0402 FFF446AF 		bcc	.L509
1719:..\src/command_processing.c ****             }
1720:..\src/command_processing.c ****             
1721:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1722:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12704              		.loc 1 1722 0 is_stmt 1
 12705 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12706 040a 1A46     		mov	r2, r3	@ movhi
 12707 040c 9200     		lsls	r2, r2, #2
 12708 040e 1344     		add	r3, r3, r2
 12709 0410 1A46     		mov	r2, r3	@ movhi
 12710 0412 9100     		lsls	r1, r2, #2
 12711 0414 1A46     		mov	r2, r3	@ movhi
 12712 0416 0B46     		mov	r3, r1	@ movhi
 12713 0418 1344     		add	r3, r3, r2
 12714 041a 5B00     		lsls	r3, r3, #1
 12715 041c 9AB2     		uxth	r2, r3
 12716 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12717 0422 1344     		add	r3, r3, r2
 12718 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1723:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12719              		.loc 1 1723 0
 12720 0428 0023     		movs	r3, #0
 12721 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12722 042e 1FE1     		b	.L510
 12723              	.L517:
1724:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12724              		.loc 1 1724 0
 12725 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12726 0434 9A1C     		adds	r2, r3, #2
 12727 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12728 043a 3221     		movs	r1, #50
 12729 043c 01FB03F3 		mul	r3, r1, r3
 12730 0440 1344     		add	r3, r3, r2
 12731 0442 07F58A72 		add	r2, r7, #276
 12732 0446 0221     		movs	r1, #2
 12733 0448 D154     		strb	r1, [r2, r3]
1725:..\src/command_processing.c ****                 
1726:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12734              		.loc 1 1726 0
 12735 044a B7F89436 		ldrh	r3, [r7, #1684]
 12736 044e DA1C     		adds	r2, r3, #3
 12737 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12738 0454 3221     		movs	r1, #50
 12739 0456 01FB03F3 		mul	r3, r1, r3
 12740 045a 1344     		add	r3, r3, r2
 12741 045c 07F58A72 		add	r2, r7, #276
 12742 0460 0321     		movs	r1, #3
 12743 0462 D154     		strb	r1, [r2, r3]
1727:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12744              		.loc 1 1727 0
 12745 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12746 0468 1A1D     		adds	r2, r3, #4
 12747 046a B7F8A036 		ldrh	r3, [r7, #1696]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 287


 12748 046e 3221     		movs	r1, #50
 12749 0470 01FB03F3 		mul	r3, r1, r3
 12750 0474 1A44     		add	r2, r2, r3
 12751 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12752 047a 5B00     		lsls	r3, r3, #1
 12753 047c B249     		ldr	r1, .L544
 12754 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12755 0480 1846     		mov	r0, r3
 12756 0482 B249     		ldr	r1, .L544+4
 12757 0484 0346     		mov	r3, r0
 12758 0486 5B00     		lsls	r3, r3, #1
 12759 0488 0344     		add	r3, r3, r0
 12760 048a 0B44     		add	r3, r3, r1
 12761 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12762 048e 07F58A73 		add	r3, r7, #276
 12763 0492 9954     		strb	r1, [r3, r2]
1728:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12764              		.loc 1 1728 0
 12765 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12766 0498 5A1D     		adds	r2, r3, #5
 12767 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12768 049e 3221     		movs	r1, #50
 12769 04a0 01FB03F3 		mul	r3, r1, r3
 12770 04a4 1A44     		add	r2, r2, r3
 12771 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12772 04aa 5B00     		lsls	r3, r3, #1
 12773 04ac A649     		ldr	r1, .L544
 12774 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12775 04b0 1846     		mov	r0, r3
 12776 04b2 A649     		ldr	r1, .L544+4
 12777 04b4 0346     		mov	r3, r0
 12778 04b6 5B00     		lsls	r3, r3, #1
 12779 04b8 0344     		add	r3, r3, r0
 12780 04ba 0B44     		add	r3, r3, r1
 12781 04bc 0133     		adds	r3, r3, #1
 12782 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12783 04c0 07F58A73 		add	r3, r7, #276
 12784 04c4 9954     		strb	r1, [r3, r2]
1729:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12785              		.loc 1 1729 0
 12786 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12787 04ca 9A1D     		adds	r2, r3, #6
 12788 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12789 04d0 3221     		movs	r1, #50
 12790 04d2 01FB03F3 		mul	r3, r1, r3
 12791 04d6 1A44     		add	r2, r2, r3
 12792 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12793 04dc 5B00     		lsls	r3, r3, #1
 12794 04de 9A49     		ldr	r1, .L544
 12795 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12796 04e2 1846     		mov	r0, r3
 12797 04e4 9949     		ldr	r1, .L544+4
 12798 04e6 0346     		mov	r3, r0
 12799 04e8 5B00     		lsls	r3, r3, #1
 12800 04ea 0344     		add	r3, r3, r0
 12801 04ec 0B44     		add	r3, r3, r1
 12802 04ee 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 288


 12803 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12804 04f2 07F58A73 		add	r3, r7, #276
 12805 04f6 9954     		strb	r1, [r3, r2]
1730:..\src/command_processing.c ****                 
1731:..\src/command_processing.c ****                 // check if there is a second value
1732:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12806              		.loc 1 1732 0
 12807 04f8 954B     		ldr	r3, .L544+8
 12808 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12809 04fc 1A46     		mov	r2, r3
 12810 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12811 0502 0133     		adds	r3, r3, #1
 12812 0504 5B00     		lsls	r3, r3, #1
 12813 0506 9A42     		cmp	r2, r3
 12814 0508 28DA     		bge	.L511
1733:..\src/command_processing.c ****                     // there is only one value
1734:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12815              		.loc 1 1734 0
 12816 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12817 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12818 0512 1EE0     		b	.L512
 12819              	.L513:
1735:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12820              		.loc 1 1735 0 discriminator 3
 12821 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12822 0518 DA1D     		adds	r2, r3, #7
 12823 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12824 051e 3221     		movs	r1, #50
 12825 0520 01FB03F3 		mul	r3, r1, r3
 12826 0524 1A44     		add	r2, r2, r3
 12827 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12828 052a 1A44     		add	r2, r2, r3
 12829 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12830 0530 D31A     		subs	r3, r2, r3
 12831 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12832 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12833 053a 8A1A     		subs	r2, r1, r2
 12834 053c 07F1D801 		add	r1, r7, #216
 12835 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12836 0542 07F58A72 		add	r2, r7, #276
 12837 0546 D154     		strb	r1, [r2, r3]
1734:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12838              		.loc 1 1734 0 discriminator 3
 12839 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12840 054c 013B     		subs	r3, r3, #1
 12841 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12842              	.L512:
1734:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12843              		.loc 1 1734 0 is_stmt 0 discriminator 1
 12844 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12845 0556 002B     		cmp	r3, #0
 12846 0558 DCD1     		bne	.L513
 12847 055a 84E0     		b	.L514
 12848              	.L511:
1736:..\src/command_processing.c ****                 }
1737:..\src/command_processing.c ****                 else {
1738:..\src/command_processing.c ****                     // fill the second value
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 289


1739:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12849              		.loc 1 1739 0 is_stmt 1
 12850 055c B7F89436 		ldrh	r3, [r7, #1684]
 12851 0560 DA1C     		adds	r2, r3, #3
 12852 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12853 0566 3221     		movs	r1, #50
 12854 0568 01FB03F3 		mul	r3, r1, r3
 12855 056c 1344     		add	r3, r3, r2
 12856 056e 07F58A72 		add	r2, r7, #276
 12857 0572 0621     		movs	r1, #6
 12858 0574 D154     		strb	r1, [r2, r3]
1740:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12859              		.loc 1 1740 0
 12860 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12861 057a DA1D     		adds	r2, r3, #7
 12862 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12863 0580 3221     		movs	r1, #50
 12864 0582 01FB03F3 		mul	r3, r1, r3
 12865 0586 1A44     		add	r2, r2, r3
 12866 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12867 058c 5B00     		lsls	r3, r3, #1
 12868 058e 0133     		adds	r3, r3, #1
 12869 0590 6D49     		ldr	r1, .L544
 12870 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12871 0594 1846     		mov	r0, r3
 12872 0596 6D49     		ldr	r1, .L544+4
 12873 0598 0346     		mov	r3, r0
 12874 059a 5B00     		lsls	r3, r3, #1
 12875 059c 0344     		add	r3, r3, r0
 12876 059e 0B44     		add	r3, r3, r1
 12877 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12878 05a2 07F58A73 		add	r3, r7, #276
 12879 05a6 9954     		strb	r1, [r3, r2]
1741:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12880              		.loc 1 1741 0
 12881 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12882 05ac 03F10802 		add	r2, r3, #8
 12883 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12884 05b4 3221     		movs	r1, #50
 12885 05b6 01FB03F3 		mul	r3, r1, r3
 12886 05ba 1A44     		add	r2, r2, r3
 12887 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12888 05c0 5B00     		lsls	r3, r3, #1
 12889 05c2 0133     		adds	r3, r3, #1
 12890 05c4 6049     		ldr	r1, .L544
 12891 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12892 05c8 1846     		mov	r0, r3
 12893 05ca 6049     		ldr	r1, .L544+4
 12894 05cc 0346     		mov	r3, r0
 12895 05ce 5B00     		lsls	r3, r3, #1
 12896 05d0 0344     		add	r3, r3, r0
 12897 05d2 0B44     		add	r3, r3, r1
 12898 05d4 0133     		adds	r3, r3, #1
 12899 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12900 05d8 07F58A73 		add	r3, r7, #276
 12901 05dc 9954     		strb	r1, [r3, r2]
1742:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 290


 12902              		.loc 1 1742 0
 12903 05de B7F89436 		ldrh	r3, [r7, #1684]
 12904 05e2 03F10902 		add	r2, r3, #9
 12905 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12906 05ea 3221     		movs	r1, #50
 12907 05ec 01FB03F3 		mul	r3, r1, r3
 12908 05f0 1A44     		add	r2, r2, r3
 12909 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12910 05f6 5B00     		lsls	r3, r3, #1
 12911 05f8 0133     		adds	r3, r3, #1
 12912 05fa 5349     		ldr	r1, .L544
 12913 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12914 05fe 1846     		mov	r0, r3
 12915 0600 5249     		ldr	r1, .L544+4
 12916 0602 0346     		mov	r3, r0
 12917 0604 5B00     		lsls	r3, r3, #1
 12918 0606 0344     		add	r3, r3, r0
 12919 0608 0B44     		add	r3, r3, r1
 12920 060a 0233     		adds	r3, r3, #2
 12921 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12922 060e 07F58A73 		add	r3, r7, #276
 12923 0612 9954     		strb	r1, [r3, r2]
1743:..\src/command_processing.c ****                 
1744:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12924              		.loc 1 1744 0
 12925 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12926 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12927 061c 1FE0     		b	.L515
 12928              	.L516:
1745:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12929              		.loc 1 1745 0 discriminator 3
 12930 061e B7F89436 		ldrh	r3, [r7, #1684]
 12931 0622 03F10A02 		add	r2, r3, #10
 12932 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12933 062a 3221     		movs	r1, #50
 12934 062c 01FB03F3 		mul	r3, r1, r3
 12935 0630 1A44     		add	r2, r2, r3
 12936 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12937 0636 1A44     		add	r2, r2, r3
 12938 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12939 063c D31A     		subs	r3, r2, r3
 12940 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12941 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12942 0646 8A1A     		subs	r2, r1, r2
 12943 0648 07F1D801 		add	r1, r7, #216
 12944 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12945 064e 07F58A72 		add	r2, r7, #276
 12946 0652 D154     		strb	r1, [r2, r3]
1744:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12947              		.loc 1 1744 0 discriminator 3
 12948 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12949 0658 013B     		subs	r3, r3, #1
 12950 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12951              	.L515:
1744:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12952              		.loc 1 1744 0 is_stmt 0 discriminator 1
 12953 065e B7F8A236 		ldrh	r3, [r7, #1698]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 291


 12954 0662 002B     		cmp	r3, #0
 12955 0664 DBD1     		bne	.L516
 12956              	.L514:
1723:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12957              		.loc 1 1723 0 is_stmt 1 discriminator 2
 12958 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12959 066a 0133     		adds	r3, r3, #1
 12960 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12961              	.L510:
1723:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12962              		.loc 1 1723 0 is_stmt 0 discriminator 1
 12963 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12964 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12965 0678 9A42     		cmp	r2, r3
 12966 067a FFF4D9AE 		bcc	.L517
1746:..\src/command_processing.c ****                 }
1747:..\src/command_processing.c ****             }
1748:..\src/command_processing.c ****             
1749:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1750:..\src/command_processing.c ****             
1751:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12967              		.loc 1 1751 0 is_stmt 1
 12968 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12969 0682 1A46     		mov	r2, r3	@ movhi
 12970 0684 9200     		lsls	r2, r2, #2
 12971 0686 1344     		add	r3, r3, r2
 12972 0688 1A46     		mov	r2, r3	@ movhi
 12973 068a 9100     		lsls	r1, r2, #2
 12974 068c 1A46     		mov	r2, r3	@ movhi
 12975 068e 0B46     		mov	r3, r1	@ movhi
 12976 0690 1344     		add	r3, r3, r2
 12977 0692 5B00     		lsls	r3, r3, #1
 12978 0694 9AB2     		uxth	r2, r3
 12979 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12980 069a 1344     		add	r3, r3, r2
 12981 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1752:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12982              		.loc 1 1752 0
 12983 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12984 06a4 5A1E     		subs	r2, r3, #1
 12985 06a6 07F1C803 		add	r3, r7, #200
 12986 06aa 2A49     		ldr	r1, .L544+12
 12987 06ac 1846     		mov	r0, r3
 12988 06ae FFF7FEFF 		bl	sprintf
1753:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12989              		.loc 1 1753 0
 12990 06b2 07F1C803 		add	r3, r7, #200
 12991 06b6 1846     		mov	r0, r3
 12992 06b8 FFF7FEFF 		bl	strlen
 12993 06bc 0346     		mov	r3, r0
 12994 06be 87F89336 		strb	r3, [r7, #1683]
1754:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12995              		.loc 1 1754 0
 12996 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12997 06c6 0233     		adds	r3, r3, #2
 12998 06c8 07F58A72 		add	r2, r7, #276
 12999 06cc 0221     		movs	r1, #2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 292


 13000 06ce D154     		strb	r1, [r2, r3]
1755:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13001              		.loc 1 1755 0
 13002 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 13003 06d4 0333     		adds	r3, r3, #3
 13004 06d6 07F58A72 		add	r2, r7, #276
 13005 06da 0121     		movs	r1, #1
 13006 06dc D154     		strb	r1, [r2, r3]
1756:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 13007              		.loc 1 1756 0
 13008 06de B7F89436 		ldrh	r3, [r7, #1684]
 13009 06e2 0433     		adds	r3, r3, #4
 13010 06e4 1C4A     		ldr	r2, .L544+16
 13011 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 13012 06ea 07F58A72 		add	r2, r7, #276
 13013 06ee D154     		strb	r1, [r2, r3]
1757:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13014              		.loc 1 1757 0
 13015 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13016 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13017 06f8 18E0     		b	.L518
 13018              	.L519:
1758:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 13019              		.loc 1 1758 0 discriminator 3
 13020 06fa B7F89436 		ldrh	r3, [r7, #1684]
 13021 06fe 5A1D     		adds	r2, r3, #5
 13022 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13023 0704 1A44     		add	r2, r2, r3
 13024 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 13025 070a D31A     		subs	r3, r2, r3
 13026 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 13027 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 13028 0714 8A1A     		subs	r2, r1, r2
 13029 0716 07F1C801 		add	r1, r7, #200
 13030 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13031 071c 07F58A72 		add	r2, r7, #276
 13032 0720 D154     		strb	r1, [r2, r3]
1757:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13033              		.loc 1 1757 0 discriminator 3
 13034 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 13035 0726 013B     		subs	r3, r3, #1
 13036 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13037              	.L518:
1757:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13038              		.loc 1 1757 0 is_stmt 0 discriminator 1
 13039 072c B7F8A436 		ldrh	r3, [r7, #1700]
 13040 0730 002B     		cmp	r3, #0
 13041 0732 E2D1     		bne	.L519
1759:..\src/command_processing.c ****                 
1760:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1761:..\src/command_processing.c ****             
1762:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13042              		.loc 1 1762 0 is_stmt 1
 13043 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13044 0738 3233     		adds	r3, r3, #50
 13045 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1763:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 293


 13046              		.loc 1 1763 0
 13047 073e 0023     		movs	r3, #0
 13048 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13049 0744 38E1     		b	.L520
 13050              	.L545:
 13051 0746 00BF     		.align	2
 13052              	.L544:
 13053 0748 00000000 		.word	IMU_connected
 13054 074c 00000000 		.word	MagCal
 13055 0750 00000000 		.word	N_IMU_Connected
 13056 0754 A4100000 		.word	.LC145
 13057 0758 00000000 		.word	c_mem
 13058              	.L523:
1764:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13059              		.loc 1 1764 0
 13060 075c B7F89826 		ldrh	r2, [r7, #1688]
 13061 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 13062 0764 D118     		adds	r1, r2, r3
 13063 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 13064 076a D54A     		ldr	r2, .L546
 13065 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13066 076e 07F19C00 		add	r0, r7, #156
 13067 0772 0A46     		mov	r2, r1
 13068 0774 D349     		ldr	r1, .L546+4
 13069 0776 FFF7FEFF 		bl	sprintf
1765:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 13070              		.loc 1 1765 0
 13071 077a 07F19C03 		add	r3, r7, #156
 13072 077e 1846     		mov	r0, r3
 13073 0780 FFF7FEFF 		bl	strlen
 13074 0784 0346     		mov	r3, r0
 13075 0786 87F88F36 		strb	r3, [r7, #1679]
1766:..\src/command_processing.c ****             
1767:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 13076              		.loc 1 1767 0
 13077 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13078 078e 1A46     		mov	r2, r3	@ movhi
 13079 0790 9200     		lsls	r2, r2, #2
 13080 0792 1344     		add	r3, r3, r2
 13081 0794 1A46     		mov	r2, r3	@ movhi
 13082 0796 9100     		lsls	r1, r2, #2
 13083 0798 1A46     		mov	r2, r3	@ movhi
 13084 079a 0B46     		mov	r3, r1	@ movhi
 13085 079c 1344     		add	r3, r3, r2
 13086 079e 5B00     		lsls	r3, r3, #1
 13087 07a0 9AB2     		uxth	r2, r3
 13088 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13089 07a6 1344     		add	r3, r3, r2
 13090 07a8 9BB2     		uxth	r3, r3
 13091 07aa 0233     		adds	r3, r3, #2
 13092 07ac 9BB2     		uxth	r3, r3
 13093 07ae 1A46     		mov	r2, r3
 13094 07b0 07F58A73 		add	r3, r7, #276
 13095 07b4 0221     		movs	r1, #2
 13096 07b6 9954     		strb	r1, [r3, r2]
1768:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 13097              		.loc 1 1768 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 294


 13098 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13099 07bc 1A46     		mov	r2, r3	@ movhi
 13100 07be 9200     		lsls	r2, r2, #2
 13101 07c0 1344     		add	r3, r3, r2
 13102 07c2 1A46     		mov	r2, r3	@ movhi
 13103 07c4 9100     		lsls	r1, r2, #2
 13104 07c6 1A46     		mov	r2, r3	@ movhi
 13105 07c8 0B46     		mov	r3, r1	@ movhi
 13106 07ca 1344     		add	r3, r3, r2
 13107 07cc 5B00     		lsls	r3, r3, #1
 13108 07ce 9AB2     		uxth	r2, r3
 13109 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13110 07d4 1344     		add	r3, r3, r2
 13111 07d6 9BB2     		uxth	r3, r3
 13112 07d8 0333     		adds	r3, r3, #3
 13113 07da 9BB2     		uxth	r3, r3
 13114 07dc 1A46     		mov	r2, r3
 13115 07de 07F58A73 		add	r3, r7, #276
 13116 07e2 0521     		movs	r1, #5
 13117 07e4 9954     		strb	r1, [r3, r2]
1769:..\src/command_processing.c ****                 
1770:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13118              		.loc 1 1770 0
 13119 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13120 07ea 1A46     		mov	r2, r3	@ movhi
 13121 07ec 9200     		lsls	r2, r2, #2
 13122 07ee 1344     		add	r3, r3, r2
 13123 07f0 1A46     		mov	r2, r3	@ movhi
 13124 07f2 9100     		lsls	r1, r2, #2
 13125 07f4 1A46     		mov	r2, r3	@ movhi
 13126 07f6 0B46     		mov	r3, r1	@ movhi
 13127 07f8 1344     		add	r3, r3, r2
 13128 07fa 5B00     		lsls	r3, r3, #1
 13129 07fc 9AB2     		uxth	r2, r3
 13130 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13131 0802 1344     		add	r3, r3, r2
 13132 0804 9BB2     		uxth	r3, r3
 13133 0806 0433     		adds	r3, r3, #4
 13134 0808 9BB2     		uxth	r3, r3
 13135 080a 1846     		mov	r0, r3
 13136 080c B7F8A436 		ldrh	r3, [r7, #1700]
 13137 0810 AB4A     		ldr	r2, .L546
 13138 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13139 0814 1946     		mov	r1, r3
 13140 0816 AC4A     		ldr	r2, .L546+8
 13141 0818 0B46     		mov	r3, r1
 13142 081a 9B00     		lsls	r3, r3, #2
 13143 081c 0B44     		add	r3, r3, r1
 13144 081e 1344     		add	r3, r3, r2
 13145 0820 03F20223 		addw	r3, r3, #514
 13146 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13147 0826 07F58A73 		add	r3, r7, #276
 13148 082a 1A54     		strb	r2, [r3, r0]
1771:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13149              		.loc 1 1771 0
 13150 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13151 0830 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 295


 13152 0832 9200     		lsls	r2, r2, #2
 13153 0834 1344     		add	r3, r3, r2
 13154 0836 1A46     		mov	r2, r3	@ movhi
 13155 0838 9100     		lsls	r1, r2, #2
 13156 083a 1A46     		mov	r2, r3	@ movhi
 13157 083c 0B46     		mov	r3, r1	@ movhi
 13158 083e 1344     		add	r3, r3, r2
 13159 0840 5B00     		lsls	r3, r3, #1
 13160 0842 9AB2     		uxth	r2, r3
 13161 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13162 0848 1344     		add	r3, r3, r2
 13163 084a 9BB2     		uxth	r3, r3
 13164 084c 0533     		adds	r3, r3, #5
 13165 084e 9BB2     		uxth	r3, r3
 13166 0850 1846     		mov	r0, r3
 13167 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13168 0856 9A4A     		ldr	r2, .L546
 13169 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13170 085a 1946     		mov	r1, r3
 13171 085c 9A4A     		ldr	r2, .L546+8
 13172 085e 0B46     		mov	r3, r1
 13173 0860 9B00     		lsls	r3, r3, #2
 13174 0862 0B44     		add	r3, r3, r1
 13175 0864 1344     		add	r3, r3, r2
 13176 0866 03F20323 		addw	r3, r3, #515
 13177 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13178 086c 07F58A73 		add	r3, r7, #276
 13179 0870 1A54     		strb	r2, [r3, r0]
1772:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13180              		.loc 1 1772 0
 13181 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13182 0876 1A46     		mov	r2, r3	@ movhi
 13183 0878 9200     		lsls	r2, r2, #2
 13184 087a 1344     		add	r3, r3, r2
 13185 087c 1A46     		mov	r2, r3	@ movhi
 13186 087e 9100     		lsls	r1, r2, #2
 13187 0880 1A46     		mov	r2, r3	@ movhi
 13188 0882 0B46     		mov	r3, r1	@ movhi
 13189 0884 1344     		add	r3, r3, r2
 13190 0886 5B00     		lsls	r3, r3, #1
 13191 0888 9AB2     		uxth	r2, r3
 13192 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13193 088e 1344     		add	r3, r3, r2
 13194 0890 9BB2     		uxth	r3, r3
 13195 0892 0633     		adds	r3, r3, #6
 13196 0894 9BB2     		uxth	r3, r3
 13197 0896 1846     		mov	r0, r3
 13198 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 13199 089c 884A     		ldr	r2, .L546
 13200 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13201 08a0 1946     		mov	r1, r3
 13202 08a2 894A     		ldr	r2, .L546+8
 13203 08a4 0B46     		mov	r3, r1
 13204 08a6 9B00     		lsls	r3, r3, #2
 13205 08a8 0B44     		add	r3, r3, r1
 13206 08aa 1344     		add	r3, r3, r2
 13207 08ac 03F50173 		add	r3, r3, #516
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 296


 13208 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13209 08b2 07F58A73 		add	r3, r7, #276
 13210 08b6 1A54     		strb	r2, [r3, r0]
1773:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13211              		.loc 1 1773 0
 13212 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13213 08bc 1A46     		mov	r2, r3	@ movhi
 13214 08be 9200     		lsls	r2, r2, #2
 13215 08c0 1344     		add	r3, r3, r2
 13216 08c2 1A46     		mov	r2, r3	@ movhi
 13217 08c4 9100     		lsls	r1, r2, #2
 13218 08c6 1A46     		mov	r2, r3	@ movhi
 13219 08c8 0B46     		mov	r3, r1	@ movhi
 13220 08ca 1344     		add	r3, r3, r2
 13221 08cc 5B00     		lsls	r3, r3, #1
 13222 08ce 9AB2     		uxth	r2, r3
 13223 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13224 08d4 1344     		add	r3, r3, r2
 13225 08d6 9BB2     		uxth	r3, r3
 13226 08d8 0733     		adds	r3, r3, #7
 13227 08da 9BB2     		uxth	r3, r3
 13228 08dc 1846     		mov	r0, r3
 13229 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13230 08e2 774A     		ldr	r2, .L546
 13231 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13232 08e6 1946     		mov	r1, r3
 13233 08e8 774A     		ldr	r2, .L546+8
 13234 08ea 0B46     		mov	r3, r1
 13235 08ec 9B00     		lsls	r3, r3, #2
 13236 08ee 0B44     		add	r3, r3, r1
 13237 08f0 1344     		add	r3, r3, r2
 13238 08f2 03F20523 		addw	r3, r3, #517
 13239 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13240 08f8 07F58A73 		add	r3, r7, #276
 13241 08fc 1A54     		strb	r2, [r3, r0]
1774:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13242              		.loc 1 1774 0
 13243 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13244 0902 1A46     		mov	r2, r3	@ movhi
 13245 0904 9200     		lsls	r2, r2, #2
 13246 0906 1344     		add	r3, r3, r2
 13247 0908 1A46     		mov	r2, r3	@ movhi
 13248 090a 9100     		lsls	r1, r2, #2
 13249 090c 1A46     		mov	r2, r3	@ movhi
 13250 090e 0B46     		mov	r3, r1	@ movhi
 13251 0910 1344     		add	r3, r3, r2
 13252 0912 5B00     		lsls	r3, r3, #1
 13253 0914 9AB2     		uxth	r2, r3
 13254 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13255 091a 1344     		add	r3, r3, r2
 13256 091c 9BB2     		uxth	r3, r3
 13257 091e 0833     		adds	r3, r3, #8
 13258 0920 9BB2     		uxth	r3, r3
 13259 0922 1846     		mov	r0, r3
 13260 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13261 0928 654A     		ldr	r2, .L546
 13262 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 297


 13263 092c 1946     		mov	r1, r3
 13264 092e 664A     		ldr	r2, .L546+8
 13265 0930 0B46     		mov	r3, r1
 13266 0932 9B00     		lsls	r3, r3, #2
 13267 0934 0B44     		add	r3, r3, r1
 13268 0936 1344     		add	r3, r3, r2
 13269 0938 03F20623 		addw	r3, r3, #518
 13270 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13271 093e 07F58A73 		add	r3, r7, #276
 13272 0942 1A54     		strb	r2, [r3, r0]
1775:..\src/command_processing.c **** 
1776:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13273              		.loc 1 1776 0
 13274 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13275 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13276 094c 2BE0     		b	.L521
 13277              	.L522:
1777:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13278              		.loc 1 1777 0 discriminator 3
 13279 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13280 0952 1A46     		mov	r2, r3	@ movhi
 13281 0954 9200     		lsls	r2, r2, #2
 13282 0956 1344     		add	r3, r3, r2
 13283 0958 1A46     		mov	r2, r3	@ movhi
 13284 095a 9100     		lsls	r1, r2, #2
 13285 095c 1A46     		mov	r2, r3	@ movhi
 13286 095e 0B46     		mov	r3, r1	@ movhi
 13287 0960 1344     		add	r3, r3, r2
 13288 0962 5B00     		lsls	r3, r3, #1
 13289 0964 9AB2     		uxth	r2, r3
 13290 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13291 096a 1344     		add	r3, r3, r2
 13292 096c 9AB2     		uxth	r2, r3
 13293 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13294 0972 9BB2     		uxth	r3, r3
 13295 0974 1344     		add	r3, r3, r2
 13296 0976 9AB2     		uxth	r2, r3
 13297 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13298 097c D31A     		subs	r3, r2, r3
 13299 097e 9BB2     		uxth	r3, r3
 13300 0980 0933     		adds	r3, r3, #9
 13301 0982 9BB2     		uxth	r3, r3
 13302 0984 1946     		mov	r1, r3
 13303 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13304 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13305 098e D31A     		subs	r3, r2, r3
 13306 0990 07F19C02 		add	r2, r7, #156
 13307 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13308 0996 07F58A73 		add	r3, r7, #276
 13309 099a 5A54     		strb	r2, [r3, r1]
1776:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13310              		.loc 1 1776 0 discriminator 3
 13311 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13312 09a0 013B     		subs	r3, r3, #1
 13313 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13314              	.L521:
1776:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 298


 13315              		.loc 1 1776 0 is_stmt 0 discriminator 1
 13316 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13317 09aa 002B     		cmp	r3, #0
 13318 09ac CFD1     		bne	.L522
1763:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13319              		.loc 1 1763 0 is_stmt 1 discriminator 2
 13320 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13321 09b2 0133     		adds	r3, r3, #1
 13322 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13323              	.L520:
1763:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13324              		.loc 1 1763 0 is_stmt 0 discriminator 1
 13325 09b8 444B     		ldr	r3, .L546+12
 13326 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13327 09bc 9BB2     		uxth	r3, r3
 13328 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13329 09c2 9A42     		cmp	r2, r3
 13330 09c4 FFF4CAAE 		bcc	.L523
1778:..\src/command_processing.c ****             }  
1779:..\src/command_processing.c ****           
1780:..\src/command_processing.c **** 
1781:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1782:..\src/command_processing.c ****             
1783:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13331              		.loc 1 1783 0 is_stmt 1
 13332 09c8 404B     		ldr	r3, .L546+12
 13333 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13334 09cc 9BB2     		uxth	r3, r3
 13335 09ce 1A46     		mov	r2, r3	@ movhi
 13336 09d0 9200     		lsls	r2, r2, #2
 13337 09d2 1344     		add	r3, r3, r2
 13338 09d4 1A46     		mov	r2, r3	@ movhi
 13339 09d6 9100     		lsls	r1, r2, #2
 13340 09d8 1A46     		mov	r2, r3	@ movhi
 13341 09da 0B46     		mov	r3, r1	@ movhi
 13342 09dc 1344     		add	r3, r3, r2
 13343 09de 5B00     		lsls	r3, r3, #1
 13344 09e0 9AB2     		uxth	r2, r3
 13345 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13346 09e6 1344     		add	r3, r3, r2
 13347 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1784:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13348              		.loc 1 1784 0
 13349 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13350 09f0 364A     		ldr	r2, .L546+12
 13351 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13352 09f4 1A44     		add	r2, r2, r3
 13353 09f6 07F18003 		add	r3, r7, #128
 13354 09fa 3549     		ldr	r1, .L546+16
 13355 09fc 1846     		mov	r0, r3
 13356 09fe FFF7FEFF 		bl	sprintf
1785:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13357              		.loc 1 1785 0
 13358 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13359 0a06 0233     		adds	r3, r3, #2
 13360 0a08 07F58A72 		add	r2, r7, #276
 13361 0a0c 0021     		movs	r1, #0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 299


 13362 0a0e D154     		strb	r1, [r2, r3]
1786:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13363              		.loc 1 1786 0
 13364 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13365 0a14 0333     		adds	r3, r3, #3
 13366 0a16 07F58A72 		add	r2, r7, #276
 13367 0a1a 0121     		movs	r1, #1
 13368 0a1c D154     		strb	r1, [r2, r3]
1787:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13369              		.loc 1 1787 0
 13370 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13371 0a22 0433     		adds	r3, r3, #4
 13372 0a24 284A     		ldr	r2, .L546+8
 13373 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13374 0a2a 07F58A72 		add	r2, r7, #276
 13375 0a2e D154     		strb	r1, [r2, r3]
1788:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13376              		.loc 1 1788 0
 13377 0a30 254B     		ldr	r3, .L546+8
 13378 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13379 0a36 012B     		cmp	r3, #1
 13380 0a38 17D0     		beq	.L525
 13381 0a3a 022B     		cmp	r3, #2
 13382 0a3c 28D0     		beq	.L526
 13383 0a3e 002B     		cmp	r3, #0
 13384 0a40 00D0     		beq	.L527
1789:..\src/command_processing.c ****                 case 0: 
1790:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1791:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1792:..\src/command_processing.c ****                     break;
1793:..\src/command_processing.c ****                 case 1: 
1794:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1795:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1796:..\src/command_processing.c ****                     break;
1797:..\src/command_processing.c ****                 case 2: 
1798:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1799:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1800:..\src/command_processing.c ****                     break;
1801:..\src/command_processing.c ****                 default:
1802:..\src/command_processing.c ****                     break;
 13385              		.loc 1 1802 0
 13386 0a42 38E0     		b	.L528
 13387              	.L527:
1790:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13388              		.loc 1 1790 0
 13389 0a44 07F18003 		add	r3, r7, #128
 13390 0a48 1846     		mov	r0, r3
 13391 0a4a FFF7FEFF 		bl	strlen
 13392 0a4e 0346     		mov	r3, r0
 13393 0a50 1A46     		mov	r2, r3
 13394 0a52 07F18003 		add	r3, r7, #128
 13395 0a56 1344     		add	r3, r3, r2
 13396 0a58 1E4A     		ldr	r2, .L546+20
 13397 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13398 0a5c 1860     		str	r0, [r3]	@ unaligned
 13399 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13400 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 300


1791:..\src/command_processing.c ****                     break;
 13401              		.loc 1 1791 0
 13402 0a62 1A23     		movs	r3, #26
 13403 0a64 87F89D36 		strb	r3, [r7, #1693]
1792:..\src/command_processing.c ****                 case 1: 
 13404              		.loc 1 1792 0
 13405 0a68 25E0     		b	.L528
 13406              	.L525:
1794:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13407              		.loc 1 1794 0
 13408 0a6a 07F18003 		add	r3, r7, #128
 13409 0a6e 1846     		mov	r0, r3
 13410 0a70 FFF7FEFF 		bl	strlen
 13411 0a74 0346     		mov	r3, r0
 13412 0a76 1A46     		mov	r2, r3
 13413 0a78 07F18003 		add	r3, r7, #128
 13414 0a7c 1344     		add	r3, r3, r2
 13415 0a7e 164A     		ldr	r2, .L546+24
 13416 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13417 0a82 1860     		str	r0, [r3]	@ unaligned
 13418 0a84 1279     		ldrb	r2, [r2, #4]
 13419 0a86 1A71     		strb	r2, [r3, #4]
1795:..\src/command_processing.c ****                     break;
 13420              		.loc 1 1795 0
 13421 0a88 1923     		movs	r3, #25
 13422 0a8a 87F89D36 		strb	r3, [r7, #1693]
1796:..\src/command_processing.c ****                 case 2: 
 13423              		.loc 1 1796 0
 13424 0a8e 12E0     		b	.L528
 13425              	.L526:
1798:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13426              		.loc 1 1798 0
 13427 0a90 07F18003 		add	r3, r7, #128
 13428 0a94 1846     		mov	r0, r3
 13429 0a96 FFF7FEFF 		bl	strlen
 13430 0a9a 0346     		mov	r3, r0
 13431 0a9c 1A46     		mov	r2, r3
 13432 0a9e 07F18003 		add	r3, r7, #128
 13433 0aa2 1344     		add	r3, r3, r2
 13434 0aa4 0D4A     		ldr	r2, .L546+28
 13435 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13436 0aa8 1860     		str	r0, [r3]	@ unaligned
 13437 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13438 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1799:..\src/command_processing.c ****                     break;
 13439              		.loc 1 1799 0
 13440 0aae 1A23     		movs	r3, #26
 13441 0ab0 87F89D36 		strb	r3, [r7, #1693]
1800:..\src/command_processing.c ****                 default:
 13442              		.loc 1 1800 0
 13443 0ab4 00BF     		nop
 13444              	.L528:
1803:..\src/command_processing.c ****             }            
1804:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13445              		.loc 1 1804 0
 13446 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13447 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 301


 13448 0abe 28E0     		b	.L529
 13449              	.L547:
 13450              		.align	2
 13451              	.L546:
 13452 0ac0 00000000 		.word	IMU_connected
 13453 0ac4 B4100000 		.word	.LC146
 13454 0ac8 00000000 		.word	c_mem
 13455 0acc 00000000 		.word	N_IMU_Connected
 13456 0ad0 D0100000 		.word	.LC147
 13457 0ad4 E8100000 		.word	.LC148
 13458 0ad8 F0100000 		.word	.LC149
 13459 0adc F8100000 		.word	.LC150
 13460              	.L530:
1805:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13461              		.loc 1 1805 0 discriminator 3
 13462 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13463 0ae4 5A1D     		adds	r2, r3, #5
 13464 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13465 0aea 1A44     		add	r2, r2, r3
 13466 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13467 0af0 D31A     		subs	r3, r2, r3
 13468 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13469 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13470 0afa 8A1A     		subs	r2, r1, r2
 13471 0afc 07F18001 		add	r1, r7, #128
 13472 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13473 0b02 07F58A72 		add	r2, r7, #276
 13474 0b06 D154     		strb	r1, [r2, r3]
1804:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13475              		.loc 1 1804 0 discriminator 3
 13476 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13477 0b0c 013B     		subs	r3, r3, #1
 13478 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13479              	.L529:
1804:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13480              		.loc 1 1804 0 is_stmt 0 discriminator 1
 13481 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13482 0b16 002B     		cmp	r3, #0
 13483 0b18 E2D1     		bne	.L530
1806:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1807:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13484              		.loc 1 1807 0 is_stmt 1
 13485 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13486 0b1e 5A1D     		adds	r2, r3, #5
 13487 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13488 0b24 1344     		add	r3, r3, r2
 13489 0b26 07F58A72 		add	r2, r7, #276
 13490 0b2a 0121     		movs	r1, #1
 13491 0b2c D154     		strb	r1, [r2, r3]
1808:..\src/command_processing.c ****                   
1809:..\src/command_processing.c ****             
1810:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1811:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13492              		.loc 1 1811 0
 13493 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13494 0b32 3233     		adds	r3, r3, #50
 13495 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 302


1812:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13496              		.loc 1 1812 0
 13497 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13498 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13499 0b40 1AE0     		b	.L531
 13500              	.L532:
1813:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13501              		.loc 1 1813 0 discriminator 3
 13502 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13503 0b46 0233     		adds	r3, r3, #2
 13504 0b48 9BB2     		uxth	r3, r3
 13505 0b4a 1A46     		mov	r2, r3
 13506 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13507 0b50 1A44     		add	r2, r2, r3
 13508 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13509 0b56 D31A     		subs	r3, r2, r3
 13510 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13511 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13512 0b60 8A1A     		subs	r2, r1, r2
 13513 0b62 07F10801 		add	r1, r7, #8
 13514 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13515 0b68 07F58A72 		add	r2, r7, #276
 13516 0b6c D154     		strb	r1, [r2, r3]
1812:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13517              		.loc 1 1812 0 discriminator 3
 13518 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13519 0b72 013B     		subs	r3, r3, #1
 13520 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13521              	.L531:
1812:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13522              		.loc 1 1812 0 is_stmt 0 discriminator 1
 13523 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13524 0b7c 002B     		cmp	r3, #0
 13525 0b7e E0D1     		bne	.L532
1814:..\src/command_processing.c **** 
1815:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13526              		.loc 1 1815 0 is_stmt 1
 13527 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13528 0b84 5C1E     		subs	r4, r3, #1
 13529 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13530 0b8a DBB2     		uxtb	r3, r3
 13531 0b8c 013B     		subs	r3, r3, #1
 13532 0b8e DAB2     		uxtb	r2, r3
 13533 0b90 07F58A73 		add	r3, r7, #276
 13534 0b94 1146     		mov	r1, r2
 13535 0b96 1846     		mov	r0, r3
 13536 0b98 FFF7FEFF 		bl	LCRChecksum
 13537 0b9c 0346     		mov	r3, r0
 13538 0b9e 1A46     		mov	r2, r3
 13539 0ba0 07F58A73 		add	r3, r7, #276
 13540 0ba4 1A55     		strb	r2, [r3, r4]
1816:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13541              		.loc 1 1816 0
 13542 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13543 0baa 07F58A73 		add	r3, r7, #276
 13544 0bae 1146     		mov	r1, r2
 13545 0bb0 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 303


 13546 0bb2 FFF7FEFF 		bl	commWrite
1817:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13547              		.loc 1 1817 0
 13548 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1818:..\src/command_processing.c ****         break;
 13549              		.loc 1 1818 0
 13550 0bba 09E1     		b	.L533
 13551              	.L540:
1819:..\src/command_processing.c **** 
1820:..\src/command_processing.c **** //=========================================================     other_params
1821:..\src/command_processing.c ****         default: 
1822:..\src/command_processing.c ****             
1823:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13552              		.loc 1 1823 0
 13553 0bbc BB1D     		adds	r3, r7, #6
 13554 0bbe 1A88     		ldrh	r2, [r3]
 13555 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13556 0bc4 013B     		subs	r3, r3, #1
 13557 0bc6 9A42     		cmp	r2, r3
 13558 0bc8 C0F20181 		blt	.L541
1824:..\src/command_processing.c ****                 break;
1825:..\src/command_processing.c ****             
1826:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13559              		.loc 1 1826 0
 13560 0bcc BB1D     		adds	r3, r7, #6
 13561 0bce 1A88     		ldrh	r2, [r3]
 13562 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13563 0bd4 8149     		ldr	r1, .L548
 13564 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13565 0bd8 0B44     		add	r3, r3, r1
 13566 0bda 9A42     		cmp	r2, r3
 13567 0bdc 05D1     		bne	.L535
1827:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13568              		.loc 1 1827 0
 13569 0bde 804B     		ldr	r3, .L548+4
 13570 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13571 0be2 804B     		ldr	r3, .L548+8
 13572 0be4 83F80122 		strb	r2, [r3, #513]
1828:..\src/command_processing.c ****                 break;
 13573              		.loc 1 1828 0
 13574 0be8 F2E0     		b	.L533
 13575              	.L535:
1829:..\src/command_processing.c ****             }
1830:..\src/command_processing.c ****             
1831:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13576              		.loc 1 1831 0
 13577 0bea BB1D     		adds	r3, r7, #6
 13578 0bec 1A88     		ldrh	r2, [r3]
 13579 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13580 0bf2 013B     		subs	r3, r3, #1
 13581 0bf4 9A42     		cmp	r2, r3
 13582 0bf6 05D1     		bne	.L536
1832:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13583              		.loc 1 1832 0
 13584 0bf8 794B     		ldr	r3, .L548+4
 13585 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13586 0bfc 794B     		ldr	r3, .L548+8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 304


 13587 0bfe 83F8A020 		strb	r2, [r3, #160]
1833:..\src/command_processing.c ****             }
1834:..\src/command_processing.c ****             else {
1835:..\src/command_processing.c ****             
1836:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1837:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1838:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1839:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1840:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1841:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1842:..\src/command_processing.c ****                 
1843:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1844:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1845:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1846:..\src/command_processing.c ****                 {
1847:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1848:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1849:..\src/command_processing.c ****                 }
1850:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1851:..\src/command_processing.c ****             
1852:..\src/command_processing.c ****             }
1853:..\src/command_processing.c ****             
1854:..\src/command_processing.c ****         break;
 13588              		.loc 1 1854 0
 13589 0c02 E5E0     		b	.L533
 13590              	.L536:
1837:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13591              		.loc 1 1837 0
 13592 0c04 BB1D     		adds	r3, r7, #6
 13593 0c06 1A88     		ldrh	r2, [r3]
 13594 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13595 0c0c D31A     		subs	r3, r2, r3
 13596 0c0e 764A     		ldr	r2, .L548+12
 13597 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13598 0c12 1946     		mov	r1, r3
 13599 0c14 724B     		ldr	r3, .L548+4
 13600 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13601 0c18 724A     		ldr	r2, .L548+8
 13602 0c1a 0B46     		mov	r3, r1
 13603 0c1c 9B00     		lsls	r3, r3, #2
 13604 0c1e 0B44     		add	r3, r3, r1
 13605 0c20 1344     		add	r3, r3, r2
 13606 0c22 03F20223 		addw	r3, r3, #514
 13607 0c26 0246     		mov	r2, r0
 13608 0c28 1A70     		strb	r2, [r3]
1838:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13609              		.loc 1 1838 0
 13610 0c2a BB1D     		adds	r3, r7, #6
 13611 0c2c 1A88     		ldrh	r2, [r3]
 13612 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13613 0c32 D31A     		subs	r3, r2, r3
 13614 0c34 6C4A     		ldr	r2, .L548+12
 13615 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13616 0c38 1946     		mov	r1, r3
 13617 0c3a 694B     		ldr	r3, .L548+4
 13618 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13619 0c3e 694A     		ldr	r2, .L548+8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 305


 13620 0c40 0B46     		mov	r3, r1
 13621 0c42 9B00     		lsls	r3, r3, #2
 13622 0c44 0B44     		add	r3, r3, r1
 13623 0c46 1344     		add	r3, r3, r2
 13624 0c48 03F20323 		addw	r3, r3, #515
 13625 0c4c 0246     		mov	r2, r0
 13626 0c4e 1A70     		strb	r2, [r3]
1839:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13627              		.loc 1 1839 0
 13628 0c50 BB1D     		adds	r3, r7, #6
 13629 0c52 1A88     		ldrh	r2, [r3]
 13630 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13631 0c58 D31A     		subs	r3, r2, r3
 13632 0c5a 634A     		ldr	r2, .L548+12
 13633 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13634 0c5e 1946     		mov	r1, r3
 13635 0c60 5F4B     		ldr	r3, .L548+4
 13636 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13637 0c64 5F4A     		ldr	r2, .L548+8
 13638 0c66 0B46     		mov	r3, r1
 13639 0c68 9B00     		lsls	r3, r3, #2
 13640 0c6a 0B44     		add	r3, r3, r1
 13641 0c6c 1344     		add	r3, r3, r2
 13642 0c6e 03F50173 		add	r3, r3, #516
 13643 0c72 0246     		mov	r2, r0
 13644 0c74 1A70     		strb	r2, [r3]
1840:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13645              		.loc 1 1840 0
 13646 0c76 BB1D     		adds	r3, r7, #6
 13647 0c78 1A88     		ldrh	r2, [r3]
 13648 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13649 0c7e D31A     		subs	r3, r2, r3
 13650 0c80 594A     		ldr	r2, .L548+12
 13651 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13652 0c84 1946     		mov	r1, r3
 13653 0c86 564B     		ldr	r3, .L548+4
 13654 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13655 0c8a 564A     		ldr	r2, .L548+8
 13656 0c8c 0B46     		mov	r3, r1
 13657 0c8e 9B00     		lsls	r3, r3, #2
 13658 0c90 0B44     		add	r3, r3, r1
 13659 0c92 1344     		add	r3, r3, r2
 13660 0c94 03F20523 		addw	r3, r3, #517
 13661 0c98 0246     		mov	r2, r0
 13662 0c9a 1A70     		strb	r2, [r3]
1841:..\src/command_processing.c ****                 
 13663              		.loc 1 1841 0
 13664 0c9c BB1D     		adds	r3, r7, #6
 13665 0c9e 1A88     		ldrh	r2, [r3]
 13666 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13667 0ca4 D31A     		subs	r3, r2, r3
 13668 0ca6 504A     		ldr	r2, .L548+12
 13669 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13670 0caa 1946     		mov	r1, r3
 13671 0cac 4C4B     		ldr	r3, .L548+4
 13672 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13673 0cb0 4C4A     		ldr	r2, .L548+8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 306


 13674 0cb2 0B46     		mov	r3, r1
 13675 0cb4 9B00     		lsls	r3, r3, #2
 13676 0cb6 0B44     		add	r3, r3, r1
 13677 0cb8 1344     		add	r3, r3, r2
 13678 0cba 03F20623 		addw	r3, r3, #518
 13679 0cbe 0246     		mov	r2, r0
 13680 0cc0 1A70     		strb	r2, [r3]
1844:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13681              		.loc 1 1844 0
 13682 0cc2 4A4B     		ldr	r3, .L548+16
 13683 0cc4 0122     		movs	r2, #1
 13684 0cc6 1A60     		str	r2, [r3]
1845:..\src/command_processing.c ****                 {
 13685              		.loc 1 1845 0
 13686 0cc8 0023     		movs	r3, #0
 13687 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13688 0cce 71E0     		b	.L538
 13689              	.L539:
1847:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13690              		.loc 1 1847 0 discriminator 3
 13691 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13692 0cd4 444A     		ldr	r2, .L548+12
 13693 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13694 0cd8 1C46     		mov	r4, r3
 13695 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13696 0cde 424A     		ldr	r2, .L548+12
 13697 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13698 0ce2 1946     		mov	r1, r3
 13699 0ce4 3F4A     		ldr	r2, .L548+8
 13700 0ce6 0B46     		mov	r3, r1
 13701 0ce8 9B00     		lsls	r3, r3, #2
 13702 0cea 0B44     		add	r3, r3, r1
 13703 0cec 1344     		add	r3, r3, r2
 13704 0cee 03F20223 		addw	r3, r3, #514
 13705 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13706 0cf4 1A46     		mov	r2, r3
 13707 0cf6 1346     		mov	r3, r2
 13708 0cf8 5B00     		lsls	r3, r3, #1
 13709 0cfa 1344     		add	r3, r3, r2
 13710 0cfc 5B00     		lsls	r3, r3, #1
 13711 0cfe 5A1C     		adds	r2, r3, #1
 13712 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13713 0d04 3849     		ldr	r1, .L548+12
 13714 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13715 0d08 1846     		mov	r0, r3
 13716 0d0a 3649     		ldr	r1, .L548+8
 13717 0d0c 0346     		mov	r3, r0
 13718 0d0e 9B00     		lsls	r3, r3, #2
 13719 0d10 0344     		add	r3, r3, r0
 13720 0d12 0B44     		add	r3, r3, r1
 13721 0d14 03F20323 		addw	r3, r3, #515
 13722 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13723 0d1a 1946     		mov	r1, r3
 13724 0d1c 0B46     		mov	r3, r1
 13725 0d1e 5B00     		lsls	r3, r3, #1
 13726 0d20 0B44     		add	r3, r3, r1
 13727 0d22 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 307


 13728 0d24 1A44     		add	r2, r2, r3
 13729 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13730 0d2a 2F49     		ldr	r1, .L548+12
 13731 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13732 0d2e 1846     		mov	r0, r3
 13733 0d30 2C49     		ldr	r1, .L548+8
 13734 0d32 0346     		mov	r3, r0
 13735 0d34 9B00     		lsls	r3, r3, #2
 13736 0d36 0344     		add	r3, r3, r0
 13737 0d38 0B44     		add	r3, r3, r1
 13738 0d3a 03F50173 		add	r3, r3, #516
 13739 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13740 0d40 1946     		mov	r1, r3
 13741 0d42 0B46     		mov	r3, r1
 13742 0d44 5B00     		lsls	r3, r3, #1
 13743 0d46 0B44     		add	r3, r3, r1
 13744 0d48 5B00     		lsls	r3, r3, #1
 13745 0d4a 1A44     		add	r2, r2, r3
 13746 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13747 0d50 2549     		ldr	r1, .L548+12
 13748 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13749 0d54 1846     		mov	r0, r3
 13750 0d56 2349     		ldr	r1, .L548+8
 13751 0d58 0346     		mov	r3, r0
 13752 0d5a 9B00     		lsls	r3, r3, #2
 13753 0d5c 0344     		add	r3, r3, r0
 13754 0d5e 0B44     		add	r3, r3, r1
 13755 0d60 03F20523 		addw	r3, r3, #517
 13756 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13757 0d66 1B01     		lsls	r3, r3, #4
 13758 0d68 1A44     		add	r2, r2, r3
 13759 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13760 0d6e 1E49     		ldr	r1, .L548+12
 13761 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13762 0d72 1846     		mov	r0, r3
 13763 0d74 1B49     		ldr	r1, .L548+8
 13764 0d76 0346     		mov	r3, r0
 13765 0d78 9B00     		lsls	r3, r3, #2
 13766 0d7a 0344     		add	r3, r3, r0
 13767 0d7c 0B44     		add	r3, r3, r1
 13768 0d7e 03F20623 		addw	r3, r3, #518
 13769 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13770 0d84 5B00     		lsls	r3, r3, #1
 13771 0d86 1344     		add	r3, r3, r2
 13772 0d88 0133     		adds	r3, r3, #1
 13773 0d8a 194A     		ldr	r2, .L548+20
 13774 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1848:..\src/command_processing.c ****                 }
 13775              		.loc 1 1848 0 discriminator 3
 13776 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13777 0d94 144A     		ldr	r2, .L548+12
 13778 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13779 0d98 1A46     		mov	r2, r3
 13780 0d9a 154B     		ldr	r3, .L548+20
 13781 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13782 0da0 124B     		ldr	r3, .L548+16
 13783 0da2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 308


 13784 0da4 1344     		add	r3, r3, r2
 13785 0da6 114A     		ldr	r2, .L548+16
 13786 0da8 1360     		str	r3, [r2]
1845:..\src/command_processing.c ****                 {
 13787              		.loc 1 1845 0 discriminator 3
 13788 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13789 0dae 0133     		adds	r3, r3, #1
 13790 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13791              	.L538:
1845:..\src/command_processing.c ****                 {
 13792              		.loc 1 1845 0 is_stmt 0 discriminator 1
 13793 0db4 094B     		ldr	r3, .L548
 13794 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13795 0db8 9BB2     		uxth	r3, r3
 13796 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13797 0dbe 9A42     		cmp	r2, r3
 13798 0dc0 86D3     		bcc	.L539
1850:..\src/command_processing.c ****             
 13799              		.loc 1 1850 0 is_stmt 1
 13800 0dc2 0A4B     		ldr	r3, .L548+16
 13801 0dc4 1B68     		ldr	r3, [r3]
 13802 0dc6 0133     		adds	r3, r3, #1
 13803 0dc8 084A     		ldr	r2, .L548+16
 13804 0dca 1360     		str	r3, [r2]
 13805              		.loc 1 1854 0
 13806 0dcc 00E0     		b	.L533
 13807              	.L541:
1824:..\src/command_processing.c ****             
 13808              		.loc 1 1824 0
 13809 0dce 00BF     		nop
 13810              	.L533:
1855:..\src/command_processing.c ****     }
1856:..\src/command_processing.c **** }
 13811              		.loc 1 1856 0 discriminator 1
 13812 0dd0 00BF     		nop
 13813 0dd2 07F5D567 		add	r7, r7, #1704
 13814              		.cfi_def_cfa_offset 16
 13815 0dd6 BD46     		mov	sp, r7
 13816              		.cfi_def_cfa_register 13
 13817              		@ sp needed
 13818 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13819              	.L549:
 13820 0dda 00BF     		.align	2
 13821              	.L548:
 13822 0ddc 00000000 		.word	N_IMU_Connected
 13823 0de0 00000000 		.word	g_rx
 13824 0de4 00000000 		.word	g_mem
 13825 0de8 00000000 		.word	IMU_connected
 13826 0dec 00000000 		.word	imus_data_size
 13827 0df0 00000000 		.word	single_imu_size
 13828              		.cfi_endproc
 13829              	.LFE70:
 13830              		.size	get_IMU_param_list, .-get_IMU_param_list
 13831              		.section	.text.setZeros,"ax",%progbits
 13832              		.align	2
 13833              		.global	setZeros
 13834              		.thumb
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 309


 13835              		.thumb_func
 13836              		.type	setZeros, %function
 13837              	setZeros:
 13838              	.LFB71:
1857:..\src/command_processing.c **** 
1858:..\src/command_processing.c **** //==============================================================================
1859:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1860:..\src/command_processing.c **** //==============================================================================
1861:..\src/command_processing.c **** 
1862:..\src/command_processing.c **** void setZeros()
1863:..\src/command_processing.c **** {
 13839              		.loc 1 1863 0
 13840              		.cfi_startproc
 13841              		@ args = 0, pretend = 0, frame = 8
 13842              		@ frame_needed = 1, uses_anonymous_args = 0
 13843 0000 B0B5     		push	{r4, r5, r7, lr}
 13844              		.cfi_def_cfa_offset 16
 13845              		.cfi_offset 4, -16
 13846              		.cfi_offset 5, -12
 13847              		.cfi_offset 7, -8
 13848              		.cfi_offset 14, -4
 13849 0002 82B0     		sub	sp, sp, #8
 13850              		.cfi_def_cfa_offset 24
 13851 0004 00AF     		add	r7, sp, #0
 13852              		.cfi_def_cfa_register 7
1864:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1865:..\src/command_processing.c ****     
1866:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13853              		.loc 1 1866 0
 13854 0006 0023     		movs	r3, #0
 13855 0008 BB71     		strb	r3, [r7, #6]
 13856 000a 2BE0     		b	.L551
 13857              	.L554:
1867:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13858              		.loc 1 1867 0
 13859 000c 0023     		movs	r3, #0
 13860 000e FB71     		strb	r3, [r7, #7]
 13861 0010 22E0     		b	.L552
 13862              	.L553:
1868:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[j][i];
 13863              		.loc 1 1868 0 discriminator 3
 13864 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13865 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13866 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13867 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13868 001a 194D     		ldr	r5, .L555
 13869 001c 0B46     		mov	r3, r1
 13870 001e 9B00     		lsls	r3, r3, #2
 13871 0020 0B44     		add	r3, r3, r1
 13872 0022 2344     		add	r3, r3, r4
 13873 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13874 0028 1C46     		mov	r4, r3
 13875 002a 1649     		ldr	r1, .L555+4
 13876 002c 1346     		mov	r3, r2
 13877 002e 5B00     		lsls	r3, r3, #1
 13878 0030 1344     		add	r3, r3, r2
 13879 0032 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 310


 13880 0034 0344     		add	r3, r3, r0
 13881 0036 6633     		adds	r3, r3, #102
 13882 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1869:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 13883              		.loc 1 1869 0 discriminator 3
 13884 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13885 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13886 0040 1149     		ldr	r1, .L555+8
 13887 0042 3420     		movs	r0, #52
 13888 0044 00FB02F2 		mul	r2, r0, r2
 13889 0048 0A44     		add	r2, r2, r1
 13890 004a 1344     		add	r3, r3, r2
 13891 004c 1833     		adds	r3, r3, #24
 13892 004e 0022     		movs	r2, #0
 13893 0050 1A70     		strb	r2, [r3]
1867:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13894              		.loc 1 1867 0 discriminator 3
 13895 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13896 0054 0133     		adds	r3, r3, #1
 13897 0056 FB71     		strb	r3, [r7, #7]
 13898              	.L552:
1867:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13899              		.loc 1 1867 0 is_stmt 0 discriminator 1
 13900 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13901 005a 022B     		cmp	r3, #2
 13902 005c D9D9     		bls	.L553
1866:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13903              		.loc 1 1866 0 is_stmt 1 discriminator 2
 13904 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13905 0060 0133     		adds	r3, r3, #1
 13906 0062 BB71     		strb	r3, [r7, #6]
 13907              	.L551:
1866:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13908              		.loc 1 1866 0 is_stmt 0 discriminator 1
 13909 0064 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13910 0066 012B     		cmp	r3, #1
 13911 0068 D0D9     		bls	.L554
1870:..\src/command_processing.c ****         }
1871:..\src/command_processing.c ****     }
1872:..\src/command_processing.c ****     reset_last_value_flag = 1;
 13912              		.loc 1 1872 0 is_stmt 1
 13913 006a 084B     		ldr	r3, .L555+12
 13914 006c 0122     		movs	r2, #1
 13915 006e 1A70     		strb	r2, [r3]
1873:..\src/command_processing.c **** 
1874:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13916              		.loc 1 1874 0
 13917 0070 0120     		movs	r0, #1
 13918 0072 FFF7FEFF 		bl	sendAcknowledgment
1875:..\src/command_processing.c **** }
 13919              		.loc 1 1875 0
 13920 0076 00BF     		nop
 13921 0078 0837     		adds	r7, r7, #8
 13922              		.cfi_def_cfa_offset 16
 13923 007a BD46     		mov	sp, r7
 13924              		.cfi_def_cfa_register 13
 13925              		@ sp needed
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 311


 13926 007c B0BD     		pop	{r4, r5, r7, pc}
 13927              	.L556:
 13928 007e 00BF     		.align	2
 13929              	.L555:
 13930 0080 00000000 		.word	data_encoder_raw
 13931 0084 00000000 		.word	g_mem
 13932 0088 00000000 		.word	g_meas
 13933 008c 00000000 		.word	reset_last_value_flag
 13934              		.cfi_endproc
 13935              	.LFE71:
 13936              		.size	setZeros, .-setZeros
 13937              		.section	.rodata
 13938              		.align	2
 13939              	.LC151:
 13940 1130 0D0A00   		.ascii	"\015\012\000"
 13941 1133 00       		.align	2
 13942              	.LC152:
 13943 1134 4669726D 		.ascii	"Firmware version: \000"
 13943      77617265 
 13943      20766572 
 13943      73696F6E 
 13943      3A2000
 13944 1147 00       		.align	2
 13945              	.LC153:
 13946 1148 47656E65 		.ascii	"Generic firmware v. 1.9.3 (PSoC5)\000"
 13946      72696320 
 13946      6669726D 
 13946      77617265 
 13946      20762E20 
 13947 116a 0000     		.align	2
 13948              	.LC154:
 13949 116c 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13949      0A00
 13950 1172 0000     		.align	2
 13951              	.LC155:
 13952 1174 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13952      43452049 
 13952      4E464F0D 
 13952      0A00
 13953 1182 0000     		.align	2
 13954              	.LC156:
 13955 1184 49443A20 		.ascii	"ID: %d\015\012\000"
 13955      25640D0A 
 13955      00
 13956 118d 000000   		.align	2
 13957              	.LC157:
 13958 1190 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13958      63653A20 
 13958      534F4654 
 13958      48414E44 
 13958      2050524F 
 13959 11a7 00       		.align	2
 13960              	.LC158:
 13961 11a8 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13961      63653A20 
 13961      47454E45 
 13961      52494320 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 312


 13961      32204D4F 
 13962 11c3 00       		.align	2
 13963              	.LC159:
 13964 11c4 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13964      63653A20 
 13964      41495220 
 13964      4348414D 
 13964      42455253 
 13965 11eb 00       		.align	2
 13966              	.LC160:
 13967 11ec 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13967      63653A20 
 13967      4F54544F 
 13967      424F434B 
 13967      20367620 
 13968 1216 0000     		.align	2
 13969              	.LC161:
 13970 1218 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13970      63653A20 
 13970      534F4654 
 13970      48414E44 
 13970      2032204D 
 13971              		.align	2
 13972              	.LC162:
 13973 1234 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13973      20736964 
 13973      653A2052 
 13973      49474854 
 13973      0D0A00
 13974 1247 00       		.align	2
 13975              	.LC163:
 13976 1248 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13976      20736964 
 13976      653A204C 
 13976      4546540D 
 13976      0A00
 13977 125a 0000     		.align	2
 13978              	.LC164:
 13979 125c 55736572 		.ascii	"User: MARIA\015\012\000"
 13979      3A204D41 
 13979      5249410D 
 13979      0A00
 13980 126a 0000     		.align	2
 13981              	.LC165:
 13982 126c 55736572 		.ascii	"User: ROZA\015\012\000"
 13982      3A20524F 
 13982      5A410D0A 
 13982      00
 13983 1279 000000   		.align	2
 13984              	.LC166:
 13985 127c 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13985      3A204745 
 13985      4E455249 
 13985      43205553 
 13985      45520D0A 
 13986 1291 000000   		.align	2
 13987              	.LC167:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 313


 13988 1294 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13988      52202564 
 13988      20494E46 
 13988      4F0D0A00 
 13989              		.align	2
 13990              	.LC168:
 13991 12a4 4D6F746F 		.ascii	"Motor reference\000"
 13991      72207265 
 13991      66657265 
 13991      6E636500 
 13992              		.align	2
 13993              	.LC169:
 13994 12b4 202D2043 		.ascii	" - Currents: \000"
 13994      75727265 
 13994      6E74733A 
 13994      2000
 13995 12c2 0000     		.align	2
 13996              	.LC170:
 13997 12c4 202D2050 		.ascii	" - Pwm: \000"
 13997      776D3A20 
 13997      00
 13998 12cd 000000   		.align	2
 13999              	.LC171:
 14000 12d0 202D2050 		.ascii	" - Position: \000"
 14000      6F736974 
 14000      696F6E3A 
 14000      2000
 14001 12de 0000     		.align	2
 14002              	.LC172:
 14003 12e0 25642000 		.ascii	"%d \000"
 14004              		.align	2
 14005              	.LC173:
 14006 12e4 4D6F746F 		.ascii	"Motor enabled: \000"
 14006      7220656E 
 14006      61626C65 
 14006      643A2000 
 14007              		.align	2
 14008              	.LC174:
 14009 12f4 5945530D 		.ascii	"YES\015\012\000"
 14009      0A00
 14010 12fa 0000     		.align	2
 14011              	.LC175:
 14012 12fc 4E4F0D0A 		.ascii	"NO\015\012\000"
 14012      00
 14013 1301 000000   		.align	2
 14014              	.LC176:
 14015 1304 50574D20 		.ascii	"PWM rescaling activation: \000"
 14015      72657363 
 14015      616C696E 
 14015      67206163 
 14015      74697661 
 14016 131f 00       		.align	2
 14017              	.LC177:
 14018 1320 5945530A 		.ascii	"YES\012\000"
 14018      00
 14019 1325 000000   		.align	2
 14020              	.LC178:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 314


 14021 1328 4E4F0A00 		.ascii	"NO\012\000"
 14022              		.align	2
 14023              	.LC179:
 14024 132c 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 14024      4C696D69 
 14024      743A2025 
 14024      640D0A00 
 14025              		.align	2
 14026              	.LC180:
 14027 133c 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 14027      41535552 
 14027      454D454E 
 14027      54532049 
 14027      4E464F0D 
 14028 1352 0000     		.align	2
 14029              	.LC181:
 14030 1354 53656E73 		.ascii	"Sensor value: \000"
 14030      6F722076 
 14030      616C7565 
 14030      3A2000
 14031 1363 00       		.align	2
 14032              	.LC182:
 14033 1364 256400   		.ascii	"%d\000"
 14034 1367 00       		.align	2
 14035              	.LC183:
 14036 1368 2C2000   		.ascii	", \000"
 14037 136b 00       		.align	2
 14038              	.LC184:
 14039 136c 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 14039      7469636B 
 14039      206D6561 
 14039      73757265 
 14039      6D656E74 
 14040 138a 0000     		.align	2
 14041              	.LC185:
 14042 138c 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 14042      65727920 
 14042      25642056 
 14042      6F6C7461 
 14042      67652028 
 14043 13a9 000000   		.align	2
 14044              	.LC186:
 14045 13ac 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 14045      20636861 
 14045      72676520 
 14045      706F7765 
 14045      72207465 
 14046 13d3 00       		.align	2
 14047              	.LC187:
 14048 13d4 43757272 		.ascii	"Current %d (mA): %ld\000"
 14048      656E7420 
 14048      25642028 
 14048      6D41293A 
 14048      20256C64 
 14049 13e9 000000   		.align	2
 14050              	.LC188:
 14051 13ec 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 315


 14051      20477261 
 14051      73702048 
 14051      6F6C6420 
 14051      43757272 
 14052 1411 000000   		.align	2
 14053              	.LC189:
 14054 1414 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 14054      544F5220 
 14054      25642043 
 14054      4F4E4649 
 14054      47555241 
 14055 142f 00       		.align	2
 14056              	.LC190:
 14057 1430 50494420 		.ascii	"PID Controller: \000"
 14057      436F6E74 
 14057      726F6C6C 
 14057      65723A20 
 14057      00
 14058              		.global	__aeabi_i2d
 14059              		.global	__aeabi_ddiv
 14060 1441 000000   		.align	2
 14061              	.LC191:
 14062 1444 50202D3E 		.ascii	"P -> %f  \000"
 14062      20256620 
 14062      2000
 14063 144e 0000     		.align	2
 14064              	.LC192:
 14065 1450 49202D3E 		.ascii	"I -> %f  \000"
 14065      20256620 
 14065      2000
 14066 145a 0000     		.align	2
 14067              	.LC193:
 14068 145c 44202D3E 		.ascii	"D -> %f\015\012\000"
 14068      2025660D 
 14068      0A00
 14069 1466 0000     		.align	2
 14070              	.LC194:
 14071 1468 43757272 		.ascii	"Current PID Controller: \000"
 14071      656E7420 
 14071      50494420 
 14071      436F6E74 
 14071      726F6C6C 
 14072 1481 000000   		.align	2
 14073              	.LC195:
 14074 1484 53746172 		.ascii	"Startup activation: YES\015\012\000"
 14074      74757020 
 14074      61637469 
 14074      76617469 
 14074      6F6E3A20 
 14075 149e 0000     		.align	2
 14076              	.LC196:
 14077 14a0 53746172 		.ascii	"Startup activation: NO\015\012\000"
 14077      74757020 
 14077      61637469 
 14077      76617469 
 14077      6F6E3A20 
 14078 14b9 000000   		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 316


 14079              	.LC197:
 14080 14bc 496E7075 		.ascii	"Input mode: USB\015\012\000"
 14080      74206D6F 
 14080      64653A20 
 14080      5553420D 
 14080      0A00
 14081 14ce 0000     		.align	2
 14082              	.LC198:
 14083 14d0 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 14083      74206D6F 
 14083      64653A20 
 14083      48616E64 
 14083      6C650D0A 
 14084 14e5 000000   		.align	2
 14085              	.LC199:
 14086 14e8 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 14086      74206D6F 
 14086      64653A20 
 14086      454D4720 
 14086      70726F70 
 14087 1507 00       		.align	2
 14088              	.LC200:
 14089 1508 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 14089      74206D6F 
 14089      64653A20 
 14089      454D4720 
 14089      696E7465 
 14090 1523 00       		.align	2
 14091              	.LC201:
 14092 1524 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 14092      74206D6F 
 14092      64653A20 
 14092      454D4720 
 14092      46434653 
 14093 153b 00       		.align	2
 14094              	.LC202:
 14095 153c 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 14095      74206D6F 
 14095      64653A20 
 14095      454D4720 
 14095      46434653 
 14096 1557 00       		.align	2
 14097              	.LC203:
 14098 1558 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 14098      74206D6F 
 14098      64653A20 
 14098      4A6F7973 
 14098      7469636B 
 14099 156f 00       		.align	2
 14100              	.LC204:
 14101 1570 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 14101      74206D6F 
 14101      64653A20 
 14101      454D4720 
 14101      70726F70 
 14102 159e 00       		.ascii	"\000"
 14103 159f 00       		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 317


 14104              	.LC205:
 14105 15a0 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 14105      726F6C20 
 14105      6D6F6465 
 14105      3A20506F 
 14105      73697469 
 14106 15b9 000000   		.align	2
 14107              	.LC206:
 14108 15bc 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 14108      726F6C20 
 14108      6D6F6465 
 14108      3A205057 
 14108      4D0D0A00 
 14109              		.align	2
 14110              	.LC207:
 14111 15d0 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 14111      726F6C20 
 14111      6D6F6465 
 14111      3A204375 
 14111      7272656E 
 14112              		.align	2
 14113              	.LC208:
 14114 15e8 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 14114      726F6C20 
 14114      6D6F6465 
 14114      3A20506F 
 14114      73697469 
 14115 160d 000000   		.align	2
 14116              	.LC209:
 14117 1610 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 14117      6C757465 
 14117      20656E63 
 14117      6F646572 
 14117      20706F73 
 14118 1631 000000   		.align	2
 14119              	.LC210:
 14120 1634 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 14120      6C757465 
 14120      20656E63 
 14120      6F646572 
 14120      20706F73 
 14121              		.align	2
 14122              	.LC211:
 14123 1654 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 14123      722D4861 
 14123      6E646C65 
 14123      20526174 
 14123      696F3A20 
 14124 166d 000000   		.align	2
 14125              	.LC212:
 14126 1670 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 14126      64657220 
 14126      696E6469 
 14126      63657320 
 14126      75736564 
 14127 1699 000000   		.align	2
 14128              	.LC213:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 318


 14129 169c 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 14129      74204765 
 14129      61723A20 
 14129      25642074 
 14129      65657468 
 14130 16b3 00       		.align	2
 14131              	.LC214:
 14132 16b4 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 14132      6E642047 
 14132      6561723A 
 14132      20256420 
 14132      74656574 
 14133              		.align	2
 14134              	.LC215:
 14135 16cc 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 14135      20696E76 
 14135      61726961 
 14135      6E743A20 
 14135      25640D0A 
 14136 16e1 000000   		.align	2
 14137              	.LC216:
 14138 16e4 53656E73 		.ascii	"Sensor resolution: \000"
 14138      6F722072 
 14138      65736F6C 
 14138      7574696F 
 14138      6E3A2000 
 14139              		.align	2
 14140              	.LC217:
 14141 16f8 4D656173 		.ascii	"Measurement Offset: \000"
 14141      7572656D 
 14141      656E7420 
 14141      4F666673 
 14141      65743A20 
 14142 170d 000000   		.align	2
 14143              	.LC218:
 14144 1710 256C6400 		.ascii	"%ld\000"
 14145              		.align	2
 14146              	.LC219:
 14147 1714 4D656173 		.ascii	"Measurement Multiplier: \000"
 14147      7572656D 
 14147      656E7420 
 14147      4D756C74 
 14147      69706C69 
 14148              		.global	__aeabi_f2d
 14149 172d 000000   		.align	2
 14150              	.LC220:
 14151 1730 256600   		.ascii	"%f\000"
 14152 1733 00       		.align	2
 14153              	.LC221:
 14154 1734 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 14154      656E7420 
 14154      6C6F6F6B 
 14154      75702074 
 14154      61626C65 
 14155 1762 00       		.ascii	"\000"
 14156 1763 00       		.align	2
 14157              	.LC222:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 319


 14158 1764 506F7369 		.ascii	"Position limit active: %d\000"
 14158      74696F6E 
 14158      206C696D 
 14158      69742061 
 14158      63746976 
 14159 177e 0000     		.align	2
 14160              	.LC223:
 14161 1780 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14161      74696F6E 
 14161      206C696D 
 14161      6974206D 
 14161      6F746F72 
 14162 17a3 00       		.align	2
 14163              	.LC224:
 14164 17a4 73757020 		.ascii	"sup -> %ld\015\012\000"
 14164      2D3E2025 
 14164      6C640D0A 
 14164      00
 14165 17b1 000000   		.align	2
 14166              	.LC225:
 14167 17b4 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14167      73746570 
 14167      20706F73 
 14167      20616E64 
 14167      206E6567 
 14168              		.align	2
 14169              	.LC226:
 14170 17d0 43757272 		.ascii	"Current limit: %d\015\012\000"
 14170      656E7420 
 14170      6C696D69 
 14170      743A2025 
 14170      640D0A00 
 14171              		.align	2
 14172              	.LC227:
 14173 17e4 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 14173      7220626F 
 14173      61726420 
 14173      6173736F 
 14173      63696174 
 14174 180e 0000     		.align	2
 14175              	.LC228:
 14176 1810 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 14176      65722074 
 14176      7970653A 
 14176      204D4333 
 14176      33383837 
 14177 1832 0000     		.align	2
 14178              	.LC229:
 14179 1834 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 14179      65722074 
 14179      7970653A 
 14179      20564E48 
 14179      35303139 
 14180              		.align	2
 14181              	.LC230:
 14182 1858 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 14182      72617465 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 320


 14182      206C696D 
 14182      69746572 
 14182      2076616C 
 14183 1875 000000   		.align	2
 14184              	.LC231:
 14185 1878 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 14185      72657665 
 14185      72736962 
 14185      6C65206D 
 14185      6F746F72 
 14186              		.align	2
 14187              	.LC232:
 14188 1894 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 14188      72657665 
 14188      72736962 
 14188      6C65206D 
 14188      6F746F72 
 14189 18af 00       		.align	2
 14190              	.LC233:
 14191 18b0 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14191      434F4E46 
 14191      49475552 
 14191      4154494F 
 14191      4E0D0A00 
 14192              		.align	2
 14193              	.LC234:
 14194 18c4 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14194      74687265 
 14194      73686F6C 
 14194      6473205B 
 14194      30202D20 
 14195 18e6 0000     		.align	2
 14196              	.LC235:
 14197 18e8 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14197      6D617820 
 14197      76616C75 
 14197      6573205B 
 14197      30202D20 
 14198              		.align	2
 14199              	.LC236:
 14200 190c 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14200      696E7665 
 14200      7273696F 
 14200      6E3A2059 
 14200      45530D0A 
 14201 1921 000000   		.align	2
 14202              	.LC237:
 14203 1924 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14203      696E7665 
 14203      7273696F 
 14203      6E3A204E 
 14203      4F0D0A00 
 14204              		.align	2
 14205              	.LC238:
 14206 1938 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14206      62726174 
 14206      696F6E20 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 321


 14206      656E6162 
 14206      6C65643A 
 14207 1953 00       		.align	2
 14208              	.LC239:
 14209 1954 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14209      62726174 
 14209      696F6E20 
 14209      656E6162 
 14209      6C65643A 
 14210 196e 0000     		.align	2
 14211              	.LC240:
 14212 1970 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14212      6D617820 
 14212      73706565 
 14212      643A2025 
 14212      64202564 
 14213 1985 000000   		.align	2
 14214              	.LC241:
 14215 1988 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14215      74696F6E 
 14215      616C2041 
 14215      44432073 
 14215      656E736F 
 14216              		.align	2
 14217              	.LC242:
 14218 19a8 41444320 		.ascii	"ADC %d -> %d\000"
 14218      2564202D 
 14218      3E202564 
 14218      00
 14219 19b5 000000   		.align	2
 14220              	.LC243:
 14221 19b8 454D4720 		.ascii	"EMG input %d -> %d\000"
 14221      696E7075 
 14221      74202564 
 14221      202D3E20 
 14221      256400
 14222 19cb 00       		.align	2
 14223              	.LC244:
 14224 19cc 4A4F5953 		.ascii	"JOYSTICK CONFIGURATION\015\012\000"
 14224      5449434B 
 14224      20434F4E 
 14224      46494755 
 14224      52415449 
 14225 19e5 000000   		.align	2
 14226              	.LC245:
 14227 19e8 436C6F73 		.ascii	"Closure speed: %d\000"
 14227      75726520 
 14227      73706565 
 14227      643A2025 
 14227      6400
 14228 19fa 0000     		.align	2
 14229              	.LC246:
 14230 19fc 4A6F7973 		.ascii	"Joystick Threshold: %d\000"
 14230      7469636B 
 14230      20546872 
 14230      6573686F 
 14230      6C643A20 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 322


 14231 1a13 00       		.align	2
 14232              	.LC247:
 14233 1a14 4A6F7973 		.ascii	"Joystick Gains - X:%hu  Y:%hu\000"
 14233      7469636B 
 14233      20476169 
 14233      6E73202D 
 14233      20583A25 
 14234 1a32 0000     		.align	2
 14235              	.LC248:
 14236 1a34 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14236      2074696D 
 14236      65206465 
 14236      6C617920 
 14236      286D7329 
 14237 1a4d 000000   		.align	2
 14238              	.LC249:
 14239 1a50 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14239      2076656C 
 14239      6F636974 
 14239      7920636C 
 14239      6F737572 
 14240 1a76 0000     		.align	2
 14241              	.LC250:
 14242 1a78 52657374 		.ascii	"Rest position: %d\000"
 14242      20706F73 
 14242      6974696F 
 14242      6E3A2025 
 14242      6400
 14243 1a8a 0000     		.align	2
 14244              	.LC251:
 14245 1a8c 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14245      436F6E6E 
 14245      65637465 
 14245      643A2025 
 14245      640D0A00 
 14246              		.align	2
 14247              	.LC252:
 14248 1aa0 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14248      20434F4E 
 14248      46494755 
 14248      52415449 
 14248      4F4E0D0A 
 14249 1ab5 000000   		.align	2
 14250              	.LC253:
 14251 1ab8 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14251      2564200D 
 14251      0A094944 
 14251      3A202564 
 14251      0D0A00
 14252 1acb 00       		.align	2
 14253              	.LC254:
 14254 1acc 09416363 		.ascii	"\011Accelerometers: \000"
 14254      656C6572 
 14254      6F6D6574 
 14254      6572733A 
 14254      2000
 14255 1ade 0000     		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 323


 14256              	.LC255:
 14257 1ae0 09477972 		.ascii	"\011Gyroscopes: \000"
 14257      6F73636F 
 14257      7065733A 
 14257      2000
 14258 1aee 0000     		.align	2
 14259              	.LC256:
 14260 1af0 094D6167 		.ascii	"\011Magnetometers: \000"
 14260      6E65746F 
 14260      6D657465 
 14260      72733A20 
 14260      00
 14261 1b01 000000   		.align	2
 14262              	.LC257:
 14263 1b04 09517561 		.ascii	"\011Quaternion: \000"
 14263      7465726E 
 14263      696F6E3A 
 14263      2000
 14264 1b12 0000     		.align	2
 14265              	.LC258:
 14266 1b14 0954656D 		.ascii	"\011Temperature: \000"
 14266      70657261 
 14266      74757265 
 14266      3A2000
 14267 1b23 00       		.align	2
 14268              	.LC259:
 14269 1b24 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 14269      44455220 
 14269      434F4E46 
 14269      49475552 
 14269      4154494F 
 14270              		.align	2
 14271              	.LC260:
 14272 1b3c 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 14272      64657220 
 14272      436F6E6E 
 14272      65637465 
 14272      64204C69 
 14273 1b5a 0000     		.align	2
 14274              	.LC261:
 14275 1b5c 4C454654 		.ascii	"LEFT\000"
 14275      00
 14276 1b61 000000   		.align	2
 14277              	.LC262:
 14278 1b64 52494748 		.ascii	"RIGHT\000"
 14278      5400
 14279 1b6a 0000     		.align	2
 14280              	.LC263:
 14281 1b6c 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 14281      2048414E 
 14281      44206D61 
 14281      696E2065 
 14281      6E636F64 
 14282 1b89 000000   		.align	2
 14283              	.LC264:
 14284 1b8c 52617720 		.ascii	"Raw value [status]:\015\012\000"
 14284      76616C75 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 324


 14284      65205B73 
 14284      74617475 
 14284      735D3A0D 
 14285 1ba2 0000     		.align	2
 14286              	.LC265:
 14287 1ba4 4F4B00   		.ascii	"OK\000"
 14288 1ba7 00       		.align	2
 14289              	.LC266:
 14290 1ba8 5800     		.ascii	"X\000"
 14291 1baa 0000     		.align	2
 14292              	.LC267:
 14293 1bac 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 14293      25735D0D 
 14293      0A00
 14294 1bb6 0000     		.align	2
 14295              	.LC268:
 14296 1bb8 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14296      20465720 
 14296      6379636C 
 14296      65207469 
 14296      6D653A20 
 14297              		.align	2
 14298              	.LC269:
 14299 1bd4 0D0A0000 		.ascii	"\015\012\000\000"
 14300              		.section	.text.prepare_generic_info,"ax",%progbits
 14301              		.align	2
 14302              		.global	prepare_generic_info
 14303              		.thumb
 14304              		.thumb_func
 14305              		.type	prepare_generic_info, %function
 14306              	prepare_generic_info:
 14307              	.LFB72:
1876:..\src/command_processing.c **** 
1877:..\src/command_processing.c **** //==============================================================================
1878:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1879:..\src/command_processing.c **** //==============================================================================
1880:..\src/command_processing.c **** 
1881:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1882:..\src/command_processing.c **** {
 14308              		.loc 1 1882 0
 14309              		.cfi_startproc
 14310              		@ args = 0, pretend = 0, frame = 152
 14311              		@ frame_needed = 1, uses_anonymous_args = 0
 14312 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14313              		.cfi_def_cfa_offset 36
 14314              		.cfi_offset 4, -36
 14315              		.cfi_offset 5, -32
 14316              		.cfi_offset 6, -28
 14317              		.cfi_offset 7, -24
 14318              		.cfi_offset 8, -20
 14319              		.cfi_offset 9, -16
 14320              		.cfi_offset 10, -12
 14321              		.cfi_offset 11, -8
 14322              		.cfi_offset 14, -4
 14323 0004 B1B0     		sub	sp, sp, #196
 14324              		.cfi_def_cfa_offset 232
 14325 0006 0AAF     		add	r7, sp, #40
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 325


 14326              		.cfi_def_cfa 7, 192
 14327 0008 7861     		str	r0, [r7, #20]
1883:..\src/command_processing.c ****     int i;
1884:..\src/command_processing.c **** 
1885:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14328              		.loc 1 1885 0
 14329 000a C74B     		ldr	r3, .L680
 14330 000c C7F88830 		str	r3, [r7, #136]
1886:..\src/command_processing.c ****     
1887:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14331              		.loc 1 1887 0
 14332 0010 C54B     		ldr	r3, .L680
 14333 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14334 0016 FA2B     		cmp	r3, #250
 14335 0018 02F08080 		beq	.L677
 14336              	.LBB20:
1888:..\src/command_processing.c ****         char str[100];
1889:..\src/command_processing.c ****         strcpy(info_string, "");
 14337              		.loc 1 1889 0
 14338 001c 7B69     		ldr	r3, [r7, #20]
 14339 001e 0022     		movs	r2, #0
 14340 0020 1A70     		strb	r2, [r3]
1890:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14341              		.loc 1 1890 0
 14342 0022 7869     		ldr	r0, [r7, #20]
 14343 0024 FFF7FEFF 		bl	strlen
 14344 0028 0346     		mov	r3, r0
 14345 002a 1A46     		mov	r2, r3
 14346 002c 7B69     		ldr	r3, [r7, #20]
 14347 002e 1344     		add	r3, r3, r2
 14348 0030 BE4A     		ldr	r2, .L680+4
 14349 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14350 0034 9278     		ldrb	r2, [r2, #2]
 14351 0036 1980     		strh	r1, [r3]	@ unaligned
 14352 0038 9A70     		strb	r2, [r3, #2]
1891:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14353              		.loc 1 1891 0
 14354 003a 7869     		ldr	r0, [r7, #20]
 14355 003c FFF7FEFF 		bl	strlen
 14356 0040 0346     		mov	r3, r0
 14357 0042 1A46     		mov	r2, r3
 14358 0044 7B69     		ldr	r3, [r7, #20]
 14359 0046 1344     		add	r3, r3, r2
 14360 0048 B94A     		ldr	r2, .L680+8
 14361 004a 1D46     		mov	r5, r3
 14362 004c 1446     		mov	r4, r2
 14363 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14364 0050 2860     		str	r0, [r5]	@ unaligned
 14365 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14366 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14367 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14368 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14369 005a A278     		ldrb	r2, [r4, #2]
 14370 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14371 005e 1346     		mov	r3, r2
 14372 0060 AB74     		strb	r3, [r5, #18]
1892:..\src/command_processing.c ****         strcat(info_string, VERSION);
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 326


 14373              		.loc 1 1892 0
 14374 0062 7869     		ldr	r0, [r7, #20]
 14375 0064 FFF7FEFF 		bl	strlen
 14376 0068 0346     		mov	r3, r0
 14377 006a 1A46     		mov	r2, r3
 14378 006c 7B69     		ldr	r3, [r7, #20]
 14379 006e 1344     		add	r3, r3, r2
 14380 0070 B04A     		ldr	r2, .L680+12
 14381 0072 1446     		mov	r4, r2
 14382 0074 9E46     		mov	lr, r3
 14383 0076 04F1200C 		add	ip, r4, #32
 14384              	.L559:
 14385 007a 7546     		mov	r5, lr
 14386 007c 2646     		mov	r6, r4
 14387 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14388 0080 2860     		str	r0, [r5]	@ unaligned
 14389 0082 6960     		str	r1, [r5, #4]	@ unaligned
 14390 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 14391 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 14392 0088 1034     		adds	r4, r4, #16
 14393 008a 0EF1100E 		add	lr, lr, #16
 14394 008e 6445     		cmp	r4, ip
 14395 0090 F3D1     		bne	.L559
 14396 0092 7246     		mov	r2, lr
 14397 0094 2346     		mov	r3, r4
 14398 0096 1B88     		ldrh	r3, [r3]	@ unaligned
 14399 0098 1380     		strh	r3, [r2]	@ unaligned
1893:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14400              		.loc 1 1893 0
 14401 009a 7869     		ldr	r0, [r7, #20]
 14402 009c FFF7FEFF 		bl	strlen
 14403 00a0 0346     		mov	r3, r0
 14404 00a2 1A46     		mov	r2, r3
 14405 00a4 7B69     		ldr	r3, [r7, #20]
 14406 00a6 1344     		add	r3, r3, r2
 14407 00a8 A34A     		ldr	r2, .L680+16
 14408 00aa 1068     		ldr	r0, [r2]	@ unaligned
 14409 00ac 1860     		str	r0, [r3]	@ unaligned
 14410 00ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14411 00b0 9A80     		strh	r2, [r3, #4]	@ unaligned
1894:..\src/command_processing.c **** 
1895:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14412              		.loc 1 1895 0
 14413 00b2 7869     		ldr	r0, [r7, #20]
 14414 00b4 FFF7FEFF 		bl	strlen
 14415 00b8 0346     		mov	r3, r0
 14416 00ba 1A46     		mov	r2, r3
 14417 00bc 7B69     		ldr	r3, [r7, #20]
 14418 00be 1344     		add	r3, r3, r2
 14419 00c0 9E4A     		ldr	r2, .L680+20
 14420 00c2 1C46     		mov	r4, r3
 14421 00c4 1346     		mov	r3, r2
 14422 00c6 07CB     		ldmia	r3!, {r0, r1, r2}
 14423 00c8 2060     		str	r0, [r4]	@ unaligned
 14424 00ca 6160     		str	r1, [r4, #4]	@ unaligned
 14425 00cc A260     		str	r2, [r4, #8]	@ unaligned
 14426 00ce 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 327


 14427 00d0 A381     		strh	r3, [r4, #12]	@ unaligned
1896:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14428              		.loc 1 1896 0
 14429 00d2 D7F88830 		ldr	r3, [r7, #136]
 14430 00d6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14431 00da 1A46     		mov	r2, r3
 14432 00dc 07F11803 		add	r3, r7, #24
 14433 00e0 9749     		ldr	r1, .L680+24
 14434 00e2 1846     		mov	r0, r3
 14435 00e4 FFF7FEFF 		bl	sprintf
1897:..\src/command_processing.c ****         strcat(info_string, str);
 14436              		.loc 1 1897 0
 14437 00e8 07F11803 		add	r3, r7, #24
 14438 00ec 1946     		mov	r1, r3
 14439 00ee 7869     		ldr	r0, [r7, #20]
 14440 00f0 FFF7FEFF 		bl	strcat
1898:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14441              		.loc 1 1898 0
 14442 00f4 D7F88830 		ldr	r3, [r7, #136]
 14443 00f8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14444 00fc 042B     		cmp	r3, #4
 14445 00fe 00F29180 		bhi	.L678
 14446 0102 01A2     		adr	r2, .L562
 14447 0104 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14448              		.p2align 2
 14449              	.L562:
 14450 0108 1D010000 		.word	.L561+1
 14451 010c 4B010000 		.word	.L563+1
 14452 0110 7B010000 		.word	.L564+1
 14453 0114 BD010000 		.word	.L565+1
 14454 0118 FD010000 		.word	.L566+1
 14455              		.p2align 1
 14456              	.L561:
1899:..\src/command_processing.c ****             case SOFTHAND_PRO:
1900:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14457              		.loc 1 1900 0
 14458 011c 7869     		ldr	r0, [r7, #20]
 14459 011e FFF7FEFF 		bl	strlen
 14460 0122 0346     		mov	r3, r0
 14461 0124 1A46     		mov	r2, r3
 14462 0126 7B69     		ldr	r3, [r7, #20]
 14463 0128 1344     		add	r3, r3, r2
 14464 012a 864A     		ldr	r2, .L680+28
 14465 012c 1C46     		mov	r4, r3
 14466 012e 1546     		mov	r5, r2
 14467 0130 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14468 0132 2060     		str	r0, [r4]	@ unaligned
 14469 0134 6160     		str	r1, [r4, #4]	@ unaligned
 14470 0136 A260     		str	r2, [r4, #8]	@ unaligned
 14471 0138 E360     		str	r3, [r4, #12]	@ unaligned
 14472 013a 2868     		ldr	r0, [r5]	@ unaligned
 14473 013c 2061     		str	r0, [r4, #16]	@ unaligned
 14474 013e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14475 0140 AA79     		ldrb	r2, [r5, #6]
 14476 0142 A382     		strh	r3, [r4, #20]	@ unaligned
 14477 0144 1346     		mov	r3, r2
 14478 0146 A375     		strb	r3, [r4, #22]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 328


1901:..\src/command_processing.c ****                 break;
 14479              		.loc 1 1901 0
 14480 0148 6DE0     		b	.L567
 14481              	.L563:
1902:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1903:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14482              		.loc 1 1903 0
 14483 014a 7869     		ldr	r0, [r7, #20]
 14484 014c FFF7FEFF 		bl	strlen
 14485 0150 0346     		mov	r3, r0
 14486 0152 1A46     		mov	r2, r3
 14487 0154 7B69     		ldr	r3, [r7, #20]
 14488 0156 1344     		add	r3, r3, r2
 14489 0158 7B4A     		ldr	r2, .L680+32
 14490 015a 1D46     		mov	r5, r3
 14491 015c 1446     		mov	r4, r2
 14492 015e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14493 0160 2860     		str	r0, [r5]	@ unaligned
 14494 0162 6960     		str	r1, [r5, #4]	@ unaligned
 14495 0164 AA60     		str	r2, [r5, #8]	@ unaligned
 14496 0166 EB60     		str	r3, [r5, #12]	@ unaligned
 14497 0168 03CC     		ldmia	r4!, {r0, r1}
 14498 016a 2861     		str	r0, [r5, #16]	@ unaligned
 14499 016c 6961     		str	r1, [r5, #20]	@ unaligned
 14500 016e 2388     		ldrh	r3, [r4]	@ unaligned
 14501 0170 A278     		ldrb	r2, [r4, #2]
 14502 0172 2B83     		strh	r3, [r5, #24]	@ unaligned
 14503 0174 1346     		mov	r3, r2
 14504 0176 AB76     		strb	r3, [r5, #26]
1904:..\src/command_processing.c ****                 break;
 14505              		.loc 1 1904 0
 14506 0178 55E0     		b	.L567
 14507              	.L564:
1905:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1906:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14508              		.loc 1 1906 0
 14509 017a 7869     		ldr	r0, [r7, #20]
 14510 017c FFF7FEFF 		bl	strlen
 14511 0180 0346     		mov	r3, r0
 14512 0182 1A46     		mov	r2, r3
 14513 0184 7B69     		ldr	r3, [r7, #20]
 14514 0186 1344     		add	r3, r3, r2
 14515 0188 704A     		ldr	r2, .L680+36
 14516 018a 1446     		mov	r4, r2
 14517 018c 9E46     		mov	lr, r3
 14518 018e 04F1200C 		add	ip, r4, #32
 14519              	.L568:
 14520 0192 7546     		mov	r5, lr
 14521 0194 2646     		mov	r6, r4
 14522 0196 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14523 0198 2860     		str	r0, [r5]	@ unaligned
 14524 019a 6960     		str	r1, [r5, #4]	@ unaligned
 14525 019c AA60     		str	r2, [r5, #8]	@ unaligned
 14526 019e EB60     		str	r3, [r5, #12]	@ unaligned
 14527 01a0 1034     		adds	r4, r4, #16
 14528 01a2 0EF1100E 		add	lr, lr, #16
 14529 01a6 6445     		cmp	r4, ip
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 329


 14530 01a8 F3D1     		bne	.L568
 14531 01aa 7346     		mov	r3, lr
 14532 01ac 2246     		mov	r2, r4
 14533 01ae 1068     		ldr	r0, [r2]	@ unaligned
 14534 01b0 1860     		str	r0, [r3]	@ unaligned
 14535 01b2 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14536 01b4 9279     		ldrb	r2, [r2, #6]
 14537 01b6 9980     		strh	r1, [r3, #4]	@ unaligned
 14538 01b8 9A71     		strb	r2, [r3, #6]
1907:..\src/command_processing.c ****                 break;
 14539              		.loc 1 1907 0
 14540 01ba 34E0     		b	.L567
 14541              	.L565:
1908:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1909:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14542              		.loc 1 1909 0
 14543 01bc 7869     		ldr	r0, [r7, #20]
 14544 01be FFF7FEFF 		bl	strlen
 14545 01c2 0346     		mov	r3, r0
 14546 01c4 1A46     		mov	r2, r3
 14547 01c6 7B69     		ldr	r3, [r7, #20]
 14548 01c8 1344     		add	r3, r3, r2
 14549 01ca 614A     		ldr	r2, .L680+40
 14550 01cc 1446     		mov	r4, r2
 14551 01ce 9E46     		mov	lr, r3
 14552 01d0 04F1200C 		add	ip, r4, #32
 14553              	.L569:
 14554 01d4 7546     		mov	r5, lr
 14555 01d6 2646     		mov	r6, r4
 14556 01d8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14557 01da 2860     		str	r0, [r5]	@ unaligned
 14558 01dc 6960     		str	r1, [r5, #4]	@ unaligned
 14559 01de AA60     		str	r2, [r5, #8]	@ unaligned
 14560 01e0 EB60     		str	r3, [r5, #12]	@ unaligned
 14561 01e2 1034     		adds	r4, r4, #16
 14562 01e4 0EF1100E 		add	lr, lr, #16
 14563 01e8 6445     		cmp	r4, ip
 14564 01ea F3D1     		bne	.L569
 14565 01ec 7246     		mov	r2, lr
 14566 01ee 2346     		mov	r3, r4
 14567 01f0 03CB     		ldmia	r3!, {r0, r1}
 14568 01f2 1060     		str	r0, [r2]	@ unaligned
 14569 01f4 5160     		str	r1, [r2, #4]	@ unaligned
 14570 01f6 1B88     		ldrh	r3, [r3]	@ unaligned
 14571 01f8 1381     		strh	r3, [r2, #8]	@ unaligned
1910:..\src/command_processing.c ****                 break;
 14572              		.loc 1 1910 0
 14573 01fa 14E0     		b	.L567
 14574              	.L566:
1911:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1912:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14575              		.loc 1 1912 0
 14576 01fc 7869     		ldr	r0, [r7, #20]
 14577 01fe FFF7FEFF 		bl	strlen
 14578 0202 0346     		mov	r3, r0
 14579 0204 1A46     		mov	r2, r3
 14580 0206 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 330


 14581 0208 1344     		add	r3, r3, r2
 14582 020a 524A     		ldr	r2, .L680+44
 14583 020c 1D46     		mov	r5, r3
 14584 020e 1446     		mov	r4, r2
 14585 0210 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14586 0212 2860     		str	r0, [r5]	@ unaligned
 14587 0214 6960     		str	r1, [r5, #4]	@ unaligned
 14588 0216 AA60     		str	r2, [r5, #8]	@ unaligned
 14589 0218 EB60     		str	r3, [r5, #12]	@ unaligned
 14590 021a 07CC     		ldmia	r4!, {r0, r1, r2}
 14591 021c 2861     		str	r0, [r5, #16]	@ unaligned
 14592 021e 6961     		str	r1, [r5, #20]	@ unaligned
 14593 0220 AA61     		str	r2, [r5, #24]	@ unaligned
1913:..\src/command_processing.c ****                 break;
 14594              		.loc 1 1913 0
 14595 0222 00E0     		b	.L567
 14596              	.L678:
1914:..\src/command_processing.c ****             default:
1915:..\src/command_processing.c ****                 break;
 14597              		.loc 1 1915 0
 14598 0224 00BF     		nop
 14599              	.L567:
1916:..\src/command_processing.c ****         }
1917:..\src/command_processing.c ****         
1918:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14600              		.loc 1 1918 0
 14601 0226 D7F88830 		ldr	r3, [r7, #136]
 14602 022a 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14603 022e 002B     		cmp	r3, #0
 14604 0230 02D0     		beq	.L571
 14605 0232 012B     		cmp	r3, #1
 14606 0234 15D0     		beq	.L572
 14607 0236 26E0     		b	.L570
 14608              	.L571:
1919:..\src/command_processing.c ****             case RIGHT_HAND:
1920:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14609              		.loc 1 1920 0
 14610 0238 7869     		ldr	r0, [r7, #20]
 14611 023a FFF7FEFF 		bl	strlen
 14612 023e 0346     		mov	r3, r0
 14613 0240 1A46     		mov	r2, r3
 14614 0242 7B69     		ldr	r3, [r7, #20]
 14615 0244 1344     		add	r3, r3, r2
 14616 0246 444A     		ldr	r2, .L680+48
 14617 0248 1D46     		mov	r5, r3
 14618 024a 1446     		mov	r4, r2
 14619 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14620 024e 2860     		str	r0, [r5]	@ unaligned
 14621 0250 6960     		str	r1, [r5, #4]	@ unaligned
 14622 0252 AA60     		str	r2, [r5, #8]	@ unaligned
 14623 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 14624 0256 2388     		ldrh	r3, [r4]	@ unaligned
 14625 0258 A278     		ldrb	r2, [r4, #2]
 14626 025a 2B82     		strh	r3, [r5, #16]	@ unaligned
 14627 025c 1346     		mov	r3, r2
 14628 025e AB74     		strb	r3, [r5, #18]
1921:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 331


 14629              		.loc 1 1921 0
 14630 0260 11E0     		b	.L570
 14631              	.L572:
1922:..\src/command_processing.c ****             case LEFT_HAND:
1923:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14632              		.loc 1 1923 0
 14633 0262 7869     		ldr	r0, [r7, #20]
 14634 0264 FFF7FEFF 		bl	strlen
 14635 0268 0346     		mov	r3, r0
 14636 026a 1A46     		mov	r2, r3
 14637 026c 7B69     		ldr	r3, [r7, #20]
 14638 026e 1344     		add	r3, r3, r2
 14639 0270 3A4A     		ldr	r2, .L680+52
 14640 0272 1D46     		mov	r5, r3
 14641 0274 1446     		mov	r4, r2
 14642 0276 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14643 0278 2860     		str	r0, [r5]	@ unaligned
 14644 027a 6960     		str	r1, [r5, #4]	@ unaligned
 14645 027c AA60     		str	r2, [r5, #8]	@ unaligned
 14646 027e EB60     		str	r3, [r5, #12]	@ unaligned
 14647 0280 2388     		ldrh	r3, [r4]	@ unaligned
 14648 0282 2B82     		strh	r3, [r5, #16]	@ unaligned
1924:..\src/command_processing.c ****                 break;
 14649              		.loc 1 1924 0
 14650 0284 00BF     		nop
 14651              	.L570:
1925:..\src/command_processing.c ****         }
1926:..\src/command_processing.c **** 
1927:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14652              		.loc 1 1927 0
 14653 0286 D7F88830 		ldr	r3, [r7, #136]
 14654 028a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14655 028e 012B     		cmp	r3, #1
 14656 0290 02D0     		beq	.L574
 14657 0292 022B     		cmp	r3, #2
 14658 0294 11D0     		beq	.L575
 14659 0296 21E0     		b	.L676
 14660              	.L574:
1928:..\src/command_processing.c ****             case MARIA:
1929:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14661              		.loc 1 1929 0
 14662 0298 7869     		ldr	r0, [r7, #20]
 14663 029a FFF7FEFF 		bl	strlen
 14664 029e 0346     		mov	r3, r0
 14665 02a0 1A46     		mov	r2, r3
 14666 02a2 7B69     		ldr	r3, [r7, #20]
 14667 02a4 1344     		add	r3, r3, r2
 14668 02a6 2E4A     		ldr	r2, .L680+56
 14669 02a8 1C46     		mov	r4, r3
 14670 02aa 1346     		mov	r3, r2
 14671 02ac 07CB     		ldmia	r3!, {r0, r1, r2}
 14672 02ae 2060     		str	r0, [r4]	@ unaligned
 14673 02b0 6160     		str	r1, [r4, #4]	@ unaligned
 14674 02b2 A260     		str	r2, [r4, #8]	@ unaligned
 14675 02b4 1B88     		ldrh	r3, [r3]	@ unaligned
 14676 02b6 A381     		strh	r3, [r4, #12]	@ unaligned
1930:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 332


 14677              		.loc 1 1930 0
 14678 02b8 24E0     		b	.L576
 14679              	.L575:
1931:..\src/command_processing.c ****             case ROZA:
1932:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 14680              		.loc 1 1932 0
 14681 02ba 7869     		ldr	r0, [r7, #20]
 14682 02bc FFF7FEFF 		bl	strlen
 14683 02c0 0346     		mov	r3, r0
 14684 02c2 1A46     		mov	r2, r3
 14685 02c4 7B69     		ldr	r3, [r7, #20]
 14686 02c6 1344     		add	r3, r3, r2
 14687 02c8 264A     		ldr	r2, .L680+60
 14688 02ca 1C46     		mov	r4, r3
 14689 02cc 1346     		mov	r3, r2
 14690 02ce 07CB     		ldmia	r3!, {r0, r1, r2}
 14691 02d0 2060     		str	r0, [r4]	@ unaligned
 14692 02d2 6160     		str	r1, [r4, #4]	@ unaligned
 14693 02d4 A260     		str	r2, [r4, #8]	@ unaligned
 14694 02d6 1B78     		ldrb	r3, [r3]
 14695 02d8 2373     		strb	r3, [r4, #12]
1933:..\src/command_processing.c ****                 break;
 14696              		.loc 1 1933 0
 14697 02da 13E0     		b	.L576
 14698              	.L676:
1934:..\src/command_processing.c ****             default:
1935:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14699              		.loc 1 1935 0
 14700 02dc 7869     		ldr	r0, [r7, #20]
 14701 02de FFF7FEFF 		bl	strlen
 14702 02e2 0346     		mov	r3, r0
 14703 02e4 1A46     		mov	r2, r3
 14704 02e6 7B69     		ldr	r3, [r7, #20]
 14705 02e8 1344     		add	r3, r3, r2
 14706 02ea 1F4A     		ldr	r2, .L680+64
 14707 02ec 1D46     		mov	r5, r3
 14708 02ee 1446     		mov	r4, r2
 14709 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14710 02f2 2860     		str	r0, [r5]	@ unaligned
 14711 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 14712 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 14713 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 14714 02fa 2068     		ldr	r0, [r4]	@ unaligned
 14715 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 14716 02fe 2379     		ldrb	r3, [r4, #4]
 14717 0300 2B75     		strb	r3, [r5, #20]
1936:..\src/command_processing.c ****                 break;
 14718              		.loc 1 1936 0
 14719 0302 00BF     		nop
 14720              	.L576:
1937:..\src/command_processing.c ****         }
1938:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14721              		.loc 1 1938 0
 14722 0304 7869     		ldr	r0, [r7, #20]
 14723 0306 FFF7FEFF 		bl	strlen
 14724 030a 0346     		mov	r3, r0
 14725 030c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 333


 14726 030e 7B69     		ldr	r3, [r7, #20]
 14727 0310 1344     		add	r3, r3, r2
 14728 0312 064A     		ldr	r2, .L680+4
 14729 0314 1188     		ldrh	r1, [r2]	@ unaligned
 14730 0316 9278     		ldrb	r2, [r2, #2]
 14731 0318 1980     		strh	r1, [r3]	@ unaligned
 14732 031a 9A70     		strb	r2, [r3, #2]
 14733              	.LBB21:
1939:..\src/command_processing.c ****         
1940:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14734              		.loc 1 1940 0
 14735 031c 0023     		movs	r3, #0
 14736 031e 87F89330 		strb	r3, [r7, #147]
 14737 0322 01F0D9B9 		b	.L577
 14738              	.L681:
 14739 0326 00BF     		.align	2
 14740              	.L680:
 14741 0328 00000000 		.word	c_mem
 14742 032c 30110000 		.word	.LC151
 14743 0330 34110000 		.word	.LC152
 14744 0334 48110000 		.word	.LC153
 14745 0338 6C110000 		.word	.LC154
 14746 033c 74110000 		.word	.LC155
 14747 0340 84110000 		.word	.LC156
 14748 0344 90110000 		.word	.LC157
 14749 0348 A8110000 		.word	.LC158
 14750 034c C4110000 		.word	.LC159
 14751 0350 EC110000 		.word	.LC160
 14752 0354 18120000 		.word	.LC161
 14753 0358 34120000 		.word	.LC162
 14754 035c 48120000 		.word	.LC163
 14755 0360 5C120000 		.word	.LC164
 14756 0364 6C120000 		.word	.LC165
 14757 0368 7C120000 		.word	.LC166
 14758              	.L642:
 14759              	.LBB22:
1941:..\src/command_processing.c ****             
1942:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14760              		.loc 1 1942 0
 14761 036c 97F89330 		ldrb	r3, [r7, #147]
 14762 0370 87F88730 		strb	r3, [r7, #135]
1943:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14763              		.loc 1 1943 0
 14764 0374 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 14765 0378 1346     		mov	r3, r2
 14766 037a DB00     		lsls	r3, r3, #3
 14767 037c 9B1A     		subs	r3, r3, r2
 14768 037e 1B01     		lsls	r3, r3, #4
 14769 0380 B033     		adds	r3, r3, #176
 14770 0382 D7F88820 		ldr	r2, [r7, #136]
 14771 0386 1344     		add	r3, r3, r2
 14772 0388 C7F88030 		str	r3, [r7, #128]
1944:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14773              		.loc 1 1944 0
 14774 038c D7F88030 		ldr	r3, [r7, #128]
 14775 0390 93F86030 		ldrb	r3, [r3, #96]
 14776 0394 87F87F30 		strb	r3, [r7, #127]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 334


1945:..\src/command_processing.c ****                   
1946:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14777              		.loc 1 1946 0
 14778 0398 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14779 039c 5A1C     		adds	r2, r3, #1
 14780 039e 07F11803 		add	r3, r7, #24
 14781 03a2 AE49     		ldr	r1, .L682
 14782 03a4 1846     		mov	r0, r3
 14783 03a6 FFF7FEFF 		bl	sprintf
1947:..\src/command_processing.c ****             strcat(info_string, str);
 14784              		.loc 1 1947 0
 14785 03aa 07F11803 		add	r3, r7, #24
 14786 03ae 1946     		mov	r1, r3
 14787 03b0 7869     		ldr	r0, [r7, #20]
 14788 03b2 FFF7FEFF 		bl	strcat
1948:..\src/command_processing.c ****                         
1949:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14789              		.loc 1 1949 0
 14790 03b6 7869     		ldr	r0, [r7, #20]
 14791 03b8 FFF7FEFF 		bl	strlen
 14792 03bc 0346     		mov	r3, r0
 14793 03be 1A46     		mov	r2, r3
 14794 03c0 7B69     		ldr	r3, [r7, #20]
 14795 03c2 1344     		add	r3, r3, r2
 14796 03c4 A64A     		ldr	r2, .L682+4
 14797 03c6 1C46     		mov	r4, r3
 14798 03c8 1546     		mov	r5, r2
 14799 03ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14800 03cc 2060     		str	r0, [r4]	@ unaligned
 14801 03ce 6160     		str	r1, [r4, #4]	@ unaligned
 14802 03d0 A260     		str	r2, [r4, #8]	@ unaligned
 14803 03d2 E360     		str	r3, [r4, #12]	@ unaligned
1950:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14804              		.loc 1 1950 0
 14805 03d4 D7F88030 		ldr	r3, [r7, #128]
 14806 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14807 03dc 022B     		cmp	r3, #2
 14808 03de 10D1     		bne	.L578
1951:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14809              		.loc 1 1951 0
 14810 03e0 7869     		ldr	r0, [r7, #20]
 14811 03e2 FFF7FEFF 		bl	strlen
 14812 03e6 0346     		mov	r3, r0
 14813 03e8 1A46     		mov	r2, r3
 14814 03ea 7B69     		ldr	r3, [r7, #20]
 14815 03ec 1344     		add	r3, r3, r2
 14816 03ee 9D4A     		ldr	r2, .L682+8
 14817 03f0 1C46     		mov	r4, r3
 14818 03f2 1346     		mov	r3, r2
 14819 03f4 07CB     		ldmia	r3!, {r0, r1, r2}
 14820 03f6 2060     		str	r0, [r4]	@ unaligned
 14821 03f8 6160     		str	r1, [r4, #4]	@ unaligned
 14822 03fa A260     		str	r2, [r4, #8]	@ unaligned
 14823 03fc 1B88     		ldrh	r3, [r3]	@ unaligned
 14824 03fe A381     		strh	r3, [r4, #12]	@ unaligned
 14825 0400 25E0     		b	.L579
 14826              	.L578:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 335


1952:..\src/command_processing.c ****             else {
1953:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14827              		.loc 1 1953 0
 14828 0402 D7F88030 		ldr	r3, [r7, #128]
 14829 0406 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14830 040a 012B     		cmp	r3, #1
 14831 040c 0FD1     		bne	.L580
1954:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14832              		.loc 1 1954 0
 14833 040e 7869     		ldr	r0, [r7, #20]
 14834 0410 FFF7FEFF 		bl	strlen
 14835 0414 0346     		mov	r3, r0
 14836 0416 1A46     		mov	r2, r3
 14837 0418 7B69     		ldr	r3, [r7, #20]
 14838 041a 1344     		add	r3, r3, r2
 14839 041c 9249     		ldr	r1, .L682+12
 14840 041e 1A46     		mov	r2, r3
 14841 0420 0B46     		mov	r3, r1
 14842 0422 03CB     		ldmia	r3!, {r0, r1}
 14843 0424 1060     		str	r0, [r2]	@ unaligned
 14844 0426 5160     		str	r1, [r2, #4]	@ unaligned
 14845 0428 1B78     		ldrb	r3, [r3]
 14846 042a 1372     		strb	r3, [r2, #8]
 14847 042c 0FE0     		b	.L579
 14848              	.L580:
1955:..\src/command_processing.c ****                 else
1956:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14849              		.loc 1 1956 0
 14850 042e 7869     		ldr	r0, [r7, #20]
 14851 0430 FFF7FEFF 		bl	strlen
 14852 0434 0346     		mov	r3, r0
 14853 0436 1A46     		mov	r2, r3
 14854 0438 7B69     		ldr	r3, [r7, #20]
 14855 043a 1344     		add	r3, r3, r2
 14856 043c 8B4A     		ldr	r2, .L682+16
 14857 043e 1C46     		mov	r4, r3
 14858 0440 1346     		mov	r3, r2
 14859 0442 07CB     		ldmia	r3!, {r0, r1, r2}
 14860 0444 2060     		str	r0, [r4]	@ unaligned
 14861 0446 6160     		str	r1, [r4, #4]	@ unaligned
 14862 0448 A260     		str	r2, [r4, #8]	@ unaligned
 14863 044a 1B88     		ldrh	r3, [r3]	@ unaligned
 14864 044c A381     		strh	r3, [r4, #12]	@ unaligned
 14865              	.L579:
1957:..\src/command_processing.c ****             }
1958:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14866              		.loc 1 1958 0
 14867 044e D7F88030 		ldr	r3, [r7, #128]
 14868 0452 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14869 0456 022B     		cmp	r3, #2
 14870 0458 13D1     		bne	.L581
1959:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14871              		.loc 1 1959 0
 14872 045a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14873 045e 844A     		ldr	r2, .L682+20
 14874 0460 1B01     		lsls	r3, r3, #4
 14875 0462 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 336


 14876 0464 0433     		adds	r3, r3, #4
 14877 0466 1A68     		ldr	r2, [r3]
 14878 0468 07F11803 		add	r3, r7, #24
 14879 046c 8149     		ldr	r1, .L682+24
 14880 046e 1846     		mov	r0, r3
 14881 0470 FFF7FEFF 		bl	sprintf
1960:..\src/command_processing.c ****                 strcat(info_string,str);
 14882              		.loc 1 1960 0
 14883 0474 07F11803 		add	r3, r7, #24
 14884 0478 1946     		mov	r1, r3
 14885 047a 7869     		ldr	r0, [r7, #20]
 14886 047c FFF7FEFF 		bl	strcat
 14887 0480 39E0     		b	.L582
 14888              	.L581:
1961:..\src/command_processing.c ****             }
1962:..\src/command_processing.c ****             else {
1963:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14889              		.loc 1 1963 0
 14890 0482 D7F88030 		ldr	r3, [r7, #128]
 14891 0486 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14892 048a 012B     		cmp	r3, #1
 14893 048c 13D1     		bne	.L583
1964:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14894              		.loc 1 1964 0
 14895 048e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14896 0492 774A     		ldr	r2, .L682+20
 14897 0494 1B01     		lsls	r3, r3, #4
 14898 0496 1344     		add	r3, r3, r2
 14899 0498 0833     		adds	r3, r3, #8
 14900 049a 1A68     		ldr	r2, [r3]
 14901 049c 07F11803 		add	r3, r7, #24
 14902 04a0 7449     		ldr	r1, .L682+24
 14903 04a2 1846     		mov	r0, r3
 14904 04a4 FFF7FEFF 		bl	sprintf
1965:..\src/command_processing.c ****                     strcat(info_string,str);
 14905              		.loc 1 1965 0
 14906 04a8 07F11803 		add	r3, r7, #24
 14907 04ac 1946     		mov	r1, r3
 14908 04ae 7869     		ldr	r0, [r7, #20]
 14909 04b0 FFF7FEFF 		bl	strcat
 14910 04b4 1FE0     		b	.L582
 14911              	.L583:
1966:..\src/command_processing.c ****                 }
1967:..\src/command_processing.c ****                 else {
1968:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14912              		.loc 1 1968 0
 14913 04b6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14914 04ba 6D4A     		ldr	r2, .L682+20
 14915 04bc 1B01     		lsls	r3, r3, #4
 14916 04be 1344     		add	r3, r3, r2
 14917 04c0 1968     		ldr	r1, [r3]
 14918 04c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14919 04c6 D7F88800 		ldr	r0, [r7, #136]
 14920 04ca 1346     		mov	r3, r2
 14921 04cc 5B00     		lsls	r3, r3, #1
 14922 04ce 1344     		add	r3, r3, r2
 14923 04d0 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 337


 14924 04d2 0344     		add	r3, r3, r0
 14925 04d4 03F29513 		addw	r3, r3, #405
 14926 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14927 04da 41FA03F2 		asr	r2, r1, r3
 14928 04de 07F11803 		add	r3, r7, #24
 14929 04e2 6449     		ldr	r1, .L682+24
 14930 04e4 1846     		mov	r0, r3
 14931 04e6 FFF7FEFF 		bl	sprintf
1969:..\src/command_processing.c ****                     strcat(info_string,str);
 14932              		.loc 1 1969 0
 14933 04ea 07F11803 		add	r3, r7, #24
 14934 04ee 1946     		mov	r1, r3
 14935 04f0 7869     		ldr	r0, [r7, #20]
 14936 04f2 FFF7FEFF 		bl	strcat
 14937              	.L582:
1970:..\src/command_processing.c ****                 }
1971:..\src/command_processing.c ****             }
1972:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14938              		.loc 1 1972 0
 14939 04f6 7869     		ldr	r0, [r7, #20]
 14940 04f8 FFF7FEFF 		bl	strlen
 14941 04fc 0346     		mov	r3, r0
 14942 04fe 1A46     		mov	r2, r3
 14943 0500 7B69     		ldr	r3, [r7, #20]
 14944 0502 1344     		add	r3, r3, r2
 14945 0504 5C4A     		ldr	r2, .L682+28
 14946 0506 1188     		ldrh	r1, [r2]	@ unaligned
 14947 0508 9278     		ldrb	r2, [r2, #2]
 14948 050a 1980     		strh	r1, [r3]	@ unaligned
 14949 050c 9A70     		strb	r2, [r3, #2]
1973:..\src/command_processing.c **** 
1974:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14950              		.loc 1 1974 0
 14951 050e 07F11803 		add	r3, r7, #24
 14952 0512 5A4A     		ldr	r2, .L682+32
 14953 0514 1C46     		mov	r4, r3
 14954 0516 1346     		mov	r3, r2
 14955 0518 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14956 051a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1975:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14957              		.loc 1 1975 0
 14958 051e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14959 0522 574A     		ldr	r2, .L682+36
 14960 0524 1B01     		lsls	r3, r3, #4
 14961 0526 1344     		add	r3, r3, r2
 14962 0528 0C33     		adds	r3, r3, #12
 14963 052a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14964 052c 03F00103 		and	r3, r3, #1
 14965 0530 002B     		cmp	r3, #0
 14966 0532 0FD0     		beq	.L584
1976:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14967              		.loc 1 1976 0
 14968 0534 07F11803 		add	r3, r7, #24
 14969 0538 1846     		mov	r0, r3
 14970 053a FFF7FEFF 		bl	strlen
 14971 053e 0346     		mov	r3, r0
 14972 0540 1A46     		mov	r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 338


 14973 0542 07F11803 		add	r3, r7, #24
 14974 0546 1344     		add	r3, r3, r2
 14975 0548 4E4A     		ldr	r2, .L682+40
 14976 054a 1068     		ldr	r0, [r2]	@ unaligned
 14977 054c 1860     		str	r0, [r3]	@ unaligned
 14978 054e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14979 0550 9A80     		strh	r2, [r3, #4]	@ unaligned
 14980 0552 0EE0     		b	.L585
 14981              	.L584:
1977:..\src/command_processing.c ****             } else {
1978:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14982              		.loc 1 1978 0
 14983 0554 07F11803 		add	r3, r7, #24
 14984 0558 1846     		mov	r0, r3
 14985 055a FFF7FEFF 		bl	strlen
 14986 055e 0346     		mov	r3, r0
 14987 0560 1A46     		mov	r2, r3
 14988 0562 07F11803 		add	r3, r7, #24
 14989 0566 1344     		add	r3, r3, r2
 14990 0568 474A     		ldr	r2, .L682+44
 14991 056a 1068     		ldr	r0, [r2]	@ unaligned
 14992 056c 1860     		str	r0, [r3]	@ unaligned
 14993 056e 1279     		ldrb	r2, [r2, #4]
 14994 0570 1A71     		strb	r2, [r3, #4]
 14995              	.L585:
1979:..\src/command_processing.c ****             }
1980:..\src/command_processing.c ****             strcat(info_string, str);
 14996              		.loc 1 1980 0
 14997 0572 07F11803 		add	r3, r7, #24
 14998 0576 1946     		mov	r1, r3
 14999 0578 7869     		ldr	r0, [r7, #20]
 15000 057a FFF7FEFF 		bl	strcat
1981:..\src/command_processing.c ****                         
1982:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 15001              		.loc 1 1982 0
 15002 057e 7869     		ldr	r0, [r7, #20]
 15003 0580 FFF7FEFF 		bl	strlen
 15004 0584 0346     		mov	r3, r0
 15005 0586 1A46     		mov	r2, r3
 15006 0588 7B69     		ldr	r3, [r7, #20]
 15007 058a 1344     		add	r3, r3, r2
 15008 058c 3F4A     		ldr	r2, .L682+48
 15009 058e 1D46     		mov	r5, r3
 15010 0590 1446     		mov	r4, r2
 15011 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15012 0594 2860     		str	r0, [r5]	@ unaligned
 15013 0596 6960     		str	r1, [r5, #4]	@ unaligned
 15014 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 15015 059a EB60     		str	r3, [r5, #12]	@ unaligned
 15016 059c 03CC     		ldmia	r4!, {r0, r1}
 15017 059e 2861     		str	r0, [r5, #16]	@ unaligned
 15018 05a0 6961     		str	r1, [r5, #20]	@ unaligned
 15019 05a2 2388     		ldrh	r3, [r4]	@ unaligned
 15020 05a4 A278     		ldrb	r2, [r4, #2]
 15021 05a6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15022 05a8 1346     		mov	r3, r2
 15023 05aa AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 339


1983:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 15024              		.loc 1 1983 0
 15025 05ac D7F88030 		ldr	r3, [r7, #128]
 15026 05b0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 15027 05b4 012B     		cmp	r3, #1
 15028 05b6 0CD1     		bne	.L586
1984:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 15029              		.loc 1 1984 0
 15030 05b8 7869     		ldr	r0, [r7, #20]
 15031 05ba FFF7FEFF 		bl	strlen
 15032 05be 0346     		mov	r3, r0
 15033 05c0 1A46     		mov	r2, r3
 15034 05c2 7B69     		ldr	r3, [r7, #20]
 15035 05c4 1344     		add	r3, r3, r2
 15036 05c6 324A     		ldr	r2, .L682+52
 15037 05c8 1068     		ldr	r0, [r2]	@ unaligned
 15038 05ca 1860     		str	r0, [r3]	@ unaligned
 15039 05cc 1279     		ldrb	r2, [r2, #4]
 15040 05ce 1A71     		strb	r2, [r3, #4]
 15041 05d0 09E0     		b	.L587
 15042              	.L586:
1985:..\src/command_processing.c ****             else
1986:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 15043              		.loc 1 1986 0
 15044 05d2 7869     		ldr	r0, [r7, #20]
 15045 05d4 FFF7FEFF 		bl	strlen
 15046 05d8 0346     		mov	r3, r0
 15047 05da 1A46     		mov	r2, r3
 15048 05dc 7B69     		ldr	r3, [r7, #20]
 15049 05de 1344     		add	r3, r3, r2
 15050 05e0 2C4A     		ldr	r2, .L682+56
 15051 05e2 1068     		ldr	r0, [r2]	@ unaligned
 15052 05e4 1860     		str	r0, [r3]	@ unaligned
 15053              	.L587:
1987:..\src/command_processing.c ****             
1988:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15054              		.loc 1 1988 0
 15055 05e6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15056 05ea 2B4A     		ldr	r2, .L682+60
 15057 05ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15058 05ee 1A46     		mov	r2, r3
 15059 05f0 07F11803 		add	r3, r7, #24
 15060 05f4 2949     		ldr	r1, .L682+64
 15061 05f6 1846     		mov	r0, r3
 15062 05f8 FFF7FEFF 		bl	sprintf
1989:..\src/command_processing.c ****             strcat(info_string, str);
 15063              		.loc 1 1989 0
 15064 05fc 07F11803 		add	r3, r7, #24
 15065 0600 1946     		mov	r1, r3
 15066 0602 7869     		ldr	r0, [r7, #20]
 15067 0604 FFF7FEFF 		bl	strcat
1990:..\src/command_processing.c **** 
1991:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 15068              		.loc 1 1991 0
 15069 0608 7869     		ldr	r0, [r7, #20]
 15070 060a FFF7FEFF 		bl	strlen
 15071 060e 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 340


 15072 0610 1A46     		mov	r2, r3
 15073 0612 7B69     		ldr	r3, [r7, #20]
 15074 0614 1344     		add	r3, r3, r2
 15075 0616 224A     		ldr	r2, .L682+68
 15076 0618 1D46     		mov	r5, r3
 15077 061a 1446     		mov	r4, r2
 15078 061c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15079 061e 2860     		str	r0, [r5]	@ unaligned
 15080 0620 6960     		str	r1, [r5, #4]	@ unaligned
 15081 0622 AA60     		str	r2, [r5, #8]	@ unaligned
 15082 0624 EB60     		str	r3, [r5, #12]	@ unaligned
 15083 0626 2068     		ldr	r0, [r4]	@ unaligned
 15084 0628 2861     		str	r0, [r5, #16]	@ unaligned
 15085 062a A388     		ldrh	r3, [r4, #4]	@ unaligned
 15086 062c AB82     		strh	r3, [r5, #20]	@ unaligned
1992:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 15087              		.loc 1 1992 0
 15088 062e 7869     		ldr	r0, [r7, #20]
 15089 0630 FFF7FEFF 		bl	strlen
 15090 0634 0346     		mov	r3, r0
 15091 0636 1A46     		mov	r2, r3
 15092 0638 7B69     		ldr	r3, [r7, #20]
 15093 063a 1344     		add	r3, r3, r2
 15094 063c 194A     		ldr	r2, .L682+72
 15095 063e 1C46     		mov	r4, r3
 15096 0640 1346     		mov	r3, r2
 15097 0642 07CB     		ldmia	r3!, {r0, r1, r2}
 15098 0644 2060     		str	r0, [r4]	@ unaligned
 15099 0646 6160     		str	r1, [r4, #4]	@ unaligned
 15100 0648 A260     		str	r2, [r4, #8]	@ unaligned
 15101 064a 1A88     		ldrh	r2, [r3]	@ unaligned
 15102 064c 9B78     		ldrb	r3, [r3, #2]
 15103 064e A281     		strh	r2, [r4, #12]	@ unaligned
 15104 0650 A373     		strb	r3, [r4, #14]
1993:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 15105              		.loc 1 1993 0
 15106 0652 0023     		movs	r3, #0
 15107 0654 C7F89430 		str	r3, [r7, #148]
 15108 0658 65E0     		b	.L588
 15109              	.L683:
 15110 065a 00BF     		.align	2
 15111              	.L682:
 15112 065c 94120000 		.word	.LC167
 15113 0660 A4120000 		.word	.LC168
 15114 0664 B4120000 		.word	.LC169
 15115 0668 C4120000 		.word	.LC170
 15116 066c D0120000 		.word	.LC171
 15117 0670 00000000 		.word	g_refOld
 15118 0674 E0120000 		.word	.LC172
 15119 0678 30110000 		.word	.LC151
 15120 067c E4120000 		.word	.LC173
 15121 0680 00000000 		.word	g_ref
 15122 0684 F4120000 		.word	.LC174
 15123 0688 FC120000 		.word	.LC175
 15124 068c 04130000 		.word	.LC176
 15125 0690 20130000 		.word	.LC177
 15126 0694 28130000 		.word	.LC178
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 341


 15127 0698 00000000 		.word	dev_pwm_limit
 15128 069c 2C130000 		.word	.LC179
 15129 06a0 3C130000 		.word	.LC180
 15130 06a4 54130000 		.word	.LC181
 15131              	.L590:
1994:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15132              		.loc 1 1994 0
 15133 06a8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15134 06ac B849     		ldr	r1, .L684
 15135 06ae 1346     		mov	r3, r2
 15136 06b0 5B00     		lsls	r3, r3, #1
 15137 06b2 1344     		add	r3, r3, r2
 15138 06b4 9B00     		lsls	r3, r3, #2
 15139 06b6 1344     		add	r3, r3, r2
 15140 06b8 D7F89420 		ldr	r2, [r7, #148]
 15141 06bc 1344     		add	r3, r3, r2
 15142 06be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15143 06c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15144 06c6 D7F88800 		ldr	r0, [r7, #136]
 15145 06ca 1346     		mov	r3, r2
 15146 06cc 5B00     		lsls	r3, r3, #1
 15147 06ce 1344     		add	r3, r3, r2
 15148 06d0 1B01     		lsls	r3, r3, #4
 15149 06d2 C218     		adds	r2, r0, r3
 15150 06d4 D7F89430 		ldr	r3, [r7, #148]
 15151 06d8 1344     		add	r3, r3, r2
 15152 06da 03F29513 		addw	r3, r3, #405
 15153 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15154 06e0 41FA03F2 		asr	r2, r1, r3
 15155 06e4 07F11803 		add	r3, r7, #24
 15156 06e8 AA49     		ldr	r1, .L684+4
 15157 06ea 1846     		mov	r0, r3
 15158 06ec FFF7FEFF 		bl	sprintf
1995:..\src/command_processing.c ****                 strcat(info_string, str);
 15159              		.loc 1 1995 0
 15160 06f0 07F11803 		add	r3, r7, #24
 15161 06f4 1946     		mov	r1, r3
 15162 06f6 7869     		ldr	r0, [r7, #20]
 15163 06f8 FFF7FEFF 		bl	strcat
1996:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15164              		.loc 1 1996 0
 15165 06fc D7F89430 		ldr	r3, [r7, #148]
 15166 0700 022B     		cmp	r3, #2
 15167 0702 0BD0     		beq	.L589
1997:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15168              		.loc 1 1997 0
 15169 0704 7869     		ldr	r0, [r7, #20]
 15170 0706 FFF7FEFF 		bl	strlen
 15171 070a 0346     		mov	r3, r0
 15172 070c 1A46     		mov	r2, r3
 15173 070e 7B69     		ldr	r3, [r7, #20]
 15174 0710 1344     		add	r3, r3, r2
 15175 0712 A14A     		ldr	r2, .L684+8
 15176 0714 1188     		ldrh	r1, [r2]	@ unaligned
 15177 0716 9278     		ldrb	r2, [r2, #2]
 15178 0718 1980     		strh	r1, [r3]	@ unaligned
 15179 071a 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 342


 15180              	.L589:
1993:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15181              		.loc 1 1993 0 discriminator 2
 15182 071c D7F89430 		ldr	r3, [r7, #148]
 15183 0720 0133     		adds	r3, r3, #1
 15184 0722 C7F89430 		str	r3, [r7, #148]
 15185              	.L588:
1993:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15186              		.loc 1 1993 0 is_stmt 0 discriminator 1
 15187 0726 D7F89430 		ldr	r3, [r7, #148]
 15188 072a 022B     		cmp	r3, #2
 15189 072c BCDD     		ble	.L590
1998:..\src/command_processing.c ****                 }                
1999:..\src/command_processing.c ****             }
2000:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15190              		.loc 1 2000 0 is_stmt 1
 15191 072e 7869     		ldr	r0, [r7, #20]
 15192 0730 FFF7FEFF 		bl	strlen
 15193 0734 0346     		mov	r3, r0
 15194 0736 1A46     		mov	r2, r3
 15195 0738 7B69     		ldr	r3, [r7, #20]
 15196 073a 1344     		add	r3, r3, r2
 15197 073c 974A     		ldr	r2, .L684+12
 15198 073e 1188     		ldrh	r1, [r2]	@ unaligned
 15199 0740 9278     		ldrb	r2, [r2, #2]
 15200 0742 1980     		strh	r1, [r3]	@ unaligned
 15201 0744 9A70     		strb	r2, [r3, #2]
2001:..\src/command_processing.c ****             
2002:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15202              		.loc 1 2002 0
 15203 0746 D7F88030 		ldr	r3, [r7, #128]
 15204 074a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15205 074e 062B     		cmp	r3, #6
 15206 0750 1AD1     		bne	.L591
2003:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15207              		.loc 1 2003 0
 15208 0752 934B     		ldr	r3, .L684+16
 15209 0754 1A6A     		ldr	r2, [r3, #32]
 15210 0756 924B     		ldr	r3, .L684+16
 15211 0758 5B6A     		ldr	r3, [r3, #36]
 15212 075a 07F11800 		add	r0, r7, #24
 15213 075e 9149     		ldr	r1, .L684+20
 15214 0760 FFF7FEFF 		bl	sprintf
2004:..\src/command_processing.c ****                 strcat(info_string, str);
 15215              		.loc 1 2004 0
 15216 0764 07F11803 		add	r3, r7, #24
 15217 0768 1946     		mov	r1, r3
 15218 076a 7869     		ldr	r0, [r7, #20]
 15219 076c FFF7FEFF 		bl	strcat
2005:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15220              		.loc 1 2005 0
 15221 0770 7869     		ldr	r0, [r7, #20]
 15222 0772 FFF7FEFF 		bl	strlen
 15223 0776 0346     		mov	r3, r0
 15224 0778 1A46     		mov	r2, r3
 15225 077a 7B69     		ldr	r3, [r7, #20]
 15226 077c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 343


 15227 077e 874A     		ldr	r2, .L684+12
 15228 0780 1188     		ldrh	r1, [r2]	@ unaligned
 15229 0782 9278     		ldrb	r2, [r2, #2]
 15230 0784 1980     		strh	r1, [r3]	@ unaligned
 15231 0786 9A70     		strb	r2, [r3, #2]
 15232              	.L591:
2006:..\src/command_processing.c ****             }
2007:..\src/command_processing.c **** 
2008:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15233              		.loc 1 2008 0
 15234 0788 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15235 078c 591C     		adds	r1, r3, #1
 15236 078e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15237 0792 854A     		ldr	r2, .L684+24
 15238 0794 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15239 0798 07F11800 		add	r0, r7, #24
 15240 079c 0A46     		mov	r2, r1
 15241 079e 8349     		ldr	r1, .L684+28
 15242 07a0 FFF7FEFF 		bl	sprintf
2009:..\src/command_processing.c ****             strcat(info_string, str);
 15243              		.loc 1 2009 0
 15244 07a4 07F11803 		add	r3, r7, #24
 15245 07a8 1946     		mov	r1, r3
 15246 07aa 7869     		ldr	r0, [r7, #20]
 15247 07ac FFF7FEFF 		bl	strcat
2010:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15248              		.loc 1 2010 0
 15249 07b0 7869     		ldr	r0, [r7, #20]
 15250 07b2 FFF7FEFF 		bl	strlen
 15251 07b6 0346     		mov	r3, r0
 15252 07b8 1A46     		mov	r2, r3
 15253 07ba 7B69     		ldr	r3, [r7, #20]
 15254 07bc 1344     		add	r3, r3, r2
 15255 07be 774A     		ldr	r2, .L684+12
 15256 07c0 1188     		ldrh	r1, [r2]	@ unaligned
 15257 07c2 9278     		ldrb	r2, [r2, #2]
 15258 07c4 1980     		strh	r1, [r3]	@ unaligned
 15259 07c6 9A70     		strb	r2, [r3, #2]
2011:..\src/command_processing.c ****             
2012:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15260              		.loc 1 2012 0
 15261 07c8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15262 07cc 591C     		adds	r1, r3, #1
 15263 07ce 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15264 07d2 774A     		ldr	r2, .L684+32
 15265 07d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15266 07d8 07F11800 		add	r0, r7, #24
 15267 07dc 0A46     		mov	r2, r1
 15268 07de 7549     		ldr	r1, .L684+36
 15269 07e0 FFF7FEFF 		bl	sprintf
2013:..\src/command_processing.c ****             strcat(info_string, str);
 15270              		.loc 1 2013 0
 15271 07e4 07F11803 		add	r3, r7, #24
 15272 07e8 1946     		mov	r1, r3
 15273 07ea 7869     		ldr	r0, [r7, #20]
 15274 07ec FFF7FEFF 		bl	strcat
2014:..\src/command_processing.c ****             strcat(info_string, "\r\n");
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 344


 15275              		.loc 1 2014 0
 15276 07f0 7869     		ldr	r0, [r7, #20]
 15277 07f2 FFF7FEFF 		bl	strlen
 15278 07f6 0346     		mov	r3, r0
 15279 07f8 1A46     		mov	r2, r3
 15280 07fa 7B69     		ldr	r3, [r7, #20]
 15281 07fc 1344     		add	r3, r3, r2
 15282 07fe 674A     		ldr	r2, .L684+12
 15283 0800 1188     		ldrh	r1, [r2]	@ unaligned
 15284 0802 9278     		ldrb	r2, [r2, #2]
 15285 0804 1980     		strh	r1, [r3]	@ unaligned
 15286 0806 9A70     		strb	r2, [r3, #2]
2015:..\src/command_processing.c **** 
2016:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15287              		.loc 1 2016 0
 15288 0808 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15289 080c 5C1C     		adds	r4, r3, #1
 15290 080e 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15291 0812 5F4A     		ldr	r2, .L684
 15292 0814 3421     		movs	r1, #52
 15293 0816 01FB03F3 		mul	r3, r1, r3
 15294 081a 1344     		add	r3, r3, r2
 15295 081c 0C33     		adds	r3, r3, #12
 15296 081e 1B68     		ldr	r3, [r3]
 15297 0820 07F11800 		add	r0, r7, #24
 15298 0824 2246     		mov	r2, r4
 15299 0826 6449     		ldr	r1, .L684+40
 15300 0828 FFF7FEFF 		bl	sprintf
2017:..\src/command_processing.c ****             strcat(info_string, str);
 15301              		.loc 1 2017 0
 15302 082c 07F11803 		add	r3, r7, #24
 15303 0830 1946     		mov	r1, r3
 15304 0832 7869     		ldr	r0, [r7, #20]
 15305 0834 FFF7FEFF 		bl	strcat
2018:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15306              		.loc 1 2018 0
 15307 0838 7869     		ldr	r0, [r7, #20]
 15308 083a FFF7FEFF 		bl	strlen
 15309 083e 0346     		mov	r3, r0
 15310 0840 1A46     		mov	r2, r3
 15311 0842 7B69     		ldr	r3, [r7, #20]
 15312 0844 1344     		add	r3, r3, r2
 15313 0846 554A     		ldr	r2, .L684+12
 15314 0848 1188     		ldrh	r1, [r2]	@ unaligned
 15315 084a 9278     		ldrb	r2, [r2, #2]
 15316 084c 1980     		strh	r1, [r3]	@ unaligned
 15317 084e 9A70     		strb	r2, [r3, #2]
2019:..\src/command_processing.c ****             
2020:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15318              		.loc 1 2020 0
 15319 0850 D7F88030 		ldr	r3, [r7, #128]
 15320 0854 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15321 0858 012B     		cmp	r3, #1
 15322 085a 23D1     		bne	.L592
2021:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15323              		.loc 1 2021 0
 15324 085c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 345


 15325 0860 5C1C     		adds	r4, r3, #1
 15326 0862 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15327 0866 4A4A     		ldr	r2, .L684
 15328 0868 3421     		movs	r1, #52
 15329 086a 01FB03F3 		mul	r3, r1, r3
 15330 086e 1344     		add	r3, r3, r2
 15331 0870 1433     		adds	r3, r3, #20
 15332 0872 1B68     		ldr	r3, [r3]
 15333 0874 07F11800 		add	r0, r7, #24
 15334 0878 2246     		mov	r2, r4
 15335 087a 5049     		ldr	r1, .L684+44
 15336 087c FFF7FEFF 		bl	sprintf
2022:..\src/command_processing.c ****                 strcat(info_string, str);
 15337              		.loc 1 2022 0
 15338 0880 07F11803 		add	r3, r7, #24
 15339 0884 1946     		mov	r1, r3
 15340 0886 7869     		ldr	r0, [r7, #20]
 15341 0888 FFF7FEFF 		bl	strcat
2023:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15342              		.loc 1 2023 0
 15343 088c 7869     		ldr	r0, [r7, #20]
 15344 088e FFF7FEFF 		bl	strlen
 15345 0892 0346     		mov	r3, r0
 15346 0894 1A46     		mov	r2, r3
 15347 0896 7B69     		ldr	r3, [r7, #20]
 15348 0898 1344     		add	r3, r3, r2
 15349 089a 404A     		ldr	r2, .L684+12
 15350 089c 1188     		ldrh	r1, [r2]	@ unaligned
 15351 089e 9278     		ldrb	r2, [r2, #2]
 15352 08a0 1980     		strh	r1, [r3]	@ unaligned
 15353 08a2 9A70     		strb	r2, [r3, #2]
 15354              	.L592:
2024:..\src/command_processing.c ****             }
2025:..\src/command_processing.c ****             
2026:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15355              		.loc 1 2026 0
 15356 08a4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15357 08a8 5A1C     		adds	r2, r3, #1
 15358 08aa 07F11803 		add	r3, r7, #24
 15359 08ae 4449     		ldr	r1, .L684+48
 15360 08b0 1846     		mov	r0, r3
 15361 08b2 FFF7FEFF 		bl	sprintf
2027:..\src/command_processing.c ****             strcat(info_string, str);
 15362              		.loc 1 2027 0
 15363 08b6 07F11803 		add	r3, r7, #24
 15364 08ba 1946     		mov	r1, r3
 15365 08bc 7869     		ldr	r0, [r7, #20]
 15366 08be FFF7FEFF 		bl	strcat
2028:..\src/command_processing.c **** 
2029:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15367              		.loc 1 2029 0
 15368 08c2 7869     		ldr	r0, [r7, #20]
 15369 08c4 FFF7FEFF 		bl	strlen
 15370 08c8 0346     		mov	r3, r0
 15371 08ca 1A46     		mov	r2, r3
 15372 08cc 7B69     		ldr	r3, [r7, #20]
 15373 08ce 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 346


 15374 08d0 3C4A     		ldr	r2, .L684+52
 15375 08d2 1D46     		mov	r5, r3
 15376 08d4 1446     		mov	r4, r2
 15377 08d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15378 08d8 2860     		str	r0, [r5]	@ unaligned
 15379 08da 6960     		str	r1, [r5, #4]	@ unaligned
 15380 08dc AA60     		str	r2, [r5, #8]	@ unaligned
 15381 08de EB60     		str	r3, [r5, #12]	@ unaligned
 15382 08e0 2378     		ldrb	r3, [r4]
 15383 08e2 2B74     		strb	r3, [r5, #16]
2030:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15384              		.loc 1 2030 0
 15385 08e4 D7F88030 		ldr	r3, [r7, #128]
 15386 08e8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15387 08ec 032B     		cmp	r3, #3
 15388 08ee 73D0     		beq	.L593
2031:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15389              		.loc 1 2031 0
 15390 08f0 D7F88030 		ldr	r3, [r7, #128]
 15391 08f4 1B68     		ldr	r3, [r3]
 15392 08f6 1846     		mov	r0, r3
 15393 08f8 FFF7FEFF 		bl	__aeabi_i2d
 15394 08fc 4FF00002 		mov	r2, #0
 15395 0900 314B     		ldr	r3, .L684+56
 15396 0902 FFF7FEFF 		bl	__aeabi_ddiv
 15397 0906 0346     		mov	r3, r0
 15398 0908 0C46     		mov	r4, r1
 15399 090a 07F11800 		add	r0, r7, #24
 15400 090e 1A46     		mov	r2, r3
 15401 0910 2346     		mov	r3, r4
 15402 0912 2E49     		ldr	r1, .L684+60
 15403 0914 FFF7FEFF 		bl	sprintf
2032:..\src/command_processing.c ****                 strcat(info_string, str);
 15404              		.loc 1 2032 0
 15405 0918 07F11803 		add	r3, r7, #24
 15406 091c 1946     		mov	r1, r3
 15407 091e 7869     		ldr	r0, [r7, #20]
 15408 0920 FFF7FEFF 		bl	strcat
2033:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15409              		.loc 1 2033 0
 15410 0924 D7F88030 		ldr	r3, [r7, #128]
 15411 0928 5B68     		ldr	r3, [r3, #4]
 15412 092a 1846     		mov	r0, r3
 15413 092c FFF7FEFF 		bl	__aeabi_i2d
 15414 0930 4FF00002 		mov	r2, #0
 15415 0934 244B     		ldr	r3, .L684+56
 15416 0936 FFF7FEFF 		bl	__aeabi_ddiv
 15417 093a 0346     		mov	r3, r0
 15418 093c 0C46     		mov	r4, r1
 15419 093e 07F11800 		add	r0, r7, #24
 15420 0942 1A46     		mov	r2, r3
 15421 0944 2346     		mov	r3, r4
 15422 0946 2249     		ldr	r1, .L684+64
 15423 0948 FFF7FEFF 		bl	sprintf
2034:..\src/command_processing.c ****                 strcat(info_string, str);
 15424              		.loc 1 2034 0
 15425 094c 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 347


 15426 0950 1946     		mov	r1, r3
 15427 0952 7869     		ldr	r0, [r7, #20]
 15428 0954 FFF7FEFF 		bl	strcat
2035:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15429              		.loc 1 2035 0
 15430 0958 D7F88030 		ldr	r3, [r7, #128]
 15431 095c 9B68     		ldr	r3, [r3, #8]
 15432 095e 1846     		mov	r0, r3
 15433 0960 FFF7FEFF 		bl	__aeabi_i2d
 15434 0964 4FF00002 		mov	r2, #0
 15435 0968 174B     		ldr	r3, .L684+56
 15436 096a FFF7FEFF 		bl	__aeabi_ddiv
 15437 096e 0346     		mov	r3, r0
 15438 0970 0C46     		mov	r4, r1
 15439 0972 07F11800 		add	r0, r7, #24
 15440 0976 1A46     		mov	r2, r3
 15441 0978 2346     		mov	r3, r4
 15442 097a 1649     		ldr	r1, .L684+68
 15443 097c FFF7FEFF 		bl	sprintf
2036:..\src/command_processing.c ****                 strcat(info_string, str);
 15444              		.loc 1 2036 0
 15445 0980 07F11803 		add	r3, r7, #24
 15446 0984 1946     		mov	r1, r3
 15447 0986 7869     		ldr	r0, [r7, #20]
 15448 0988 FFF7FEFF 		bl	strcat
 15449 098c 72E0     		b	.L594
 15450              	.L685:
 15451 098e 00BF     		.align	2
 15452              	.L684:
 15453 0990 00000000 		.word	g_meas
 15454 0994 64130000 		.word	.LC182
 15455 0998 68130000 		.word	.LC183
 15456 099c 30110000 		.word	.LC151
 15457 09a0 00000000 		.word	g_adc_measOld
 15458 09a4 6C130000 		.word	.LC184
 15459 09a8 00000000 		.word	dev_tension
 15460 09ac 8C130000 		.word	.LC185
 15461 09b0 00000000 		.word	pow_tension
 15462 09b4 AC130000 		.word	.LC186
 15463 09b8 D4130000 		.word	.LC187
 15464 09bc EC130000 		.word	.LC188
 15465 09c0 14140000 		.word	.LC189
 15466 09c4 30140000 		.word	.LC190
 15467 09c8 0000F040 		.word	1089470464
 15468 09cc 44140000 		.word	.LC191
 15469 09d0 50140000 		.word	.LC192
 15470 09d4 5C140000 		.word	.LC193
 15471              	.L593:
2037:..\src/command_processing.c ****             }
2038:..\src/command_processing.c ****             else { 
2039:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15472              		.loc 1 2039 0
 15473 09d8 D7F88030 		ldr	r3, [r7, #128]
 15474 09dc 9B69     		ldr	r3, [r3, #24]
 15475 09de 1846     		mov	r0, r3
 15476 09e0 FFF7FEFF 		bl	__aeabi_i2d
 15477 09e4 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 348


 15478 09e8 CE4B     		ldr	r3, .L686
 15479 09ea FFF7FEFF 		bl	__aeabi_ddiv
 15480 09ee 0346     		mov	r3, r0
 15481 09f0 0C46     		mov	r4, r1
 15482 09f2 07F11800 		add	r0, r7, #24
 15483 09f6 1A46     		mov	r2, r3
 15484 09f8 2346     		mov	r3, r4
 15485 09fa CB49     		ldr	r1, .L686+4
 15486 09fc FFF7FEFF 		bl	sprintf
2040:..\src/command_processing.c ****                 strcat(info_string, str);
 15487              		.loc 1 2040 0
 15488 0a00 07F11803 		add	r3, r7, #24
 15489 0a04 1946     		mov	r1, r3
 15490 0a06 7869     		ldr	r0, [r7, #20]
 15491 0a08 FFF7FEFF 		bl	strcat
2041:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15492              		.loc 1 2041 0
 15493 0a0c D7F88030 		ldr	r3, [r7, #128]
 15494 0a10 DB69     		ldr	r3, [r3, #28]
 15495 0a12 1846     		mov	r0, r3
 15496 0a14 FFF7FEFF 		bl	__aeabi_i2d
 15497 0a18 4FF00002 		mov	r2, #0
 15498 0a1c C14B     		ldr	r3, .L686
 15499 0a1e FFF7FEFF 		bl	__aeabi_ddiv
 15500 0a22 0346     		mov	r3, r0
 15501 0a24 0C46     		mov	r4, r1
 15502 0a26 07F11800 		add	r0, r7, #24
 15503 0a2a 1A46     		mov	r2, r3
 15504 0a2c 2346     		mov	r3, r4
 15505 0a2e BF49     		ldr	r1, .L686+8
 15506 0a30 FFF7FEFF 		bl	sprintf
2042:..\src/command_processing.c ****                 strcat(info_string, str);
 15507              		.loc 1 2042 0
 15508 0a34 07F11803 		add	r3, r7, #24
 15509 0a38 1946     		mov	r1, r3
 15510 0a3a 7869     		ldr	r0, [r7, #20]
 15511 0a3c FFF7FEFF 		bl	strcat
2043:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15512              		.loc 1 2043 0
 15513 0a40 D7F88030 		ldr	r3, [r7, #128]
 15514 0a44 1B6A     		ldr	r3, [r3, #32]
 15515 0a46 1846     		mov	r0, r3
 15516 0a48 FFF7FEFF 		bl	__aeabi_i2d
 15517 0a4c 4FF00002 		mov	r2, #0
 15518 0a50 B44B     		ldr	r3, .L686
 15519 0a52 FFF7FEFF 		bl	__aeabi_ddiv
 15520 0a56 0346     		mov	r3, r0
 15521 0a58 0C46     		mov	r4, r1
 15522 0a5a 07F11800 		add	r0, r7, #24
 15523 0a5e 1A46     		mov	r2, r3
 15524 0a60 2346     		mov	r3, r4
 15525 0a62 B349     		ldr	r1, .L686+12
 15526 0a64 FFF7FEFF 		bl	sprintf
2044:..\src/command_processing.c ****                 strcat(info_string, str);
 15527              		.loc 1 2044 0
 15528 0a68 07F11803 		add	r3, r7, #24
 15529 0a6c 1946     		mov	r1, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 349


 15530 0a6e 7869     		ldr	r0, [r7, #20]
 15531 0a70 FFF7FEFF 		bl	strcat
 15532              	.L594:
2045:..\src/command_processing.c ****             }
2046:..\src/command_processing.c **** 
2047:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15533              		.loc 1 2047 0
 15534 0a74 7869     		ldr	r0, [r7, #20]
 15535 0a76 FFF7FEFF 		bl	strlen
 15536 0a7a 0346     		mov	r3, r0
 15537 0a7c 1A46     		mov	r2, r3
 15538 0a7e 7B69     		ldr	r3, [r7, #20]
 15539 0a80 1344     		add	r3, r3, r2
 15540 0a82 AC4A     		ldr	r2, .L686+16
 15541 0a84 1D46     		mov	r5, r3
 15542 0a86 1446     		mov	r4, r2
 15543 0a88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15544 0a8a 2860     		str	r0, [r5]	@ unaligned
 15545 0a8c 6960     		str	r1, [r5, #4]	@ unaligned
 15546 0a8e AA60     		str	r2, [r5, #8]	@ unaligned
 15547 0a90 EB60     		str	r3, [r5, #12]	@ unaligned
 15548 0a92 03CC     		ldmia	r4!, {r0, r1}
 15549 0a94 2861     		str	r0, [r5, #16]	@ unaligned
 15550 0a96 6961     		str	r1, [r5, #20]	@ unaligned
 15551 0a98 2378     		ldrb	r3, [r4]
 15552 0a9a 2B76     		strb	r3, [r5, #24]
2048:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15553              		.loc 1 2048 0
 15554 0a9c D7F88030 		ldr	r3, [r7, #128]
 15555 0aa0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15556 0aa4 032B     		cmp	r3, #3
 15557 0aa6 4ED0     		beq	.L595
2049:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15558              		.loc 1 2049 0
 15559 0aa8 D7F88030 		ldr	r3, [r7, #128]
 15560 0aac DB68     		ldr	r3, [r3, #12]
 15561 0aae 1846     		mov	r0, r3
 15562 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 15563 0ab4 4FF00002 		mov	r2, #0
 15564 0ab8 9A4B     		ldr	r3, .L686
 15565 0aba FFF7FEFF 		bl	__aeabi_ddiv
 15566 0abe 0346     		mov	r3, r0
 15567 0ac0 0C46     		mov	r4, r1
 15568 0ac2 07F11800 		add	r0, r7, #24
 15569 0ac6 1A46     		mov	r2, r3
 15570 0ac8 2346     		mov	r3, r4
 15571 0aca 9749     		ldr	r1, .L686+4
 15572 0acc FFF7FEFF 		bl	sprintf
2050:..\src/command_processing.c ****                 strcat(info_string, str);
 15573              		.loc 1 2050 0
 15574 0ad0 07F11803 		add	r3, r7, #24
 15575 0ad4 1946     		mov	r1, r3
 15576 0ad6 7869     		ldr	r0, [r7, #20]
 15577 0ad8 FFF7FEFF 		bl	strcat
2051:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15578              		.loc 1 2051 0
 15579 0adc D7F88030 		ldr	r3, [r7, #128]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 350


 15580 0ae0 1B69     		ldr	r3, [r3, #16]
 15581 0ae2 1846     		mov	r0, r3
 15582 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 15583 0ae8 4FF00002 		mov	r2, #0
 15584 0aec 8D4B     		ldr	r3, .L686
 15585 0aee FFF7FEFF 		bl	__aeabi_ddiv
 15586 0af2 0346     		mov	r3, r0
 15587 0af4 0C46     		mov	r4, r1
 15588 0af6 07F11800 		add	r0, r7, #24
 15589 0afa 1A46     		mov	r2, r3
 15590 0afc 2346     		mov	r3, r4
 15591 0afe 8B49     		ldr	r1, .L686+8
 15592 0b00 FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****                 strcat(info_string, str);
 15593              		.loc 1 2052 0
 15594 0b04 07F11803 		add	r3, r7, #24
 15595 0b08 1946     		mov	r1, r3
 15596 0b0a 7869     		ldr	r0, [r7, #20]
 15597 0b0c FFF7FEFF 		bl	strcat
2053:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15598              		.loc 1 2053 0
 15599 0b10 D7F88030 		ldr	r3, [r7, #128]
 15600 0b14 5B69     		ldr	r3, [r3, #20]
 15601 0b16 1846     		mov	r0, r3
 15602 0b18 FFF7FEFF 		bl	__aeabi_i2d
 15603 0b1c 4FF00002 		mov	r2, #0
 15604 0b20 804B     		ldr	r3, .L686
 15605 0b22 FFF7FEFF 		bl	__aeabi_ddiv
 15606 0b26 0346     		mov	r3, r0
 15607 0b28 0C46     		mov	r4, r1
 15608 0b2a 07F11800 		add	r0, r7, #24
 15609 0b2e 1A46     		mov	r2, r3
 15610 0b30 2346     		mov	r3, r4
 15611 0b32 7F49     		ldr	r1, .L686+12
 15612 0b34 FFF7FEFF 		bl	sprintf
2054:..\src/command_processing.c ****                 strcat(info_string, str);
 15613              		.loc 1 2054 0
 15614 0b38 07F11803 		add	r3, r7, #24
 15615 0b3c 1946     		mov	r1, r3
 15616 0b3e 7869     		ldr	r0, [r7, #20]
 15617 0b40 FFF7FEFF 		bl	strcat
 15618 0b44 4DE0     		b	.L596
 15619              	.L595:
2055:..\src/command_processing.c **** 
2056:..\src/command_processing.c ****             }
2057:..\src/command_processing.c ****             else {
2058:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15620              		.loc 1 2058 0
 15621 0b46 D7F88030 		ldr	r3, [r7, #128]
 15622 0b4a 5B6A     		ldr	r3, [r3, #36]
 15623 0b4c 1846     		mov	r0, r3
 15624 0b4e FFF7FEFF 		bl	__aeabi_i2d
 15625 0b52 4FF00002 		mov	r2, #0
 15626 0b56 734B     		ldr	r3, .L686
 15627 0b58 FFF7FEFF 		bl	__aeabi_ddiv
 15628 0b5c 0346     		mov	r3, r0
 15629 0b5e 0C46     		mov	r4, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 351


 15630 0b60 07F11800 		add	r0, r7, #24
 15631 0b64 1A46     		mov	r2, r3
 15632 0b66 2346     		mov	r3, r4
 15633 0b68 6F49     		ldr	r1, .L686+4
 15634 0b6a FFF7FEFF 		bl	sprintf
2059:..\src/command_processing.c ****                 strcat(info_string, str);
 15635              		.loc 1 2059 0
 15636 0b6e 07F11803 		add	r3, r7, #24
 15637 0b72 1946     		mov	r1, r3
 15638 0b74 7869     		ldr	r0, [r7, #20]
 15639 0b76 FFF7FEFF 		bl	strcat
2060:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15640              		.loc 1 2060 0
 15641 0b7a D7F88030 		ldr	r3, [r7, #128]
 15642 0b7e 9B6A     		ldr	r3, [r3, #40]
 15643 0b80 1846     		mov	r0, r3
 15644 0b82 FFF7FEFF 		bl	__aeabi_i2d
 15645 0b86 4FF00002 		mov	r2, #0
 15646 0b8a 664B     		ldr	r3, .L686
 15647 0b8c FFF7FEFF 		bl	__aeabi_ddiv
 15648 0b90 0346     		mov	r3, r0
 15649 0b92 0C46     		mov	r4, r1
 15650 0b94 07F11800 		add	r0, r7, #24
 15651 0b98 1A46     		mov	r2, r3
 15652 0b9a 2346     		mov	r3, r4
 15653 0b9c 6349     		ldr	r1, .L686+8
 15654 0b9e FFF7FEFF 		bl	sprintf
2061:..\src/command_processing.c ****                 strcat(info_string, str);
 15655              		.loc 1 2061 0
 15656 0ba2 07F11803 		add	r3, r7, #24
 15657 0ba6 1946     		mov	r1, r3
 15658 0ba8 7869     		ldr	r0, [r7, #20]
 15659 0baa FFF7FEFF 		bl	strcat
2062:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15660              		.loc 1 2062 0
 15661 0bae D7F88030 		ldr	r3, [r7, #128]
 15662 0bb2 DB6A     		ldr	r3, [r3, #44]
 15663 0bb4 1846     		mov	r0, r3
 15664 0bb6 FFF7FEFF 		bl	__aeabi_i2d
 15665 0bba 4FF00002 		mov	r2, #0
 15666 0bbe 594B     		ldr	r3, .L686
 15667 0bc0 FFF7FEFF 		bl	__aeabi_ddiv
 15668 0bc4 0346     		mov	r3, r0
 15669 0bc6 0C46     		mov	r4, r1
 15670 0bc8 07F11800 		add	r0, r7, #24
 15671 0bcc 1A46     		mov	r2, r3
 15672 0bce 2346     		mov	r3, r4
 15673 0bd0 5749     		ldr	r1, .L686+12
 15674 0bd2 FFF7FEFF 		bl	sprintf
2063:..\src/command_processing.c ****                 strcat(info_string, str);
 15675              		.loc 1 2063 0
 15676 0bd6 07F11803 		add	r3, r7, #24
 15677 0bda 1946     		mov	r1, r3
 15678 0bdc 7869     		ldr	r0, [r7, #20]
 15679 0bde FFF7FEFF 		bl	strcat
 15680              	.L596:
2064:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 352


2065:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15681              		.loc 1 2065 0
 15682 0be2 D7F88030 		ldr	r3, [r7, #128]
 15683 0be6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15684 0bea 012B     		cmp	r3, #1
 15685 0bec 14D1     		bne	.L597
2066:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15686              		.loc 1 2066 0
 15687 0bee 7869     		ldr	r0, [r7, #20]
 15688 0bf0 FFF7FEFF 		bl	strlen
 15689 0bf4 0346     		mov	r3, r0
 15690 0bf6 1A46     		mov	r2, r3
 15691 0bf8 7B69     		ldr	r3, [r7, #20]
 15692 0bfa 1344     		add	r3, r3, r2
 15693 0bfc 4E4A     		ldr	r2, .L686+20
 15694 0bfe 1D46     		mov	r5, r3
 15695 0c00 1446     		mov	r4, r2
 15696 0c02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15697 0c04 2860     		str	r0, [r5]	@ unaligned
 15698 0c06 6960     		str	r1, [r5, #4]	@ unaligned
 15699 0c08 AA60     		str	r2, [r5, #8]	@ unaligned
 15700 0c0a EB60     		str	r3, [r5, #12]	@ unaligned
 15701 0c0c 03CC     		ldmia	r4!, {r0, r1}
 15702 0c0e 2861     		str	r0, [r5, #16]	@ unaligned
 15703 0c10 6961     		str	r1, [r5, #20]	@ unaligned
 15704 0c12 2388     		ldrh	r3, [r4]	@ unaligned
 15705 0c14 2B83     		strh	r3, [r5, #24]	@ unaligned
 15706 0c16 13E0     		b	.L598
 15707              	.L597:
2067:..\src/command_processing.c ****             else
2068:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15708              		.loc 1 2068 0
 15709 0c18 7869     		ldr	r0, [r7, #20]
 15710 0c1a FFF7FEFF 		bl	strlen
 15711 0c1e 0346     		mov	r3, r0
 15712 0c20 1A46     		mov	r2, r3
 15713 0c22 7B69     		ldr	r3, [r7, #20]
 15714 0c24 1344     		add	r3, r3, r2
 15715 0c26 454A     		ldr	r2, .L686+24
 15716 0c28 1D46     		mov	r5, r3
 15717 0c2a 1446     		mov	r4, r2
 15718 0c2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15719 0c2e 2860     		str	r0, [r5]	@ unaligned
 15720 0c30 6960     		str	r1, [r5, #4]	@ unaligned
 15721 0c32 AA60     		str	r2, [r5, #8]	@ unaligned
 15722 0c34 EB60     		str	r3, [r5, #12]	@ unaligned
 15723 0c36 03CC     		ldmia	r4!, {r0, r1}
 15724 0c38 2861     		str	r0, [r5, #16]	@ unaligned
 15725 0c3a 6961     		str	r1, [r5, #20]	@ unaligned
 15726 0c3c 2378     		ldrb	r3, [r4]
 15727 0c3e 2B76     		strb	r3, [r5, #24]
 15728              	.L598:
2069:..\src/command_processing.c **** 
2070:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15729              		.loc 1 2070 0
 15730 0c40 D7F88030 		ldr	r3, [r7, #128]
 15731 0c44 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 353


 15732 0c48 072B     		cmp	r3, #7
 15733 0c4a 00F2EA80 		bhi	.L599
 15734 0c4e 01A2     		adr	r2, .L601
 15735 0c50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15736              		.p2align 2
 15737              	.L601:
 15738 0c54 750C0000 		.word	.L600+1
 15739 0c58 990C0000 		.word	.L602+1
 15740 0c5c C10C0000 		.word	.L603+1
 15741 0c60 F30C0000 		.word	.L604+1
 15742 0c64 510D0000 		.word	.L605+1
 15743 0c68 7F0D0000 		.word	.L606+1
 15744 0c6c AF0D0000 		.word	.L607+1
 15745 0c70 DD0D0000 		.word	.L608+1
 15746              		.p2align 1
 15747              	.L600:
2071:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2072:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15748              		.loc 1 2072 0
 15749 0c74 7869     		ldr	r0, [r7, #20]
 15750 0c76 FFF7FEFF 		bl	strlen
 15751 0c7a 0346     		mov	r3, r0
 15752 0c7c 1A46     		mov	r2, r3
 15753 0c7e 7B69     		ldr	r3, [r7, #20]
 15754 0c80 1344     		add	r3, r3, r2
 15755 0c82 2F4A     		ldr	r2, .L686+28
 15756 0c84 1D46     		mov	r5, r3
 15757 0c86 1446     		mov	r4, r2
 15758 0c88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15759 0c8a 2860     		str	r0, [r5]	@ unaligned
 15760 0c8c 6960     		str	r1, [r5, #4]	@ unaligned
 15761 0c8e AA60     		str	r2, [r5, #8]	@ unaligned
 15762 0c90 EB60     		str	r3, [r5, #12]	@ unaligned
 15763 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 15764 0c94 2B82     		strh	r3, [r5, #16]	@ unaligned
2073:..\src/command_processing.c ****                     break;
 15765              		.loc 1 2073 0
 15766 0c96 C4E0     		b	.L599
 15767              	.L602:
2074:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2075:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15768              		.loc 1 2075 0
 15769 0c98 7869     		ldr	r0, [r7, #20]
 15770 0c9a FFF7FEFF 		bl	strlen
 15771 0c9e 0346     		mov	r3, r0
 15772 0ca0 1A46     		mov	r2, r3
 15773 0ca2 7B69     		ldr	r3, [r7, #20]
 15774 0ca4 1344     		add	r3, r3, r2
 15775 0ca6 274A     		ldr	r2, .L686+32
 15776 0ca8 1D46     		mov	r5, r3
 15777 0caa 1446     		mov	r4, r2
 15778 0cac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15779 0cae 2860     		str	r0, [r5]	@ unaligned
 15780 0cb0 6960     		str	r1, [r5, #4]	@ unaligned
 15781 0cb2 AA60     		str	r2, [r5, #8]	@ unaligned
 15782 0cb4 EB60     		str	r3, [r5, #12]	@ unaligned
 15783 0cb6 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 354


 15784 0cb8 2861     		str	r0, [r5, #16]	@ unaligned
 15785 0cba 2379     		ldrb	r3, [r4, #4]
 15786 0cbc 2B75     		strb	r3, [r5, #20]
2076:..\src/command_processing.c ****                     break;
 15787              		.loc 1 2076 0
 15788 0cbe B0E0     		b	.L599
 15789              	.L603:
2077:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2078:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15790              		.loc 1 2078 0
 15791 0cc0 7869     		ldr	r0, [r7, #20]
 15792 0cc2 FFF7FEFF 		bl	strlen
 15793 0cc6 0346     		mov	r3, r0
 15794 0cc8 1A46     		mov	r2, r3
 15795 0cca 7B69     		ldr	r3, [r7, #20]
 15796 0ccc 1344     		add	r3, r3, r2
 15797 0cce 1E4A     		ldr	r2, .L686+36
 15798 0cd0 1D46     		mov	r5, r3
 15799 0cd2 1446     		mov	r4, r2
 15800 0cd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15801 0cd6 2860     		str	r0, [r5]	@ unaligned
 15802 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 15803 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 15804 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 15805 0cde 07CC     		ldmia	r4!, {r0, r1, r2}
 15806 0ce0 2861     		str	r0, [r5, #16]	@ unaligned
 15807 0ce2 6961     		str	r1, [r5, #20]	@ unaligned
 15808 0ce4 AA61     		str	r2, [r5, #24]	@ unaligned
 15809 0ce6 2388     		ldrh	r3, [r4]	@ unaligned
 15810 0ce8 A278     		ldrb	r2, [r4, #2]
 15811 0cea AB83     		strh	r3, [r5, #28]	@ unaligned
 15812 0cec 1346     		mov	r3, r2
 15813 0cee AB77     		strb	r3, [r5, #30]
2079:..\src/command_processing.c ****                     break;
 15814              		.loc 1 2079 0
 15815 0cf0 97E0     		b	.L599
 15816              	.L604:
2080:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2081:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15817              		.loc 1 2081 0
 15818 0cf2 7869     		ldr	r0, [r7, #20]
 15819 0cf4 FFF7FEFF 		bl	strlen
 15820 0cf8 0346     		mov	r3, r0
 15821 0cfa 1A46     		mov	r2, r3
 15822 0cfc 7B69     		ldr	r3, [r7, #20]
 15823 0cfe 1344     		add	r3, r3, r2
 15824 0d00 124A     		ldr	r2, .L686+40
 15825 0d02 1D46     		mov	r5, r3
 15826 0d04 1446     		mov	r4, r2
 15827 0d06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15828 0d08 2860     		str	r0, [r5]	@ unaligned
 15829 0d0a 6960     		str	r1, [r5, #4]	@ unaligned
 15830 0d0c AA60     		str	r2, [r5, #8]	@ unaligned
 15831 0d0e EB60     		str	r3, [r5, #12]	@ unaligned
 15832 0d10 03CC     		ldmia	r4!, {r0, r1}
 15833 0d12 2861     		str	r0, [r5, #16]	@ unaligned
 15834 0d14 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 355


 15835 0d16 2388     		ldrh	r3, [r4]	@ unaligned
 15836 0d18 A278     		ldrb	r2, [r4, #2]
 15837 0d1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15838 0d1c 1346     		mov	r3, r2
 15839 0d1e AB76     		strb	r3, [r5, #26]
2082:..\src/command_processing.c ****                     break;
 15840              		.loc 1 2082 0
 15841 0d20 7FE0     		b	.L599
 15842              	.L687:
 15843 0d22 00BF     		.align	2
 15844              	.L686:
 15845 0d24 0000F040 		.word	1089470464
 15846 0d28 44140000 		.word	.LC191
 15847 0d2c 50140000 		.word	.LC192
 15848 0d30 5C140000 		.word	.LC193
 15849 0d34 68140000 		.word	.LC194
 15850 0d38 84140000 		.word	.LC195
 15851 0d3c A0140000 		.word	.LC196
 15852 0d40 BC140000 		.word	.LC197
 15853 0d44 D0140000 		.word	.LC198
 15854 0d48 E8140000 		.word	.LC199
 15855 0d4c 08150000 		.word	.LC200
 15856              	.L605:
2083:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2084:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15857              		.loc 1 2084 0
 15858 0d50 7869     		ldr	r0, [r7, #20]
 15859 0d52 FFF7FEFF 		bl	strlen
 15860 0d56 0346     		mov	r3, r0
 15861 0d58 1A46     		mov	r2, r3
 15862 0d5a 7B69     		ldr	r3, [r7, #20]
 15863 0d5c 1344     		add	r3, r3, r2
 15864 0d5e A44A     		ldr	r2, .L688
 15865 0d60 1C46     		mov	r4, r3
 15866 0d62 1546     		mov	r5, r2
 15867 0d64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15868 0d66 2060     		str	r0, [r4]	@ unaligned
 15869 0d68 6160     		str	r1, [r4, #4]	@ unaligned
 15870 0d6a A260     		str	r2, [r4, #8]	@ unaligned
 15871 0d6c E360     		str	r3, [r4, #12]	@ unaligned
 15872 0d6e 2868     		ldr	r0, [r5]	@ unaligned
 15873 0d70 2061     		str	r0, [r4, #16]	@ unaligned
 15874 0d72 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15875 0d74 AA79     		ldrb	r2, [r5, #6]
 15876 0d76 A382     		strh	r3, [r4, #20]	@ unaligned
 15877 0d78 1346     		mov	r3, r2
 15878 0d7a A375     		strb	r3, [r4, #22]
2085:..\src/command_processing.c ****                     break;
 15879              		.loc 1 2085 0
 15880 0d7c 51E0     		b	.L599
 15881              	.L606:
2086:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2087:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15882              		.loc 1 2087 0
 15883 0d7e 7869     		ldr	r0, [r7, #20]
 15884 0d80 FFF7FEFF 		bl	strlen
 15885 0d84 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 356


 15886 0d86 1A46     		mov	r2, r3
 15887 0d88 7B69     		ldr	r3, [r7, #20]
 15888 0d8a 1344     		add	r3, r3, r2
 15889 0d8c 994A     		ldr	r2, .L688+4
 15890 0d8e 1D46     		mov	r5, r3
 15891 0d90 1446     		mov	r4, r2
 15892 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15893 0d94 2860     		str	r0, [r5]	@ unaligned
 15894 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 15895 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 15896 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 15897 0d9c 03CC     		ldmia	r4!, {r0, r1}
 15898 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 15899 0da0 6961     		str	r1, [r5, #20]	@ unaligned
 15900 0da2 2388     		ldrh	r3, [r4]	@ unaligned
 15901 0da4 A278     		ldrb	r2, [r4, #2]
 15902 0da6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15903 0da8 1346     		mov	r3, r2
 15904 0daa AB76     		strb	r3, [r5, #26]
2088:..\src/command_processing.c ****                     break;
 15905              		.loc 1 2088 0
 15906 0dac 39E0     		b	.L599
 15907              	.L607:
2089:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2090:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15908              		.loc 1 2090 0
 15909 0dae 7869     		ldr	r0, [r7, #20]
 15910 0db0 FFF7FEFF 		bl	strlen
 15911 0db4 0346     		mov	r3, r0
 15912 0db6 1A46     		mov	r2, r3
 15913 0db8 7B69     		ldr	r3, [r7, #20]
 15914 0dba 1344     		add	r3, r3, r2
 15915 0dbc 8E4A     		ldr	r2, .L688+8
 15916 0dbe 1C46     		mov	r4, r3
 15917 0dc0 1546     		mov	r5, r2
 15918 0dc2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15919 0dc4 2060     		str	r0, [r4]	@ unaligned
 15920 0dc6 6160     		str	r1, [r4, #4]	@ unaligned
 15921 0dc8 A260     		str	r2, [r4, #8]	@ unaligned
 15922 0dca E360     		str	r3, [r4, #12]	@ unaligned
 15923 0dcc 2868     		ldr	r0, [r5]	@ unaligned
 15924 0dce 2061     		str	r0, [r4, #16]	@ unaligned
 15925 0dd0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15926 0dd2 AA79     		ldrb	r2, [r5, #6]
 15927 0dd4 A382     		strh	r3, [r4, #20]	@ unaligned
 15928 0dd6 1346     		mov	r3, r2
 15929 0dd8 A375     		strb	r3, [r4, #22]
2091:..\src/command_processing.c ****                     break;
 15930              		.loc 1 2091 0
 15931 0dda 22E0     		b	.L599
 15932              	.L608:
2092:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2093:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15933              		.loc 1 2093 0
 15934 0ddc 7869     		ldr	r0, [r7, #20]
 15935 0dde FFF7FEFF 		bl	strlen
 15936 0de2 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 357


 15937 0de4 1A46     		mov	r2, r3
 15938 0de6 7B69     		ldr	r3, [r7, #20]
 15939 0de8 1344     		add	r3, r3, r2
 15940 0dea 844A     		ldr	r2, .L688+12
 15941 0dec 1546     		mov	r5, r2
 15942 0dee 9E46     		mov	lr, r3
 15943 0df0 05F1200C 		add	ip, r5, #32
 15944              	.L609:
 15945 0df4 7446     		mov	r4, lr
 15946 0df6 2E46     		mov	r6, r5
 15947 0df8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15948 0dfa 2060     		str	r0, [r4]	@ unaligned
 15949 0dfc 6160     		str	r1, [r4, #4]	@ unaligned
 15950 0dfe A260     		str	r2, [r4, #8]	@ unaligned
 15951 0e00 E360     		str	r3, [r4, #12]	@ unaligned
 15952 0e02 1035     		adds	r5, r5, #16
 15953 0e04 0EF1100E 		add	lr, lr, #16
 15954 0e08 6545     		cmp	r5, ip
 15955 0e0a F3D1     		bne	.L609
 15956 0e0c 7446     		mov	r4, lr
 15957 0e0e 2B46     		mov	r3, r5
 15958 0e10 07CB     		ldmia	r3!, {r0, r1, r2}
 15959 0e12 2060     		str	r0, [r4]	@ unaligned
 15960 0e14 6160     		str	r1, [r4, #4]	@ unaligned
 15961 0e16 A260     		str	r2, [r4, #8]	@ unaligned
 15962 0e18 1A88     		ldrh	r2, [r3]	@ unaligned
 15963 0e1a 9B78     		ldrb	r3, [r3, #2]
 15964 0e1c A281     		strh	r2, [r4, #12]	@ unaligned
 15965 0e1e A373     		strb	r3, [r4, #14]
2094:..\src/command_processing.c ****                     break;
 15966              		.loc 1 2094 0
 15967 0e20 00BF     		nop
 15968              	.L599:
2095:..\src/command_processing.c ****             }
2096:..\src/command_processing.c **** 
2097:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15969              		.loc 1 2097 0
 15970 0e22 D7F88030 		ldr	r3, [r7, #128]
 15971 0e26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15972 0e2a 032B     		cmp	r3, #3
 15973 0e2c 63D8     		bhi	.L679
 15974 0e2e 01A2     		adr	r2, .L612
 15975 0e30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15976              		.p2align 2
 15977              	.L612:
 15978 0e34 450E0000 		.word	.L611+1
 15979 0e38 6F0E0000 		.word	.L613+1
 15980 0e3c 930E0000 		.word	.L614+1
 15981 0e40 B90E0000 		.word	.L615+1
 15982              		.p2align 1
 15983              	.L611:
2098:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2099:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15984              		.loc 1 2099 0
 15985 0e44 7869     		ldr	r0, [r7, #20]
 15986 0e46 FFF7FEFF 		bl	strlen
 15987 0e4a 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 358


 15988 0e4c 1A46     		mov	r2, r3
 15989 0e4e 7B69     		ldr	r3, [r7, #20]
 15990 0e50 1344     		add	r3, r3, r2
 15991 0e52 6B4A     		ldr	r2, .L688+16
 15992 0e54 1D46     		mov	r5, r3
 15993 0e56 1446     		mov	r4, r2
 15994 0e58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15995 0e5a 2860     		str	r0, [r5]	@ unaligned
 15996 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 15997 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 15998 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 15999 0e62 03CC     		ldmia	r4!, {r0, r1}
 16000 0e64 2861     		str	r0, [r5, #16]	@ unaligned
 16001 0e66 6961     		str	r1, [r5, #20]	@ unaligned
 16002 0e68 2378     		ldrb	r3, [r4]
 16003 0e6a 2B76     		strb	r3, [r5, #24]
2100:..\src/command_processing.c ****                     break;
 16004              		.loc 1 2100 0
 16005 0e6c 44E0     		b	.L616
 16006              	.L613:
2101:..\src/command_processing.c ****                 case CONTROL_PWM:
2102:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 16007              		.loc 1 2102 0
 16008 0e6e 7869     		ldr	r0, [r7, #20]
 16009 0e70 FFF7FEFF 		bl	strlen
 16010 0e74 0346     		mov	r3, r0
 16011 0e76 1A46     		mov	r2, r3
 16012 0e78 7B69     		ldr	r3, [r7, #20]
 16013 0e7a 1344     		add	r3, r3, r2
 16014 0e7c 614A     		ldr	r2, .L688+20
 16015 0e7e 1D46     		mov	r5, r3
 16016 0e80 1446     		mov	r4, r2
 16017 0e82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16018 0e84 2860     		str	r0, [r5]	@ unaligned
 16019 0e86 6960     		str	r1, [r5, #4]	@ unaligned
 16020 0e88 AA60     		str	r2, [r5, #8]	@ unaligned
 16021 0e8a EB60     		str	r3, [r5, #12]	@ unaligned
 16022 0e8c 2068     		ldr	r0, [r4]	@ unaligned
 16023 0e8e 2861     		str	r0, [r5, #16]	@ unaligned
2103:..\src/command_processing.c ****                     break;
 16024              		.loc 1 2103 0
 16025 0e90 32E0     		b	.L616
 16026              	.L614:
2104:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2105:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 16027              		.loc 1 2105 0
 16028 0e92 7869     		ldr	r0, [r7, #20]
 16029 0e94 FFF7FEFF 		bl	strlen
 16030 0e98 0346     		mov	r3, r0
 16031 0e9a 1A46     		mov	r2, r3
 16032 0e9c 7B69     		ldr	r3, [r7, #20]
 16033 0e9e 1344     		add	r3, r3, r2
 16034 0ea0 594A     		ldr	r2, .L688+24
 16035 0ea2 1D46     		mov	r5, r3
 16036 0ea4 1446     		mov	r4, r2
 16037 0ea6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16038 0ea8 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 359


 16039 0eaa 6960     		str	r1, [r5, #4]	@ unaligned
 16040 0eac AA60     		str	r2, [r5, #8]	@ unaligned
 16041 0eae EB60     		str	r3, [r5, #12]	@ unaligned
 16042 0eb0 03CC     		ldmia	r4!, {r0, r1}
 16043 0eb2 2861     		str	r0, [r5, #16]	@ unaligned
 16044 0eb4 6961     		str	r1, [r5, #20]	@ unaligned
2106:..\src/command_processing.c ****                     break;
 16045              		.loc 1 2106 0
 16046 0eb6 1FE0     		b	.L616
 16047              	.L615:
2107:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2108:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 16048              		.loc 1 2108 0
 16049 0eb8 7869     		ldr	r0, [r7, #20]
 16050 0eba FFF7FEFF 		bl	strlen
 16051 0ebe 0346     		mov	r3, r0
 16052 0ec0 1A46     		mov	r2, r3
 16053 0ec2 7B69     		ldr	r3, [r7, #20]
 16054 0ec4 1344     		add	r3, r3, r2
 16055 0ec6 514A     		ldr	r2, .L688+28
 16056 0ec8 1446     		mov	r4, r2
 16057 0eca 9E46     		mov	lr, r3
 16058 0ecc 04F1200C 		add	ip, r4, #32
 16059              	.L617:
 16060 0ed0 7546     		mov	r5, lr
 16061 0ed2 2646     		mov	r6, r4
 16062 0ed4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16063 0ed6 2860     		str	r0, [r5]	@ unaligned
 16064 0ed8 6960     		str	r1, [r5, #4]	@ unaligned
 16065 0eda AA60     		str	r2, [r5, #8]	@ unaligned
 16066 0edc EB60     		str	r3, [r5, #12]	@ unaligned
 16067 0ede 1034     		adds	r4, r4, #16
 16068 0ee0 0EF1100E 		add	lr, lr, #16
 16069 0ee4 6445     		cmp	r4, ip
 16070 0ee6 F3D1     		bne	.L617
 16071 0ee8 7346     		mov	r3, lr
 16072 0eea 2246     		mov	r2, r4
 16073 0eec 1068     		ldr	r0, [r2]	@ unaligned
 16074 0eee 1860     		str	r0, [r3]	@ unaligned
 16075 0ef0 1279     		ldrb	r2, [r2, #4]
 16076 0ef2 1A71     		strb	r2, [r3, #4]
2109:..\src/command_processing.c ****                     break;
 16077              		.loc 1 2109 0
 16078 0ef4 00E0     		b	.L616
 16079              	.L679:
2110:..\src/command_processing.c ****                 default:
2111:..\src/command_processing.c ****                     break;
 16080              		.loc 1 2111 0
 16081 0ef6 00BF     		nop
 16082              	.L616:
2112:..\src/command_processing.c ****             }
2113:..\src/command_processing.c **** 
2114:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16083              		.loc 1 2114 0
 16084 0ef8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16085 0efc D7F88810 		ldr	r1, [r7, #136]
 16086 0f00 1346     		mov	r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 360


 16087 0f02 5B00     		lsls	r3, r3, #1
 16088 0f04 1344     		add	r3, r3, r2
 16089 0f06 1B01     		lsls	r3, r3, #4
 16090 0f08 0B44     		add	r3, r3, r1
 16091 0f0a 03F5D873 		add	r3, r3, #432
 16092 0f0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16093 0f10 002B     		cmp	r3, #0
 16094 0f12 1CD0     		beq	.L618
2115:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 16095              		.loc 1 2115 0
 16096 0f14 7869     		ldr	r0, [r7, #20]
 16097 0f16 FFF7FEFF 		bl	strlen
 16098 0f1a 0346     		mov	r3, r0
 16099 0f1c 1A46     		mov	r2, r3
 16100 0f1e 7B69     		ldr	r3, [r7, #20]
 16101 0f20 1344     		add	r3, r3, r2
 16102 0f22 3B4A     		ldr	r2, .L688+32
 16103 0f24 1446     		mov	r4, r2
 16104 0f26 9E46     		mov	lr, r3
 16105 0f28 04F1200C 		add	ip, r4, #32
 16106              	.L619:
 16107 0f2c 7546     		mov	r5, lr
 16108 0f2e 2646     		mov	r6, r4
 16109 0f30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16110 0f32 2860     		str	r0, [r5]	@ unaligned
 16111 0f34 6960     		str	r1, [r5, #4]	@ unaligned
 16112 0f36 AA60     		str	r2, [r5, #8]	@ unaligned
 16113 0f38 EB60     		str	r3, [r5, #12]	@ unaligned
 16114 0f3a 1034     		adds	r4, r4, #16
 16115 0f3c 0EF1100E 		add	lr, lr, #16
 16116 0f40 6445     		cmp	r4, ip
 16117 0f42 F3D1     		bne	.L619
 16118 0f44 7346     		mov	r3, lr
 16119 0f46 2246     		mov	r2, r4
 16120 0f48 1278     		ldrb	r2, [r2]
 16121 0f4a 1A70     		strb	r2, [r3]
 16122 0f4c 13E0     		b	.L620
 16123              	.L618:
2116:..\src/command_processing.c ****             else
2117:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 16124              		.loc 1 2117 0
 16125 0f4e 7869     		ldr	r0, [r7, #20]
 16126 0f50 FFF7FEFF 		bl	strlen
 16127 0f54 0346     		mov	r3, r0
 16128 0f56 1A46     		mov	r2, r3
 16129 0f58 7B69     		ldr	r3, [r7, #20]
 16130 0f5a 1344     		add	r3, r3, r2
 16131 0f5c 2D4A     		ldr	r2, .L688+36
 16132 0f5e 1C46     		mov	r4, r3
 16133 0f60 1546     		mov	r5, r2
 16134 0f62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16135 0f64 2060     		str	r0, [r4]	@ unaligned
 16136 0f66 6160     		str	r1, [r4, #4]	@ unaligned
 16137 0f68 A260     		str	r2, [r4, #8]	@ unaligned
 16138 0f6a E360     		str	r3, [r4, #12]	@ unaligned
 16139 0f6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16140 0f6e 2061     		str	r0, [r4, #16]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 361


 16141 0f70 6161     		str	r1, [r4, #20]	@ unaligned
 16142 0f72 A261     		str	r2, [r4, #24]	@ unaligned
 16143 0f74 E361     		str	r3, [r4, #28]	@ unaligned
 16144              	.L620:
2118:..\src/command_processing.c **** 
2119:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 16145              		.loc 1 2119 0
 16146 0f76 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16147 0f7a D7F88810 		ldr	r1, [r7, #136]
 16148 0f7e 1346     		mov	r3, r2
 16149 0f80 5B00     		lsls	r3, r3, #1
 16150 0f82 1344     		add	r3, r3, r2
 16151 0f84 1B01     		lsls	r3, r3, #4
 16152 0f86 0B44     		add	r3, r3, r1
 16153 0f88 03F5DA73 		add	r3, r3, #436
 16154 0f8c 93F90030 		ldrsb	r3, [r3]
 16155 0f90 1A46     		mov	r2, r3
 16156 0f92 07F11803 		add	r3, r7, #24
 16157 0f96 2049     		ldr	r1, .L688+40
 16158 0f98 1846     		mov	r0, r3
 16159 0f9a FFF7FEFF 		bl	sprintf
2120:..\src/command_processing.c ****             strcat(info_string, str);
 16160              		.loc 1 2120 0
 16161 0f9e 07F11803 		add	r3, r7, #24
 16162 0fa2 1946     		mov	r1, r3
 16163 0fa4 7869     		ldr	r0, [r7, #20]
 16164 0fa6 FFF7FEFF 		bl	strcat
2121:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2122:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 16165              		.loc 1 2122 0
 16166 0faa 7869     		ldr	r0, [r7, #20]
 16167 0fac FFF7FEFF 		bl	strlen
 16168 0fb0 0346     		mov	r3, r0
 16169 0fb2 1A46     		mov	r2, r3
 16170 0fb4 7B69     		ldr	r3, [r7, #20]
 16171 0fb6 1344     		add	r3, r3, r2
 16172 0fb8 184A     		ldr	r2, .L688+44
 16173 0fba 1446     		mov	r4, r2
 16174 0fbc 9E46     		mov	lr, r3
 16175 0fbe 04F1200C 		add	ip, r4, #32
 16176              	.L621:
 16177 0fc2 7546     		mov	r5, lr
 16178 0fc4 2646     		mov	r6, r4
 16179 0fc6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16180 0fc8 2860     		str	r0, [r5]	@ unaligned
 16181 0fca 6960     		str	r1, [r5, #4]	@ unaligned
 16182 0fcc AA60     		str	r2, [r5, #8]	@ unaligned
 16183 0fce EB60     		str	r3, [r5, #12]	@ unaligned
 16184 0fd0 1034     		adds	r4, r4, #16
 16185 0fd2 0EF1100E 		add	lr, lr, #16
 16186 0fd6 6445     		cmp	r4, ip
 16187 0fd8 F3D1     		bne	.L621
 16188 0fda 7246     		mov	r2, lr
 16189 0fdc 2346     		mov	r3, r4
 16190 0fde 03CB     		ldmia	r3!, {r0, r1}
 16191 0fe0 1060     		str	r0, [r2]	@ unaligned
 16192 0fe2 5160     		str	r1, [r2, #4]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 362


 16193 0fe4 1B78     		ldrb	r3, [r3]
 16194 0fe6 1372     		strb	r3, [r2, #8]
2123:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16195              		.loc 1 2123 0
 16196 0fe8 0023     		movs	r3, #0
 16197 0fea C7F89430 		str	r3, [r7, #148]
 16198 0fee 48E0     		b	.L622
 16199              	.L689:
 16200              		.align	2
 16201              	.L688:
 16202 0ff0 24150000 		.word	.LC201
 16203 0ff4 3C150000 		.word	.LC202
 16204 0ff8 58150000 		.word	.LC203
 16205 0ffc 70150000 		.word	.LC204
 16206 1000 A0150000 		.word	.LC205
 16207 1004 BC150000 		.word	.LC206
 16208 1008 D0150000 		.word	.LC207
 16209 100c E8150000 		.word	.LC208
 16210 1010 10160000 		.word	.LC209
 16211 1014 34160000 		.word	.LC210
 16212 1018 54160000 		.word	.LC211
 16213 101c 70160000 		.word	.LC212
 16214              	.L624:
2124:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16215              		.loc 1 2124 0
 16216 1020 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16217 1024 D7F88810 		ldr	r1, [r7, #136]
 16218 1028 1346     		mov	r3, r2
 16219 102a 5B00     		lsls	r3, r3, #1
 16220 102c 1344     		add	r3, r3, r2
 16221 102e 1B01     		lsls	r3, r3, #4
 16222 1030 CA18     		adds	r2, r1, r3
 16223 1032 D7F89430 		ldr	r3, [r7, #148]
 16224 1036 1344     		add	r3, r3, r2
 16225 1038 03F2B113 		addw	r3, r3, #433
 16226 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16227 103e 1A46     		mov	r2, r3
 16228 1040 07F11803 		add	r3, r7, #24
 16229 1044 AE49     		ldr	r1, .L690
 16230 1046 1846     		mov	r0, r3
 16231 1048 FFF7FEFF 		bl	sprintf
2125:..\src/command_processing.c ****                 strcat(info_string, str);
 16232              		.loc 1 2125 0
 16233 104c 07F11803 		add	r3, r7, #24
 16234 1050 1946     		mov	r1, r3
 16235 1052 7869     		ldr	r0, [r7, #20]
 16236 1054 FFF7FEFF 		bl	strcat
2126:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16237              		.loc 1 2126 0
 16238 1058 D7F89430 		ldr	r3, [r7, #148]
 16239 105c 022B     		cmp	r3, #2
 16240 105e 0BD0     		beq	.L623
2127:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16241              		.loc 1 2127 0
 16242 1060 7869     		ldr	r0, [r7, #20]
 16243 1062 FFF7FEFF 		bl	strlen
 16244 1066 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 363


 16245 1068 1A46     		mov	r2, r3
 16246 106a 7B69     		ldr	r3, [r7, #20]
 16247 106c 1344     		add	r3, r3, r2
 16248 106e A54A     		ldr	r2, .L690+4
 16249 1070 1188     		ldrh	r1, [r2]	@ unaligned
 16250 1072 9278     		ldrb	r2, [r2, #2]
 16251 1074 1980     		strh	r1, [r3]	@ unaligned
 16252 1076 9A70     		strb	r2, [r3, #2]
 16253              	.L623:
2123:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16254              		.loc 1 2123 0 discriminator 2
 16255 1078 D7F89430 		ldr	r3, [r7, #148]
 16256 107c 0133     		adds	r3, r3, #1
 16257 107e C7F89430 		str	r3, [r7, #148]
 16258              	.L622:
2123:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16259              		.loc 1 2123 0 is_stmt 0 discriminator 1
 16260 1082 D7F89430 		ldr	r3, [r7, #148]
 16261 1086 022B     		cmp	r3, #2
 16262 1088 CADD     		ble	.L624
2128:..\src/command_processing.c ****                 }                
2129:..\src/command_processing.c ****             }
2130:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16263              		.loc 1 2130 0 is_stmt 1
 16264 108a 7869     		ldr	r0, [r7, #20]
 16265 108c FFF7FEFF 		bl	strlen
 16266 1090 0346     		mov	r3, r0
 16267 1092 1A46     		mov	r2, r3
 16268 1094 7B69     		ldr	r3, [r7, #20]
 16269 1096 1344     		add	r3, r3, r2
 16270 1098 9B4A     		ldr	r2, .L690+8
 16271 109a 1188     		ldrh	r1, [r2]	@ unaligned
 16272 109c 9278     		ldrb	r2, [r2, #2]
 16273 109e 1980     		strh	r1, [r3]	@ unaligned
 16274 10a0 9A70     		strb	r2, [r3, #2]
2131:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 16275              		.loc 1 2131 0
 16276 10a2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16277 10a6 D7F88810 		ldr	r1, [r7, #136]
 16278 10aa 1346     		mov	r3, r2
 16279 10ac 5B00     		lsls	r3, r3, #1
 16280 10ae 1344     		add	r3, r3, r2
 16281 10b0 1B01     		lsls	r3, r3, #4
 16282 10b2 0B44     		add	r3, r3, r1
 16283 10b4 03F2B513 		addw	r3, r3, #437
 16284 10b8 93F90030 		ldrsb	r3, [r3]
 16285 10bc 1A46     		mov	r2, r3
 16286 10be 07F11803 		add	r3, r7, #24
 16287 10c2 9249     		ldr	r1, .L690+12
 16288 10c4 1846     		mov	r0, r3
 16289 10c6 FFF7FEFF 		bl	sprintf
2132:..\src/command_processing.c ****             strcat(info_string, str);
 16290              		.loc 1 2132 0
 16291 10ca 07F11803 		add	r3, r7, #24
 16292 10ce 1946     		mov	r1, r3
 16293 10d0 7869     		ldr	r0, [r7, #20]
 16294 10d2 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 364


2133:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 16295              		.loc 1 2133 0
 16296 10d6 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16297 10da D7F88810 		ldr	r1, [r7, #136]
 16298 10de 1346     		mov	r3, r2
 16299 10e0 5B00     		lsls	r3, r3, #1
 16300 10e2 1344     		add	r3, r3, r2
 16301 10e4 1B01     		lsls	r3, r3, #4
 16302 10e6 0B44     		add	r3, r3, r1
 16303 10e8 03F5DB73 		add	r3, r3, #438
 16304 10ec 93F90030 		ldrsb	r3, [r3]
 16305 10f0 1A46     		mov	r2, r3
 16306 10f2 07F11803 		add	r3, r7, #24
 16307 10f6 8649     		ldr	r1, .L690+16
 16308 10f8 1846     		mov	r0, r3
 16309 10fa FFF7FEFF 		bl	sprintf
2134:..\src/command_processing.c ****             strcat(info_string, str);
 16310              		.loc 1 2134 0
 16311 10fe 07F11803 		add	r3, r7, #24
 16312 1102 1946     		mov	r1, r3
 16313 1104 7869     		ldr	r0, [r7, #20]
 16314 1106 FFF7FEFF 		bl	strcat
2135:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 16315              		.loc 1 2135 0
 16316 110a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16317 110e D7F88810 		ldr	r1, [r7, #136]
 16318 1112 1346     		mov	r3, r2
 16319 1114 5B00     		lsls	r3, r3, #1
 16320 1116 1344     		add	r3, r3, r2
 16321 1118 1B01     		lsls	r3, r3, #4
 16322 111a 0B44     		add	r3, r3, r1
 16323 111c 03F2B713 		addw	r3, r3, #439
 16324 1120 93F90030 		ldrsb	r3, [r3]
 16325 1124 1A46     		mov	r2, r3
 16326 1126 07F11803 		add	r3, r7, #24
 16327 112a 7A49     		ldr	r1, .L690+20
 16328 112c 1846     		mov	r0, r3
 16329 112e FFF7FEFF 		bl	sprintf
2136:..\src/command_processing.c ****             strcat(info_string, str);
 16330              		.loc 1 2136 0
 16331 1132 07F11803 		add	r3, r7, #24
 16332 1136 1946     		mov	r1, r3
 16333 1138 7869     		ldr	r0, [r7, #20]
 16334 113a FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c **** #endif            
2138:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16335              		.loc 1 2138 0
 16336 113e 7869     		ldr	r0, [r7, #20]
 16337 1140 FFF7FEFF 		bl	strlen
 16338 1144 0346     		mov	r3, r0
 16339 1146 1A46     		mov	r2, r3
 16340 1148 7B69     		ldr	r3, [r7, #20]
 16341 114a 1344     		add	r3, r3, r2
 16342 114c 6E4A     		ldr	r2, .L690+8
 16343 114e 1188     		ldrh	r1, [r2]	@ unaligned
 16344 1150 9278     		ldrb	r2, [r2, #2]
 16345 1152 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 365


 16346 1154 9A70     		strb	r2, [r3, #2]
2139:..\src/command_processing.c **** 
2140:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16347              		.loc 1 2140 0
 16348 1156 7869     		ldr	r0, [r7, #20]
 16349 1158 FFF7FEFF 		bl	strlen
 16350 115c 0346     		mov	r3, r0
 16351 115e 1A46     		mov	r2, r3
 16352 1160 7B69     		ldr	r3, [r7, #20]
 16353 1162 1344     		add	r3, r3, r2
 16354 1164 6C4A     		ldr	r2, .L690+24
 16355 1166 1D46     		mov	r5, r3
 16356 1168 1446     		mov	r4, r2
 16357 116a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16358 116c 2860     		str	r0, [r5]	@ unaligned
 16359 116e 6960     		str	r1, [r5, #4]	@ unaligned
 16360 1170 AA60     		str	r2, [r5, #8]	@ unaligned
 16361 1172 EB60     		str	r3, [r5, #12]	@ unaligned
 16362 1174 2068     		ldr	r0, [r4]	@ unaligned
 16363 1176 2861     		str	r0, [r5, #16]	@ unaligned
2141:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16364              		.loc 1 2141 0
 16365 1178 0023     		movs	r3, #0
 16366 117a C7F89430 		str	r3, [r7, #148]
 16367 117e 30E0     		b	.L625
 16368              	.L627:
2142:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16369              		.loc 1 2142 0
 16370 1180 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16371 1184 D7F88810 		ldr	r1, [r7, #136]
 16372 1188 1346     		mov	r3, r2
 16373 118a 5B00     		lsls	r3, r3, #1
 16374 118c 1344     		add	r3, r3, r2
 16375 118e 1B01     		lsls	r3, r3, #4
 16376 1190 CA18     		adds	r2, r1, r3
 16377 1192 D7F89430 		ldr	r3, [r7, #148]
 16378 1196 1344     		add	r3, r3, r2
 16379 1198 03F29513 		addw	r3, r3, #405
 16380 119c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16381 119e 1A46     		mov	r2, r3
 16382 11a0 07F11803 		add	r3, r7, #24
 16383 11a4 5649     		ldr	r1, .L690
 16384 11a6 1846     		mov	r0, r3
 16385 11a8 FFF7FEFF 		bl	sprintf
2143:..\src/command_processing.c ****                 strcat(info_string, str);
 16386              		.loc 1 2143 0
 16387 11ac 07F11803 		add	r3, r7, #24
 16388 11b0 1946     		mov	r1, r3
 16389 11b2 7869     		ldr	r0, [r7, #20]
 16390 11b4 FFF7FEFF 		bl	strcat
2144:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16391              		.loc 1 2144 0
 16392 11b8 D7F89430 		ldr	r3, [r7, #148]
 16393 11bc 022B     		cmp	r3, #2
 16394 11be 0BD0     		beq	.L626
2145:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16395              		.loc 1 2145 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 366


 16396 11c0 7869     		ldr	r0, [r7, #20]
 16397 11c2 FFF7FEFF 		bl	strlen
 16398 11c6 0346     		mov	r3, r0
 16399 11c8 1A46     		mov	r2, r3
 16400 11ca 7B69     		ldr	r3, [r7, #20]
 16401 11cc 1344     		add	r3, r3, r2
 16402 11ce 4D4A     		ldr	r2, .L690+4
 16403 11d0 1188     		ldrh	r1, [r2]	@ unaligned
 16404 11d2 9278     		ldrb	r2, [r2, #2]
 16405 11d4 1980     		strh	r1, [r3]	@ unaligned
 16406 11d6 9A70     		strb	r2, [r3, #2]
 16407              	.L626:
2141:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16408              		.loc 1 2141 0 discriminator 2
 16409 11d8 D7F89430 		ldr	r3, [r7, #148]
 16410 11dc 0133     		adds	r3, r3, #1
 16411 11de C7F89430 		str	r3, [r7, #148]
 16412              	.L625:
2141:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16413              		.loc 1 2141 0 is_stmt 0 discriminator 1
 16414 11e2 D7F89430 		ldr	r3, [r7, #148]
 16415 11e6 022B     		cmp	r3, #2
 16416 11e8 CADD     		ble	.L627
2146:..\src/command_processing.c ****                 }                
2147:..\src/command_processing.c ****             }
2148:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16417              		.loc 1 2148 0 is_stmt 1
 16418 11ea 7869     		ldr	r0, [r7, #20]
 16419 11ec FFF7FEFF 		bl	strlen
 16420 11f0 0346     		mov	r3, r0
 16421 11f2 1A46     		mov	r2, r3
 16422 11f4 7B69     		ldr	r3, [r7, #20]
 16423 11f6 1344     		add	r3, r3, r2
 16424 11f8 434A     		ldr	r2, .L690+8
 16425 11fa 1188     		ldrh	r1, [r2]	@ unaligned
 16426 11fc 9278     		ldrb	r2, [r2, #2]
 16427 11fe 1980     		strh	r1, [r3]	@ unaligned
 16428 1200 9A70     		strb	r2, [r3, #2]
2149:..\src/command_processing.c **** 
2150:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16429              		.loc 1 2150 0
 16430 1202 7869     		ldr	r0, [r7, #20]
 16431 1204 FFF7FEFF 		bl	strlen
 16432 1208 0346     		mov	r3, r0
 16433 120a 1A46     		mov	r2, r3
 16434 120c 7B69     		ldr	r3, [r7, #20]
 16435 120e 1344     		add	r3, r3, r2
 16436 1210 424A     		ldr	r2, .L690+28
 16437 1212 1D46     		mov	r5, r3
 16438 1214 1446     		mov	r4, r2
 16439 1216 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16440 1218 2860     		str	r0, [r5]	@ unaligned
 16441 121a 6960     		str	r1, [r5, #4]	@ unaligned
 16442 121c AA60     		str	r2, [r5, #8]	@ unaligned
 16443 121e EB60     		str	r3, [r5, #12]	@ unaligned
 16444 1220 2068     		ldr	r0, [r4]	@ unaligned
 16445 1222 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 367


 16446 1224 2379     		ldrb	r3, [r4, #4]
 16447 1226 2B75     		strb	r3, [r5, #20]
2151:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16448              		.loc 1 2151 0
 16449 1228 0023     		movs	r3, #0
 16450 122a C7F89430 		str	r3, [r7, #148]
 16451 122e 3FE0     		b	.L628
 16452              	.L630:
2152:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16453              		.loc 1 2152 0
 16454 1230 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16455 1234 D7F88810 		ldr	r1, [r7, #136]
 16456 1238 1346     		mov	r3, r2
 16457 123a 5B00     		lsls	r3, r3, #1
 16458 123c 1344     		add	r3, r3, r2
 16459 123e 9B00     		lsls	r3, r3, #2
 16460 1240 D7F89420 		ldr	r2, [r7, #148]
 16461 1244 1344     		add	r3, r3, r2
 16462 1246 6633     		adds	r3, r3, #102
 16463 1248 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16464 124c 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16465 1250 D7F88800 		ldr	r0, [r7, #136]
 16466 1254 1346     		mov	r3, r2
 16467 1256 5B00     		lsls	r3, r3, #1
 16468 1258 1344     		add	r3, r3, r2
 16469 125a 1B01     		lsls	r3, r3, #4
 16470 125c C218     		adds	r2, r0, r3
 16471 125e D7F89430 		ldr	r3, [r7, #148]
 16472 1262 1344     		add	r3, r3, r2
 16473 1264 03F29513 		addw	r3, r3, #405
 16474 1268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16475 126a 41FA03F2 		asr	r2, r1, r3
 16476 126e 07F11803 		add	r3, r7, #24
 16477 1272 2B49     		ldr	r1, .L690+32
 16478 1274 1846     		mov	r0, r3
 16479 1276 FFF7FEFF 		bl	sprintf
2153:..\src/command_processing.c ****                 strcat(info_string, str);
 16480              		.loc 1 2153 0
 16481 127a 07F11803 		add	r3, r7, #24
 16482 127e 1946     		mov	r1, r3
 16483 1280 7869     		ldr	r0, [r7, #20]
 16484 1282 FFF7FEFF 		bl	strcat
2154:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16485              		.loc 1 2154 0
 16486 1286 D7F89430 		ldr	r3, [r7, #148]
 16487 128a 022B     		cmp	r3, #2
 16488 128c 0BD0     		beq	.L629
2155:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16489              		.loc 1 2155 0
 16490 128e 7869     		ldr	r0, [r7, #20]
 16491 1290 FFF7FEFF 		bl	strlen
 16492 1294 0346     		mov	r3, r0
 16493 1296 1A46     		mov	r2, r3
 16494 1298 7B69     		ldr	r3, [r7, #20]
 16495 129a 1344     		add	r3, r3, r2
 16496 129c 194A     		ldr	r2, .L690+4
 16497 129e 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 368


 16498 12a0 9278     		ldrb	r2, [r2, #2]
 16499 12a2 1980     		strh	r1, [r3]	@ unaligned
 16500 12a4 9A70     		strb	r2, [r3, #2]
 16501              	.L629:
2151:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16502              		.loc 1 2151 0 discriminator 2
 16503 12a6 D7F89430 		ldr	r3, [r7, #148]
 16504 12aa 0133     		adds	r3, r3, #1
 16505 12ac C7F89430 		str	r3, [r7, #148]
 16506              	.L628:
2151:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16507              		.loc 1 2151 0 is_stmt 0 discriminator 1
 16508 12b0 D7F89430 		ldr	r3, [r7, #148]
 16509 12b4 022B     		cmp	r3, #2
 16510 12b6 BBDD     		ble	.L630
2156:..\src/command_processing.c ****                 }
2157:..\src/command_processing.c ****             }
2158:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16511              		.loc 1 2158 0 is_stmt 1
 16512 12b8 7869     		ldr	r0, [r7, #20]
 16513 12ba FFF7FEFF 		bl	strlen
 16514 12be 0346     		mov	r3, r0
 16515 12c0 1A46     		mov	r2, r3
 16516 12c2 7B69     		ldr	r3, [r7, #20]
 16517 12c4 1344     		add	r3, r3, r2
 16518 12c6 104A     		ldr	r2, .L690+8
 16519 12c8 1188     		ldrh	r1, [r2]	@ unaligned
 16520 12ca 9278     		ldrb	r2, [r2, #2]
 16521 12cc 1980     		strh	r1, [r3]	@ unaligned
 16522 12ce 9A70     		strb	r2, [r3, #2]
2159:..\src/command_processing.c ****                 
2160:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16523              		.loc 1 2160 0
 16524 12d0 7869     		ldr	r0, [r7, #20]
 16525 12d2 FFF7FEFF 		bl	strlen
 16526 12d6 0346     		mov	r3, r0
 16527 12d8 1A46     		mov	r2, r3
 16528 12da 7B69     		ldr	r3, [r7, #20]
 16529 12dc 1344     		add	r3, r3, r2
 16530 12de 114A     		ldr	r2, .L690+36
 16531 12e0 1D46     		mov	r5, r3
 16532 12e2 1446     		mov	r4, r2
 16533 12e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16534 12e6 2860     		str	r0, [r5]	@ unaligned
 16535 12e8 6960     		str	r1, [r5, #4]	@ unaligned
 16536 12ea AA60     		str	r2, [r5, #8]	@ unaligned
 16537 12ec EB60     		str	r3, [r5, #12]	@ unaligned
 16538 12ee 03CC     		ldmia	r4!, {r0, r1}
 16539 12f0 2861     		str	r0, [r5, #16]	@ unaligned
 16540 12f2 6961     		str	r1, [r5, #20]	@ unaligned
 16541 12f4 2378     		ldrb	r3, [r4]
 16542 12f6 2B76     		strb	r3, [r5, #24]
2161:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16543              		.loc 1 2161 0
 16544 12f8 0023     		movs	r3, #0
 16545 12fa C7F89430 		str	r3, [r7, #148]
 16546 12fe 49E0     		b	.L631
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 369


 16547              	.L691:
 16548              		.align	2
 16549              	.L690:
 16550 1300 64130000 		.word	.LC182
 16551 1304 68130000 		.word	.LC183
 16552 1308 30110000 		.word	.LC151
 16553 130c 9C160000 		.word	.LC213
 16554 1310 B4160000 		.word	.LC214
 16555 1314 CC160000 		.word	.LC215
 16556 1318 E4160000 		.word	.LC216
 16557 131c F8160000 		.word	.LC217
 16558 1320 10170000 		.word	.LC218
 16559 1324 14170000 		.word	.LC219
 16560              	.L633:
2162:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16561              		.loc 1 2162 0
 16562 1328 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16563 132c D7F88810 		ldr	r1, [r7, #136]
 16564 1330 1346     		mov	r3, r2
 16565 1332 5B00     		lsls	r3, r3, #1
 16566 1334 1344     		add	r3, r3, r2
 16567 1336 9B00     		lsls	r3, r3, #2
 16568 1338 D7F89420 		ldr	r2, [r7, #148]
 16569 133c 1344     		add	r3, r3, r2
 16570 133e 6833     		adds	r3, r3, #104
 16571 1340 9B00     		lsls	r3, r3, #2
 16572 1342 0B44     		add	r3, r3, r1
 16573 1344 5B68     		ldr	r3, [r3, #4]	@ float
 16574 1346 1846     		mov	r0, r3
 16575 1348 FFF7FEFF 		bl	__aeabi_f2d
 16576 134c 0346     		mov	r3, r0
 16577 134e 0C46     		mov	r4, r1
 16578 1350 07F11800 		add	r0, r7, #24
 16579 1354 1A46     		mov	r2, r3
 16580 1356 2346     		mov	r3, r4
 16581 1358 BD49     		ldr	r1, .L692
 16582 135a FFF7FEFF 		bl	sprintf
2163:..\src/command_processing.c ****                 strcat(info_string, str);
 16583              		.loc 1 2163 0
 16584 135e 07F11803 		add	r3, r7, #24
 16585 1362 1946     		mov	r1, r3
 16586 1364 7869     		ldr	r0, [r7, #20]
 16587 1366 FFF7FEFF 		bl	strcat
2164:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16588              		.loc 1 2164 0
 16589 136a D7F89430 		ldr	r3, [r7, #148]
 16590 136e 022B     		cmp	r3, #2
 16591 1370 0BD0     		beq	.L632
2165:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16592              		.loc 1 2165 0
 16593 1372 7869     		ldr	r0, [r7, #20]
 16594 1374 FFF7FEFF 		bl	strlen
 16595 1378 0346     		mov	r3, r0
 16596 137a 1A46     		mov	r2, r3
 16597 137c 7B69     		ldr	r3, [r7, #20]
 16598 137e 1344     		add	r3, r3, r2
 16599 1380 B44A     		ldr	r2, .L692+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 370


 16600 1382 1188     		ldrh	r1, [r2]	@ unaligned
 16601 1384 9278     		ldrb	r2, [r2, #2]
 16602 1386 1980     		strh	r1, [r3]	@ unaligned
 16603 1388 9A70     		strb	r2, [r3, #2]
 16604              	.L632:
2161:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16605              		.loc 1 2161 0 discriminator 2
 16606 138a D7F89430 		ldr	r3, [r7, #148]
 16607 138e 0133     		adds	r3, r3, #1
 16608 1390 C7F89430 		str	r3, [r7, #148]
 16609              	.L631:
2161:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16610              		.loc 1 2161 0 is_stmt 0 discriminator 1
 16611 1394 D7F89430 		ldr	r3, [r7, #148]
 16612 1398 022B     		cmp	r3, #2
 16613 139a C5DD     		ble	.L633
2166:..\src/command_processing.c ****                 }
2167:..\src/command_processing.c ****             }
2168:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16614              		.loc 1 2168 0 is_stmt 1
 16615 139c 7869     		ldr	r0, [r7, #20]
 16616 139e FFF7FEFF 		bl	strlen
 16617 13a2 0346     		mov	r3, r0
 16618 13a4 1A46     		mov	r2, r3
 16619 13a6 7B69     		ldr	r3, [r7, #20]
 16620 13a8 1344     		add	r3, r3, r2
 16621 13aa AB4A     		ldr	r2, .L692+8
 16622 13ac 1188     		ldrh	r1, [r2]	@ unaligned
 16623 13ae 9278     		ldrb	r2, [r2, #2]
 16624 13b0 1980     		strh	r1, [r3]	@ unaligned
 16625 13b2 9A70     		strb	r2, [r3, #2]
2169:..\src/command_processing.c ****             
2170:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2171:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16626              		.loc 1 2171 0
 16627 13b4 D7F88030 		ldr	r3, [r7, #128]
 16628 13b8 5B6C     		ldr	r3, [r3, #68]	@ float
2170:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16629              		.loc 1 2170 0
 16630 13ba 1846     		mov	r0, r3
 16631 13bc FFF7FEFF 		bl	__aeabi_f2d
 16632 13c0 C7E90201 		strd	r0, [r7, #8]
 16633              		.loc 1 2171 0
 16634 13c4 D7F88030 		ldr	r3, [r7, #128]
 16635 13c8 9B6C     		ldr	r3, [r3, #72]	@ float
2170:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16636              		.loc 1 2170 0
 16637 13ca 1846     		mov	r0, r3
 16638 13cc FFF7FEFF 		bl	__aeabi_f2d
 16639 13d0 0446     		mov	r4, r0
 16640 13d2 0D46     		mov	r5, r1
 16641              		.loc 1 2171 0
 16642 13d4 D7F88030 		ldr	r3, [r7, #128]
 16643 13d8 DB6C     		ldr	r3, [r3, #76]	@ float
2170:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16644              		.loc 1 2170 0
 16645 13da 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 371


 16646 13dc FFF7FEFF 		bl	__aeabi_f2d
 16647 13e0 8046     		mov	r8, r0
 16648 13e2 8946     		mov	r9, r1
2172:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16649              		.loc 1 2172 0
 16650 13e4 D7F88030 		ldr	r3, [r7, #128]
 16651 13e8 1B6D     		ldr	r3, [r3, #80]	@ float
2170:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16652              		.loc 1 2170 0
 16653 13ea 1846     		mov	r0, r3
 16654 13ec FFF7FEFF 		bl	__aeabi_f2d
 16655 13f0 8246     		mov	r10, r0
 16656 13f2 8B46     		mov	fp, r1
 16657              		.loc 1 2172 0
 16658 13f4 D7F88030 		ldr	r3, [r7, #128]
 16659 13f8 5B6D     		ldr	r3, [r3, #84]	@ float
2170:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16660              		.loc 1 2170 0
 16661 13fa 1846     		mov	r0, r3
 16662 13fc FFF7FEFF 		bl	__aeabi_f2d
 16663 1400 C7E90001 		strd	r0, [r7]
 16664              		.loc 1 2172 0
 16665 1404 D7F88030 		ldr	r3, [r7, #128]
 16666 1408 9B6D     		ldr	r3, [r3, #88]	@ float
2170:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16667              		.loc 1 2170 0
 16668 140a 1846     		mov	r0, r3
 16669 140c FFF7FEFF 		bl	__aeabi_f2d
 16670 1410 0246     		mov	r2, r0
 16671 1412 0B46     		mov	r3, r1
 16672 1414 07F11800 		add	r0, r7, #24
 16673 1418 CDE90823 		strd	r2, [sp, #32]
 16674 141c D7E90012 		ldrd	r1, [r7]
 16675 1420 CDE90612 		strd	r1, [sp, #24]
 16676 1424 CDE904AB 		strd	r10, [sp, #16]
 16677 1428 CDE90289 		strd	r8, [sp, #8]
 16678 142c CDE90045 		strd	r4, [sp]
 16679 1430 D7E90223 		ldrd	r2, [r7, #8]
 16680 1434 8949     		ldr	r1, .L692+12
 16681 1436 FFF7FEFF 		bl	sprintf
2173:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16682              		.loc 1 2173 0
 16683 143a 07F11803 		add	r3, r7, #24
 16684 143e 1946     		mov	r1, r3
 16685 1440 7869     		ldr	r0, [r7, #20]
 16686 1442 FFF7FEFF 		bl	strcat
2174:..\src/command_processing.c **** 
2175:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16687              		.loc 1 2175 0
 16688 1446 D7F88030 		ldr	r3, [r7, #128]
 16689 144a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16690 144e 1A46     		mov	r2, r3
 16691 1450 07F11803 		add	r3, r7, #24
 16692 1454 8249     		ldr	r1, .L692+16
 16693 1456 1846     		mov	r0, r3
 16694 1458 FFF7FEFF 		bl	sprintf
2176:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 372


 16695              		.loc 1 2176 0
 16696 145c 07F11803 		add	r3, r7, #24
 16697 1460 1946     		mov	r1, r3
 16698 1462 7869     		ldr	r0, [r7, #20]
 16699 1464 FFF7FEFF 		bl	strcat
2177:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16700              		.loc 1 2177 0
 16701 1468 7869     		ldr	r0, [r7, #20]
 16702 146a FFF7FEFF 		bl	strlen
 16703 146e 0346     		mov	r3, r0
 16704 1470 1A46     		mov	r2, r3
 16705 1472 7B69     		ldr	r3, [r7, #20]
 16706 1474 1344     		add	r3, r3, r2
 16707 1476 784A     		ldr	r2, .L692+8
 16708 1478 1188     		ldrh	r1, [r2]	@ unaligned
 16709 147a 9278     		ldrb	r2, [r2, #2]
 16710 147c 1980     		strh	r1, [r3]	@ unaligned
 16711 147e 9A70     		strb	r2, [r3, #2]
2178:..\src/command_processing.c **** 
2179:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16712              		.loc 1 2179 0
 16713 1480 D7F88030 		ldr	r3, [r7, #128]
 16714 1484 596B     		ldr	r1, [r3, #52]
 16715 1486 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16716 148a D7F88800 		ldr	r0, [r7, #136]
 16717 148e 1346     		mov	r3, r2
 16718 1490 5B00     		lsls	r3, r3, #1
 16719 1492 1344     		add	r3, r3, r2
 16720 1494 1B01     		lsls	r3, r3, #4
 16721 1496 0344     		add	r3, r3, r0
 16722 1498 03F29513 		addw	r3, r3, #405
 16723 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16724 149e 41FA03F2 		asr	r2, r1, r3
 16725 14a2 07F11803 		add	r3, r7, #24
 16726 14a6 6F49     		ldr	r1, .L692+20
 16727 14a8 1846     		mov	r0, r3
 16728 14aa FFF7FEFF 		bl	sprintf
2180:..\src/command_processing.c ****             strcat(info_string, str);
 16729              		.loc 1 2180 0
 16730 14ae 07F11803 		add	r3, r7, #24
 16731 14b2 1946     		mov	r1, r3
 16732 14b4 7869     		ldr	r0, [r7, #20]
 16733 14b6 FFF7FEFF 		bl	strcat
2181:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16734              		.loc 1 2181 0
 16735 14ba D7F88030 		ldr	r3, [r7, #128]
 16736 14be 996B     		ldr	r1, [r3, #56]
 16737 14c0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16738 14c4 D7F88800 		ldr	r0, [r7, #136]
 16739 14c8 1346     		mov	r3, r2
 16740 14ca 5B00     		lsls	r3, r3, #1
 16741 14cc 1344     		add	r3, r3, r2
 16742 14ce 1B01     		lsls	r3, r3, #4
 16743 14d0 0344     		add	r3, r3, r0
 16744 14d2 03F29513 		addw	r3, r3, #405
 16745 14d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16746 14d8 41FA03F2 		asr	r2, r1, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 373


 16747 14dc 07F11803 		add	r3, r7, #24
 16748 14e0 6149     		ldr	r1, .L692+24
 16749 14e2 1846     		mov	r0, r3
 16750 14e4 FFF7FEFF 		bl	sprintf
2182:..\src/command_processing.c ****             strcat(info_string, str);
 16751              		.loc 1 2182 0
 16752 14e8 07F11803 		add	r3, r7, #24
 16753 14ec 1946     		mov	r1, r3
 16754 14ee 7869     		ldr	r0, [r7, #20]
 16755 14f0 FFF7FEFF 		bl	strcat
2183:..\src/command_processing.c **** 
2184:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16756              		.loc 1 2184 0
 16757 14f4 D7F88030 		ldr	r3, [r7, #128]
 16758 14f8 1A6C     		ldr	r2, [r3, #64]
 16759 14fa D7F88030 		ldr	r3, [r7, #128]
 16760 14fe DB6B     		ldr	r3, [r3, #60]
 16761 1500 07F11800 		add	r0, r7, #24
 16762 1504 5949     		ldr	r1, .L692+28
 16763 1506 FFF7FEFF 		bl	sprintf
2185:..\src/command_processing.c ****             strcat(info_string, str);
 16764              		.loc 1 2185 0
 16765 150a 07F11803 		add	r3, r7, #24
 16766 150e 1946     		mov	r1, r3
 16767 1510 7869     		ldr	r0, [r7, #20]
 16768 1512 FFF7FEFF 		bl	strcat
2186:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16769              		.loc 1 2186 0
 16770 1516 7869     		ldr	r0, [r7, #20]
 16771 1518 FFF7FEFF 		bl	strlen
 16772 151c 0346     		mov	r3, r0
 16773 151e 1A46     		mov	r2, r3
 16774 1520 7B69     		ldr	r3, [r7, #20]
 16775 1522 1344     		add	r3, r3, r2
 16776 1524 4C4A     		ldr	r2, .L692+8
 16777 1526 1188     		ldrh	r1, [r2]	@ unaligned
 16778 1528 9278     		ldrb	r2, [r2, #2]
 16779 152a 1980     		strh	r1, [r3]	@ unaligned
 16780 152c 9A70     		strb	r2, [r3, #2]
2187:..\src/command_processing.c **** 
2188:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16781              		.loc 1 2188 0
 16782 152e D7F88030 		ldr	r3, [r7, #128]
 16783 1532 B3F95C30 		ldrsh	r3, [r3, #92]
 16784 1536 1A46     		mov	r2, r3
 16785 1538 07F11803 		add	r3, r7, #24
 16786 153c 4C49     		ldr	r1, .L692+32
 16787 153e 1846     		mov	r0, r3
 16788 1540 FFF7FEFF 		bl	sprintf
2189:..\src/command_processing.c ****             strcat(info_string, str);
 16789              		.loc 1 2189 0
 16790 1544 07F11803 		add	r3, r7, #24
 16791 1548 1946     		mov	r1, r3
 16792 154a 7869     		ldr	r0, [r7, #20]
 16793 154c FFF7FEFF 		bl	strcat
2190:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2191:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 374


 16794              		.loc 1 2191 0
 16795 1550 D7F88030 		ldr	r3, [r7, #128]
 16796 1554 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 16797 1558 1A46     		mov	r2, r3
 16798 155a 07F11803 		add	r3, r7, #24
 16799 155e 4549     		ldr	r1, .L692+36
 16800 1560 1846     		mov	r0, r3
 16801 1562 FFF7FEFF 		bl	sprintf
2192:..\src/command_processing.c ****             strcat(info_string, str);
 16802              		.loc 1 2192 0
 16803 1566 07F11803 		add	r3, r7, #24
 16804 156a 1946     		mov	r1, r3
 16805 156c 7869     		ldr	r0, [r7, #20]
 16806 156e FFF7FEFF 		bl	strcat
2193:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 16807              		.loc 1 2193 0
 16808 1572 D7F88030 		ldr	r3, [r7, #128]
 16809 1576 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16810 157a 002B     		cmp	r3, #0
 16811 157c 02D0     		beq	.L635
 16812 157e 012B     		cmp	r3, #1
 16813 1580 1DD0     		beq	.L636
2194:..\src/command_processing.c ****                 case DRIVER_MC33887:
2195:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2196:..\src/command_processing.c ****                     break;
2197:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2198:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2199:..\src/command_processing.c ****                     break;
2200:..\src/command_processing.c ****                 default:
2201:..\src/command_processing.c ****                     break;
 16814              		.loc 1 2201 0
 16815 1582 39E0     		b	.L638
 16816              	.L635:
2195:..\src/command_processing.c ****                     break;
 16817              		.loc 1 2195 0
 16818 1584 7869     		ldr	r0, [r7, #20]
 16819 1586 FFF7FEFF 		bl	strlen
 16820 158a 0346     		mov	r3, r0
 16821 158c 1A46     		mov	r2, r3
 16822 158e 7B69     		ldr	r3, [r7, #20]
 16823 1590 1344     		add	r3, r3, r2
 16824 1592 394A     		ldr	r2, .L692+40
 16825 1594 1446     		mov	r4, r2
 16826 1596 9E46     		mov	lr, r3
 16827 1598 04F1200C 		add	ip, r4, #32
 16828              	.L637:
 16829 159c 7546     		mov	r5, lr
 16830 159e 2646     		mov	r6, r4
 16831 15a0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16832 15a2 2860     		str	r0, [r5]	@ unaligned
 16833 15a4 6960     		str	r1, [r5, #4]	@ unaligned
 16834 15a6 AA60     		str	r2, [r5, #8]	@ unaligned
 16835 15a8 EB60     		str	r3, [r5, #12]	@ unaligned
 16836 15aa 1034     		adds	r4, r4, #16
 16837 15ac 0EF1100E 		add	lr, lr, #16
 16838 15b0 6445     		cmp	r4, ip
 16839 15b2 F3D1     		bne	.L637
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 375


 16840 15b4 7246     		mov	r2, lr
 16841 15b6 2346     		mov	r3, r4
 16842 15b8 1B88     		ldrh	r3, [r3]	@ unaligned
 16843 15ba 1380     		strh	r3, [r2]	@ unaligned
2196:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 16844              		.loc 1 2196 0
 16845 15bc 1CE0     		b	.L638
 16846              	.L636:
2198:..\src/command_processing.c ****                     break;
 16847              		.loc 1 2198 0
 16848 15be 7869     		ldr	r0, [r7, #20]
 16849 15c0 FFF7FEFF 		bl	strlen
 16850 15c4 0346     		mov	r3, r0
 16851 15c6 1A46     		mov	r2, r3
 16852 15c8 7B69     		ldr	r3, [r7, #20]
 16853 15ca 1344     		add	r3, r3, r2
 16854 15cc 2B4A     		ldr	r2, .L692+44
 16855 15ce 1446     		mov	r4, r2
 16856 15d0 9E46     		mov	lr, r3
 16857 15d2 04F1200C 		add	ip, r4, #32
 16858              	.L639:
 16859 15d6 7546     		mov	r5, lr
 16860 15d8 2646     		mov	r6, r4
 16861 15da 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16862 15dc 2860     		str	r0, [r5]	@ unaligned
 16863 15de 6960     		str	r1, [r5, #4]	@ unaligned
 16864 15e0 AA60     		str	r2, [r5, #8]	@ unaligned
 16865 15e2 EB60     		str	r3, [r5, #12]	@ unaligned
 16866 15e4 1034     		adds	r4, r4, #16
 16867 15e6 0EF1100E 		add	lr, lr, #16
 16868 15ea 6445     		cmp	r4, ip
 16869 15ec F3D1     		bne	.L639
 16870 15ee 7346     		mov	r3, lr
 16871 15f0 2246     		mov	r2, r4
 16872 15f2 1068     		ldr	r0, [r2]	@ unaligned
 16873 15f4 1860     		str	r0, [r3]	@ unaligned
2199:..\src/command_processing.c ****                 default:
 16874              		.loc 1 2199 0
 16875 15f6 00BF     		nop
 16876              	.L638:
2202:..\src/command_processing.c ****             }
2203:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16877              		.loc 1 2203 0
 16878 15f8 D7F88030 		ldr	r3, [r7, #128]
 16879 15fc 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 16880 1600 1A46     		mov	r2, r3
 16881 1602 07F11803 		add	r3, r7, #24
 16882 1606 1E49     		ldr	r1, .L692+48
 16883 1608 1846     		mov	r0, r3
 16884 160a FFF7FEFF 		bl	sprintf
2204:..\src/command_processing.c ****             strcat(info_string, str);
 16885              		.loc 1 2204 0
 16886 160e 07F11803 		add	r3, r7, #24
 16887 1612 1946     		mov	r1, r3
 16888 1614 7869     		ldr	r0, [r7, #20]
 16889 1616 FFF7FEFF 		bl	strcat
2205:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 376


 16890              		.loc 1 2205 0
 16891 161a D7F88030 		ldr	r3, [r7, #128]
 16892 161e 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 16893 1622 002B     		cmp	r3, #0
 16894 1624 30D0     		beq	.L640
2206:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 16895              		.loc 1 2206 0
 16896 1626 7869     		ldr	r0, [r7, #20]
 16897 1628 FFF7FEFF 		bl	strlen
 16898 162c 0346     		mov	r3, r0
 16899 162e 1A46     		mov	r2, r3
 16900 1630 7B69     		ldr	r3, [r7, #20]
 16901 1632 1344     		add	r3, r3, r2
 16902 1634 134A     		ldr	r2, .L692+52
 16903 1636 1D46     		mov	r5, r3
 16904 1638 1446     		mov	r4, r2
 16905 163a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16906 163c 2860     		str	r0, [r5]	@ unaligned
 16907 163e 6960     		str	r1, [r5, #4]	@ unaligned
 16908 1640 AA60     		str	r2, [r5, #8]	@ unaligned
 16909 1642 EB60     		str	r3, [r5, #12]	@ unaligned
 16910 1644 07CC     		ldmia	r4!, {r0, r1, r2}
 16911 1646 2861     		str	r0, [r5, #16]	@ unaligned
 16912 1648 6961     		str	r1, [r5, #20]	@ unaligned
 16913 164a AA61     		str	r2, [r5, #24]	@ unaligned
 16914 164c 33E0     		b	.L641
 16915              	.L693:
 16916 164e 00BF     		.align	2
 16917              	.L692:
 16918 1650 30170000 		.word	.LC220
 16919 1654 68130000 		.word	.LC183
 16920 1658 30110000 		.word	.LC151
 16921 165c 34170000 		.word	.LC221
 16922 1660 64170000 		.word	.LC222
 16923 1664 80170000 		.word	.LC223
 16924 1668 A4170000 		.word	.LC224
 16925 166c B4170000 		.word	.LC225
 16926 1670 D0170000 		.word	.LC226
 16927 1674 E4170000 		.word	.LC227
 16928 1678 10180000 		.word	.LC228
 16929 167c 34180000 		.word	.LC229
 16930 1680 58180000 		.word	.LC230
 16931 1684 78180000 		.word	.LC231
 16932              	.L640:
2207:..\src/command_processing.c ****             else
2208:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 16933              		.loc 1 2208 0
 16934 1688 7869     		ldr	r0, [r7, #20]
 16935 168a FFF7FEFF 		bl	strlen
 16936 168e 0346     		mov	r3, r0
 16937 1690 1A46     		mov	r2, r3
 16938 1692 7B69     		ldr	r3, [r7, #20]
 16939 1694 1344     		add	r3, r3, r2
 16940 1696 A24A     		ldr	r2, .L694
 16941 1698 1D46     		mov	r5, r3
 16942 169a 1446     		mov	r4, r2
 16943 169c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 377


 16944 169e 2860     		str	r0, [r5]	@ unaligned
 16945 16a0 6960     		str	r1, [r5, #4]	@ unaligned
 16946 16a2 AA60     		str	r2, [r5, #8]	@ unaligned
 16947 16a4 EB60     		str	r3, [r5, #12]	@ unaligned
 16948 16a6 03CC     		ldmia	r4!, {r0, r1}
 16949 16a8 2861     		str	r0, [r5, #16]	@ unaligned
 16950 16aa 6961     		str	r1, [r5, #20]	@ unaligned
 16951 16ac 2388     		ldrh	r3, [r4]	@ unaligned
 16952 16ae A278     		ldrb	r2, [r4, #2]
 16953 16b0 2B83     		strh	r3, [r5, #24]	@ unaligned
 16954 16b2 1346     		mov	r3, r2
 16955 16b4 AB76     		strb	r3, [r5, #26]
 16956              	.L641:
2209:..\src/command_processing.c **** #endif                
2210:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16957              		.loc 1 2210 0 discriminator 2
 16958 16b6 7869     		ldr	r0, [r7, #20]
 16959 16b8 FFF7FEFF 		bl	strlen
 16960 16bc 0346     		mov	r3, r0
 16961 16be 1A46     		mov	r2, r3
 16962 16c0 7B69     		ldr	r3, [r7, #20]
 16963 16c2 1344     		add	r3, r3, r2
 16964 16c4 974A     		ldr	r2, .L694+4
 16965 16c6 1188     		ldrh	r1, [r2]	@ unaligned
 16966 16c8 9278     		ldrb	r2, [r2, #2]
 16967 16ca 1980     		strh	r1, [r3]	@ unaligned
 16968 16cc 9A70     		strb	r2, [r3, #2]
 16969              	.LBE22:
1940:..\src/command_processing.c ****             
 16970              		.loc 1 1940 0 discriminator 2
 16971 16ce 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16972 16d2 0133     		adds	r3, r3, #1
 16973 16d4 87F89330 		strb	r3, [r7, #147]
 16974              	.L577:
1940:..\src/command_processing.c ****             
 16975              		.loc 1 1940 0 is_stmt 0 discriminator 1
 16976 16d8 D7F88830 		ldr	r3, [r7, #136]
 16977 16dc 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16978 16e0 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16979 16e4 9A42     		cmp	r2, r3
 16980 16e6 7EF641AE 		bls	.L642
 16981              	.LBE21:
2211:..\src/command_processing.c ****         }
2212:..\src/command_processing.c ****       
2213:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16982              		.loc 1 2213 0 is_stmt 1
 16983 16ea 7869     		ldr	r0, [r7, #20]
 16984 16ec FFF7FEFF 		bl	strlen
 16985 16f0 0346     		mov	r3, r0
 16986 16f2 1A46     		mov	r2, r3
 16987 16f4 7B69     		ldr	r3, [r7, #20]
 16988 16f6 1344     		add	r3, r3, r2
 16989 16f8 8B4A     		ldr	r2, .L694+8
 16990 16fa 1D46     		mov	r5, r3
 16991 16fc 1446     		mov	r4, r2
 16992 16fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16993 1700 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 378


 16994 1702 6960     		str	r1, [r5, #4]	@ unaligned
 16995 1704 AA60     		str	r2, [r5, #8]	@ unaligned
 16996 1706 EB60     		str	r3, [r5, #12]	@ unaligned
 16997 1708 2068     		ldr	r0, [r4]	@ unaligned
 16998 170a 2861     		str	r0, [r5, #16]	@ unaligned
2214:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16999              		.loc 1 2214 0
 17000 170c D7F88830 		ldr	r3, [r7, #136]
 17001 1710 B3F8F031 		ldrh	r3, [r3, #496]
 17002 1714 1A46     		mov	r2, r3
 17003 1716 D7F88830 		ldr	r3, [r7, #136]
 17004 171a B3F8F231 		ldrh	r3, [r3, #498]
 17005 171e 07F11800 		add	r0, r7, #24
 17006 1722 8249     		ldr	r1, .L694+12
 17007 1724 FFF7FEFF 		bl	sprintf
2215:..\src/command_processing.c ****         strcat(info_string, str);
 17008              		.loc 1 2215 0
 17009 1728 07F11803 		add	r3, r7, #24
 17010 172c 1946     		mov	r1, r3
 17011 172e 7869     		ldr	r0, [r7, #20]
 17012 1730 FFF7FEFF 		bl	strcat
2216:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17013              		.loc 1 2216 0
 17014 1734 7869     		ldr	r0, [r7, #20]
 17015 1736 FFF7FEFF 		bl	strlen
 17016 173a 0346     		mov	r3, r0
 17017 173c 1A46     		mov	r2, r3
 17018 173e 7B69     		ldr	r3, [r7, #20]
 17019 1740 1344     		add	r3, r3, r2
 17020 1742 784A     		ldr	r2, .L694+4
 17021 1744 1188     		ldrh	r1, [r2]	@ unaligned
 17022 1746 9278     		ldrb	r2, [r2, #2]
 17023 1748 1980     		strh	r1, [r3]	@ unaligned
 17024 174a 9A70     		strb	r2, [r3, #2]
2217:..\src/command_processing.c **** 
2218:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 17025              		.loc 1 2218 0
 17026 174c D7F88830 		ldr	r3, [r7, #136]
 17027 1750 D3F8F421 		ldr	r2, [r3, #500]
 17028 1754 D7F88830 		ldr	r3, [r7, #136]
 17029 1758 D3F8F831 		ldr	r3, [r3, #504]
 17030 175c 07F11800 		add	r0, r7, #24
 17031 1760 7349     		ldr	r1, .L694+16
 17032 1762 FFF7FEFF 		bl	sprintf
2219:..\src/command_processing.c ****         strcat(info_string, str);
 17033              		.loc 1 2219 0
 17034 1766 07F11803 		add	r3, r7, #24
 17035 176a 1946     		mov	r1, r3
 17036 176c 7869     		ldr	r0, [r7, #20]
 17037 176e FFF7FEFF 		bl	strcat
2220:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17038              		.loc 1 2220 0
 17039 1772 7869     		ldr	r0, [r7, #20]
 17040 1774 FFF7FEFF 		bl	strlen
 17041 1778 0346     		mov	r3, r0
 17042 177a 1A46     		mov	r2, r3
 17043 177c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 379


 17044 177e 1344     		add	r3, r3, r2
 17045 1780 684A     		ldr	r2, .L694+4
 17046 1782 1188     		ldrh	r1, [r2]	@ unaligned
 17047 1784 9278     		ldrb	r2, [r2, #2]
 17048 1786 1980     		strh	r1, [r3]	@ unaligned
 17049 1788 9A70     		strb	r2, [r3, #2]
2221:..\src/command_processing.c **** 
2222:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 17050              		.loc 1 2222 0
 17051 178a D7F88830 		ldr	r3, [r7, #136]
 17052 178e 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 17053 1792 002B     		cmp	r3, #0
 17054 1794 13D0     		beq	.L643
2223:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 17055              		.loc 1 2223 0
 17056 1796 7869     		ldr	r0, [r7, #20]
 17057 1798 FFF7FEFF 		bl	strlen
 17058 179c 0346     		mov	r3, r0
 17059 179e 1A46     		mov	r2, r3
 17060 17a0 7B69     		ldr	r3, [r7, #20]
 17061 17a2 1344     		add	r3, r3, r2
 17062 17a4 634A     		ldr	r2, .L694+20
 17063 17a6 1D46     		mov	r5, r3
 17064 17a8 1446     		mov	r4, r2
 17065 17aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17066 17ac 2860     		str	r0, [r5]	@ unaligned
 17067 17ae 6960     		str	r1, [r5, #4]	@ unaligned
 17068 17b0 AA60     		str	r2, [r5, #8]	@ unaligned
 17069 17b2 EB60     		str	r3, [r5, #12]	@ unaligned
 17070 17b4 2068     		ldr	r0, [r4]	@ unaligned
 17071 17b6 2861     		str	r0, [r5, #16]	@ unaligned
 17072 17b8 2379     		ldrb	r3, [r4, #4]
 17073 17ba 2B75     		strb	r3, [r5, #20]
 17074 17bc 10E0     		b	.L644
 17075              	.L643:
2224:..\src/command_processing.c ****         else
2225:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 17076              		.loc 1 2225 0
 17077 17be 7869     		ldr	r0, [r7, #20]
 17078 17c0 FFF7FEFF 		bl	strlen
 17079 17c4 0346     		mov	r3, r0
 17080 17c6 1A46     		mov	r2, r3
 17081 17c8 7B69     		ldr	r3, [r7, #20]
 17082 17ca 1344     		add	r3, r3, r2
 17083 17cc 5A4A     		ldr	r2, .L694+24
 17084 17ce 1D46     		mov	r5, r3
 17085 17d0 1446     		mov	r4, r2
 17086 17d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17087 17d4 2860     		str	r0, [r5]	@ unaligned
 17088 17d6 6960     		str	r1, [r5, #4]	@ unaligned
 17089 17d8 AA60     		str	r2, [r5, #8]	@ unaligned
 17090 17da EB60     		str	r3, [r5, #12]	@ unaligned
 17091 17dc 2068     		ldr	r0, [r4]	@ unaligned
 17092 17de 2861     		str	r0, [r5, #16]	@ unaligned
 17093              	.L644:
2226:..\src/command_processing.c ****             
2227:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 380


 17094              		.loc 1 2227 0
 17095 17e0 D7F88830 		ldr	r3, [r7, #136]
 17096 17e4 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 17097 17e8 002B     		cmp	r3, #0
 17098 17ea 17D0     		beq	.L645
2228:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 17099              		.loc 1 2228 0
 17100 17ec 7869     		ldr	r0, [r7, #20]
 17101 17ee FFF7FEFF 		bl	strlen
 17102 17f2 0346     		mov	r3, r0
 17103 17f4 1A46     		mov	r2, r3
 17104 17f6 7B69     		ldr	r3, [r7, #20]
 17105 17f8 1344     		add	r3, r3, r2
 17106 17fa 504A     		ldr	r2, .L694+28
 17107 17fc 1D46     		mov	r5, r3
 17108 17fe 1446     		mov	r4, r2
 17109 1800 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17110 1802 2860     		str	r0, [r5]	@ unaligned
 17111 1804 6960     		str	r1, [r5, #4]	@ unaligned
 17112 1806 AA60     		str	r2, [r5, #8]	@ unaligned
 17113 1808 EB60     		str	r3, [r5, #12]	@ unaligned
 17114 180a 03CC     		ldmia	r4!, {r0, r1}
 17115 180c 2861     		str	r0, [r5, #16]	@ unaligned
 17116 180e 6961     		str	r1, [r5, #20]	@ unaligned
 17117 1810 2388     		ldrh	r3, [r4]	@ unaligned
 17118 1812 A278     		ldrb	r2, [r4, #2]
 17119 1814 2B83     		strh	r3, [r5, #24]	@ unaligned
 17120 1816 1346     		mov	r3, r2
 17121 1818 AB76     		strb	r3, [r5, #26]
 17122 181a 13E0     		b	.L646
 17123              	.L645:
2229:..\src/command_processing.c ****         else
2230:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 17124              		.loc 1 2230 0
 17125 181c 7869     		ldr	r0, [r7, #20]
 17126 181e FFF7FEFF 		bl	strlen
 17127 1822 0346     		mov	r3, r0
 17128 1824 1A46     		mov	r2, r3
 17129 1826 7B69     		ldr	r3, [r7, #20]
 17130 1828 1344     		add	r3, r3, r2
 17131 182a 454A     		ldr	r2, .L694+32
 17132 182c 1D46     		mov	r5, r3
 17133 182e 1446     		mov	r4, r2
 17134 1830 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17135 1832 2860     		str	r0, [r5]	@ unaligned
 17136 1834 6960     		str	r1, [r5, #4]	@ unaligned
 17137 1836 AA60     		str	r2, [r5, #8]	@ unaligned
 17138 1838 EB60     		str	r3, [r5, #12]	@ unaligned
 17139 183a 03CC     		ldmia	r4!, {r0, r1}
 17140 183c 2861     		str	r0, [r5, #16]	@ unaligned
 17141 183e 6961     		str	r1, [r5, #20]	@ unaligned
 17142 1840 2388     		ldrh	r3, [r4]	@ unaligned
 17143 1842 2B83     		strh	r3, [r5, #24]	@ unaligned
 17144              	.L646:
2231:..\src/command_processing.c **** 
2232:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 17145              		.loc 1 2232 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 381


 17146 1844 D7F88830 		ldr	r3, [r7, #136]
 17147 1848 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17148 184c 1A46     		mov	r2, r3
 17149 184e D7F88830 		ldr	r3, [r7, #136]
 17150 1852 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17151 1856 07F11800 		add	r0, r7, #24
 17152 185a 3A49     		ldr	r1, .L694+36
 17153 185c FFF7FEFF 		bl	sprintf
2233:..\src/command_processing.c ****         strcat(info_string, str);
 17154              		.loc 1 2233 0
 17155 1860 07F11803 		add	r3, r7, #24
 17156 1864 1946     		mov	r1, r3
 17157 1866 7869     		ldr	r0, [r7, #20]
 17158 1868 FFF7FEFF 		bl	strcat
2234:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17159              		.loc 1 2234 0
 17160 186c 7869     		ldr	r0, [r7, #20]
 17161 186e FFF7FEFF 		bl	strlen
 17162 1872 0346     		mov	r3, r0
 17163 1874 1A46     		mov	r2, r3
 17164 1876 7B69     		ldr	r3, [r7, #20]
 17165 1878 1344     		add	r3, r3, r2
 17166 187a 2A4A     		ldr	r2, .L694+4
 17167 187c 1188     		ldrh	r1, [r2]	@ unaligned
 17168 187e 9278     		ldrb	r2, [r2, #2]
 17169 1880 1980     		strh	r1, [r3]	@ unaligned
 17170 1882 9A70     		strb	r2, [r3, #2]
2235:..\src/command_processing.c **** 
2236:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 17171              		.loc 1 2236 0
 17172 1884 D7F88830 		ldr	r3, [r7, #136]
 17173 1888 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 17174 188c 012B     		cmp	r3, #1
 17175 188e 40F08A80 		bne	.L647
2237:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 17176              		.loc 1 2237 0
 17177 1892 7869     		ldr	r0, [r7, #20]
 17178 1894 FFF7FEFF 		bl	strlen
 17179 1898 0346     		mov	r3, r0
 17180 189a 1A46     		mov	r2, r3
 17181 189c 7B69     		ldr	r3, [r7, #20]
 17182 189e 1344     		add	r3, r3, r2
 17183 18a0 294A     		ldr	r2, .L694+40
 17184 18a2 1C46     		mov	r4, r3
 17185 18a4 1546     		mov	r5, r2
 17186 18a6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17187 18a8 2060     		str	r0, [r4]	@ unaligned
 17188 18aa 6160     		str	r1, [r4, #4]	@ unaligned
 17189 18ac A260     		str	r2, [r4, #8]	@ unaligned
 17190 18ae E360     		str	r3, [r4, #12]	@ unaligned
 17191 18b0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17192 18b2 2061     		str	r0, [r4, #16]	@ unaligned
 17193 18b4 6161     		str	r1, [r4, #20]	@ unaligned
 17194 18b6 A261     		str	r2, [r4, #24]	@ unaligned
 17195 18b8 E361     		str	r3, [r4, #28]	@ unaligned
2238:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 17196              		.loc 1 2238 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 382


 17197 18ba 0023     		movs	r3, #0
 17198 18bc C7F89430 		str	r3, [r7, #148]
 17199 18c0 25E0     		b	.L648
 17200              	.L649:
2239:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17201              		.loc 1 2239 0 discriminator 3
 17202 18c2 D7F89430 		ldr	r3, [r7, #148]
 17203 18c6 591C     		adds	r1, r3, #1
 17204 18c8 204A     		ldr	r2, .L694+44
 17205 18ca D7F89430 		ldr	r3, [r7, #148]
 17206 18ce 0233     		adds	r3, r3, #2
 17207 18d0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17208 18d4 07F11800 		add	r0, r7, #24
 17209 18d8 0A46     		mov	r2, r1
 17210 18da 1D49     		ldr	r1, .L694+48
 17211 18dc FFF7FEFF 		bl	sprintf
2240:..\src/command_processing.c ****                 strcat(info_string, str);
 17212              		.loc 1 2240 0 discriminator 3
 17213 18e0 07F11803 		add	r3, r7, #24
 17214 18e4 1946     		mov	r1, r3
 17215 18e6 7869     		ldr	r0, [r7, #20]
 17216 18e8 FFF7FEFF 		bl	strcat
2241:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17217              		.loc 1 2241 0 discriminator 3
 17218 18ec 7869     		ldr	r0, [r7, #20]
 17219 18ee FFF7FEFF 		bl	strlen
 17220 18f2 0346     		mov	r3, r0
 17221 18f4 1A46     		mov	r2, r3
 17222 18f6 7B69     		ldr	r3, [r7, #20]
 17223 18f8 1344     		add	r3, r3, r2
 17224 18fa 0A4A     		ldr	r2, .L694+4
 17225 18fc 1188     		ldrh	r1, [r2]	@ unaligned
 17226 18fe 9278     		ldrb	r2, [r2, #2]
 17227 1900 1980     		strh	r1, [r3]	@ unaligned
 17228 1902 9A70     		strb	r2, [r3, #2]
2238:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17229              		.loc 1 2238 0 discriminator 3
 17230 1904 D7F89430 		ldr	r3, [r7, #148]
 17231 1908 0133     		adds	r3, r3, #1
 17232 190a C7F89430 		str	r3, [r7, #148]
 17233              	.L648:
2238:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17234              		.loc 1 2238 0 is_stmt 0 discriminator 1
 17235 190e D7F89430 		ldr	r3, [r7, #148]
 17236 1912 052B     		cmp	r3, #5
 17237 1914 D5DD     		ble	.L649
2242:..\src/command_processing.c ****             }
2243:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 17238              		.loc 1 2243 0 is_stmt 1
 17239 1916 0023     		movs	r3, #0
 17240 1918 C7F89430 		str	r3, [r7, #148]
 17241 191c 3FE0     		b	.L650
 17242              	.L695:
 17243 191e 00BF     		.align	2
 17244              	.L694:
 17245 1920 94180000 		.word	.LC232
 17246 1924 30110000 		.word	.LC151
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 383


 17247 1928 B0180000 		.word	.LC233
 17248 192c C4180000 		.word	.LC234
 17249 1930 E8180000 		.word	.LC235
 17250 1934 0C190000 		.word	.LC236
 17251 1938 24190000 		.word	.LC237
 17252 193c 38190000 		.word	.LC238
 17253 1940 54190000 		.word	.LC239
 17254 1944 70190000 		.word	.LC240
 17255 1948 88190000 		.word	.LC241
 17256 194c 00000000 		.word	g_adc_meas
 17257 1950 A8190000 		.word	.LC242
 17258              	.L651:
2244:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17259              		.loc 1 2244 0 discriminator 3
 17260 1954 D7F89430 		ldr	r3, [r7, #148]
 17261 1958 591C     		adds	r1, r3, #1
 17262 195a BD4A     		ldr	r2, .L696
 17263 195c D7F89430 		ldr	r3, [r7, #148]
 17264 1960 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17265 1964 07F11800 		add	r0, r7, #24
 17266 1968 0A46     		mov	r2, r1
 17267 196a BA49     		ldr	r1, .L696+4
 17268 196c FFF7FEFF 		bl	sprintf
2245:..\src/command_processing.c ****                 strcat(info_string, str);
 17269              		.loc 1 2245 0 discriminator 3
 17270 1970 07F11803 		add	r3, r7, #24
 17271 1974 1946     		mov	r1, r3
 17272 1976 7869     		ldr	r0, [r7, #20]
 17273 1978 FFF7FEFF 		bl	strcat
2246:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17274              		.loc 1 2246 0 discriminator 3
 17275 197c 7869     		ldr	r0, [r7, #20]
 17276 197e FFF7FEFF 		bl	strlen
 17277 1982 0346     		mov	r3, r0
 17278 1984 1A46     		mov	r2, r3
 17279 1986 7B69     		ldr	r3, [r7, #20]
 17280 1988 1344     		add	r3, r3, r2
 17281 198a B34A     		ldr	r2, .L696+8
 17282 198c 1188     		ldrh	r1, [r2]	@ unaligned
 17283 198e 9278     		ldrb	r2, [r2, #2]
 17284 1990 1980     		strh	r1, [r3]	@ unaligned
 17285 1992 9A70     		strb	r2, [r3, #2]
2243:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17286              		.loc 1 2243 0 discriminator 3
 17287 1994 D7F89430 		ldr	r3, [r7, #148]
 17288 1998 0133     		adds	r3, r3, #1
 17289 199a C7F89430 		str	r3, [r7, #148]
 17290              	.L650:
2243:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17291              		.loc 1 2243 0 is_stmt 0 discriminator 1
 17292 199e D7F89430 		ldr	r3, [r7, #148]
 17293 19a2 012B     		cmp	r3, #1
 17294 19a4 D6DD     		ble	.L651
 17295              	.L647:
2247:..\src/command_processing.c ****             }
2248:..\src/command_processing.c ****         }
2249:..\src/command_processing.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 384


2250:..\src/command_processing.c **** #ifdef GENERIC_FW
2251:..\src/command_processing.c ****     
2252:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17296              		.loc 1 2252 0 is_stmt 1
 17297 19a6 7869     		ldr	r0, [r7, #20]
 17298 19a8 FFF7FEFF 		bl	strlen
 17299 19ac 0346     		mov	r3, r0
 17300 19ae 1A46     		mov	r2, r3
 17301 19b0 7B69     		ldr	r3, [r7, #20]
 17302 19b2 1344     		add	r3, r3, r2
 17303 19b4 A84A     		ldr	r2, .L696+8
 17304 19b6 1188     		ldrh	r1, [r2]	@ unaligned
 17305 19b8 9278     		ldrb	r2, [r2, #2]
 17306 19ba 1980     		strh	r1, [r3]	@ unaligned
 17307 19bc 9A70     		strb	r2, [r3, #2]
2253:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
 17308              		.loc 1 2253 0
 17309 19be 7869     		ldr	r0, [r7, #20]
 17310 19c0 FFF7FEFF 		bl	strlen
 17311 19c4 0346     		mov	r3, r0
 17312 19c6 1A46     		mov	r2, r3
 17313 19c8 7B69     		ldr	r3, [r7, #20]
 17314 19ca 1344     		add	r3, r3, r2
 17315 19cc A34A     		ldr	r2, .L696+12
 17316 19ce 1D46     		mov	r5, r3
 17317 19d0 1446     		mov	r4, r2
 17318 19d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17319 19d4 2860     		str	r0, [r5]	@ unaligned
 17320 19d6 6960     		str	r1, [r5, #4]	@ unaligned
 17321 19d8 AA60     		str	r2, [r5, #8]	@ unaligned
 17322 19da EB60     		str	r3, [r5, #12]	@ unaligned
 17323 19dc 03CC     		ldmia	r4!, {r0, r1}
 17324 19de 2861     		str	r0, [r5, #16]	@ unaligned
 17325 19e0 6961     		str	r1, [r5, #20]	@ unaligned
 17326 19e2 2378     		ldrb	r3, [r4]
 17327 19e4 2B76     		strb	r3, [r5, #24]
2254:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
 17328              		.loc 1 2254 0
 17329 19e6 9E4B     		ldr	r3, .L696+16
 17330 19e8 B3F8B032 		ldrh	r3, [r3, #688]
 17331 19ec 1A46     		mov	r2, r3
 17332 19ee 07F11803 		add	r3, r7, #24
 17333 19f2 9C49     		ldr	r1, .L696+20
 17334 19f4 1846     		mov	r0, r3
 17335 19f6 FFF7FEFF 		bl	sprintf
2255:..\src/command_processing.c ****         strcat(info_string, str);
 17336              		.loc 1 2255 0
 17337 19fa 07F11803 		add	r3, r7, #24
 17338 19fe 1946     		mov	r1, r3
 17339 1a00 7869     		ldr	r0, [r7, #20]
 17340 1a02 FFF7FEFF 		bl	strcat
2256:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17341              		.loc 1 2256 0
 17342 1a06 7869     		ldr	r0, [r7, #20]
 17343 1a08 FFF7FEFF 		bl	strlen
 17344 1a0c 0346     		mov	r3, r0
 17345 1a0e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 385


 17346 1a10 7B69     		ldr	r3, [r7, #20]
 17347 1a12 1344     		add	r3, r3, r2
 17348 1a14 904A     		ldr	r2, .L696+8
 17349 1a16 1188     		ldrh	r1, [r2]	@ unaligned
 17350 1a18 9278     		ldrb	r2, [r2, #2]
 17351 1a1a 1980     		strh	r1, [r3]	@ unaligned
 17352 1a1c 9A70     		strb	r2, [r3, #2]
2257:..\src/command_processing.c **** 
2258:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
 17353              		.loc 1 2258 0
 17354 1a1e 904B     		ldr	r3, .L696+16
 17355 1a20 B3F9B232 		ldrsh	r3, [r3, #690]
 17356 1a24 1A46     		mov	r2, r3
 17357 1a26 07F11803 		add	r3, r7, #24
 17358 1a2a 8F49     		ldr	r1, .L696+24
 17359 1a2c 1846     		mov	r0, r3
 17360 1a2e FFF7FEFF 		bl	sprintf
2259:..\src/command_processing.c ****         strcat(info_string, str);
 17361              		.loc 1 2259 0
 17362 1a32 07F11803 		add	r3, r7, #24
 17363 1a36 1946     		mov	r1, r3
 17364 1a38 7869     		ldr	r0, [r7, #20]
 17365 1a3a FFF7FEFF 		bl	strcat
2260:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17366              		.loc 1 2260 0
 17367 1a3e 7869     		ldr	r0, [r7, #20]
 17368 1a40 FFF7FEFF 		bl	strlen
 17369 1a44 0346     		mov	r3, r0
 17370 1a46 1A46     		mov	r2, r3
 17371 1a48 7B69     		ldr	r3, [r7, #20]
 17372 1a4a 1344     		add	r3, r3, r2
 17373 1a4c 824A     		ldr	r2, .L696+8
 17374 1a4e 1188     		ldrh	r1, [r2]	@ unaligned
 17375 1a50 9278     		ldrb	r2, [r2, #2]
 17376 1a52 1980     		strh	r1, [r3]	@ unaligned
 17377 1a54 9A70     		strb	r2, [r3, #2]
2261:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
 17378              		.loc 1 2261 0
 17379 1a56 824B     		ldr	r3, .L696+16
 17380 1a58 B3F8B432 		ldrh	r3, [r3, #692]
 17381 1a5c 1A46     		mov	r2, r3
 17382 1a5e 804B     		ldr	r3, .L696+16
 17383 1a60 B3F8B632 		ldrh	r3, [r3, #694]
 17384 1a64 07F11800 		add	r0, r7, #24
 17385 1a68 8049     		ldr	r1, .L696+28
 17386 1a6a FFF7FEFF 		bl	sprintf
2262:..\src/command_processing.c ****         strcat(info_string, str);
 17387              		.loc 1 2262 0
 17388 1a6e 07F11803 		add	r3, r7, #24
 17389 1a72 1946     		mov	r1, r3
 17390 1a74 7869     		ldr	r0, [r7, #20]
 17391 1a76 FFF7FEFF 		bl	strcat
2263:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17392              		.loc 1 2263 0
 17393 1a7a 7869     		ldr	r0, [r7, #20]
 17394 1a7c FFF7FEFF 		bl	strlen
 17395 1a80 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 386


 17396 1a82 1A46     		mov	r2, r3
 17397 1a84 7B69     		ldr	r3, [r7, #20]
 17398 1a86 1344     		add	r3, r3, r2
 17399 1a88 734A     		ldr	r2, .L696+8
 17400 1a8a 1188     		ldrh	r1, [r2]	@ unaligned
 17401 1a8c 9278     		ldrb	r2, [r2, #2]
 17402 1a8e 1980     		strh	r1, [r3]	@ unaligned
 17403 1a90 9A70     		strb	r2, [r3, #2]
2264:..\src/command_processing.c **** 
2265:..\src/command_processing.c **** #endif
2266:..\src/command_processing.c ****         
2267:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17404              		.loc 1 2267 0
 17405 1a92 D7F88830 		ldr	r3, [r7, #136]
 17406 1a96 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17407 1a9a 002B     		cmp	r3, #0
 17408 1a9c 63D0     		beq	.L652
2268:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17409              		.loc 1 2268 0
 17410 1a9e D7F88830 		ldr	r3, [r7, #136]
 17411 1aa2 D3F8A422 		ldr	r2, [r3, #676]
 17412 1aa6 07F11803 		add	r3, r7, #24
 17413 1aaa 7149     		ldr	r1, .L696+32
 17414 1aac 1846     		mov	r0, r3
 17415 1aae FFF7FEFF 		bl	sprintf
2269:..\src/command_processing.c ****             strcat(info_string, str);
 17416              		.loc 1 2269 0
 17417 1ab2 07F11803 		add	r3, r7, #24
 17418 1ab6 1946     		mov	r1, r3
 17419 1ab8 7869     		ldr	r0, [r7, #20]
 17420 1aba FFF7FEFF 		bl	strcat
2270:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17421              		.loc 1 2270 0
 17422 1abe 7869     		ldr	r0, [r7, #20]
 17423 1ac0 FFF7FEFF 		bl	strlen
 17424 1ac4 0346     		mov	r3, r0
 17425 1ac6 1A46     		mov	r2, r3
 17426 1ac8 7B69     		ldr	r3, [r7, #20]
 17427 1aca 1344     		add	r3, r3, r2
 17428 1acc 624A     		ldr	r2, .L696+8
 17429 1ace 1188     		ldrh	r1, [r2]	@ unaligned
 17430 1ad0 9278     		ldrb	r2, [r2, #2]
 17431 1ad2 1980     		strh	r1, [r3]	@ unaligned
 17432 1ad4 9A70     		strb	r2, [r3, #2]
2271:..\src/command_processing.c ****             
2272:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17433              		.loc 1 2272 0
 17434 1ad6 D7F88830 		ldr	r3, [r7, #136]
 17435 1ada D3F8A822 		ldr	r2, [r3, #680]
 17436 1ade 07F11803 		add	r3, r7, #24
 17437 1ae2 6449     		ldr	r1, .L696+36
 17438 1ae4 1846     		mov	r0, r3
 17439 1ae6 FFF7FEFF 		bl	sprintf
2273:..\src/command_processing.c ****             strcat(info_string, str);
 17440              		.loc 1 2273 0
 17441 1aea 07F11803 		add	r3, r7, #24
 17442 1aee 1946     		mov	r1, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 387


 17443 1af0 7869     		ldr	r0, [r7, #20]
 17444 1af2 FFF7FEFF 		bl	strcat
2274:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17445              		.loc 1 2274 0
 17446 1af6 7869     		ldr	r0, [r7, #20]
 17447 1af8 FFF7FEFF 		bl	strlen
 17448 1afc 0346     		mov	r3, r0
 17449 1afe 1A46     		mov	r2, r3
 17450 1b00 7B69     		ldr	r3, [r7, #20]
 17451 1b02 1344     		add	r3, r3, r2
 17452 1b04 544A     		ldr	r2, .L696+8
 17453 1b06 1188     		ldrh	r1, [r2]	@ unaligned
 17454 1b08 9278     		ldrb	r2, [r2, #2]
 17455 1b0a 1980     		strh	r1, [r3]	@ unaligned
 17456 1b0c 9A70     		strb	r2, [r3, #2]
2275:..\src/command_processing.c ****             
2276:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17457              		.loc 1 2276 0
 17458 1b0e D7F88830 		ldr	r3, [r7, #136]
 17459 1b12 D3F8A022 		ldr	r2, [r3, #672]
 17460 1b16 D7F88830 		ldr	r3, [r7, #136]
 17461 1b1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17462 1b1e 1846     		mov	r0, r3
 17463 1b20 D7F88810 		ldr	r1, [r7, #136]
 17464 1b24 0346     		mov	r3, r0
 17465 1b26 5B00     		lsls	r3, r3, #1
 17466 1b28 0344     		add	r3, r3, r0
 17467 1b2a 1B01     		lsls	r3, r3, #4
 17468 1b2c 0B44     		add	r3, r3, r1
 17469 1b2e 03F29513 		addw	r3, r3, #405
 17470 1b32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17471 1b34 1A41     		asrs	r2, r2, r3
 17472 1b36 07F11803 		add	r3, r7, #24
 17473 1b3a 4F49     		ldr	r1, .L696+40
 17474 1b3c 1846     		mov	r0, r3
 17475 1b3e FFF7FEFF 		bl	sprintf
2277:..\src/command_processing.c ****             strcat(info_string, str);
 17476              		.loc 1 2277 0
 17477 1b42 07F11803 		add	r3, r7, #24
 17478 1b46 1946     		mov	r1, r3
 17479 1b48 7869     		ldr	r0, [r7, #20]
 17480 1b4a FFF7FEFF 		bl	strcat
2278:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17481              		.loc 1 2278 0
 17482 1b4e 7869     		ldr	r0, [r7, #20]
 17483 1b50 FFF7FEFF 		bl	strlen
 17484 1b54 0346     		mov	r3, r0
 17485 1b56 1A46     		mov	r2, r3
 17486 1b58 7B69     		ldr	r3, [r7, #20]
 17487 1b5a 1344     		add	r3, r3, r2
 17488 1b5c 3E4A     		ldr	r2, .L696+8
 17489 1b5e 1188     		ldrh	r1, [r2]	@ unaligned
 17490 1b60 9278     		ldrb	r2, [r2, #2]
 17491 1b62 1980     		strh	r1, [r3]	@ unaligned
 17492 1b64 9A70     		strb	r2, [r3, #2]
 17493              	.L652:
2279:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 388


2280:..\src/command_processing.c **** 
2281:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17494              		.loc 1 2281 0
 17495 1b66 D7F88830 		ldr	r3, [r7, #136]
 17496 1b6a 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17497 1b6e 002B     		cmp	r3, #0
 17498 1b70 00F0D281 		beq	.L653
2282:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17499              		.loc 1 2282 0
 17500 1b74 414B     		ldr	r3, .L696+44
 17501 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17502 1b78 1A46     		mov	r2, r3
 17503 1b7a 07F11803 		add	r3, r7, #24
 17504 1b7e 4049     		ldr	r1, .L696+48
 17505 1b80 1846     		mov	r0, r3
 17506 1b82 FFF7FEFF 		bl	sprintf
2283:..\src/command_processing.c ****             strcat(info_string, str);
 17507              		.loc 1 2283 0
 17508 1b86 07F11803 		add	r3, r7, #24
 17509 1b8a 1946     		mov	r1, r3
 17510 1b8c 7869     		ldr	r0, [r7, #20]
 17511 1b8e FFF7FEFF 		bl	strcat
2284:..\src/command_processing.c ****             
2285:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17512              		.loc 1 2285 0
 17513 1b92 7869     		ldr	r0, [r7, #20]
 17514 1b94 FFF7FEFF 		bl	strlen
 17515 1b98 0346     		mov	r3, r0
 17516 1b9a 1A46     		mov	r2, r3
 17517 1b9c 7B69     		ldr	r3, [r7, #20]
 17518 1b9e 1344     		add	r3, r3, r2
 17519 1ba0 2D4A     		ldr	r2, .L696+8
 17520 1ba2 1188     		ldrh	r1, [r2]	@ unaligned
 17521 1ba4 9278     		ldrb	r2, [r2, #2]
 17522 1ba6 1980     		strh	r1, [r3]	@ unaligned
 17523 1ba8 9A70     		strb	r2, [r3, #2]
2286:..\src/command_processing.c ****             
2287:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17524              		.loc 1 2287 0
 17525 1baa 7869     		ldr	r0, [r7, #20]
 17526 1bac FFF7FEFF 		bl	strlen
 17527 1bb0 0346     		mov	r3, r0
 17528 1bb2 1A46     		mov	r2, r3
 17529 1bb4 7B69     		ldr	r3, [r7, #20]
 17530 1bb6 1344     		add	r3, r3, r2
 17531 1bb8 324A     		ldr	r2, .L696+52
 17532 1bba 1D46     		mov	r5, r3
 17533 1bbc 1446     		mov	r4, r2
 17534 1bbe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17535 1bc0 2860     		str	r0, [r5]	@ unaligned
 17536 1bc2 6960     		str	r1, [r5, #4]	@ unaligned
 17537 1bc4 AA60     		str	r2, [r5, #8]	@ unaligned
 17538 1bc6 EB60     		str	r3, [r5, #12]	@ unaligned
 17539 1bc8 2068     		ldr	r0, [r4]	@ unaligned
 17540 1bca 2861     		str	r0, [r5, #16]	@ unaligned
 17541 1bcc 2379     		ldrb	r3, [r4, #4]
 17542 1bce 2B75     		strb	r3, [r5, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 389


2288:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17543              		.loc 1 2288 0
 17544 1bd0 0023     		movs	r3, #0
 17545 1bd2 C7F89430 		str	r3, [r7, #148]
 17546 1bd6 88E1     		b	.L654
 17547              	.L665:
2289:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17548              		.loc 1 2289 0
 17549 1bd8 2B4A     		ldr	r2, .L696+56
 17550 1bda D7F89430 		ldr	r3, [r7, #148]
 17551 1bde 1344     		add	r3, r3, r2
 17552 1be0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17553 1be2 07F11800 		add	r0, r7, #24
 17554 1be6 D7F89420 		ldr	r2, [r7, #148]
 17555 1bea 2849     		ldr	r1, .L696+60
 17556 1bec FFF7FEFF 		bl	sprintf
2290:..\src/command_processing.c ****                 strcat(info_string, str);
 17557              		.loc 1 2290 0
 17558 1bf0 07F11803 		add	r3, r7, #24
 17559 1bf4 1946     		mov	r1, r3
 17560 1bf6 7869     		ldr	r0, [r7, #20]
 17561 1bf8 FFF7FEFF 		bl	strcat
2291:..\src/command_processing.c ****                 
2292:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17562              		.loc 1 2292 0
 17563 1bfc 07F11803 		add	r3, r7, #24
 17564 1c00 234A     		ldr	r2, .L696+64
 17565 1c02 1C46     		mov	r4, r3
 17566 1c04 1546     		mov	r5, r2
 17567 1c06 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17568 1c08 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17569 1c0a 2B68     		ldr	r3, [r5]
 17570 1c0c 2380     		strh	r3, [r4]	@ movhi
2293:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17571              		.loc 1 2293 0
 17572 1c0e 1E4A     		ldr	r2, .L696+56
 17573 1c10 D7F89430 		ldr	r3, [r7, #148]
 17574 1c14 1344     		add	r3, r3, r2
 17575 1c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17576 1c18 1946     		mov	r1, r3
 17577 1c1a D7F88820 		ldr	r2, [r7, #136]
 17578 1c1e 0B46     		mov	r3, r1
 17579 1c20 9B00     		lsls	r3, r3, #2
 17580 1c22 0B44     		add	r3, r3, r1
 17581 1c24 1344     		add	r3, r3, r2
 17582 1c26 03F20223 		addw	r3, r3, #514
 17583 1c2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17584 1c2c 002B     		cmp	r3, #0
 17585 1c2e 33D0     		beq	.L655
2294:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17586              		.loc 1 2294 0
 17587 1c30 07F11803 		add	r3, r7, #24
 17588 1c34 1846     		mov	r0, r3
 17589 1c36 FFF7FEFF 		bl	strlen
 17590 1c3a 0346     		mov	r3, r0
 17591 1c3c 1A46     		mov	r2, r3
 17592 1c3e 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 390


 17593 1c42 1344     		add	r3, r3, r2
 17594 1c44 134A     		ldr	r2, .L696+68
 17595 1c46 1068     		ldr	r0, [r2]	@ unaligned
 17596 1c48 1860     		str	r0, [r3]	@ unaligned
 17597 1c4a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17598 1c4c 9A80     		strh	r2, [r3, #4]	@ unaligned
 17599 1c4e 32E0     		b	.L656
 17600              	.L697:
 17601              		.align	2
 17602              	.L696:
 17603 1c50 00000000 		.word	g_adc_meas
 17604 1c54 B8190000 		.word	.LC243
 17605 1c58 30110000 		.word	.LC151
 17606 1c5c CC190000 		.word	.LC244
 17607 1c60 00000000 		.word	c_mem
 17608 1c64 E8190000 		.word	.LC245
 17609 1c68 FC190000 		.word	.LC246
 17610 1c6c 141A0000 		.word	.LC247
 17611 1c70 341A0000 		.word	.LC248
 17612 1c74 501A0000 		.word	.LC249
 17613 1c78 781A0000 		.word	.LC250
 17614 1c7c 00000000 		.word	N_IMU_Connected
 17615 1c80 8C1A0000 		.word	.LC251
 17616 1c84 A01A0000 		.word	.LC252
 17617 1c88 00000000 		.word	IMU_connected
 17618 1c8c B81A0000 		.word	.LC253
 17619 1c90 CC1A0000 		.word	.LC254
 17620 1c94 F4120000 		.word	.LC174
 17621              	.L655:
2295:..\src/command_processing.c ****                 else
2296:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17622              		.loc 1 2296 0
 17623 1c98 07F11803 		add	r3, r7, #24
 17624 1c9c 1846     		mov	r0, r3
 17625 1c9e FFF7FEFF 		bl	strlen
 17626 1ca2 0346     		mov	r3, r0
 17627 1ca4 1A46     		mov	r2, r3
 17628 1ca6 07F11803 		add	r3, r7, #24
 17629 1caa 1344     		add	r3, r3, r2
 17630 1cac BD4A     		ldr	r2, .L698
 17631 1cae 1068     		ldr	r0, [r2]	@ unaligned
 17632 1cb0 1860     		str	r0, [r3]	@ unaligned
 17633 1cb2 1279     		ldrb	r2, [r2, #4]
 17634 1cb4 1A71     		strb	r2, [r3, #4]
 17635              	.L656:
2297:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17636              		.loc 1 2297 0
 17637 1cb6 07F11803 		add	r3, r7, #24
 17638 1cba 1846     		mov	r0, r3
 17639 1cbc FFF7FEFF 		bl	strlen
 17640 1cc0 0346     		mov	r3, r0
 17641 1cc2 1A46     		mov	r2, r3
 17642 1cc4 07F11803 		add	r3, r7, #24
 17643 1cc8 1344     		add	r3, r3, r2
 17644 1cca B74A     		ldr	r2, .L698+4
 17645 1ccc 1C46     		mov	r4, r3
 17646 1cce 1346     		mov	r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 391


 17647 1cd0 07CB     		ldmia	r3!, {r0, r1, r2}
 17648 1cd2 2060     		str	r0, [r4]	@ unaligned
 17649 1cd4 6160     		str	r1, [r4, #4]	@ unaligned
 17650 1cd6 A260     		str	r2, [r4, #8]	@ unaligned
 17651 1cd8 1B88     		ldrh	r3, [r3]	@ unaligned
 17652 1cda A381     		strh	r3, [r4, #12]	@ unaligned
2298:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17653              		.loc 1 2298 0
 17654 1cdc B34A     		ldr	r2, .L698+8
 17655 1cde D7F89430 		ldr	r3, [r7, #148]
 17656 1ce2 1344     		add	r3, r3, r2
 17657 1ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17658 1ce6 1946     		mov	r1, r3
 17659 1ce8 D7F88820 		ldr	r2, [r7, #136]
 17660 1cec 0B46     		mov	r3, r1
 17661 1cee 9B00     		lsls	r3, r3, #2
 17662 1cf0 0B44     		add	r3, r3, r1
 17663 1cf2 1344     		add	r3, r3, r2
 17664 1cf4 03F20323 		addw	r3, r3, #515
 17665 1cf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17666 1cfa 002B     		cmp	r3, #0
 17667 1cfc 0FD0     		beq	.L657
2299:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17668              		.loc 1 2299 0
 17669 1cfe 07F11803 		add	r3, r7, #24
 17670 1d02 1846     		mov	r0, r3
 17671 1d04 FFF7FEFF 		bl	strlen
 17672 1d08 0346     		mov	r3, r0
 17673 1d0a 1A46     		mov	r2, r3
 17674 1d0c 07F11803 		add	r3, r7, #24
 17675 1d10 1344     		add	r3, r3, r2
 17676 1d12 A74A     		ldr	r2, .L698+12
 17677 1d14 1068     		ldr	r0, [r2]	@ unaligned
 17678 1d16 1860     		str	r0, [r3]	@ unaligned
 17679 1d18 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17680 1d1a 9A80     		strh	r2, [r3, #4]	@ unaligned
 17681 1d1c 0EE0     		b	.L658
 17682              	.L657:
2300:..\src/command_processing.c ****                 else
2301:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17683              		.loc 1 2301 0
 17684 1d1e 07F11803 		add	r3, r7, #24
 17685 1d22 1846     		mov	r0, r3
 17686 1d24 FFF7FEFF 		bl	strlen
 17687 1d28 0346     		mov	r3, r0
 17688 1d2a 1A46     		mov	r2, r3
 17689 1d2c 07F11803 		add	r3, r7, #24
 17690 1d30 1344     		add	r3, r3, r2
 17691 1d32 9C4A     		ldr	r2, .L698
 17692 1d34 1068     		ldr	r0, [r2]	@ unaligned
 17693 1d36 1860     		str	r0, [r3]	@ unaligned
 17694 1d38 1279     		ldrb	r2, [r2, #4]
 17695 1d3a 1A71     		strb	r2, [r3, #4]
 17696              	.L658:
2302:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17697              		.loc 1 2302 0
 17698 1d3c 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 392


 17699 1d40 1846     		mov	r0, r3
 17700 1d42 FFF7FEFF 		bl	strlen
 17701 1d46 0346     		mov	r3, r0
 17702 1d48 1A46     		mov	r2, r3
 17703 1d4a 07F11803 		add	r3, r7, #24
 17704 1d4e 1344     		add	r3, r3, r2
 17705 1d50 984A     		ldr	r2, .L698+16
 17706 1d52 1D46     		mov	r5, r3
 17707 1d54 1446     		mov	r4, r2
 17708 1d56 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17709 1d58 2860     		str	r0, [r5]	@ unaligned
 17710 1d5a 6960     		str	r1, [r5, #4]	@ unaligned
 17711 1d5c AA60     		str	r2, [r5, #8]	@ unaligned
 17712 1d5e EB60     		str	r3, [r5, #12]	@ unaligned
 17713 1d60 2378     		ldrb	r3, [r4]
 17714 1d62 2B74     		strb	r3, [r5, #16]
2303:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17715              		.loc 1 2303 0
 17716 1d64 914A     		ldr	r2, .L698+8
 17717 1d66 D7F89430 		ldr	r3, [r7, #148]
 17718 1d6a 1344     		add	r3, r3, r2
 17719 1d6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17720 1d6e 1946     		mov	r1, r3
 17721 1d70 D7F88820 		ldr	r2, [r7, #136]
 17722 1d74 0B46     		mov	r3, r1
 17723 1d76 9B00     		lsls	r3, r3, #2
 17724 1d78 0B44     		add	r3, r3, r1
 17725 1d7a 1344     		add	r3, r3, r2
 17726 1d7c 03F50173 		add	r3, r3, #516
 17727 1d80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17728 1d82 002B     		cmp	r3, #0
 17729 1d84 0FD0     		beq	.L659
2304:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17730              		.loc 1 2304 0
 17731 1d86 07F11803 		add	r3, r7, #24
 17732 1d8a 1846     		mov	r0, r3
 17733 1d8c FFF7FEFF 		bl	strlen
 17734 1d90 0346     		mov	r3, r0
 17735 1d92 1A46     		mov	r2, r3
 17736 1d94 07F11803 		add	r3, r7, #24
 17737 1d98 1344     		add	r3, r3, r2
 17738 1d9a 854A     		ldr	r2, .L698+12
 17739 1d9c 1068     		ldr	r0, [r2]	@ unaligned
 17740 1d9e 1860     		str	r0, [r3]	@ unaligned
 17741 1da0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17742 1da2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17743 1da4 0EE0     		b	.L660
 17744              	.L659:
2305:..\src/command_processing.c ****                 else
2306:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17745              		.loc 1 2306 0
 17746 1da6 07F11803 		add	r3, r7, #24
 17747 1daa 1846     		mov	r0, r3
 17748 1dac FFF7FEFF 		bl	strlen
 17749 1db0 0346     		mov	r3, r0
 17750 1db2 1A46     		mov	r2, r3
 17751 1db4 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 393


 17752 1db8 1344     		add	r3, r3, r2
 17753 1dba 7A4A     		ldr	r2, .L698
 17754 1dbc 1068     		ldr	r0, [r2]	@ unaligned
 17755 1dbe 1860     		str	r0, [r3]	@ unaligned
 17756 1dc0 1279     		ldrb	r2, [r2, #4]
 17757 1dc2 1A71     		strb	r2, [r3, #4]
 17758              	.L660:
2307:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17759              		.loc 1 2307 0
 17760 1dc4 07F11803 		add	r3, r7, #24
 17761 1dc8 1846     		mov	r0, r3
 17762 1dca FFF7FEFF 		bl	strlen
 17763 1dce 0346     		mov	r3, r0
 17764 1dd0 1A46     		mov	r2, r3
 17765 1dd2 07F11803 		add	r3, r7, #24
 17766 1dd6 1344     		add	r3, r3, r2
 17767 1dd8 774A     		ldr	r2, .L698+20
 17768 1dda 1C46     		mov	r4, r3
 17769 1ddc 1346     		mov	r3, r2
 17770 1dde 07CB     		ldmia	r3!, {r0, r1, r2}
 17771 1de0 2060     		str	r0, [r4]	@ unaligned
 17772 1de2 6160     		str	r1, [r4, #4]	@ unaligned
 17773 1de4 A260     		str	r2, [r4, #8]	@ unaligned
 17774 1de6 1B88     		ldrh	r3, [r3]	@ unaligned
 17775 1de8 A381     		strh	r3, [r4, #12]	@ unaligned
2308:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17776              		.loc 1 2308 0
 17777 1dea 704A     		ldr	r2, .L698+8
 17778 1dec D7F89430 		ldr	r3, [r7, #148]
 17779 1df0 1344     		add	r3, r3, r2
 17780 1df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17781 1df4 1946     		mov	r1, r3
 17782 1df6 D7F88820 		ldr	r2, [r7, #136]
 17783 1dfa 0B46     		mov	r3, r1
 17784 1dfc 9B00     		lsls	r3, r3, #2
 17785 1dfe 0B44     		add	r3, r3, r1
 17786 1e00 1344     		add	r3, r3, r2
 17787 1e02 03F20523 		addw	r3, r3, #517
 17788 1e06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17789 1e08 002B     		cmp	r3, #0
 17790 1e0a 0FD0     		beq	.L661
2309:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17791              		.loc 1 2309 0
 17792 1e0c 07F11803 		add	r3, r7, #24
 17793 1e10 1846     		mov	r0, r3
 17794 1e12 FFF7FEFF 		bl	strlen
 17795 1e16 0346     		mov	r3, r0
 17796 1e18 1A46     		mov	r2, r3
 17797 1e1a 07F11803 		add	r3, r7, #24
 17798 1e1e 1344     		add	r3, r3, r2
 17799 1e20 634A     		ldr	r2, .L698+12
 17800 1e22 1068     		ldr	r0, [r2]	@ unaligned
 17801 1e24 1860     		str	r0, [r3]	@ unaligned
 17802 1e26 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17803 1e28 9A80     		strh	r2, [r3, #4]	@ unaligned
 17804 1e2a 0EE0     		b	.L662
 17805              	.L661:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 394


2310:..\src/command_processing.c ****                 else
2311:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17806              		.loc 1 2311 0
 17807 1e2c 07F11803 		add	r3, r7, #24
 17808 1e30 1846     		mov	r0, r3
 17809 1e32 FFF7FEFF 		bl	strlen
 17810 1e36 0346     		mov	r3, r0
 17811 1e38 1A46     		mov	r2, r3
 17812 1e3a 07F11803 		add	r3, r7, #24
 17813 1e3e 1344     		add	r3, r3, r2
 17814 1e40 584A     		ldr	r2, .L698
 17815 1e42 1068     		ldr	r0, [r2]	@ unaligned
 17816 1e44 1860     		str	r0, [r3]	@ unaligned
 17817 1e46 1279     		ldrb	r2, [r2, #4]
 17818 1e48 1A71     		strb	r2, [r3, #4]
 17819              	.L662:
2312:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17820              		.loc 1 2312 0
 17821 1e4a 07F11803 		add	r3, r7, #24
 17822 1e4e 1846     		mov	r0, r3
 17823 1e50 FFF7FEFF 		bl	strlen
 17824 1e54 0346     		mov	r3, r0
 17825 1e56 1A46     		mov	r2, r3
 17826 1e58 07F11803 		add	r3, r7, #24
 17827 1e5c 1344     		add	r3, r3, r2
 17828 1e5e 574A     		ldr	r2, .L698+24
 17829 1e60 1C46     		mov	r4, r3
 17830 1e62 1346     		mov	r3, r2
 17831 1e64 07CB     		ldmia	r3!, {r0, r1, r2}
 17832 1e66 2060     		str	r0, [r4]	@ unaligned
 17833 1e68 6160     		str	r1, [r4, #4]	@ unaligned
 17834 1e6a A260     		str	r2, [r4, #8]	@ unaligned
 17835 1e6c 1A88     		ldrh	r2, [r3]	@ unaligned
 17836 1e6e 9B78     		ldrb	r3, [r3, #2]
 17837 1e70 A281     		strh	r2, [r4, #12]	@ unaligned
 17838 1e72 A373     		strb	r3, [r4, #14]
2313:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17839              		.loc 1 2313 0
 17840 1e74 4D4A     		ldr	r2, .L698+8
 17841 1e76 D7F89430 		ldr	r3, [r7, #148]
 17842 1e7a 1344     		add	r3, r3, r2
 17843 1e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17844 1e7e 1946     		mov	r1, r3
 17845 1e80 D7F88820 		ldr	r2, [r7, #136]
 17846 1e84 0B46     		mov	r3, r1
 17847 1e86 9B00     		lsls	r3, r3, #2
 17848 1e88 0B44     		add	r3, r3, r1
 17849 1e8a 1344     		add	r3, r3, r2
 17850 1e8c 03F20623 		addw	r3, r3, #518
 17851 1e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17852 1e92 002B     		cmp	r3, #0
 17853 1e94 0FD0     		beq	.L663
2314:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17854              		.loc 1 2314 0
 17855 1e96 07F11803 		add	r3, r7, #24
 17856 1e9a 1846     		mov	r0, r3
 17857 1e9c FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 395


 17858 1ea0 0346     		mov	r3, r0
 17859 1ea2 1A46     		mov	r2, r3
 17860 1ea4 07F11803 		add	r3, r7, #24
 17861 1ea8 1344     		add	r3, r3, r2
 17862 1eaa 414A     		ldr	r2, .L698+12
 17863 1eac 1068     		ldr	r0, [r2]	@ unaligned
 17864 1eae 1860     		str	r0, [r3]	@ unaligned
 17865 1eb0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17866 1eb2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17867 1eb4 0EE0     		b	.L664
 17868              	.L663:
2315:..\src/command_processing.c ****                 else
2316:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17869              		.loc 1 2316 0
 17870 1eb6 07F11803 		add	r3, r7, #24
 17871 1eba 1846     		mov	r0, r3
 17872 1ebc FFF7FEFF 		bl	strlen
 17873 1ec0 0346     		mov	r3, r0
 17874 1ec2 1A46     		mov	r2, r3
 17875 1ec4 07F11803 		add	r3, r7, #24
 17876 1ec8 1344     		add	r3, r3, r2
 17877 1eca 364A     		ldr	r2, .L698
 17878 1ecc 1068     		ldr	r0, [r2]	@ unaligned
 17879 1ece 1860     		str	r0, [r3]	@ unaligned
 17880 1ed0 1279     		ldrb	r2, [r2, #4]
 17881 1ed2 1A71     		strb	r2, [r3, #4]
 17882              	.L664:
2317:..\src/command_processing.c ****                      
2318:..\src/command_processing.c ****                 strcat(info_string, str);
 17883              		.loc 1 2318 0 discriminator 2
 17884 1ed4 07F11803 		add	r3, r7, #24
 17885 1ed8 1946     		mov	r1, r3
 17886 1eda 7869     		ldr	r0, [r7, #20]
 17887 1edc FFF7FEFF 		bl	strcat
2288:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17888              		.loc 1 2288 0 discriminator 2
 17889 1ee0 D7F89430 		ldr	r3, [r7, #148]
 17890 1ee4 0133     		adds	r3, r3, #1
 17891 1ee6 C7F89430 		str	r3, [r7, #148]
 17892              	.L654:
2288:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17893              		.loc 1 2288 0 is_stmt 0 discriminator 1
 17894 1eea 354B     		ldr	r3, .L698+28
 17895 1eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17896 1eee 1A46     		mov	r2, r3
 17897 1ef0 D7F89430 		ldr	r3, [r7, #148]
 17898 1ef4 9A42     		cmp	r2, r3
 17899 1ef6 3FF76FAE 		bgt	.L665
2319:..\src/command_processing.c ****             }       
2320:..\src/command_processing.c ****             
2321:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17900              		.loc 1 2321 0 is_stmt 1
 17901 1efa 7869     		ldr	r0, [r7, #20]
 17902 1efc FFF7FEFF 		bl	strlen
 17903 1f00 0346     		mov	r3, r0
 17904 1f02 1A46     		mov	r2, r3
 17905 1f04 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 396


 17906 1f06 1344     		add	r3, r3, r2
 17907 1f08 2E4A     		ldr	r2, .L698+32
 17908 1f0a 1188     		ldrh	r1, [r2]	@ unaligned
 17909 1f0c 9278     		ldrb	r2, [r2, #2]
 17910 1f0e 1980     		strh	r1, [r3]	@ unaligned
 17911 1f10 9A70     		strb	r2, [r3, #2]
2322:..\src/command_processing.c ****           
2323:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17912              		.loc 1 2323 0
 17913 1f12 7869     		ldr	r0, [r7, #20]
 17914 1f14 FFF7FEFF 		bl	IMU_reading_info
 17915              	.L653:
2324:..\src/command_processing.c ****         }
2325:..\src/command_processing.c ****         
2326:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17916              		.loc 1 2326 0
 17917 1f18 7869     		ldr	r0, [r7, #20]
 17918 1f1a FFF7FEFF 		bl	strlen
 17919 1f1e 0346     		mov	r3, r0
 17920 1f20 1A46     		mov	r2, r3
 17921 1f22 7B69     		ldr	r3, [r7, #20]
 17922 1f24 1344     		add	r3, r3, r2
 17923 1f26 274A     		ldr	r2, .L698+32
 17924 1f28 1188     		ldrh	r1, [r2]	@ unaligned
 17925 1f2a 9278     		ldrb	r2, [r2, #2]
 17926 1f2c 1980     		strh	r1, [r3]	@ unaligned
 17927 1f2e 9A70     		strb	r2, [r3, #2]
2327:..\src/command_processing.c **** 
2328:..\src/command_processing.c **** #ifdef GENERIC_FW   
2329:..\src/command_processing.c ****         int j;
2330:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 17928              		.loc 1 2330 0
 17929 1f30 7869     		ldr	r0, [r7, #20]
 17930 1f32 FFF7FEFF 		bl	strlen
 17931 1f36 0346     		mov	r3, r0
 17932 1f38 1A46     		mov	r2, r3
 17933 1f3a 7B69     		ldr	r3, [r7, #20]
 17934 1f3c 1344     		add	r3, r3, r2
 17935 1f3e 224A     		ldr	r2, .L698+36
 17936 1f40 1D46     		mov	r5, r3
 17937 1f42 1446     		mov	r4, r2
 17938 1f44 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17939 1f46 2860     		str	r0, [r5]	@ unaligned
 17940 1f48 6960     		str	r1, [r5, #4]	@ unaligned
 17941 1f4a AA60     		str	r2, [r5, #8]	@ unaligned
 17942 1f4c EB60     		str	r3, [r5, #12]	@ unaligned
 17943 1f4e 03CC     		ldmia	r4!, {r0, r1}
 17944 1f50 2861     		str	r0, [r5, #16]	@ unaligned
 17945 1f52 6961     		str	r1, [r5, #20]	@ unaligned
2331:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 17946              		.loc 1 2331 0
 17947 1f54 0023     		movs	r3, #0
 17948 1f56 C7F89430 		str	r3, [r7, #148]
 17949 1f5a BCE0     		b	.L666
 17950              	.L675:
2332:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17951              		.loc 1 2332 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 397


 17952 1f5c 1B4A     		ldr	r2, .L698+40
 17953 1f5e D7F89430 		ldr	r3, [r7, #148]
 17954 1f62 1344     		add	r3, r3, r2
 17955 1f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17956 1f66 07F11800 		add	r0, r7, #24
 17957 1f6a D7F89420 		ldr	r2, [r7, #148]
 17958 1f6e 1849     		ldr	r1, .L698+44
 17959 1f70 FFF7FEFF 		bl	sprintf
2333:..\src/command_processing.c ****             strcat(info_string, str);
 17960              		.loc 1 2333 0
 17961 1f74 07F11803 		add	r3, r7, #24
 17962 1f78 1946     		mov	r1, r3
 17963 1f7a 7869     		ldr	r0, [r7, #20]
 17964 1f7c FFF7FEFF 		bl	strcat
2334:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 17965              		.loc 1 2334 0
 17966 1f80 D7F88830 		ldr	r3, [r7, #136]
 17967 1f84 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17968 1f88 1A46     		mov	r2, r3
 17969 1f8a D7F89430 		ldr	r3, [r7, #148]
 17970 1f8e 9A42     		cmp	r2, r3
 17971 1f90 2FD1     		bne	.L667
2335:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 17972              		.loc 1 2335 0
 17973 1f92 D7F88830 		ldr	r3, [r7, #136]
 17974 1f96 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17975 1f9a 002B     		cmp	r3, #0
 17976 1f9c 1CD0     		beq	.L668
 17977              		.loc 1 2335 0 is_stmt 0 discriminator 1
 17978 1f9e 0D4A     		ldr	r2, .L698+48
 17979 1fa0 1BE0     		b	.L669
 17980              	.L699:
 17981 1fa2 00BF     		.align	2
 17982              	.L698:
 17983 1fa4 FC120000 		.word	.LC175
 17984 1fa8 E01A0000 		.word	.LC255
 17985 1fac 00000000 		.word	IMU_connected
 17986 1fb0 F4120000 		.word	.LC174
 17987 1fb4 F01A0000 		.word	.LC256
 17988 1fb8 041B0000 		.word	.LC257
 17989 1fbc 141B0000 		.word	.LC258
 17990 1fc0 00000000 		.word	N_IMU_Connected
 17991 1fc4 30110000 		.word	.LC151
 17992 1fc8 241B0000 		.word	.LC259
 17993 1fcc 00000000 		.word	N_Encoder_Line_Connected
 17994 1fd0 3C1B0000 		.word	.LC260
 17995 1fd4 5C1B0000 		.word	.LC261
 17996              	.L668:
 17997              		.loc 1 2335 0 discriminator 2
 17998 1fd8 534A     		ldr	r2, .L700
 17999              	.L669:
 18000              		.loc 1 2335 0 discriminator 4
 18001 1fda 07F11803 		add	r3, r7, #24
 18002 1fde 5349     		ldr	r1, .L700+4
 18003 1fe0 1846     		mov	r0, r3
 18004 1fe2 FFF7FEFF 		bl	sprintf
2336:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 398


 18005              		.loc 1 2336 0 is_stmt 1 discriminator 4
 18006 1fe6 07F11803 		add	r3, r7, #24
 18007 1fea 1946     		mov	r1, r3
 18008 1fec 7869     		ldr	r0, [r7, #20]
 18009 1fee FFF7FEFF 		bl	strcat
 18010              	.L667:
2337:..\src/command_processing.c ****             }
2338:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 18011              		.loc 1 2338 0
 18012 1ff2 7869     		ldr	r0, [r7, #20]
 18013 1ff4 FFF7FEFF 		bl	strlen
 18014 1ff8 0346     		mov	r3, r0
 18015 1ffa 1A46     		mov	r2, r3
 18016 1ffc 7B69     		ldr	r3, [r7, #20]
 18017 1ffe 1344     		add	r3, r3, r2
 18018 2000 4B4A     		ldr	r2, .L700+8
 18019 2002 1188     		ldrh	r1, [r2]	@ unaligned
 18020 2004 9278     		ldrb	r2, [r2, #2]
 18021 2006 1980     		strh	r1, [r3]	@ unaligned
 18022 2008 9A70     		strb	r2, [r3, #2]
2339:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 18023              		.loc 1 2339 0
 18024 200a 4A4A     		ldr	r2, .L700+12
 18025 200c D7F89430 		ldr	r3, [r7, #148]
 18026 2010 1344     		add	r3, r3, r2
 18027 2012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18028 2014 002B     		cmp	r3, #0
 18029 2016 59D0     		beq	.L670
2340:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 18030              		.loc 1 2340 0
 18031 2018 7869     		ldr	r0, [r7, #20]
 18032 201a FFF7FEFF 		bl	strlen
 18033 201e 0346     		mov	r3, r0
 18034 2020 1A46     		mov	r2, r3
 18035 2022 7B69     		ldr	r3, [r7, #20]
 18036 2024 1344     		add	r3, r3, r2
 18037 2026 444A     		ldr	r2, .L700+16
 18038 2028 1D46     		mov	r5, r3
 18039 202a 1446     		mov	r4, r2
 18040 202c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18041 202e 2860     		str	r0, [r5]	@ unaligned
 18042 2030 6960     		str	r1, [r5, #4]	@ unaligned
 18043 2032 AA60     		str	r2, [r5, #8]	@ unaligned
 18044 2034 EB60     		str	r3, [r5, #12]	@ unaligned
 18045 2036 2068     		ldr	r0, [r4]	@ unaligned
 18046 2038 2861     		str	r0, [r5, #16]	@ unaligned
 18047 203a A388     		ldrh	r3, [r4, #4]	@ unaligned
 18048 203c AB82     		strh	r3, [r5, #20]	@ unaligned
2341:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18049              		.loc 1 2341 0
 18050 203e 0023     		movs	r3, #0
 18051 2040 C7F88C30 		str	r3, [r7, #140]
 18052 2044 2CE0     		b	.L671
 18053              	.L674:
2342:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 18054              		.loc 1 2342 0
 18055 2046 3D49     		ldr	r1, .L700+20
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 399


 18056 2048 D7F89420 		ldr	r2, [r7, #148]
 18057 204c 1346     		mov	r3, r2
 18058 204e 9B00     		lsls	r3, r3, #2
 18059 2050 1344     		add	r3, r3, r2
 18060 2052 D7F88C20 		ldr	r2, [r7, #140]
 18061 2056 1344     		add	r3, r3, r2
 18062 2058 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 18063 205c 1C46     		mov	r4, r3
 18064 205e 3849     		ldr	r1, .L700+24
 18065 2060 D7F89420 		ldr	r2, [r7, #148]
 18066 2064 1346     		mov	r3, r2
 18067 2066 9B00     		lsls	r3, r3, #2
 18068 2068 1344     		add	r3, r3, r2
 18069 206a CA18     		adds	r2, r1, r3
 18070 206c D7F88C30 		ldr	r3, [r7, #140]
 18071 2070 1344     		add	r3, r3, r2
 18072 2072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18073 2074 102B     		cmp	r3, #16
 18074 2076 01D1     		bne	.L672
 18075              		.loc 1 2342 0 is_stmt 0 discriminator 1
 18076 2078 324B     		ldr	r3, .L700+28
 18077 207a 00E0     		b	.L673
 18078              	.L672:
 18079              		.loc 1 2342 0 discriminator 2
 18080 207c 324B     		ldr	r3, .L700+32
 18081              	.L673:
 18082              		.loc 1 2342 0 discriminator 4
 18083 207e 07F11800 		add	r0, r7, #24
 18084 2082 2246     		mov	r2, r4
 18085 2084 3149     		ldr	r1, .L700+36
 18086 2086 FFF7FEFF 		bl	sprintf
2343:..\src/command_processing.c ****                     strcat(info_string, str);
 18087              		.loc 1 2343 0 is_stmt 1 discriminator 4
 18088 208a 07F11803 		add	r3, r7, #24
 18089 208e 1946     		mov	r1, r3
 18090 2090 7869     		ldr	r0, [r7, #20]
 18091 2092 FFF7FEFF 		bl	strcat
2341:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18092              		.loc 1 2341 0 discriminator 4
 18093 2096 D7F88C30 		ldr	r3, [r7, #140]
 18094 209a 0133     		adds	r3, r3, #1
 18095 209c C7F88C30 		str	r3, [r7, #140]
 18096              	.L671:
2341:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18097              		.loc 1 2341 0 is_stmt 0 discriminator 2
 18098 20a0 244A     		ldr	r2, .L700+12
 18099 20a2 D7F89430 		ldr	r3, [r7, #148]
 18100 20a6 1344     		add	r3, r3, r2
 18101 20a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18102 20aa 1A46     		mov	r2, r3
 18103 20ac D7F88C30 		ldr	r3, [r7, #140]
 18104 20b0 9A42     		cmp	r2, r3
 18105 20b2 C8DC     		bgt	.L674
2344:..\src/command_processing.c ****                 }
2345:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 18106              		.loc 1 2345 0 is_stmt 1
 18107 20b4 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 400


 18108 20b6 FFF7FEFF 		bl	strlen
 18109 20ba 0346     		mov	r3, r0
 18110 20bc 1A46     		mov	r2, r3
 18111 20be 7B69     		ldr	r3, [r7, #20]
 18112 20c0 1344     		add	r3, r3, r2
 18113 20c2 1B4A     		ldr	r2, .L700+8
 18114 20c4 1188     		ldrh	r1, [r2]	@ unaligned
 18115 20c6 9278     		ldrb	r2, [r2, #2]
 18116 20c8 1980     		strh	r1, [r3]	@ unaligned
 18117 20ca 9A70     		strb	r2, [r3, #2]
 18118              	.L670:
2331:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18119              		.loc 1 2331 0 discriminator 2
 18120 20cc D7F89430 		ldr	r3, [r7, #148]
 18121 20d0 0133     		adds	r3, r3, #1
 18122 20d2 C7F89430 		str	r3, [r7, #148]
 18123              	.L666:
2331:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18124              		.loc 1 2331 0 is_stmt 0 discriminator 1
 18125 20d6 D7F89430 		ldr	r3, [r7, #148]
 18126 20da 012B     		cmp	r3, #1
 18127 20dc 7FF73EAF 		ble	.L675
2346:..\src/command_processing.c ****             }
2347:..\src/command_processing.c ****         }
2348:..\src/command_processing.c **** #endif   
2349:..\src/command_processing.c ****         
2350:..\src/command_processing.c **** #ifdef MASTER_FW
2351:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2352:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2353:..\src/command_processing.c ****         else
2354:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2355:..\src/command_processing.c **** 
2356:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2357:..\src/command_processing.c ****         strcat(info_string, str);
2358:..\src/command_processing.c **** #endif
2359:..\src/command_processing.c **** 
2360:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 18128              		.loc 1 2360 0 is_stmt 1
 18129 20e0 1B4B     		ldr	r3, .L700+40
 18130 20e2 1B88     		ldrh	r3, [r3]
 18131 20e4 1A46     		mov	r2, r3
 18132 20e6 1B4B     		ldr	r3, .L700+44
 18133 20e8 1B88     		ldrh	r3, [r3]
 18134 20ea D21A     		subs	r2, r2, r3
 18135 20ec 07F11803 		add	r3, r7, #24
 18136 20f0 1949     		ldr	r1, .L700+48
 18137 20f2 1846     		mov	r0, r3
 18138 20f4 FFF7FEFF 		bl	sprintf
2361:..\src/command_processing.c ****         strcat(info_string, str);
 18139              		.loc 1 2361 0
 18140 20f8 07F11803 		add	r3, r7, #24
 18141 20fc 1946     		mov	r1, r3
 18142 20fe 7869     		ldr	r0, [r7, #20]
 18143 2100 FFF7FEFF 		bl	strcat
2362:..\src/command_processing.c ****   
2363:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 18144              		.loc 1 2363 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 401


 18145 2104 7869     		ldr	r0, [r7, #20]
 18146 2106 FFF7FEFF 		bl	strlen
 18147 210a 0346     		mov	r3, r0
 18148 210c 1A46     		mov	r2, r3
 18149 210e 7B69     		ldr	r3, [r7, #20]
 18150 2110 1344     		add	r3, r3, r2
 18151 2112 124A     		ldr	r2, .L700+52
 18152 2114 1188     		ldrh	r1, [r2]	@ unaligned
 18153 2116 9278     		ldrb	r2, [r2, #2]
 18154 2118 1980     		strh	r1, [r3]	@ unaligned
 18155 211a 9A70     		strb	r2, [r3, #2]
 18156              	.L677:
 18157              	.LBE20:
2364:..\src/command_processing.c ****     }
2365:..\src/command_processing.c **** }
 18158              		.loc 1 2365 0
 18159 211c 00BF     		nop
 18160 211e 9C37     		adds	r7, r7, #156
 18161              		.cfi_def_cfa_offset 36
 18162 2120 BD46     		mov	sp, r7
 18163              		.cfi_def_cfa_register 13
 18164              		@ sp needed
 18165 2122 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18166              	.L701:
 18167 2126 00BF     		.align	2
 18168              	.L700:
 18169 2128 641B0000 		.word	.LC262
 18170 212c 6C1B0000 		.word	.LC263
 18171 2130 30110000 		.word	.LC151
 18172 2134 00000000 		.word	N_Encoder_Line_Connected
 18173 2138 8C1B0000 		.word	.LC264
 18174 213c 00000000 		.word	Encoder_Value
 18175 2140 00000000 		.word	Encoder_Check
 18176 2144 A41B0000 		.word	.LC265
 18177 2148 A81B0000 		.word	.LC266
 18178 214c AC1B0000 		.word	.LC267
 18179 2150 00000000 		.word	timer_value0
 18180 2154 00000000 		.word	timer_value
 18181 2158 B81B0000 		.word	.LC268
 18182 215c D41B0000 		.word	.LC269
 18183              		.cfi_endproc
 18184              	.LFE72:
 18185              		.size	prepare_generic_info, .-prepare_generic_info
 18186              		.section	.rodata
 18187              		.align	2
 18188              	.LC270:
 18189 1bd8 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 18189      41474520 
 18189      53544154 
 18189      49535449 
 18189      43530D0A 
 18190 1bed 000000   		.align	2
 18191              	.LC271:
 18192 1bf0 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 18192      206F6620 
 18192      4857206D 
 18192      61696E74 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 402


 18192      656E616E 
 18193 1c1b 00       		.align	2
 18194              	.LC272:
 18195 1c1c 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 18195      206F6620 
 18195      75736167 
 18195      65207374 
 18195      61747320 
 18196 1c4f 0A00     		.ascii	"\012\000"
 18197 1c51 000000   		.align	2
 18198              	.LC273:
 18199 1c54 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 18199      20636865 
 18199      636B6564 
 18199      2054696D 
 18199      653A2025 
 18200 1c87 0A00     		.ascii	"\012\000"
 18201 1c89 000000   		.align	2
 18202              	.LC274:
 18203 1c8c 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 18203      74696F6E 
 18203      73206869 
 18203      73746F67 
 18203      72616D20 
 18204 1cab 00       		.align	2
 18205              	.LC275:
 18206 1cac 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 18206      2564205B 
 18206      25642D25 
 18206      645D3A20 
 18206      256C750D 
 18207 1cc2 0000     		.align	2
 18208              	.LC276:
 18209 1cc4 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 18209      656E7420 
 18209      68697374 
 18209      6F677261 
 18209      6D20286D 
 18210 1cde 0000     		.align	2
 18211              	.LC277:
 18212 1ce0 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 18212      73686F6C 
 18212      64202564 
 18212      205B2564 
 18212      2D25645D 
 18213              		.align	2
 18214              	.LC278:
 18215 1cfc 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18215      61637469 
 18215      76617469 
 18215      6F6E7320 
 18215      636F756E 
 18216 1d1e 0000     		.align	2
 18217              	.LC279:
 18218 1d20 52657374 		.ascii	"Rest position occurrences: %lu\000"
 18218      20706F73 
 18218      6974696F 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 403


 18218      6E206F63 
 18218      63757272 
 18219 1d3f 00       		.align	2
 18220              	.LC280:
 18221 1d40 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 18221      6520746F 
 18221      74616C20 
 18221      64697370 
 18221      6C616365 
 18222 1d66 0000     		.align	2
 18223              	.LC281:
 18224 1d68 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 18224      6C20706F 
 18224      77657220 
 18224      6F6E2074 
 18224      696D6520 
 18225 1d87 00       		.align	2
 18226              	.LC282:
 18227 1d88 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 18227      6C207265 
 18227      73742070 
 18227      6F736974 
 18227      696F6E20 
 18228              		.section	.text.prepare_counter_info,"ax",%progbits
 18229              		.align	2
 18230              		.global	prepare_counter_info
 18231              		.thumb
 18232              		.thumb_func
 18233              		.type	prepare_counter_info, %function
 18234              	prepare_counter_info:
 18235              	.LFB73:
2366:..\src/command_processing.c **** 
2367:..\src/command_processing.c **** //==============================================================================
2368:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2369:..\src/command_processing.c **** //==============================================================================
2370:..\src/command_processing.c **** 
2371:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2372:..\src/command_processing.c **** {
 18236              		.loc 1 2372 0
 18237              		.cfi_startproc
 18238              		@ args = 0, pretend = 0, frame = 128
 18239              		@ frame_needed = 1, uses_anonymous_args = 0
 18240 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18241              		.cfi_def_cfa_offset 20
 18242              		.cfi_offset 4, -20
 18243              		.cfi_offset 5, -16
 18244              		.cfi_offset 6, -12
 18245              		.cfi_offset 7, -8
 18246              		.cfi_offset 14, -4
 18247 0002 A5B0     		sub	sp, sp, #148
 18248              		.cfi_def_cfa_offset 168
 18249 0004 04AF     		add	r7, sp, #16
 18250              		.cfi_def_cfa 7, 152
 18251 0006 7860     		str	r0, [r7, #4]
2373:..\src/command_processing.c ****     char str[100];  
2374:..\src/command_processing.c ****     int i;
2375:..\src/command_processing.c ****     int step;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 404


2376:..\src/command_processing.c **** 
2377:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18252              		.loc 1 2377 0
 18253 0008 7F4B     		ldr	r3, .L708
 18254 000a BB67     		str	r3, [r7, #120]
2378:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 18255              		.loc 1 2378 0
 18256 000c BB6F     		ldr	r3, [r7, #120]
 18257 000e B033     		adds	r3, r3, #176
 18258 0010 7B67     		str	r3, [r7, #116]
2379:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 18259              		.loc 1 2379 0
 18260 0012 7B6F     		ldr	r3, [r7, #116]
 18261 0014 93F86030 		ldrb	r3, [r3, #96]
 18262 0018 87F87330 		strb	r3, [r7, #115]
2380:..\src/command_processing.c ****     
2381:..\src/command_processing.c ****     strcpy(info_string, "");
 18263              		.loc 1 2381 0
 18264 001c 7B68     		ldr	r3, [r7, #4]
 18265 001e 0022     		movs	r2, #0
 18266 0020 1A70     		strb	r2, [r3]
2382:..\src/command_processing.c ****     
2383:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 18267              		.loc 1 2383 0
 18268 0022 7868     		ldr	r0, [r7, #4]
 18269 0024 FFF7FEFF 		bl	strlen
 18270 0028 0346     		mov	r3, r0
 18271 002a 1A46     		mov	r2, r3
 18272 002c 7B68     		ldr	r3, [r7, #4]
 18273 002e 1344     		add	r3, r3, r2
 18274 0030 764A     		ldr	r2, .L708+4
 18275 0032 1D46     		mov	r5, r3
 18276 0034 1446     		mov	r4, r2
 18277 0036 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18278 0038 2860     		str	r0, [r5]	@ unaligned
 18279 003a 6960     		str	r1, [r5, #4]	@ unaligned
 18280 003c AA60     		str	r2, [r5, #8]	@ unaligned
 18281 003e EB60     		str	r3, [r5, #12]	@ unaligned
 18282 0040 2068     		ldr	r0, [r4]	@ unaligned
 18283 0042 2861     		str	r0, [r5, #16]	@ unaligned
 18284 0044 2379     		ldrb	r3, [r4, #4]
 18285 0046 2B75     		strb	r3, [r5, #20]
2384:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18286              		.loc 1 2384 0
 18287 0048 7868     		ldr	r0, [r7, #4]
 18288 004a FFF7FEFF 		bl	strlen
 18289 004e 0346     		mov	r3, r0
 18290 0050 1A46     		mov	r2, r3
 18291 0052 7B68     		ldr	r3, [r7, #4]
 18292 0054 1344     		add	r3, r3, r2
 18293 0056 6E4A     		ldr	r2, .L708+8
 18294 0058 1188     		ldrh	r1, [r2]	@ unaligned
 18295 005a 9278     		ldrb	r2, [r2, #2]
 18296 005c 1980     		strh	r1, [r3]	@ unaligned
 18297 005e 9A70     		strb	r2, [r3, #2]
2385:..\src/command_processing.c ****     
2386:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 405


 18298              		.loc 1 2386 0
 18299 0060 BB6F     		ldr	r3, [r7, #120]
 18300 0062 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18301 0066 1A46     		mov	r2, r3
 18302 0068 BB6F     		ldr	r3, [r7, #120]
 18303 006a 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18304 006e 1946     		mov	r1, r3
 18305 0070 BB6F     		ldr	r3, [r7, #120]
 18306 0072 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18307 0076 07F10800 		add	r0, r7, #8
 18308 007a 0093     		str	r3, [sp]
 18309 007c 0B46     		mov	r3, r1
 18310 007e 6549     		ldr	r1, .L708+12
 18311 0080 FFF7FEFF 		bl	sprintf
2387:..\src/command_processing.c ****     strcat(info_string, str);
 18312              		.loc 1 2387 0
 18313 0084 07F10803 		add	r3, r7, #8
 18314 0088 1946     		mov	r1, r3
 18315 008a 7868     		ldr	r0, [r7, #4]
 18316 008c FFF7FEFF 		bl	strcat
2388:..\src/command_processing.c ****     
2389:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18317              		.loc 1 2389 0
 18318 0090 BB6F     		ldr	r3, [r7, #120]
 18319 0092 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18320 0096 1A46     		mov	r2, r3
 18321 0098 BB6F     		ldr	r3, [r7, #120]
 18322 009a 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18323 009e 1946     		mov	r1, r3
 18324 00a0 BB6F     		ldr	r3, [r7, #120]
 18325 00a2 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18326 00a6 07F10800 		add	r0, r7, #8
 18327 00aa 0093     		str	r3, [sp]
 18328 00ac 0B46     		mov	r3, r1
 18329 00ae 5A49     		ldr	r1, .L708+16
 18330 00b0 FFF7FEFF 		bl	sprintf
2390:..\src/command_processing.c ****     strcat(info_string, str);
 18331              		.loc 1 2390 0
 18332 00b4 07F10803 		add	r3, r7, #8
 18333 00b8 1946     		mov	r1, r3
 18334 00ba 7868     		ldr	r0, [r7, #4]
 18335 00bc FFF7FEFF 		bl	strcat
2391:..\src/command_processing.c ****             
2392:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 18336              		.loc 1 2392 0
 18337 00c0 BB6F     		ldr	r3, [r7, #120]
 18338 00c2 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 18339 00c6 1D46     		mov	r5, r3
 18340 00c8 BB6F     		ldr	r3, [r7, #120]
 18341 00ca 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 18342 00ce 1E46     		mov	r6, r3
 18343 00d0 BB6F     		ldr	r3, [r7, #120]
 18344 00d2 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 18345 00d6 1A46     		mov	r2, r3
 18346 00d8 BB6F     		ldr	r3, [r7, #120]
 18347 00da 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18348 00de 1946     		mov	r1, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 406


 18349 00e0 BB6F     		ldr	r3, [r7, #120]
 18350 00e2 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 18351 00e6 1C46     		mov	r4, r3
 18352 00e8 BB6F     		ldr	r3, [r7, #120]
 18353 00ea 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18354 00ee 07F10800 		add	r0, r7, #8
 18355 00f2 0393     		str	r3, [sp, #12]
 18356 00f4 0294     		str	r4, [sp, #8]
 18357 00f6 0191     		str	r1, [sp, #4]
 18358 00f8 0092     		str	r2, [sp]
 18359 00fa 3346     		mov	r3, r6
 18360 00fc 2A46     		mov	r2, r5
 18361 00fe 4749     		ldr	r1, .L708+20
 18362 0100 FFF7FEFF 		bl	sprintf
2393:..\src/command_processing.c ****     strcat(info_string, str);
 18363              		.loc 1 2393 0
 18364 0104 07F10803 		add	r3, r7, #8
 18365 0108 1946     		mov	r1, r3
 18366 010a 7868     		ldr	r0, [r7, #4]
 18367 010c FFF7FEFF 		bl	strcat
2394:..\src/command_processing.c ****     
2395:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 18368              		.loc 1 2395 0
 18369 0110 07F10803 		add	r3, r7, #8
 18370 0114 424A     		ldr	r2, .L708+24
 18371 0116 1C46     		mov	r4, r3
 18372 0118 1546     		mov	r5, r2
 18373 011a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18374 011c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18375 011e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 18376 0122 07C4     		stmia	r4!, {r0, r1, r2}
 18377 0124 2380     		strh	r3, [r4]	@ movhi
 18378 0126 0234     		adds	r4, r4, #2
 18379 0128 1B0C     		lsrs	r3, r3, #16
 18380 012a 2370     		strb	r3, [r4]
2396:..\src/command_processing.c ****     strcat(info_string, str);
 18381              		.loc 1 2396 0
 18382 012c 07F10803 		add	r3, r7, #8
 18383 0130 1946     		mov	r1, r3
 18384 0132 7868     		ldr	r0, [r7, #4]
 18385 0134 FFF7FEFF 		bl	strcat
2397:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 18386              		.loc 1 2397 0
 18387 0138 7B6F     		ldr	r3, [r7, #116]
 18388 013a 996B     		ldr	r1, [r3, #56]
 18389 013c 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 18390 0140 B86F     		ldr	r0, [r7, #120]
 18391 0142 1346     		mov	r3, r2
 18392 0144 5B00     		lsls	r3, r3, #1
 18393 0146 1344     		add	r3, r3, r2
 18394 0148 1B01     		lsls	r3, r3, #4
 18395 014a 0344     		add	r3, r3, r0
 18396 014c 03F29513 		addw	r3, r3, #405
 18397 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18398 0152 41FA03F3 		asr	r3, r1, r3
 18399 0156 334A     		ldr	r2, .L708+28
 18400 0158 82FB0312 		smull	r1, r2, r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 407


 18401 015c 9210     		asrs	r2, r2, #2
 18402 015e DB17     		asrs	r3, r3, #31
 18403 0160 D31A     		subs	r3, r2, r3
 18404 0162 FB66     		str	r3, [r7, #108]
2398:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18405              		.loc 1 2398 0
 18406 0164 0123     		movs	r3, #1
 18407 0166 FB67     		str	r3, [r7, #124]
 18408 0168 21E0     		b	.L703
 18409              	.L704:
2399:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 18410              		.loc 1 2399 0 discriminator 3
 18411 016a FB6F     		ldr	r3, [r7, #124]
 18412 016c 013B     		subs	r3, r3, #1
 18413 016e FA6E     		ldr	r2, [r7, #108]
 18414 0170 02FB03F3 		mul	r3, r2, r3
 18415 0174 5C1C     		adds	r4, r3, #1
 18416 0176 FB6E     		ldr	r3, [r7, #108]
 18417 0178 FA6F     		ldr	r2, [r7, #124]
 18418 017a 02FB03F3 		mul	r3, r2, r3
 18419 017e FA6F     		ldr	r2, [r7, #124]
 18420 0180 511E     		subs	r1, r2, #1
 18421 0182 BA6F     		ldr	r2, [r7, #120]
 18422 0184 0631     		adds	r1, r1, #6
 18423 0186 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18424 018a 07F10800 		add	r0, r7, #8
 18425 018e 0192     		str	r2, [sp, #4]
 18426 0190 0093     		str	r3, [sp]
 18427 0192 2346     		mov	r3, r4
 18428 0194 FA6F     		ldr	r2, [r7, #124]
 18429 0196 2449     		ldr	r1, .L708+32
 18430 0198 FFF7FEFF 		bl	sprintf
2400:..\src/command_processing.c ****         strcat(info_string, str);
 18431              		.loc 1 2400 0 discriminator 3
 18432 019c 07F10803 		add	r3, r7, #8
 18433 01a0 1946     		mov	r1, r3
 18434 01a2 7868     		ldr	r0, [r7, #4]
 18435 01a4 FFF7FEFF 		bl	strcat
2398:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18436              		.loc 1 2398 0 discriminator 3
 18437 01a8 FB6F     		ldr	r3, [r7, #124]
 18438 01aa 0133     		adds	r3, r3, #1
 18439 01ac FB67     		str	r3, [r7, #124]
 18440              	.L703:
2398:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18441              		.loc 1 2398 0 is_stmt 0 discriminator 1
 18442 01ae FB6F     		ldr	r3, [r7, #124]
 18443 01b0 0A2B     		cmp	r3, #10
 18444 01b2 DADD     		ble	.L704
2401:..\src/command_processing.c ****     }
2402:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18445              		.loc 1 2402 0 is_stmt 1
 18446 01b4 7868     		ldr	r0, [r7, #4]
 18447 01b6 FFF7FEFF 		bl	strlen
 18448 01ba 0346     		mov	r3, r0
 18449 01bc 1A46     		mov	r2, r3
 18450 01be 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 408


 18451 01c0 1344     		add	r3, r3, r2
 18452 01c2 134A     		ldr	r2, .L708+8
 18453 01c4 1188     		ldrh	r1, [r2]	@ unaligned
 18454 01c6 9278     		ldrb	r2, [r2, #2]
 18455 01c8 1980     		strh	r1, [r3]	@ unaligned
 18456 01ca 9A70     		strb	r2, [r3, #2]
2403:..\src/command_processing.c ****     
2404:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 18457              		.loc 1 2404 0
 18458 01cc 07F10803 		add	r3, r7, #8
 18459 01d0 164A     		ldr	r2, .L708+36
 18460 01d2 1C46     		mov	r4, r3
 18461 01d4 1546     		mov	r5, r2
 18462 01d6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18463 01d8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18464 01da 95E80700 		ldmia	r5, {r0, r1, r2}
 18465 01de 03C4     		stmia	r4!, {r0, r1}
 18466 01e0 2280     		strh	r2, [r4]	@ movhi
2405:..\src/command_processing.c ****     strcat(info_string, str);
 18467              		.loc 1 2405 0
 18468 01e2 07F10803 		add	r3, r7, #8
 18469 01e6 1946     		mov	r1, r3
 18470 01e8 7868     		ldr	r0, [r7, #4]
 18471 01ea FFF7FEFF 		bl	strcat
2406:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 18472              		.loc 1 2406 0
 18473 01ee 7B6F     		ldr	r3, [r7, #116]
 18474 01f0 B3F95C30 		ldrsh	r3, [r3, #92]
 18475 01f4 002B     		cmp	r3, #0
 18476 01f6 00DA     		bge	.L705
 18477 01f8 0333     		adds	r3, r3, #3
 18478              	.L705:
 18479 01fa 9B10     		asrs	r3, r3, #2
 18480 01fc 1BB2     		sxth	r3, r3
 18481 01fe FB66     		str	r3, [r7, #108]
2407:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18482              		.loc 1 2407 0
 18483 0200 0123     		movs	r3, #1
 18484 0202 FB67     		str	r3, [r7, #124]
 18485 0204 35E0     		b	.L706
 18486              	.L709:
 18487 0206 00BF     		.align	2
 18488              	.L708:
 18489 0208 00000000 		.word	g_mem
 18490 020c D81B0000 		.word	.LC270
 18491 0210 30110000 		.word	.LC151
 18492 0214 F01B0000 		.word	.LC271
 18493 0218 1C1C0000 		.word	.LC272
 18494 021c 541C0000 		.word	.LC273
 18495 0220 8C1C0000 		.word	.LC274
 18496 0224 67666666 		.word	1717986919
 18497 0228 AC1C0000 		.word	.LC275
 18498 022c C41C0000 		.word	.LC276
 18499              	.L707:
2408:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 18500              		.loc 1 2408 0 discriminator 3
 18501 0230 FB6F     		ldr	r3, [r7, #124]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 409


 18502 0232 013B     		subs	r3, r3, #1
 18503 0234 FA6E     		ldr	r2, [r7, #108]
 18504 0236 02FB03F4 		mul	r4, r2, r3
 18505 023a FB6E     		ldr	r3, [r7, #108]
 18506 023c FA6F     		ldr	r2, [r7, #124]
 18507 023e 02FB03F3 		mul	r3, r2, r3
 18508 0242 FA6F     		ldr	r2, [r7, #124]
 18509 0244 511E     		subs	r1, r2, #1
 18510 0246 BA6F     		ldr	r2, [r7, #120]
 18511 0248 1031     		adds	r1, r1, #16
 18512 024a 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18513 024e 07F10800 		add	r0, r7, #8
 18514 0252 0192     		str	r2, [sp, #4]
 18515 0254 0093     		str	r3, [sp]
 18516 0256 2346     		mov	r3, r4
 18517 0258 FA6F     		ldr	r2, [r7, #124]
 18518 025a 5149     		ldr	r1, .L710
 18519 025c FFF7FEFF 		bl	sprintf
2409:..\src/command_processing.c ****         strcat(info_string, str);
 18520              		.loc 1 2409 0 discriminator 3
 18521 0260 07F10803 		add	r3, r7, #8
 18522 0264 1946     		mov	r1, r3
 18523 0266 7868     		ldr	r0, [r7, #4]
 18524 0268 FFF7FEFF 		bl	strcat
2407:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18525              		.loc 1 2407 0 discriminator 3
 18526 026c FB6F     		ldr	r3, [r7, #124]
 18527 026e 0133     		adds	r3, r3, #1
 18528 0270 FB67     		str	r3, [r7, #124]
 18529              	.L706:
2407:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18530              		.loc 1 2407 0 is_stmt 0 discriminator 1
 18531 0272 FB6F     		ldr	r3, [r7, #124]
 18532 0274 042B     		cmp	r3, #4
 18533 0276 DBDD     		ble	.L707
2410:..\src/command_processing.c ****     }
2411:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18534              		.loc 1 2411 0 is_stmt 1
 18535 0278 7868     		ldr	r0, [r7, #4]
 18536 027a FFF7FEFF 		bl	strlen
 18537 027e 0346     		mov	r3, r0
 18538 0280 1A46     		mov	r2, r3
 18539 0282 7B68     		ldr	r3, [r7, #4]
 18540 0284 1344     		add	r3, r3, r2
 18541 0286 474A     		ldr	r2, .L710+4
 18542 0288 1188     		ldrh	r1, [r2]	@ unaligned
 18543 028a 9278     		ldrb	r2, [r2, #2]
 18544 028c 1980     		strh	r1, [r3]	@ unaligned
 18545 028e 9A70     		strb	r2, [r3, #2]
2412:..\src/command_processing.c ****             
2413:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 18546              		.loc 1 2413 0
 18547 0290 BB6F     		ldr	r3, [r7, #120]
 18548 0292 1A69     		ldr	r2, [r3, #16]
 18549 0294 BB6F     		ldr	r3, [r7, #120]
 18550 0296 5B69     		ldr	r3, [r3, #20]
 18551 0298 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 410


 18552 029c 4249     		ldr	r1, .L710+8
 18553 029e FFF7FEFF 		bl	sprintf
2414:..\src/command_processing.c ****     strcat(info_string, str);
 18554              		.loc 1 2414 0
 18555 02a2 07F10803 		add	r3, r7, #8
 18556 02a6 1946     		mov	r1, r3
 18557 02a8 7868     		ldr	r0, [r7, #4]
 18558 02aa FFF7FEFF 		bl	strcat
2415:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18559              		.loc 1 2415 0
 18560 02ae 7868     		ldr	r0, [r7, #4]
 18561 02b0 FFF7FEFF 		bl	strlen
 18562 02b4 0346     		mov	r3, r0
 18563 02b6 1A46     		mov	r2, r3
 18564 02b8 7B68     		ldr	r3, [r7, #4]
 18565 02ba 1344     		add	r3, r3, r2
 18566 02bc 394A     		ldr	r2, .L710+4
 18567 02be 1188     		ldrh	r1, [r2]	@ unaligned
 18568 02c0 9278     		ldrb	r2, [r2, #2]
 18569 02c2 1980     		strh	r1, [r3]	@ unaligned
 18570 02c4 9A70     		strb	r2, [r3, #2]
2416:..\src/command_processing.c ****     
2417:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18571              		.loc 1 2417 0
 18572 02c6 BB6F     		ldr	r3, [r7, #120]
 18573 02c8 1A6D     		ldr	r2, [r3, #80]
 18574 02ca 07F10803 		add	r3, r7, #8
 18575 02ce 3749     		ldr	r1, .L710+12
 18576 02d0 1846     		mov	r0, r3
 18577 02d2 FFF7FEFF 		bl	sprintf
2418:..\src/command_processing.c ****     strcat(info_string, str);
 18578              		.loc 1 2418 0
 18579 02d6 07F10803 		add	r3, r7, #8
 18580 02da 1946     		mov	r1, r3
 18581 02dc 7868     		ldr	r0, [r7, #4]
 18582 02de FFF7FEFF 		bl	strcat
2419:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18583              		.loc 1 2419 0
 18584 02e2 7868     		ldr	r0, [r7, #4]
 18585 02e4 FFF7FEFF 		bl	strlen
 18586 02e8 0346     		mov	r3, r0
 18587 02ea 1A46     		mov	r2, r3
 18588 02ec 7B68     		ldr	r3, [r7, #4]
 18589 02ee 1344     		add	r3, r3, r2
 18590 02f0 2C4A     		ldr	r2, .L710+4
 18591 02f2 1188     		ldrh	r1, [r2]	@ unaligned
 18592 02f4 9278     		ldrb	r2, [r2, #2]
 18593 02f6 1980     		strh	r1, [r3]	@ unaligned
 18594 02f8 9A70     		strb	r2, [r3, #2]
2420:..\src/command_processing.c ****     
2421:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18595              		.loc 1 2421 0
 18596 02fa BB6F     		ldr	r3, [r7, #120]
 18597 02fc 5A6D     		ldr	r2, [r3, #84]
 18598 02fe 07F10803 		add	r3, r7, #8
 18599 0302 2B49     		ldr	r1, .L710+16
 18600 0304 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 411


 18601 0306 FFF7FEFF 		bl	sprintf
2422:..\src/command_processing.c ****     strcat(info_string, str);
 18602              		.loc 1 2422 0
 18603 030a 07F10803 		add	r3, r7, #8
 18604 030e 1946     		mov	r1, r3
 18605 0310 7868     		ldr	r0, [r7, #4]
 18606 0312 FFF7FEFF 		bl	strcat
2423:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18607              		.loc 1 2423 0
 18608 0316 7868     		ldr	r0, [r7, #4]
 18609 0318 FFF7FEFF 		bl	strlen
 18610 031c 0346     		mov	r3, r0
 18611 031e 1A46     		mov	r2, r3
 18612 0320 7B68     		ldr	r3, [r7, #4]
 18613 0322 1344     		add	r3, r3, r2
 18614 0324 1F4A     		ldr	r2, .L710+4
 18615 0326 1188     		ldrh	r1, [r2]	@ unaligned
 18616 0328 9278     		ldrb	r2, [r2, #2]
 18617 032a 1980     		strh	r1, [r3]	@ unaligned
 18618 032c 9A70     		strb	r2, [r3, #2]
2424:..\src/command_processing.c ****     
2425:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 18619              		.loc 1 2425 0
 18620 032e BB6F     		ldr	r3, [r7, #120]
 18621 0330 9A6D     		ldr	r2, [r3, #88]
 18622 0332 07F10803 		add	r3, r7, #8
 18623 0336 1F49     		ldr	r1, .L710+20
 18624 0338 1846     		mov	r0, r3
 18625 033a FFF7FEFF 		bl	sprintf
2426:..\src/command_processing.c ****     strcat(info_string, str);
 18626              		.loc 1 2426 0
 18627 033e 07F10803 		add	r3, r7, #8
 18628 0342 1946     		mov	r1, r3
 18629 0344 7868     		ldr	r0, [r7, #4]
 18630 0346 FFF7FEFF 		bl	strcat
2427:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18631              		.loc 1 2427 0
 18632 034a 7868     		ldr	r0, [r7, #4]
 18633 034c FFF7FEFF 		bl	strlen
 18634 0350 0346     		mov	r3, r0
 18635 0352 1A46     		mov	r2, r3
 18636 0354 7B68     		ldr	r3, [r7, #4]
 18637 0356 1344     		add	r3, r3, r2
 18638 0358 124A     		ldr	r2, .L710+4
 18639 035a 1188     		ldrh	r1, [r2]	@ unaligned
 18640 035c 9278     		ldrb	r2, [r2, #2]
 18641 035e 1980     		strh	r1, [r3]	@ unaligned
 18642 0360 9A70     		strb	r2, [r3, #2]
2428:..\src/command_processing.c ****     
2429:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18643              		.loc 1 2429 0
 18644 0362 BB6F     		ldr	r3, [r7, #120]
 18645 0364 DA6D     		ldr	r2, [r3, #92]
 18646 0366 07F10803 		add	r3, r7, #8
 18647 036a 1349     		ldr	r1, .L710+24
 18648 036c 1846     		mov	r0, r3
 18649 036e FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 412


2430:..\src/command_processing.c ****     strcat(info_string, str);
 18650              		.loc 1 2430 0
 18651 0372 07F10803 		add	r3, r7, #8
 18652 0376 1946     		mov	r1, r3
 18653 0378 7868     		ldr	r0, [r7, #4]
 18654 037a FFF7FEFF 		bl	strcat
2431:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18655              		.loc 1 2431 0
 18656 037e 7868     		ldr	r0, [r7, #4]
 18657 0380 FFF7FEFF 		bl	strlen
 18658 0384 0346     		mov	r3, r0
 18659 0386 1A46     		mov	r2, r3
 18660 0388 7B68     		ldr	r3, [r7, #4]
 18661 038a 1344     		add	r3, r3, r2
 18662 038c 054A     		ldr	r2, .L710+4
 18663 038e 1188     		ldrh	r1, [r2]	@ unaligned
 18664 0390 9278     		ldrb	r2, [r2, #2]
 18665 0392 1980     		strh	r1, [r3]	@ unaligned
 18666 0394 9A70     		strb	r2, [r3, #2]
2432:..\src/command_processing.c **** 
2433:..\src/command_processing.c **** }
 18667              		.loc 1 2433 0
 18668 0396 00BF     		nop
 18669 0398 8437     		adds	r7, r7, #132
 18670              		.cfi_def_cfa_offset 20
 18671 039a BD46     		mov	sp, r7
 18672              		.cfi_def_cfa_register 13
 18673              		@ sp needed
 18674 039c F0BD     		pop	{r4, r5, r6, r7, pc}
 18675              	.L711:
 18676 039e 00BF     		.align	2
 18677              	.L710:
 18678 03a0 E01C0000 		.word	.LC277
 18679 03a4 30110000 		.word	.LC151
 18680 03a8 FC1C0000 		.word	.LC278
 18681 03ac 201D0000 		.word	.LC279
 18682 03b0 401D0000 		.word	.LC280
 18683 03b4 681D0000 		.word	.LC281
 18684 03b8 881D0000 		.word	.LC282
 18685              		.cfi_endproc
 18686              	.LFE73:
 18687              		.size	prepare_counter_info, .-prepare_counter_info
 18688              		.section	.rodata
 18689              		.align	2
 18690              	.LC283:
 18691 1dac 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18691      77617265 
 18691      20766572 
 18691      73696F6E 
 18691      3A202573 
 18692 1dc3 00       		.align	2
 18693              	.LC284:
 18694 1dc4 506F7369 		.ascii	"Position PID: \000"
 18694      74696F6E 
 18694      20504944 
 18694      3A2000
 18695 1dd3 00       		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 413


 18696              	.LC285:
 18697 1dd4 43757272 		.ascii	"Current PID: \000"
 18697      656E7420 
 18697      5049443A 
 18697      2000
 18698 1de2 0000     		.align	2
 18699              	.LC286:
 18700 1de4 5265736F 		.ascii	"Resolutions: \000"
 18700      6C757469 
 18700      6F6E733A 
 18700      2000
 18701 1df2 0000     		.align	2
 18702              	.LC287:
 18703 1df4 4F666673 		.ascii	"Offsets: \000"
 18703      6574733A 
 18703      2000
 18704 1dfe 0000     		.align	2
 18705              	.LC288:
 18706 1e00 4D756C74 		.ascii	"Multipliers: \000"
 18706      69706C69 
 18706      6572733A 
 18706      2000
 18707 1e0e 0000     		.align	2
 18708              	.LC289:
 18709 1e10 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18709      656E7420 
 18709      6C6F6F6B 
 18709      75702074 
 18709      61626C65 
 18710 1e43 662C2025 		.ascii	"f, %f\015\012\000"
 18710      660D0A00 
 18711 1e4b 00       		.align	2
 18712              	.LC290:
 18713 1e4c 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18713      74696F6E 
 18713      206C696D 
 18713      69742061 
 18713      63746976 
 18714              		.align	2
 18715              	.LC291:
 18716 1e68 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18716      74696F6E 
 18716      206C696D 
 18716      6974733A 
 18716      20696E66 
 18717              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18718              		.align	2
 18719              		.global	prepare_SD_param_info
 18720              		.thumb
 18721              		.thumb_func
 18722              		.type	prepare_SD_param_info, %function
 18723              	prepare_SD_param_info:
 18724              	.LFB74:
2434:..\src/command_processing.c **** 
2435:..\src/command_processing.c **** //==============================================================================
2436:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2437:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 414


2438:..\src/command_processing.c **** 
2439:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2440:..\src/command_processing.c **** {
 18725              		.loc 1 2440 0
 18726              		.cfi_startproc
 18727              		@ args = 0, pretend = 0, frame = 152
 18728              		@ frame_needed = 1, uses_anonymous_args = 0
 18729 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18730              		.cfi_def_cfa_offset 36
 18731              		.cfi_offset 4, -36
 18732              		.cfi_offset 5, -32
 18733              		.cfi_offset 6, -28
 18734              		.cfi_offset 7, -24
 18735              		.cfi_offset 8, -20
 18736              		.cfi_offset 9, -16
 18737              		.cfi_offset 10, -12
 18738              		.cfi_offset 11, -8
 18739              		.cfi_offset 14, -4
 18740 0004 B1B0     		sub	sp, sp, #196
 18741              		.cfi_def_cfa_offset 232
 18742 0006 0AAF     		add	r7, sp, #40
 18743              		.cfi_def_cfa 7, 192
 18744 0008 7861     		str	r0, [r7, #20]
2441:..\src/command_processing.c ****     char str[100];  
2442:..\src/command_processing.c ****     int i;
2443:..\src/command_processing.c ****            
2444:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2445:..\src/command_processing.c ****     
2446:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18745              		.loc 1 2446 0
 18746 000a AB4B     		ldr	r3, .L777
 18747 000c C7F88C30 		str	r3, [r7, #140]
2447:..\src/command_processing.c ****         
2448:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18748              		.loc 1 2448 0
 18749 0010 AA4A     		ldr	r2, .L777+4
 18750 0012 AB49     		ldr	r1, .L777+8
 18751 0014 7869     		ldr	r0, [r7, #20]
 18752 0016 FFF7FEFF 		bl	sprintf
2449:..\src/command_processing.c ****     
2450:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18753              		.loc 1 2450 0
 18754 001a D7F88C30 		ldr	r3, [r7, #140]
 18755 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18756 0022 1A46     		mov	r2, r3
 18757 0024 07F11C03 		add	r3, r7, #28
 18758 0028 A649     		ldr	r1, .L777+12
 18759 002a 1846     		mov	r0, r3
 18760 002c FFF7FEFF 		bl	sprintf
2451:..\src/command_processing.c ****     strcat(info_string, str);
 18761              		.loc 1 2451 0
 18762 0030 07F11C03 		add	r3, r7, #28
 18763 0034 1946     		mov	r1, r3
 18764 0036 7869     		ldr	r0, [r7, #20]
 18765 0038 FFF7FEFF 		bl	strcat
2452:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18766              		.loc 1 2452 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 415


 18767 003c D7F88C30 		ldr	r3, [r7, #140]
 18768 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18769 0044 002B     		cmp	r3, #0
 18770 0046 02D0     		beq	.L714
 18771 0048 012B     		cmp	r3, #1
 18772 004a 15D0     		beq	.L715
 18773 004c 26E0     		b	.L713
 18774              	.L714:
2453:..\src/command_processing.c ****         case RIGHT_HAND:
2454:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18775              		.loc 1 2454 0
 18776 004e 7869     		ldr	r0, [r7, #20]
 18777 0050 FFF7FEFF 		bl	strlen
 18778 0054 0346     		mov	r3, r0
 18779 0056 1A46     		mov	r2, r3
 18780 0058 7B69     		ldr	r3, [r7, #20]
 18781 005a 1344     		add	r3, r3, r2
 18782 005c 9A4A     		ldr	r2, .L777+16
 18783 005e 1D46     		mov	r5, r3
 18784 0060 1446     		mov	r4, r2
 18785 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18786 0064 2860     		str	r0, [r5]	@ unaligned
 18787 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18788 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18789 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18790 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18791 006e A278     		ldrb	r2, [r4, #2]
 18792 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18793 0072 1346     		mov	r3, r2
 18794 0074 AB74     		strb	r3, [r5, #18]
2455:..\src/command_processing.c ****             break;
 18795              		.loc 1 2455 0
 18796 0076 11E0     		b	.L713
 18797              	.L715:
2456:..\src/command_processing.c ****         case LEFT_HAND:
2457:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18798              		.loc 1 2457 0
 18799 0078 7869     		ldr	r0, [r7, #20]
 18800 007a FFF7FEFF 		bl	strlen
 18801 007e 0346     		mov	r3, r0
 18802 0080 1A46     		mov	r2, r3
 18803 0082 7B69     		ldr	r3, [r7, #20]
 18804 0084 1344     		add	r3, r3, r2
 18805 0086 914A     		ldr	r2, .L777+20
 18806 0088 1D46     		mov	r5, r3
 18807 008a 1446     		mov	r4, r2
 18808 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18809 008e 2860     		str	r0, [r5]	@ unaligned
 18810 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18811 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18812 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18813 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18814 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2458:..\src/command_processing.c ****             break;
 18815              		.loc 1 2458 0
 18816 009a 00BF     		nop
 18817              	.L713:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 416


2459:..\src/command_processing.c ****     }
2460:..\src/command_processing.c **** 
2461:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18818              		.loc 1 2461 0
 18819 009c D7F88C30 		ldr	r3, [r7, #140]
 18820 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18821 00a4 1A46     		mov	r2, r3
 18822 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18823 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18824 00ae 1946     		mov	r1, r3
 18825 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18826 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18827 00b8 07F11C00 		add	r0, r7, #28
 18828 00bc 0093     		str	r3, [sp]
 18829 00be 0B46     		mov	r3, r1
 18830 00c0 8349     		ldr	r1, .L777+24
 18831 00c2 FFF7FEFF 		bl	sprintf
2462:..\src/command_processing.c ****     strcat(info_string, str);
 18832              		.loc 1 2462 0
 18833 00c6 07F11C03 		add	r3, r7, #28
 18834 00ca 1946     		mov	r1, r3
 18835 00cc 7869     		ldr	r0, [r7, #20]
 18836 00ce FFF7FEFF 		bl	strcat
2463:..\src/command_processing.c ****     
2464:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18837              		.loc 1 2464 0
 18838 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18839 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18840 00da 1A46     		mov	r2, r3
 18841 00dc D7F88C30 		ldr	r3, [r7, #140]
 18842 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18843 00e4 1946     		mov	r1, r3
 18844 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18845 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18846 00ee 07F11C00 		add	r0, r7, #28
 18847 00f2 0093     		str	r3, [sp]
 18848 00f4 0B46     		mov	r3, r1
 18849 00f6 7749     		ldr	r1, .L777+28
 18850 00f8 FFF7FEFF 		bl	sprintf
2465:..\src/command_processing.c ****     strcat(info_string, str);
 18851              		.loc 1 2465 0
 18852 00fc 07F11C03 		add	r3, r7, #28
 18853 0100 1946     		mov	r1, r3
 18854 0102 7869     		ldr	r0, [r7, #20]
 18855 0104 FFF7FEFF 		bl	strcat
 18856              	.LBB23:
2466:..\src/command_processing.c ****     
2467:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18857              		.loc 1 2467 0
 18858 0108 0023     		movs	r3, #0
 18859 010a 87F89330 		strb	r3, [r7, #147]
 18860 010e 00F05CBE 		b	.L716
 18861              	.L760:
 18862              	.LBB24:
2468:..\src/command_processing.c ****             
2469:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18863              		.loc 1 2469 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 417


 18864 0112 97F89330 		ldrb	r3, [r7, #147]
 18865 0116 87F88B30 		strb	r3, [r7, #139]
2470:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18866              		.loc 1 2470 0
 18867 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18868 011e 1346     		mov	r3, r2
 18869 0120 DB00     		lsls	r3, r3, #3
 18870 0122 9B1A     		subs	r3, r3, r2
 18871 0124 1B01     		lsls	r3, r3, #4
 18872 0126 B033     		adds	r3, r3, #176
 18873 0128 D7F88C20 		ldr	r2, [r7, #140]
 18874 012c 1344     		add	r3, r3, r2
 18875 012e C7F88430 		str	r3, [r7, #132]
2471:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18876              		.loc 1 2471 0
 18877 0132 D7F88430 		ldr	r3, [r7, #132]
 18878 0136 93F86030 		ldrb	r3, [r3, #96]
 18879 013a 87F88330 		strb	r3, [r7, #131]
2472:..\src/command_processing.c ****               
2473:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18880              		.loc 1 2473 0
 18881 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18882 0142 5A1C     		adds	r2, r3, #1
 18883 0144 07F11C03 		add	r3, r7, #28
 18884 0148 6349     		ldr	r1, .L777+32
 18885 014a 1846     		mov	r0, r3
 18886 014c FFF7FEFF 		bl	sprintf
2474:..\src/command_processing.c ****         strcat(info_string, str);
 18887              		.loc 1 2474 0
 18888 0150 07F11C03 		add	r3, r7, #28
 18889 0154 1946     		mov	r1, r3
 18890 0156 7869     		ldr	r0, [r7, #20]
 18891 0158 FFF7FEFF 		bl	strcat
2475:..\src/command_processing.c ****                     
2476:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18892              		.loc 1 2476 0
 18893 015c 7869     		ldr	r0, [r7, #20]
 18894 015e FFF7FEFF 		bl	strlen
 18895 0162 0346     		mov	r3, r0
 18896 0164 1A46     		mov	r2, r3
 18897 0166 7B69     		ldr	r3, [r7, #20]
 18898 0168 1344     		add	r3, r3, r2
 18899 016a 5C4A     		ldr	r2, .L777+36
 18900 016c 1D46     		mov	r5, r3
 18901 016e 1446     		mov	r4, r2
 18902 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18903 0172 2860     		str	r0, [r5]	@ unaligned
 18904 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18905 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18906 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18907 017a 03CC     		ldmia	r4!, {r0, r1}
 18908 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18909 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18910 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18911 0182 A278     		ldrb	r2, [r4, #2]
 18912 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18913 0186 1346     		mov	r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 418


 18914 0188 AB76     		strb	r3, [r5, #26]
2477:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18915              		.loc 1 2477 0
 18916 018a D7F88430 		ldr	r3, [r7, #132]
 18917 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18918 0192 012B     		cmp	r3, #1
 18919 0194 0CD1     		bne	.L717
2478:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18920              		.loc 1 2478 0
 18921 0196 7869     		ldr	r0, [r7, #20]
 18922 0198 FFF7FEFF 		bl	strlen
 18923 019c 0346     		mov	r3, r0
 18924 019e 1A46     		mov	r2, r3
 18925 01a0 7B69     		ldr	r3, [r7, #20]
 18926 01a2 1344     		add	r3, r3, r2
 18927 01a4 4E4A     		ldr	r2, .L777+40
 18928 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18929 01a8 1860     		str	r0, [r3]	@ unaligned
 18930 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18931 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18932 01ae 0BE0     		b	.L718
 18933              	.L717:
2479:..\src/command_processing.c ****         else
2480:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18934              		.loc 1 2480 0
 18935 01b0 7869     		ldr	r0, [r7, #20]
 18936 01b2 FFF7FEFF 		bl	strlen
 18937 01b6 0346     		mov	r3, r0
 18938 01b8 1A46     		mov	r2, r3
 18939 01ba 7B69     		ldr	r3, [r7, #20]
 18940 01bc 1344     		add	r3, r3, r2
 18941 01be 494A     		ldr	r2, .L777+44
 18942 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18943 01c2 1860     		str	r0, [r3]	@ unaligned
 18944 01c4 1279     		ldrb	r2, [r2, #4]
 18945 01c6 1A71     		strb	r2, [r3, #4]
 18946              	.L718:
2481:..\src/command_processing.c ****         
2482:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18947              		.loc 1 2482 0
 18948 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18949 01cc 464A     		ldr	r2, .L777+48
 18950 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 18951 01d0 1A46     		mov	r2, r3
 18952 01d2 07F11C03 		add	r3, r7, #28
 18953 01d6 4549     		ldr	r1, .L777+52
 18954 01d8 1846     		mov	r0, r3
 18955 01da FFF7FEFF 		bl	sprintf
2483:..\src/command_processing.c ****         strcat(info_string, str);
 18956              		.loc 1 2483 0
 18957 01de 07F11C03 		add	r3, r7, #28
 18958 01e2 1946     		mov	r1, r3
 18959 01e4 7869     		ldr	r0, [r7, #20]
 18960 01e6 FFF7FEFF 		bl	strcat
2484:..\src/command_processing.c **** 
2485:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18961              		.loc 1 2485 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 419


 18962 01ea 7869     		ldr	r0, [r7, #20]
 18963 01ec FFF7FEFF 		bl	strlen
 18964 01f0 0346     		mov	r3, r0
 18965 01f2 1A46     		mov	r2, r3
 18966 01f4 7B69     		ldr	r3, [r7, #20]
 18967 01f6 1344     		add	r3, r3, r2
 18968 01f8 3D4A     		ldr	r2, .L777+56
 18969 01fa 1C46     		mov	r4, r3
 18970 01fc 1346     		mov	r3, r2
 18971 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 18972 0200 2060     		str	r0, [r4]	@ unaligned
 18973 0202 6160     		str	r1, [r4, #4]	@ unaligned
 18974 0204 A260     		str	r2, [r4, #8]	@ unaligned
 18975 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 18976 0208 9B78     		ldrb	r3, [r3, #2]
 18977 020a A281     		strh	r2, [r4, #12]	@ unaligned
 18978 020c A373     		strb	r3, [r4, #14]
2486:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18979              		.loc 1 2486 0
 18980 020e D7F88430 		ldr	r3, [r7, #132]
 18981 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18982 0216 032B     		cmp	r3, #3
 18983 0218 74D0     		beq	.L719
2487:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18984              		.loc 1 2487 0
 18985 021a D7F88430 		ldr	r3, [r7, #132]
 18986 021e 1B68     		ldr	r3, [r3]
 18987 0220 1846     		mov	r0, r3
 18988 0222 FFF7FEFF 		bl	__aeabi_i2d
 18989 0226 4FF00002 		mov	r2, #0
 18990 022a 324B     		ldr	r3, .L777+60
 18991 022c FFF7FEFF 		bl	__aeabi_ddiv
 18992 0230 0346     		mov	r3, r0
 18993 0232 0C46     		mov	r4, r1
 18994 0234 07F11C00 		add	r0, r7, #28
 18995 0238 1A46     		mov	r2, r3
 18996 023a 2346     		mov	r3, r4
 18997 023c 2E49     		ldr	r1, .L777+64
 18998 023e FFF7FEFF 		bl	sprintf
2488:..\src/command_processing.c ****             strcat(info_string, str);
 18999              		.loc 1 2488 0
 19000 0242 07F11C03 		add	r3, r7, #28
 19001 0246 1946     		mov	r1, r3
 19002 0248 7869     		ldr	r0, [r7, #20]
 19003 024a FFF7FEFF 		bl	strcat
2489:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 19004              		.loc 1 2489 0
 19005 024e D7F88430 		ldr	r3, [r7, #132]
 19006 0252 5B68     		ldr	r3, [r3, #4]
 19007 0254 1846     		mov	r0, r3
 19008 0256 FFF7FEFF 		bl	__aeabi_i2d
 19009 025a 4FF00002 		mov	r2, #0
 19010 025e 254B     		ldr	r3, .L777+60
 19011 0260 FFF7FEFF 		bl	__aeabi_ddiv
 19012 0264 0346     		mov	r3, r0
 19013 0266 0C46     		mov	r4, r1
 19014 0268 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 420


 19015 026c 1A46     		mov	r2, r3
 19016 026e 2346     		mov	r3, r4
 19017 0270 2249     		ldr	r1, .L777+68
 19018 0272 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****             strcat(info_string, str);
 19019              		.loc 1 2490 0
 19020 0276 07F11C03 		add	r3, r7, #28
 19021 027a 1946     		mov	r1, r3
 19022 027c 7869     		ldr	r0, [r7, #20]
 19023 027e FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 19024              		.loc 1 2491 0
 19025 0282 D7F88430 		ldr	r3, [r7, #132]
 19026 0286 9B68     		ldr	r3, [r3, #8]
 19027 0288 1846     		mov	r0, r3
 19028 028a FFF7FEFF 		bl	__aeabi_i2d
 19029 028e 4FF00002 		mov	r2, #0
 19030 0292 184B     		ldr	r3, .L777+60
 19031 0294 FFF7FEFF 		bl	__aeabi_ddiv
 19032 0298 0346     		mov	r3, r0
 19033 029a 0C46     		mov	r4, r1
 19034 029c 07F11C00 		add	r0, r7, #28
 19035 02a0 1A46     		mov	r2, r3
 19036 02a2 2346     		mov	r3, r4
 19037 02a4 1649     		ldr	r1, .L777+72
 19038 02a6 FFF7FEFF 		bl	sprintf
2492:..\src/command_processing.c ****             strcat(info_string, str);
 19039              		.loc 1 2492 0
 19040 02aa 07F11C03 		add	r3, r7, #28
 19041 02ae 1946     		mov	r1, r3
 19042 02b0 7869     		ldr	r0, [r7, #20]
 19043 02b2 FFF7FEFF 		bl	strcat
 19044 02b6 73E0     		b	.L720
 19045              	.L778:
 19046              		.align	2
 19047              	.L777:
 19048 02b8 00000000 		.word	g_mem
 19049 02bc 48110000 		.word	.LC153
 19050 02c0 AC1D0000 		.word	.LC283
 19051 02c4 84110000 		.word	.LC156
 19052 02c8 34120000 		.word	.LC162
 19053 02cc 48120000 		.word	.LC163
 19054 02d0 F01B0000 		.word	.LC271
 19055 02d4 1C1C0000 		.word	.LC272
 19056 02d8 94120000 		.word	.LC167
 19057 02dc 04130000 		.word	.LC176
 19058 02e0 F4120000 		.word	.LC174
 19059 02e4 FC120000 		.word	.LC175
 19060 02e8 00000000 		.word	dev_pwm_limit
 19061 02ec 2C130000 		.word	.LC179
 19062 02f0 C41D0000 		.word	.LC284
 19063 02f4 0000F040 		.word	1089470464
 19064 02f8 44140000 		.word	.LC191
 19065 02fc 50140000 		.word	.LC192
 19066 0300 5C140000 		.word	.LC193
 19067              	.L719:
2493:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 421


2494:..\src/command_processing.c ****         else { 
2495:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 19068              		.loc 1 2495 0
 19069 0304 D7F88430 		ldr	r3, [r7, #132]
 19070 0308 9B69     		ldr	r3, [r3, #24]
 19071 030a 1846     		mov	r0, r3
 19072 030c FFF7FEFF 		bl	__aeabi_i2d
 19073 0310 4FF00002 		mov	r2, #0
 19074 0314 CC4B     		ldr	r3, .L779
 19075 0316 FFF7FEFF 		bl	__aeabi_ddiv
 19076 031a 0346     		mov	r3, r0
 19077 031c 0C46     		mov	r4, r1
 19078 031e 07F11C00 		add	r0, r7, #28
 19079 0322 1A46     		mov	r2, r3
 19080 0324 2346     		mov	r3, r4
 19081 0326 C949     		ldr	r1, .L779+4
 19082 0328 FFF7FEFF 		bl	sprintf
2496:..\src/command_processing.c ****             strcat(info_string, str);
 19083              		.loc 1 2496 0
 19084 032c 07F11C03 		add	r3, r7, #28
 19085 0330 1946     		mov	r1, r3
 19086 0332 7869     		ldr	r0, [r7, #20]
 19087 0334 FFF7FEFF 		bl	strcat
2497:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 19088              		.loc 1 2497 0
 19089 0338 D7F88430 		ldr	r3, [r7, #132]
 19090 033c DB69     		ldr	r3, [r3, #28]
 19091 033e 1846     		mov	r0, r3
 19092 0340 FFF7FEFF 		bl	__aeabi_i2d
 19093 0344 4FF00002 		mov	r2, #0
 19094 0348 BF4B     		ldr	r3, .L779
 19095 034a FFF7FEFF 		bl	__aeabi_ddiv
 19096 034e 0346     		mov	r3, r0
 19097 0350 0C46     		mov	r4, r1
 19098 0352 07F11C00 		add	r0, r7, #28
 19099 0356 1A46     		mov	r2, r3
 19100 0358 2346     		mov	r3, r4
 19101 035a BD49     		ldr	r1, .L779+8
 19102 035c FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****             strcat(info_string, str);
 19103              		.loc 1 2498 0
 19104 0360 07F11C03 		add	r3, r7, #28
 19105 0364 1946     		mov	r1, r3
 19106 0366 7869     		ldr	r0, [r7, #20]
 19107 0368 FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 19108              		.loc 1 2499 0
 19109 036c D7F88430 		ldr	r3, [r7, #132]
 19110 0370 1B6A     		ldr	r3, [r3, #32]
 19111 0372 1846     		mov	r0, r3
 19112 0374 FFF7FEFF 		bl	__aeabi_i2d
 19113 0378 4FF00002 		mov	r2, #0
 19114 037c B24B     		ldr	r3, .L779
 19115 037e FFF7FEFF 		bl	__aeabi_ddiv
 19116 0382 0346     		mov	r3, r0
 19117 0384 0C46     		mov	r4, r1
 19118 0386 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 422


 19119 038a 1A46     		mov	r2, r3
 19120 038c 2346     		mov	r3, r4
 19121 038e B149     		ldr	r1, .L779+12
 19122 0390 FFF7FEFF 		bl	sprintf
2500:..\src/command_processing.c ****             strcat(info_string, str);
 19123              		.loc 1 2500 0
 19124 0394 07F11C03 		add	r3, r7, #28
 19125 0398 1946     		mov	r1, r3
 19126 039a 7869     		ldr	r0, [r7, #20]
 19127 039c FFF7FEFF 		bl	strcat
 19128              	.L720:
2501:..\src/command_processing.c ****         }
2502:..\src/command_processing.c **** 
2503:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 19129              		.loc 1 2503 0
 19130 03a0 7869     		ldr	r0, [r7, #20]
 19131 03a2 FFF7FEFF 		bl	strlen
 19132 03a6 0346     		mov	r3, r0
 19133 03a8 1A46     		mov	r2, r3
 19134 03aa 7B69     		ldr	r3, [r7, #20]
 19135 03ac 1344     		add	r3, r3, r2
 19136 03ae AA4A     		ldr	r2, .L779+16
 19137 03b0 1C46     		mov	r4, r3
 19138 03b2 1346     		mov	r3, r2
 19139 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 19140 03b6 2060     		str	r0, [r4]	@ unaligned
 19141 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 19142 03ba A260     		str	r2, [r4, #8]	@ unaligned
 19143 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 19144 03be A381     		strh	r3, [r4, #12]	@ unaligned
2504:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 19145              		.loc 1 2504 0
 19146 03c0 D7F88430 		ldr	r3, [r7, #132]
 19147 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19148 03c8 032B     		cmp	r3, #3
 19149 03ca 4ED0     		beq	.L721
2505:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 19150              		.loc 1 2505 0
 19151 03cc D7F88430 		ldr	r3, [r7, #132]
 19152 03d0 DB68     		ldr	r3, [r3, #12]
 19153 03d2 1846     		mov	r0, r3
 19154 03d4 FFF7FEFF 		bl	__aeabi_i2d
 19155 03d8 4FF00002 		mov	r2, #0
 19156 03dc 9A4B     		ldr	r3, .L779
 19157 03de FFF7FEFF 		bl	__aeabi_ddiv
 19158 03e2 0346     		mov	r3, r0
 19159 03e4 0C46     		mov	r4, r1
 19160 03e6 07F11C00 		add	r0, r7, #28
 19161 03ea 1A46     		mov	r2, r3
 19162 03ec 2346     		mov	r3, r4
 19163 03ee 9749     		ldr	r1, .L779+4
 19164 03f0 FFF7FEFF 		bl	sprintf
2506:..\src/command_processing.c ****             strcat(info_string, str);
 19165              		.loc 1 2506 0
 19166 03f4 07F11C03 		add	r3, r7, #28
 19167 03f8 1946     		mov	r1, r3
 19168 03fa 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 423


 19169 03fc FFF7FEFF 		bl	strcat
2507:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19170              		.loc 1 2507 0
 19171 0400 D7F88430 		ldr	r3, [r7, #132]
 19172 0404 1B69     		ldr	r3, [r3, #16]
 19173 0406 1846     		mov	r0, r3
 19174 0408 FFF7FEFF 		bl	__aeabi_i2d
 19175 040c 4FF00002 		mov	r2, #0
 19176 0410 8D4B     		ldr	r3, .L779
 19177 0412 FFF7FEFF 		bl	__aeabi_ddiv
 19178 0416 0346     		mov	r3, r0
 19179 0418 0C46     		mov	r4, r1
 19180 041a 07F11C00 		add	r0, r7, #28
 19181 041e 1A46     		mov	r2, r3
 19182 0420 2346     		mov	r3, r4
 19183 0422 8B49     		ldr	r1, .L779+8
 19184 0424 FFF7FEFF 		bl	sprintf
2508:..\src/command_processing.c ****             strcat(info_string, str);
 19185              		.loc 1 2508 0
 19186 0428 07F11C03 		add	r3, r7, #28
 19187 042c 1946     		mov	r1, r3
 19188 042e 7869     		ldr	r0, [r7, #20]
 19189 0430 FFF7FEFF 		bl	strcat
2509:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19190              		.loc 1 2509 0
 19191 0434 D7F88430 		ldr	r3, [r7, #132]
 19192 0438 5B69     		ldr	r3, [r3, #20]
 19193 043a 1846     		mov	r0, r3
 19194 043c FFF7FEFF 		bl	__aeabi_i2d
 19195 0440 4FF00002 		mov	r2, #0
 19196 0444 804B     		ldr	r3, .L779
 19197 0446 FFF7FEFF 		bl	__aeabi_ddiv
 19198 044a 0346     		mov	r3, r0
 19199 044c 0C46     		mov	r4, r1
 19200 044e 07F11C00 		add	r0, r7, #28
 19201 0452 1A46     		mov	r2, r3
 19202 0454 2346     		mov	r3, r4
 19203 0456 7F49     		ldr	r1, .L779+12
 19204 0458 FFF7FEFF 		bl	sprintf
2510:..\src/command_processing.c ****             strcat(info_string, str);
 19205              		.loc 1 2510 0
 19206 045c 07F11C03 		add	r3, r7, #28
 19207 0460 1946     		mov	r1, r3
 19208 0462 7869     		ldr	r0, [r7, #20]
 19209 0464 FFF7FEFF 		bl	strcat
 19210 0468 4DE0     		b	.L722
 19211              	.L721:
2511:..\src/command_processing.c **** 
2512:..\src/command_processing.c ****         }
2513:..\src/command_processing.c ****         else {
2514:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19212              		.loc 1 2514 0
 19213 046a D7F88430 		ldr	r3, [r7, #132]
 19214 046e 5B6A     		ldr	r3, [r3, #36]
 19215 0470 1846     		mov	r0, r3
 19216 0472 FFF7FEFF 		bl	__aeabi_i2d
 19217 0476 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 424


 19218 047a 734B     		ldr	r3, .L779
 19219 047c FFF7FEFF 		bl	__aeabi_ddiv
 19220 0480 0346     		mov	r3, r0
 19221 0482 0C46     		mov	r4, r1
 19222 0484 07F11C00 		add	r0, r7, #28
 19223 0488 1A46     		mov	r2, r3
 19224 048a 2346     		mov	r3, r4
 19225 048c 6F49     		ldr	r1, .L779+4
 19226 048e FFF7FEFF 		bl	sprintf
2515:..\src/command_processing.c ****             strcat(info_string, str);
 19227              		.loc 1 2515 0
 19228 0492 07F11C03 		add	r3, r7, #28
 19229 0496 1946     		mov	r1, r3
 19230 0498 7869     		ldr	r0, [r7, #20]
 19231 049a FFF7FEFF 		bl	strcat
2516:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19232              		.loc 1 2516 0
 19233 049e D7F88430 		ldr	r3, [r7, #132]
 19234 04a2 9B6A     		ldr	r3, [r3, #40]
 19235 04a4 1846     		mov	r0, r3
 19236 04a6 FFF7FEFF 		bl	__aeabi_i2d
 19237 04aa 4FF00002 		mov	r2, #0
 19238 04ae 664B     		ldr	r3, .L779
 19239 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 19240 04b4 0346     		mov	r3, r0
 19241 04b6 0C46     		mov	r4, r1
 19242 04b8 07F11C00 		add	r0, r7, #28
 19243 04bc 1A46     		mov	r2, r3
 19244 04be 2346     		mov	r3, r4
 19245 04c0 6349     		ldr	r1, .L779+8
 19246 04c2 FFF7FEFF 		bl	sprintf
2517:..\src/command_processing.c ****             strcat(info_string, str);
 19247              		.loc 1 2517 0
 19248 04c6 07F11C03 		add	r3, r7, #28
 19249 04ca 1946     		mov	r1, r3
 19250 04cc 7869     		ldr	r0, [r7, #20]
 19251 04ce FFF7FEFF 		bl	strcat
2518:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19252              		.loc 1 2518 0
 19253 04d2 D7F88430 		ldr	r3, [r7, #132]
 19254 04d6 DB6A     		ldr	r3, [r3, #44]
 19255 04d8 1846     		mov	r0, r3
 19256 04da FFF7FEFF 		bl	__aeabi_i2d
 19257 04de 4FF00002 		mov	r2, #0
 19258 04e2 594B     		ldr	r3, .L779
 19259 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 19260 04e8 0346     		mov	r3, r0
 19261 04ea 0C46     		mov	r4, r1
 19262 04ec 07F11C00 		add	r0, r7, #28
 19263 04f0 1A46     		mov	r2, r3
 19264 04f2 2346     		mov	r3, r4
 19265 04f4 5749     		ldr	r1, .L779+12
 19266 04f6 FFF7FEFF 		bl	sprintf
2519:..\src/command_processing.c ****             strcat(info_string, str);
 19267              		.loc 1 2519 0
 19268 04fa 07F11C03 		add	r3, r7, #28
 19269 04fe 1946     		mov	r1, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 425


 19270 0500 7869     		ldr	r0, [r7, #20]
 19271 0502 FFF7FEFF 		bl	strcat
 19272              	.L722:
2520:..\src/command_processing.c ****         }
2521:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19273              		.loc 1 2521 0
 19274 0506 D7F88430 		ldr	r3, [r7, #132]
 19275 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19276 050e 012B     		cmp	r3, #1
 19277 0510 14D1     		bne	.L723
2522:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19278              		.loc 1 2522 0
 19279 0512 7869     		ldr	r0, [r7, #20]
 19280 0514 FFF7FEFF 		bl	strlen
 19281 0518 0346     		mov	r3, r0
 19282 051a 1A46     		mov	r2, r3
 19283 051c 7B69     		ldr	r3, [r7, #20]
 19284 051e 1344     		add	r3, r3, r2
 19285 0520 4E4A     		ldr	r2, .L779+20
 19286 0522 1D46     		mov	r5, r3
 19287 0524 1446     		mov	r4, r2
 19288 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19289 0528 2860     		str	r0, [r5]	@ unaligned
 19290 052a 6960     		str	r1, [r5, #4]	@ unaligned
 19291 052c AA60     		str	r2, [r5, #8]	@ unaligned
 19292 052e EB60     		str	r3, [r5, #12]	@ unaligned
 19293 0530 03CC     		ldmia	r4!, {r0, r1}
 19294 0532 2861     		str	r0, [r5, #16]	@ unaligned
 19295 0534 6961     		str	r1, [r5, #20]	@ unaligned
 19296 0536 2388     		ldrh	r3, [r4]	@ unaligned
 19297 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 19298 053a 13E0     		b	.L724
 19299              	.L723:
2523:..\src/command_processing.c ****         else
2524:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19300              		.loc 1 2524 0
 19301 053c 7869     		ldr	r0, [r7, #20]
 19302 053e FFF7FEFF 		bl	strlen
 19303 0542 0346     		mov	r3, r0
 19304 0544 1A46     		mov	r2, r3
 19305 0546 7B69     		ldr	r3, [r7, #20]
 19306 0548 1344     		add	r3, r3, r2
 19307 054a 454A     		ldr	r2, .L779+24
 19308 054c 1D46     		mov	r5, r3
 19309 054e 1446     		mov	r4, r2
 19310 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19311 0552 2860     		str	r0, [r5]	@ unaligned
 19312 0554 6960     		str	r1, [r5, #4]	@ unaligned
 19313 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 19314 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 19315 055a 03CC     		ldmia	r4!, {r0, r1}
 19316 055c 2861     		str	r0, [r5, #16]	@ unaligned
 19317 055e 6961     		str	r1, [r5, #20]	@ unaligned
 19318 0560 2378     		ldrb	r3, [r4]
 19319 0562 2B76     		strb	r3, [r5, #24]
 19320              	.L724:
2525:..\src/command_processing.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 426


2526:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19321              		.loc 1 2526 0
 19322 0564 D7F88430 		ldr	r3, [r7, #132]
 19323 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19324 056c 072B     		cmp	r3, #7
 19325 056e 00F2EA80 		bhi	.L725
 19326 0572 01A2     		adr	r2, .L727
 19327 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19328              		.p2align 2
 19329              	.L727:
 19330 0578 99050000 		.word	.L726+1
 19331 057c BD050000 		.word	.L728+1
 19332 0580 E5050000 		.word	.L729+1
 19333 0584 17060000 		.word	.L730+1
 19334 0588 75060000 		.word	.L731+1
 19335 058c A3060000 		.word	.L732+1
 19336 0590 D3060000 		.word	.L733+1
 19337 0594 01070000 		.word	.L734+1
 19338              		.p2align 1
 19339              	.L726:
2527:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2528:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19340              		.loc 1 2528 0
 19341 0598 7869     		ldr	r0, [r7, #20]
 19342 059a FFF7FEFF 		bl	strlen
 19343 059e 0346     		mov	r3, r0
 19344 05a0 1A46     		mov	r2, r3
 19345 05a2 7B69     		ldr	r3, [r7, #20]
 19346 05a4 1344     		add	r3, r3, r2
 19347 05a6 2F4A     		ldr	r2, .L779+28
 19348 05a8 1D46     		mov	r5, r3
 19349 05aa 1446     		mov	r4, r2
 19350 05ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19351 05ae 2860     		str	r0, [r5]	@ unaligned
 19352 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 19353 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 19354 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 19355 05b6 2388     		ldrh	r3, [r4]	@ unaligned
 19356 05b8 2B82     		strh	r3, [r5, #16]	@ unaligned
2529:..\src/command_processing.c ****                 break;
 19357              		.loc 1 2529 0
 19358 05ba C4E0     		b	.L725
 19359              	.L728:
2530:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2531:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19360              		.loc 1 2531 0
 19361 05bc 7869     		ldr	r0, [r7, #20]
 19362 05be FFF7FEFF 		bl	strlen
 19363 05c2 0346     		mov	r3, r0
 19364 05c4 1A46     		mov	r2, r3
 19365 05c6 7B69     		ldr	r3, [r7, #20]
 19366 05c8 1344     		add	r3, r3, r2
 19367 05ca 274A     		ldr	r2, .L779+32
 19368 05cc 1D46     		mov	r5, r3
 19369 05ce 1446     		mov	r4, r2
 19370 05d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19371 05d2 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 427


 19372 05d4 6960     		str	r1, [r5, #4]	@ unaligned
 19373 05d6 AA60     		str	r2, [r5, #8]	@ unaligned
 19374 05d8 EB60     		str	r3, [r5, #12]	@ unaligned
 19375 05da 2068     		ldr	r0, [r4]	@ unaligned
 19376 05dc 2861     		str	r0, [r5, #16]	@ unaligned
 19377 05de 2379     		ldrb	r3, [r4, #4]
 19378 05e0 2B75     		strb	r3, [r5, #20]
2532:..\src/command_processing.c ****                 break;
 19379              		.loc 1 2532 0
 19380 05e2 B0E0     		b	.L725
 19381              	.L729:
2533:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2534:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19382              		.loc 1 2534 0
 19383 05e4 7869     		ldr	r0, [r7, #20]
 19384 05e6 FFF7FEFF 		bl	strlen
 19385 05ea 0346     		mov	r3, r0
 19386 05ec 1A46     		mov	r2, r3
 19387 05ee 7B69     		ldr	r3, [r7, #20]
 19388 05f0 1344     		add	r3, r3, r2
 19389 05f2 1E4A     		ldr	r2, .L779+36
 19390 05f4 1D46     		mov	r5, r3
 19391 05f6 1446     		mov	r4, r2
 19392 05f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19393 05fa 2860     		str	r0, [r5]	@ unaligned
 19394 05fc 6960     		str	r1, [r5, #4]	@ unaligned
 19395 05fe AA60     		str	r2, [r5, #8]	@ unaligned
 19396 0600 EB60     		str	r3, [r5, #12]	@ unaligned
 19397 0602 07CC     		ldmia	r4!, {r0, r1, r2}
 19398 0604 2861     		str	r0, [r5, #16]	@ unaligned
 19399 0606 6961     		str	r1, [r5, #20]	@ unaligned
 19400 0608 AA61     		str	r2, [r5, #24]	@ unaligned
 19401 060a 2388     		ldrh	r3, [r4]	@ unaligned
 19402 060c A278     		ldrb	r2, [r4, #2]
 19403 060e AB83     		strh	r3, [r5, #28]	@ unaligned
 19404 0610 1346     		mov	r3, r2
 19405 0612 AB77     		strb	r3, [r5, #30]
2535:..\src/command_processing.c ****                 break;
 19406              		.loc 1 2535 0
 19407 0614 97E0     		b	.L725
 19408              	.L730:
2536:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2537:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19409              		.loc 1 2537 0
 19410 0616 7869     		ldr	r0, [r7, #20]
 19411 0618 FFF7FEFF 		bl	strlen
 19412 061c 0346     		mov	r3, r0
 19413 061e 1A46     		mov	r2, r3
 19414 0620 7B69     		ldr	r3, [r7, #20]
 19415 0622 1344     		add	r3, r3, r2
 19416 0624 124A     		ldr	r2, .L779+40
 19417 0626 1D46     		mov	r5, r3
 19418 0628 1446     		mov	r4, r2
 19419 062a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19420 062c 2860     		str	r0, [r5]	@ unaligned
 19421 062e 6960     		str	r1, [r5, #4]	@ unaligned
 19422 0630 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 428


 19423 0632 EB60     		str	r3, [r5, #12]	@ unaligned
 19424 0634 03CC     		ldmia	r4!, {r0, r1}
 19425 0636 2861     		str	r0, [r5, #16]	@ unaligned
 19426 0638 6961     		str	r1, [r5, #20]	@ unaligned
 19427 063a 2388     		ldrh	r3, [r4]	@ unaligned
 19428 063c A278     		ldrb	r2, [r4, #2]
 19429 063e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19430 0640 1346     		mov	r3, r2
 19431 0642 AB76     		strb	r3, [r5, #26]
2538:..\src/command_processing.c ****                 break;
 19432              		.loc 1 2538 0
 19433 0644 7FE0     		b	.L725
 19434              	.L780:
 19435 0646 00BF     		.align	2
 19436              	.L779:
 19437 0648 0000F040 		.word	1089470464
 19438 064c 44140000 		.word	.LC191
 19439 0650 50140000 		.word	.LC192
 19440 0654 5C140000 		.word	.LC193
 19441 0658 D41D0000 		.word	.LC285
 19442 065c 84140000 		.word	.LC195
 19443 0660 A0140000 		.word	.LC196
 19444 0664 BC140000 		.word	.LC197
 19445 0668 D0140000 		.word	.LC198
 19446 066c E8140000 		.word	.LC199
 19447 0670 08150000 		.word	.LC200
 19448              	.L731:
2539:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2540:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19449              		.loc 1 2540 0
 19450 0674 7869     		ldr	r0, [r7, #20]
 19451 0676 FFF7FEFF 		bl	strlen
 19452 067a 0346     		mov	r3, r0
 19453 067c 1A46     		mov	r2, r3
 19454 067e 7B69     		ldr	r3, [r7, #20]
 19455 0680 1344     		add	r3, r3, r2
 19456 0682 BA4A     		ldr	r2, .L781
 19457 0684 1C46     		mov	r4, r3
 19458 0686 1546     		mov	r5, r2
 19459 0688 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19460 068a 2060     		str	r0, [r4]	@ unaligned
 19461 068c 6160     		str	r1, [r4, #4]	@ unaligned
 19462 068e A260     		str	r2, [r4, #8]	@ unaligned
 19463 0690 E360     		str	r3, [r4, #12]	@ unaligned
 19464 0692 2868     		ldr	r0, [r5]	@ unaligned
 19465 0694 2061     		str	r0, [r4, #16]	@ unaligned
 19466 0696 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19467 0698 AA79     		ldrb	r2, [r5, #6]
 19468 069a A382     		strh	r3, [r4, #20]	@ unaligned
 19469 069c 1346     		mov	r3, r2
 19470 069e A375     		strb	r3, [r4, #22]
2541:..\src/command_processing.c ****                 break;
 19471              		.loc 1 2541 0
 19472 06a0 51E0     		b	.L725
 19473              	.L732:
2542:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2543:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 429


 19474              		.loc 1 2543 0
 19475 06a2 7869     		ldr	r0, [r7, #20]
 19476 06a4 FFF7FEFF 		bl	strlen
 19477 06a8 0346     		mov	r3, r0
 19478 06aa 1A46     		mov	r2, r3
 19479 06ac 7B69     		ldr	r3, [r7, #20]
 19480 06ae 1344     		add	r3, r3, r2
 19481 06b0 AF4A     		ldr	r2, .L781+4
 19482 06b2 1D46     		mov	r5, r3
 19483 06b4 1446     		mov	r4, r2
 19484 06b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19485 06b8 2860     		str	r0, [r5]	@ unaligned
 19486 06ba 6960     		str	r1, [r5, #4]	@ unaligned
 19487 06bc AA60     		str	r2, [r5, #8]	@ unaligned
 19488 06be EB60     		str	r3, [r5, #12]	@ unaligned
 19489 06c0 03CC     		ldmia	r4!, {r0, r1}
 19490 06c2 2861     		str	r0, [r5, #16]	@ unaligned
 19491 06c4 6961     		str	r1, [r5, #20]	@ unaligned
 19492 06c6 2388     		ldrh	r3, [r4]	@ unaligned
 19493 06c8 A278     		ldrb	r2, [r4, #2]
 19494 06ca 2B83     		strh	r3, [r5, #24]	@ unaligned
 19495 06cc 1346     		mov	r3, r2
 19496 06ce AB76     		strb	r3, [r5, #26]
2544:..\src/command_processing.c ****                 break;
 19497              		.loc 1 2544 0
 19498 06d0 39E0     		b	.L725
 19499              	.L733:
2545:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2546:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19500              		.loc 1 2546 0
 19501 06d2 7869     		ldr	r0, [r7, #20]
 19502 06d4 FFF7FEFF 		bl	strlen
 19503 06d8 0346     		mov	r3, r0
 19504 06da 1A46     		mov	r2, r3
 19505 06dc 7B69     		ldr	r3, [r7, #20]
 19506 06de 1344     		add	r3, r3, r2
 19507 06e0 A44A     		ldr	r2, .L781+8
 19508 06e2 1C46     		mov	r4, r3
 19509 06e4 1546     		mov	r5, r2
 19510 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19511 06e8 2060     		str	r0, [r4]	@ unaligned
 19512 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 19513 06ec A260     		str	r2, [r4, #8]	@ unaligned
 19514 06ee E360     		str	r3, [r4, #12]	@ unaligned
 19515 06f0 2868     		ldr	r0, [r5]	@ unaligned
 19516 06f2 2061     		str	r0, [r4, #16]	@ unaligned
 19517 06f4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19518 06f6 AA79     		ldrb	r2, [r5, #6]
 19519 06f8 A382     		strh	r3, [r4, #20]	@ unaligned
 19520 06fa 1346     		mov	r3, r2
 19521 06fc A375     		strb	r3, [r4, #22]
2547:..\src/command_processing.c ****                 break;
 19522              		.loc 1 2547 0
 19523 06fe 22E0     		b	.L725
 19524              	.L734:
2548:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2549:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 430


 19525              		.loc 1 2549 0
 19526 0700 7869     		ldr	r0, [r7, #20]
 19527 0702 FFF7FEFF 		bl	strlen
 19528 0706 0346     		mov	r3, r0
 19529 0708 1A46     		mov	r2, r3
 19530 070a 7B69     		ldr	r3, [r7, #20]
 19531 070c 1344     		add	r3, r3, r2
 19532 070e 9A4A     		ldr	r2, .L781+12
 19533 0710 1546     		mov	r5, r2
 19534 0712 9E46     		mov	lr, r3
 19535 0714 05F1200C 		add	ip, r5, #32
 19536              	.L735:
 19537 0718 7446     		mov	r4, lr
 19538 071a 2E46     		mov	r6, r5
 19539 071c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19540 071e 2060     		str	r0, [r4]	@ unaligned
 19541 0720 6160     		str	r1, [r4, #4]	@ unaligned
 19542 0722 A260     		str	r2, [r4, #8]	@ unaligned
 19543 0724 E360     		str	r3, [r4, #12]	@ unaligned
 19544 0726 1035     		adds	r5, r5, #16
 19545 0728 0EF1100E 		add	lr, lr, #16
 19546 072c 6545     		cmp	r5, ip
 19547 072e F3D1     		bne	.L735
 19548 0730 7446     		mov	r4, lr
 19549 0732 2B46     		mov	r3, r5
 19550 0734 07CB     		ldmia	r3!, {r0, r1, r2}
 19551 0736 2060     		str	r0, [r4]	@ unaligned
 19552 0738 6160     		str	r1, [r4, #4]	@ unaligned
 19553 073a A260     		str	r2, [r4, #8]	@ unaligned
 19554 073c 1A88     		ldrh	r2, [r3]	@ unaligned
 19555 073e 9B78     		ldrb	r3, [r3, #2]
 19556 0740 A281     		strh	r2, [r4, #12]	@ unaligned
 19557 0742 A373     		strb	r3, [r4, #14]
2550:..\src/command_processing.c ****                 break;
 19558              		.loc 1 2550 0
 19559 0744 00BF     		nop
 19560              	.L725:
2551:..\src/command_processing.c ****         }
2552:..\src/command_processing.c **** 
2553:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19561              		.loc 1 2553 0
 19562 0746 D7F88430 		ldr	r3, [r7, #132]
 19563 074a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19564 074e 032B     		cmp	r3, #3
 19565 0750 63D8     		bhi	.L775
 19566 0752 01A2     		adr	r2, .L738
 19567 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19568              		.p2align 2
 19569              	.L738:
 19570 0758 69070000 		.word	.L737+1
 19571 075c 93070000 		.word	.L739+1
 19572 0760 B7070000 		.word	.L740+1
 19573 0764 DD070000 		.word	.L741+1
 19574              		.p2align 1
 19575              	.L737:
2554:..\src/command_processing.c ****             case CONTROL_ANGLE:
2555:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 431


 19576              		.loc 1 2555 0
 19577 0768 7869     		ldr	r0, [r7, #20]
 19578 076a FFF7FEFF 		bl	strlen
 19579 076e 0346     		mov	r3, r0
 19580 0770 1A46     		mov	r2, r3
 19581 0772 7B69     		ldr	r3, [r7, #20]
 19582 0774 1344     		add	r3, r3, r2
 19583 0776 814A     		ldr	r2, .L781+16
 19584 0778 1D46     		mov	r5, r3
 19585 077a 1446     		mov	r4, r2
 19586 077c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19587 077e 2860     		str	r0, [r5]	@ unaligned
 19588 0780 6960     		str	r1, [r5, #4]	@ unaligned
 19589 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 19590 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 19591 0786 03CC     		ldmia	r4!, {r0, r1}
 19592 0788 2861     		str	r0, [r5, #16]	@ unaligned
 19593 078a 6961     		str	r1, [r5, #20]	@ unaligned
 19594 078c 2378     		ldrb	r3, [r4]
 19595 078e 2B76     		strb	r3, [r5, #24]
2556:..\src/command_processing.c ****                 break;
 19596              		.loc 1 2556 0
 19597 0790 44E0     		b	.L742
 19598              	.L739:
2557:..\src/command_processing.c ****             case CONTROL_PWM:
2558:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19599              		.loc 1 2558 0
 19600 0792 7869     		ldr	r0, [r7, #20]
 19601 0794 FFF7FEFF 		bl	strlen
 19602 0798 0346     		mov	r3, r0
 19603 079a 1A46     		mov	r2, r3
 19604 079c 7B69     		ldr	r3, [r7, #20]
 19605 079e 1344     		add	r3, r3, r2
 19606 07a0 774A     		ldr	r2, .L781+20
 19607 07a2 1D46     		mov	r5, r3
 19608 07a4 1446     		mov	r4, r2
 19609 07a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19610 07a8 2860     		str	r0, [r5]	@ unaligned
 19611 07aa 6960     		str	r1, [r5, #4]	@ unaligned
 19612 07ac AA60     		str	r2, [r5, #8]	@ unaligned
 19613 07ae EB60     		str	r3, [r5, #12]	@ unaligned
 19614 07b0 2068     		ldr	r0, [r4]	@ unaligned
 19615 07b2 2861     		str	r0, [r5, #16]	@ unaligned
2559:..\src/command_processing.c ****                 break;
 19616              		.loc 1 2559 0
 19617 07b4 32E0     		b	.L742
 19618              	.L740:
2560:..\src/command_processing.c ****             case CONTROL_CURRENT:
2561:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19619              		.loc 1 2561 0
 19620 07b6 7869     		ldr	r0, [r7, #20]
 19621 07b8 FFF7FEFF 		bl	strlen
 19622 07bc 0346     		mov	r3, r0
 19623 07be 1A46     		mov	r2, r3
 19624 07c0 7B69     		ldr	r3, [r7, #20]
 19625 07c2 1344     		add	r3, r3, r2
 19626 07c4 6F4A     		ldr	r2, .L781+24
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 432


 19627 07c6 1D46     		mov	r5, r3
 19628 07c8 1446     		mov	r4, r2
 19629 07ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19630 07cc 2860     		str	r0, [r5]	@ unaligned
 19631 07ce 6960     		str	r1, [r5, #4]	@ unaligned
 19632 07d0 AA60     		str	r2, [r5, #8]	@ unaligned
 19633 07d2 EB60     		str	r3, [r5, #12]	@ unaligned
 19634 07d4 03CC     		ldmia	r4!, {r0, r1}
 19635 07d6 2861     		str	r0, [r5, #16]	@ unaligned
 19636 07d8 6961     		str	r1, [r5, #20]	@ unaligned
2562:..\src/command_processing.c ****                 break;
 19637              		.loc 1 2562 0
 19638 07da 1FE0     		b	.L742
 19639              	.L741:
2563:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2564:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19640              		.loc 1 2564 0
 19641 07dc 7869     		ldr	r0, [r7, #20]
 19642 07de FFF7FEFF 		bl	strlen
 19643 07e2 0346     		mov	r3, r0
 19644 07e4 1A46     		mov	r2, r3
 19645 07e6 7B69     		ldr	r3, [r7, #20]
 19646 07e8 1344     		add	r3, r3, r2
 19647 07ea 674A     		ldr	r2, .L781+28
 19648 07ec 1446     		mov	r4, r2
 19649 07ee 9E46     		mov	lr, r3
 19650 07f0 04F1200C 		add	ip, r4, #32
 19651              	.L743:
 19652 07f4 7546     		mov	r5, lr
 19653 07f6 2646     		mov	r6, r4
 19654 07f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19655 07fa 2860     		str	r0, [r5]	@ unaligned
 19656 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 19657 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 19658 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 19659 0802 1034     		adds	r4, r4, #16
 19660 0804 0EF1100E 		add	lr, lr, #16
 19661 0808 6445     		cmp	r4, ip
 19662 080a F3D1     		bne	.L743
 19663 080c 7346     		mov	r3, lr
 19664 080e 2246     		mov	r2, r4
 19665 0810 1068     		ldr	r0, [r2]	@ unaligned
 19666 0812 1860     		str	r0, [r3]	@ unaligned
 19667 0814 1279     		ldrb	r2, [r2, #4]
 19668 0816 1A71     		strb	r2, [r3, #4]
2565:..\src/command_processing.c ****                 break;
 19669              		.loc 1 2565 0
 19670 0818 00E0     		b	.L742
 19671              	.L775:
2566:..\src/command_processing.c ****             default:
2567:..\src/command_processing.c ****                 break;
 19672              		.loc 1 2567 0
 19673 081a 00BF     		nop
 19674              	.L742:
2568:..\src/command_processing.c ****         }
2569:..\src/command_processing.c **** 
2570:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 433


 19675              		.loc 1 2570 0
 19676 081c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19677 0820 D7F88C10 		ldr	r1, [r7, #140]
 19678 0824 1346     		mov	r3, r2
 19679 0826 5B00     		lsls	r3, r3, #1
 19680 0828 1344     		add	r3, r3, r2
 19681 082a 1B01     		lsls	r3, r3, #4
 19682 082c 0B44     		add	r3, r3, r1
 19683 082e 03F5D873 		add	r3, r3, #432
 19684 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19685 0834 002B     		cmp	r3, #0
 19686 0836 1CD0     		beq	.L744
2571:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19687              		.loc 1 2571 0
 19688 0838 7869     		ldr	r0, [r7, #20]
 19689 083a FFF7FEFF 		bl	strlen
 19690 083e 0346     		mov	r3, r0
 19691 0840 1A46     		mov	r2, r3
 19692 0842 7B69     		ldr	r3, [r7, #20]
 19693 0844 1344     		add	r3, r3, r2
 19694 0846 514A     		ldr	r2, .L781+32
 19695 0848 1446     		mov	r4, r2
 19696 084a 9E46     		mov	lr, r3
 19697 084c 04F1200C 		add	ip, r4, #32
 19698              	.L745:
 19699 0850 7546     		mov	r5, lr
 19700 0852 2646     		mov	r6, r4
 19701 0854 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19702 0856 2860     		str	r0, [r5]	@ unaligned
 19703 0858 6960     		str	r1, [r5, #4]	@ unaligned
 19704 085a AA60     		str	r2, [r5, #8]	@ unaligned
 19705 085c EB60     		str	r3, [r5, #12]	@ unaligned
 19706 085e 1034     		adds	r4, r4, #16
 19707 0860 0EF1100E 		add	lr, lr, #16
 19708 0864 6445     		cmp	r4, ip
 19709 0866 F3D1     		bne	.L745
 19710 0868 7346     		mov	r3, lr
 19711 086a 2246     		mov	r2, r4
 19712 086c 1278     		ldrb	r2, [r2]
 19713 086e 1A70     		strb	r2, [r3]
 19714 0870 13E0     		b	.L746
 19715              	.L744:
2572:..\src/command_processing.c ****         else
2573:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19716              		.loc 1 2573 0
 19717 0872 7869     		ldr	r0, [r7, #20]
 19718 0874 FFF7FEFF 		bl	strlen
 19719 0878 0346     		mov	r3, r0
 19720 087a 1A46     		mov	r2, r3
 19721 087c 7B69     		ldr	r3, [r7, #20]
 19722 087e 1344     		add	r3, r3, r2
 19723 0880 434A     		ldr	r2, .L781+36
 19724 0882 1C46     		mov	r4, r3
 19725 0884 1546     		mov	r5, r2
 19726 0886 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19727 0888 2060     		str	r0, [r4]	@ unaligned
 19728 088a 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 434


 19729 088c A260     		str	r2, [r4, #8]	@ unaligned
 19730 088e E360     		str	r3, [r4, #12]	@ unaligned
 19731 0890 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19732 0892 2061     		str	r0, [r4, #16]	@ unaligned
 19733 0894 6161     		str	r1, [r4, #20]	@ unaligned
 19734 0896 A261     		str	r2, [r4, #24]	@ unaligned
 19735 0898 E361     		str	r3, [r4, #28]	@ unaligned
 19736              	.L746:
2574:..\src/command_processing.c **** 
2575:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19737              		.loc 1 2575 0
 19738 089a 7869     		ldr	r0, [r7, #20]
 19739 089c FFF7FEFF 		bl	strlen
 19740 08a0 0346     		mov	r3, r0
 19741 08a2 1A46     		mov	r2, r3
 19742 08a4 7B69     		ldr	r3, [r7, #20]
 19743 08a6 1344     		add	r3, r3, r2
 19744 08a8 3A4A     		ldr	r2, .L781+40
 19745 08aa 1C46     		mov	r4, r3
 19746 08ac 1346     		mov	r3, r2
 19747 08ae 07CB     		ldmia	r3!, {r0, r1, r2}
 19748 08b0 2060     		str	r0, [r4]	@ unaligned
 19749 08b2 6160     		str	r1, [r4, #4]	@ unaligned
 19750 08b4 A260     		str	r2, [r4, #8]	@ unaligned
 19751 08b6 1B88     		ldrh	r3, [r3]	@ unaligned
 19752 08b8 A381     		strh	r3, [r4, #12]	@ unaligned
2576:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19753              		.loc 1 2576 0
 19754 08ba 0023     		movs	r3, #0
 19755 08bc C7F89430 		str	r3, [r7, #148]
 19756 08c0 30E0     		b	.L747
 19757              	.L749:
2577:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19758              		.loc 1 2577 0
 19759 08c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19760 08c6 D7F88C10 		ldr	r1, [r7, #140]
 19761 08ca 1346     		mov	r3, r2
 19762 08cc 5B00     		lsls	r3, r3, #1
 19763 08ce 1344     		add	r3, r3, r2
 19764 08d0 1B01     		lsls	r3, r3, #4
 19765 08d2 CA18     		adds	r2, r1, r3
 19766 08d4 D7F89430 		ldr	r3, [r7, #148]
 19767 08d8 1344     		add	r3, r3, r2
 19768 08da 03F29513 		addw	r3, r3, #405
 19769 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19770 08e0 1A46     		mov	r2, r3
 19771 08e2 07F11C03 		add	r3, r7, #28
 19772 08e6 2C49     		ldr	r1, .L781+44
 19773 08e8 1846     		mov	r0, r3
 19774 08ea FFF7FEFF 		bl	sprintf
2578:..\src/command_processing.c ****             strcat(info_string, str);
 19775              		.loc 1 2578 0
 19776 08ee 07F11C03 		add	r3, r7, #28
 19777 08f2 1946     		mov	r1, r3
 19778 08f4 7869     		ldr	r0, [r7, #20]
 19779 08f6 FFF7FEFF 		bl	strcat
2579:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 435


 19780              		.loc 1 2579 0
 19781 08fa D7F89430 		ldr	r3, [r7, #148]
 19782 08fe 022B     		cmp	r3, #2
 19783 0900 0BD0     		beq	.L748
2580:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19784              		.loc 1 2580 0
 19785 0902 7869     		ldr	r0, [r7, #20]
 19786 0904 FFF7FEFF 		bl	strlen
 19787 0908 0346     		mov	r3, r0
 19788 090a 1A46     		mov	r2, r3
 19789 090c 7B69     		ldr	r3, [r7, #20]
 19790 090e 1344     		add	r3, r3, r2
 19791 0910 224A     		ldr	r2, .L781+48
 19792 0912 1188     		ldrh	r1, [r2]	@ unaligned
 19793 0914 9278     		ldrb	r2, [r2, #2]
 19794 0916 1980     		strh	r1, [r3]	@ unaligned
 19795 0918 9A70     		strb	r2, [r3, #2]
 19796              	.L748:
2576:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19797              		.loc 1 2576 0 discriminator 2
 19798 091a D7F89430 		ldr	r3, [r7, #148]
 19799 091e 0133     		adds	r3, r3, #1
 19800 0920 C7F89430 		str	r3, [r7, #148]
 19801              	.L747:
2576:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19802              		.loc 1 2576 0 is_stmt 0 discriminator 1
 19803 0924 D7F89430 		ldr	r3, [r7, #148]
 19804 0928 022B     		cmp	r3, #2
 19805 092a CADD     		ble	.L749
2581:..\src/command_processing.c ****             }                
2582:..\src/command_processing.c ****         }
2583:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19806              		.loc 1 2583 0 is_stmt 1
 19807 092c 7869     		ldr	r0, [r7, #20]
 19808 092e FFF7FEFF 		bl	strlen
 19809 0932 0346     		mov	r3, r0
 19810 0934 1A46     		mov	r2, r3
 19811 0936 7B69     		ldr	r3, [r7, #20]
 19812 0938 1344     		add	r3, r3, r2
 19813 093a 194A     		ldr	r2, .L781+52
 19814 093c 1188     		ldrh	r1, [r2]	@ unaligned
 19815 093e 9278     		ldrb	r2, [r2, #2]
 19816 0940 1980     		strh	r1, [r3]	@ unaligned
 19817 0942 9A70     		strb	r2, [r3, #2]
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19818              		.loc 1 2585 0
 19819 0944 7869     		ldr	r0, [r7, #20]
 19820 0946 FFF7FEFF 		bl	strlen
 19821 094a 0346     		mov	r3, r0
 19822 094c 1A46     		mov	r2, r3
 19823 094e 7B69     		ldr	r3, [r7, #20]
 19824 0950 1344     		add	r3, r3, r2
 19825 0952 1449     		ldr	r1, .L781+56
 19826 0954 1A46     		mov	r2, r3
 19827 0956 0B46     		mov	r3, r1
 19828 0958 03CB     		ldmia	r3!, {r0, r1}
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 436


 19829 095a 1060     		str	r0, [r2]	@ unaligned
 19830 095c 5160     		str	r1, [r2, #4]	@ unaligned
 19831 095e 1B88     		ldrh	r3, [r3]	@ unaligned
 19832 0960 1381     		strh	r3, [r2, #8]	@ unaligned
2586:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19833              		.loc 1 2586 0
 19834 0962 0023     		movs	r3, #0
 19835 0964 C7F89430 		str	r3, [r7, #148]
 19836 0968 5EE0     		b	.L750
 19837              	.L782:
 19838 096a 00BF     		.align	2
 19839              	.L781:
 19840 096c 24150000 		.word	.LC201
 19841 0970 3C150000 		.word	.LC202
 19842 0974 58150000 		.word	.LC203
 19843 0978 70150000 		.word	.LC204
 19844 097c A0150000 		.word	.LC205
 19845 0980 BC150000 		.word	.LC206
 19846 0984 D0150000 		.word	.LC207
 19847 0988 E8150000 		.word	.LC208
 19848 098c 10160000 		.word	.LC209
 19849 0990 34160000 		.word	.LC210
 19850 0994 E41D0000 		.word	.LC286
 19851 0998 64130000 		.word	.LC182
 19852 099c 68130000 		.word	.LC183
 19853 09a0 30110000 		.word	.LC151
 19854 09a4 F41D0000 		.word	.LC287
 19855              	.L752:
2587:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19856              		.loc 1 2587 0
 19857 09a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19858 09ac D7F88C10 		ldr	r1, [r7, #140]
 19859 09b0 1346     		mov	r3, r2
 19860 09b2 5B00     		lsls	r3, r3, #1
 19861 09b4 1344     		add	r3, r3, r2
 19862 09b6 9B00     		lsls	r3, r3, #2
 19863 09b8 D7F89420 		ldr	r2, [r7, #148]
 19864 09bc 1344     		add	r3, r3, r2
 19865 09be 6633     		adds	r3, r3, #102
 19866 09c0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19867 09c4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19868 09c8 D7F88C00 		ldr	r0, [r7, #140]
 19869 09cc 1346     		mov	r3, r2
 19870 09ce 5B00     		lsls	r3, r3, #1
 19871 09d0 1344     		add	r3, r3, r2
 19872 09d2 1B01     		lsls	r3, r3, #4
 19873 09d4 C218     		adds	r2, r0, r3
 19874 09d6 D7F89430 		ldr	r3, [r7, #148]
 19875 09da 1344     		add	r3, r3, r2
 19876 09dc 03F29513 		addw	r3, r3, #405
 19877 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19878 09e2 41FA03F2 		asr	r2, r1, r3
 19879 09e6 07F11C03 		add	r3, r7, #28
 19880 09ea CF49     		ldr	r1, .L783
 19881 09ec 1846     		mov	r0, r3
 19882 09ee FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 437


 19883              		.loc 1 2588 0
 19884 09f2 07F11C03 		add	r3, r7, #28
 19885 09f6 1946     		mov	r1, r3
 19886 09f8 7869     		ldr	r0, [r7, #20]
 19887 09fa FFF7FEFF 		bl	strcat
2589:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19888              		.loc 1 2589 0
 19889 09fe D7F89430 		ldr	r3, [r7, #148]
 19890 0a02 022B     		cmp	r3, #2
 19891 0a04 0BD0     		beq	.L751
2590:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19892              		.loc 1 2590 0
 19893 0a06 7869     		ldr	r0, [r7, #20]
 19894 0a08 FFF7FEFF 		bl	strlen
 19895 0a0c 0346     		mov	r3, r0
 19896 0a0e 1A46     		mov	r2, r3
 19897 0a10 7B69     		ldr	r3, [r7, #20]
 19898 0a12 1344     		add	r3, r3, r2
 19899 0a14 C54A     		ldr	r2, .L783+4
 19900 0a16 1188     		ldrh	r1, [r2]	@ unaligned
 19901 0a18 9278     		ldrb	r2, [r2, #2]
 19902 0a1a 1980     		strh	r1, [r3]	@ unaligned
 19903 0a1c 9A70     		strb	r2, [r3, #2]
 19904              	.L751:
2586:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19905              		.loc 1 2586 0 discriminator 2
 19906 0a1e D7F89430 		ldr	r3, [r7, #148]
 19907 0a22 0133     		adds	r3, r3, #1
 19908 0a24 C7F89430 		str	r3, [r7, #148]
 19909              	.L750:
2586:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19910              		.loc 1 2586 0 is_stmt 0 discriminator 1
 19911 0a28 D7F89430 		ldr	r3, [r7, #148]
 19912 0a2c 022B     		cmp	r3, #2
 19913 0a2e BBDD     		ble	.L752
2591:..\src/command_processing.c ****             }
2592:..\src/command_processing.c ****         }
2593:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19914              		.loc 1 2593 0 is_stmt 1
 19915 0a30 7869     		ldr	r0, [r7, #20]
 19916 0a32 FFF7FEFF 		bl	strlen
 19917 0a36 0346     		mov	r3, r0
 19918 0a38 1A46     		mov	r2, r3
 19919 0a3a 7B69     		ldr	r3, [r7, #20]
 19920 0a3c 1344     		add	r3, r3, r2
 19921 0a3e BC4A     		ldr	r2, .L783+8
 19922 0a40 1188     		ldrh	r1, [r2]	@ unaligned
 19923 0a42 9278     		ldrb	r2, [r2, #2]
 19924 0a44 1980     		strh	r1, [r3]	@ unaligned
 19925 0a46 9A70     		strb	r2, [r3, #2]
2594:..\src/command_processing.c ****             
2595:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19926              		.loc 1 2595 0
 19927 0a48 7869     		ldr	r0, [r7, #20]
 19928 0a4a FFF7FEFF 		bl	strlen
 19929 0a4e 0346     		mov	r3, r0
 19930 0a50 1A46     		mov	r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 438


 19931 0a52 7B69     		ldr	r3, [r7, #20]
 19932 0a54 1344     		add	r3, r3, r2
 19933 0a56 B74A     		ldr	r2, .L783+12
 19934 0a58 1C46     		mov	r4, r3
 19935 0a5a 1346     		mov	r3, r2
 19936 0a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 19937 0a5e 2060     		str	r0, [r4]	@ unaligned
 19938 0a60 6160     		str	r1, [r4, #4]	@ unaligned
 19939 0a62 A260     		str	r2, [r4, #8]	@ unaligned
 19940 0a64 1B88     		ldrh	r3, [r3]	@ unaligned
 19941 0a66 A381     		strh	r3, [r4, #12]	@ unaligned
2596:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19942              		.loc 1 2596 0
 19943 0a68 0023     		movs	r3, #0
 19944 0a6a C7F89430 		str	r3, [r7, #148]
 19945 0a6e 35E0     		b	.L753
 19946              	.L755:
2597:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19947              		.loc 1 2597 0
 19948 0a70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19949 0a74 D7F88C10 		ldr	r1, [r7, #140]
 19950 0a78 1346     		mov	r3, r2
 19951 0a7a 5B00     		lsls	r3, r3, #1
 19952 0a7c 1344     		add	r3, r3, r2
 19953 0a7e 9B00     		lsls	r3, r3, #2
 19954 0a80 D7F89420 		ldr	r2, [r7, #148]
 19955 0a84 1344     		add	r3, r3, r2
 19956 0a86 6833     		adds	r3, r3, #104
 19957 0a88 9B00     		lsls	r3, r3, #2
 19958 0a8a 0B44     		add	r3, r3, r1
 19959 0a8c 5B68     		ldr	r3, [r3, #4]	@ float
 19960 0a8e 1846     		mov	r0, r3
 19961 0a90 FFF7FEFF 		bl	__aeabi_f2d
 19962 0a94 0346     		mov	r3, r0
 19963 0a96 0C46     		mov	r4, r1
 19964 0a98 07F11C00 		add	r0, r7, #28
 19965 0a9c 1A46     		mov	r2, r3
 19966 0a9e 2346     		mov	r3, r4
 19967 0aa0 A549     		ldr	r1, .L783+16
 19968 0aa2 FFF7FEFF 		bl	sprintf
2598:..\src/command_processing.c ****             strcat(info_string, str);
 19969              		.loc 1 2598 0
 19970 0aa6 07F11C03 		add	r3, r7, #28
 19971 0aaa 1946     		mov	r1, r3
 19972 0aac 7869     		ldr	r0, [r7, #20]
 19973 0aae FFF7FEFF 		bl	strcat
2599:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19974              		.loc 1 2599 0
 19975 0ab2 D7F89430 		ldr	r3, [r7, #148]
 19976 0ab6 022B     		cmp	r3, #2
 19977 0ab8 0BD0     		beq	.L754
2600:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19978              		.loc 1 2600 0
 19979 0aba 7869     		ldr	r0, [r7, #20]
 19980 0abc FFF7FEFF 		bl	strlen
 19981 0ac0 0346     		mov	r3, r0
 19982 0ac2 1A46     		mov	r2, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 439


 19983 0ac4 7B69     		ldr	r3, [r7, #20]
 19984 0ac6 1344     		add	r3, r3, r2
 19985 0ac8 984A     		ldr	r2, .L783+4
 19986 0aca 1188     		ldrh	r1, [r2]	@ unaligned
 19987 0acc 9278     		ldrb	r2, [r2, #2]
 19988 0ace 1980     		strh	r1, [r3]	@ unaligned
 19989 0ad0 9A70     		strb	r2, [r3, #2]
 19990              	.L754:
2596:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19991              		.loc 1 2596 0 discriminator 2
 19992 0ad2 D7F89430 		ldr	r3, [r7, #148]
 19993 0ad6 0133     		adds	r3, r3, #1
 19994 0ad8 C7F89430 		str	r3, [r7, #148]
 19995              	.L753:
2596:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19996              		.loc 1 2596 0 is_stmt 0 discriminator 1
 19997 0adc D7F89430 		ldr	r3, [r7, #148]
 19998 0ae0 022B     		cmp	r3, #2
 19999 0ae2 C5DD     		ble	.L755
2601:..\src/command_processing.c ****             }
2602:..\src/command_processing.c ****         }
2603:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 20000              		.loc 1 2603 0 is_stmt 1
 20001 0ae4 7869     		ldr	r0, [r7, #20]
 20002 0ae6 FFF7FEFF 		bl	strlen
 20003 0aea 0346     		mov	r3, r0
 20004 0aec 1A46     		mov	r2, r3
 20005 0aee 7B69     		ldr	r3, [r7, #20]
 20006 0af0 1344     		add	r3, r3, r2
 20007 0af2 8F4A     		ldr	r2, .L783+8
 20008 0af4 1188     		ldrh	r1, [r2]	@ unaligned
 20009 0af6 9278     		ldrb	r2, [r2, #2]
 20010 0af8 1980     		strh	r1, [r3]	@ unaligned
 20011 0afa 9A70     		strb	r2, [r3, #2]
2604:..\src/command_processing.c **** 
2605:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 20012              		.loc 1 2605 0
 20013 0afc D7F88430 		ldr	r3, [r7, #132]
 20014 0b00 5B6C     		ldr	r3, [r3, #68]	@ float
 20015 0b02 1846     		mov	r0, r3
 20016 0b04 FFF7FEFF 		bl	__aeabi_f2d
 20017 0b08 C7E90201 		strd	r0, [r7, #8]
 20018 0b0c D7F88430 		ldr	r3, [r7, #132]
 20019 0b10 9B6C     		ldr	r3, [r3, #72]	@ float
 20020 0b12 1846     		mov	r0, r3
 20021 0b14 FFF7FEFF 		bl	__aeabi_f2d
 20022 0b18 0446     		mov	r4, r0
 20023 0b1a 0D46     		mov	r5, r1
 20024 0b1c D7F88430 		ldr	r3, [r7, #132]
 20025 0b20 DB6C     		ldr	r3, [r3, #76]	@ float
 20026 0b22 1846     		mov	r0, r3
 20027 0b24 FFF7FEFF 		bl	__aeabi_f2d
 20028 0b28 8046     		mov	r8, r0
 20029 0b2a 8946     		mov	r9, r1
 20030 0b2c D7F88430 		ldr	r3, [r7, #132]
 20031 0b30 1B6D     		ldr	r3, [r3, #80]	@ float
 20032 0b32 1846     		mov	r0, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 440


 20033 0b34 FFF7FEFF 		bl	__aeabi_f2d
 20034 0b38 8246     		mov	r10, r0
 20035 0b3a 8B46     		mov	fp, r1
 20036 0b3c D7F88430 		ldr	r3, [r7, #132]
 20037 0b40 5B6D     		ldr	r3, [r3, #84]	@ float
 20038 0b42 1846     		mov	r0, r3
 20039 0b44 FFF7FEFF 		bl	__aeabi_f2d
 20040 0b48 C7E90001 		strd	r0, [r7]
 20041 0b4c D7F88430 		ldr	r3, [r7, #132]
 20042 0b50 9B6D     		ldr	r3, [r3, #88]	@ float
 20043 0b52 1846     		mov	r0, r3
 20044 0b54 FFF7FEFF 		bl	__aeabi_f2d
 20045 0b58 0246     		mov	r2, r0
 20046 0b5a 0B46     		mov	r3, r1
 20047 0b5c 07F11C00 		add	r0, r7, #28
 20048 0b60 CDE90823 		strd	r2, [sp, #32]
 20049 0b64 D7E90012 		ldrd	r1, [r7]
 20050 0b68 CDE90612 		strd	r1, [sp, #24]
 20051 0b6c CDE904AB 		strd	r10, [sp, #16]
 20052 0b70 CDE90289 		strd	r8, [sp, #8]
 20053 0b74 CDE90045 		strd	r4, [sp]
 20054 0b78 D7E90223 		ldrd	r2, [r7, #8]
 20055 0b7c 6F49     		ldr	r1, .L783+20
 20056 0b7e FFF7FEFF 		bl	sprintf
2606:..\src/command_processing.c **** 		strcat(info_string, str);
 20057              		.loc 1 2606 0
 20058 0b82 07F11C03 		add	r3, r7, #28
 20059 0b86 1946     		mov	r1, r3
 20060 0b88 7869     		ldr	r0, [r7, #20]
 20061 0b8a FFF7FEFF 		bl	strcat
2607:..\src/command_processing.c **** 
2608:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 20062              		.loc 1 2608 0
 20063 0b8e D7F88430 		ldr	r3, [r7, #132]
 20064 0b92 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 20065 0b96 1A46     		mov	r2, r3
 20066 0b98 07F11C03 		add	r3, r7, #28
 20067 0b9c 6849     		ldr	r1, .L783+24
 20068 0b9e 1846     		mov	r0, r3
 20069 0ba0 FFF7FEFF 		bl	sprintf
2609:..\src/command_processing.c **** 		strcat(info_string, str);
 20070              		.loc 1 2609 0
 20071 0ba4 07F11C03 		add	r3, r7, #28
 20072 0ba8 1946     		mov	r1, r3
 20073 0baa 7869     		ldr	r0, [r7, #20]
 20074 0bac FFF7FEFF 		bl	strcat
2610:..\src/command_processing.c **** 
2611:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 20075              		.loc 1 2611 0
 20076 0bb0 D7F88430 		ldr	r3, [r7, #132]
 20077 0bb4 596B     		ldr	r1, [r3, #52]
 20078 0bb6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20079 0bba D7F88C00 		ldr	r0, [r7, #140]
 20080 0bbe 1346     		mov	r3, r2
 20081 0bc0 5B00     		lsls	r3, r3, #1
 20082 0bc2 1344     		add	r3, r3, r2
 20083 0bc4 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 441


 20084 0bc6 0344     		add	r3, r3, r0
 20085 0bc8 03F29513 		addw	r3, r3, #405
 20086 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20087 0bce 41FA03F4 		asr	r4, r1, r3
 20088 0bd2 D7F88430 		ldr	r3, [r7, #132]
 20089 0bd6 996B     		ldr	r1, [r3, #56]
 20090 0bd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20091 0bdc D7F88C00 		ldr	r0, [r7, #140]
 20092 0be0 1346     		mov	r3, r2
 20093 0be2 5B00     		lsls	r3, r3, #1
 20094 0be4 1344     		add	r3, r3, r2
 20095 0be6 1B01     		lsls	r3, r3, #4
 20096 0be8 0344     		add	r3, r3, r0
 20097 0bea 03F29513 		addw	r3, r3, #405
 20098 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20099 0bf0 41FA03F3 		asr	r3, r1, r3
 20100 0bf4 07F11C00 		add	r0, r7, #28
 20101 0bf8 2246     		mov	r2, r4
 20102 0bfa 5249     		ldr	r1, .L783+28
 20103 0bfc FFF7FEFF 		bl	sprintf
2612:..\src/command_processing.c **** 		strcat(info_string, str);
 20104              		.loc 1 2612 0
 20105 0c00 07F11C03 		add	r3, r7, #28
 20106 0c04 1946     		mov	r1, r3
 20107 0c06 7869     		ldr	r0, [r7, #20]
 20108 0c08 FFF7FEFF 		bl	strcat
2613:..\src/command_processing.c **** 
2614:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 20109              		.loc 1 2614 0
 20110 0c0c D7F88430 		ldr	r3, [r7, #132]
 20111 0c10 B3F95C30 		ldrsh	r3, [r3, #92]
 20112 0c14 1A46     		mov	r2, r3
 20113 0c16 07F11C03 		add	r3, r7, #28
 20114 0c1a 4B49     		ldr	r1, .L783+32
 20115 0c1c 1846     		mov	r0, r3
 20116 0c1e FFF7FEFF 		bl	sprintf
2615:..\src/command_processing.c **** 		strcat(info_string, str);
 20117              		.loc 1 2615 0
 20118 0c22 07F11C03 		add	r3, r7, #28
 20119 0c26 1946     		mov	r1, r3
 20120 0c28 7869     		ldr	r0, [r7, #20]
 20121 0c2a FFF7FEFF 		bl	strcat
2616:..\src/command_processing.c **** 
2617:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 20122              		.loc 1 2617 0
 20123 0c2e D7F88430 		ldr	r3, [r7, #132]
 20124 0c32 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 20125 0c36 022B     		cmp	r3, #2
 20126 0c38 18D0     		beq	.L756
2618:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20127              		.loc 1 2618 0 discriminator 1
 20128 0c3a D7F88430 		ldr	r3, [r7, #132]
 20129 0c3e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2617:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20130              		.loc 1 2617 0 discriminator 1
 20131 0c42 032B     		cmp	r3, #3
 20132 0c44 12D0     		beq	.L756
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 442


2619:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20133              		.loc 1 2619 0
 20134 0c46 D7F88430 		ldr	r3, [r7, #132]
 20135 0c4a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2618:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20136              		.loc 1 2618 0
 20137 0c4e 042B     		cmp	r3, #4
 20138 0c50 0CD0     		beq	.L756
2620:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20139              		.loc 1 2620 0
 20140 0c52 D7F88430 		ldr	r3, [r7, #132]
 20141 0c56 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2619:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20142              		.loc 1 2619 0
 20143 0c5a 052B     		cmp	r3, #5
 20144 0c5c 06D0     		beq	.L756
2621:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 20145              		.loc 1 2621 0
 20146 0c5e D7F88430 		ldr	r3, [r7, #132]
 20147 0c62 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2620:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20148              		.loc 1 2620 0
 20149 0c66 072B     		cmp	r3, #7
 20150 0c68 40F0AA80 		bne	.L757
 20151              	.L756:
2622:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 20152              		.loc 1 2622 0
 20153 0c6c D7F88C30 		ldr	r3, [r7, #140]
 20154 0c70 B3F8F031 		ldrh	r3, [r3, #496]
 20155 0c74 1A46     		mov	r2, r3
 20156 0c76 D7F88C30 		ldr	r3, [r7, #140]
 20157 0c7a B3F8F231 		ldrh	r3, [r3, #498]
 20158 0c7e 07F11C00 		add	r0, r7, #28
 20159 0c82 3249     		ldr	r1, .L783+36
 20160 0c84 FFF7FEFF 		bl	sprintf
2623:..\src/command_processing.c **** 			strcat(info_string, str);
 20161              		.loc 1 2623 0
 20162 0c88 07F11C03 		add	r3, r7, #28
 20163 0c8c 1946     		mov	r1, r3
 20164 0c8e 7869     		ldr	r0, [r7, #20]
 20165 0c90 FFF7FEFF 		bl	strcat
2624:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20166              		.loc 1 2624 0
 20167 0c94 7869     		ldr	r0, [r7, #20]
 20168 0c96 FFF7FEFF 		bl	strlen
 20169 0c9a 0346     		mov	r3, r0
 20170 0c9c 1A46     		mov	r2, r3
 20171 0c9e 7B69     		ldr	r3, [r7, #20]
 20172 0ca0 1344     		add	r3, r3, r2
 20173 0ca2 234A     		ldr	r2, .L783+8
 20174 0ca4 1188     		ldrh	r1, [r2]	@ unaligned
 20175 0ca6 9278     		ldrb	r2, [r2, #2]
 20176 0ca8 1980     		strh	r1, [r3]	@ unaligned
 20177 0caa 9A70     		strb	r2, [r3, #2]
2625:..\src/command_processing.c **** 
2626:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20178              		.loc 1 2626 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 443


 20179 0cac D7F88C30 		ldr	r3, [r7, #140]
 20180 0cb0 D3F8F421 		ldr	r2, [r3, #500]
 20181 0cb4 D7F88C30 		ldr	r3, [r7, #140]
 20182 0cb8 D3F8F831 		ldr	r3, [r3, #504]
 20183 0cbc 07F11C00 		add	r0, r7, #28
 20184 0cc0 2349     		ldr	r1, .L783+40
 20185 0cc2 FFF7FEFF 		bl	sprintf
2627:..\src/command_processing.c **** 			strcat(info_string, str);
 20186              		.loc 1 2627 0
 20187 0cc6 07F11C03 		add	r3, r7, #28
 20188 0cca 1946     		mov	r1, r3
 20189 0ccc 7869     		ldr	r0, [r7, #20]
 20190 0cce FFF7FEFF 		bl	strcat
2628:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20191              		.loc 1 2628 0
 20192 0cd2 7869     		ldr	r0, [r7, #20]
 20193 0cd4 FFF7FEFF 		bl	strlen
 20194 0cd8 0346     		mov	r3, r0
 20195 0cda 1A46     		mov	r2, r3
 20196 0cdc 7B69     		ldr	r3, [r7, #20]
 20197 0cde 1344     		add	r3, r3, r2
 20198 0ce0 134A     		ldr	r2, .L783+8
 20199 0ce2 1188     		ldrh	r1, [r2]	@ unaligned
 20200 0ce4 9278     		ldrb	r2, [r2, #2]
 20201 0ce6 1980     		strh	r1, [r3]	@ unaligned
 20202 0ce8 9A70     		strb	r2, [r3, #2]
2629:..\src/command_processing.c **** 
2630:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20203              		.loc 1 2630 0
 20204 0cea D7F88C30 		ldr	r3, [r7, #140]
 20205 0cee 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20206 0cf2 002B     		cmp	r3, #0
 20207 0cf4 30D0     		beq	.L758
2631:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20208              		.loc 1 2631 0
 20209 0cf6 7869     		ldr	r0, [r7, #20]
 20210 0cf8 FFF7FEFF 		bl	strlen
 20211 0cfc 0346     		mov	r3, r0
 20212 0cfe 1A46     		mov	r2, r3
 20213 0d00 7B69     		ldr	r3, [r7, #20]
 20214 0d02 1344     		add	r3, r3, r2
 20215 0d04 134A     		ldr	r2, .L783+44
 20216 0d06 1D46     		mov	r5, r3
 20217 0d08 1446     		mov	r4, r2
 20218 0d0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20219 0d0c 2860     		str	r0, [r5]	@ unaligned
 20220 0d0e 6960     		str	r1, [r5, #4]	@ unaligned
 20221 0d10 AA60     		str	r2, [r5, #8]	@ unaligned
 20222 0d12 EB60     		str	r3, [r5, #12]	@ unaligned
 20223 0d14 03CC     		ldmia	r4!, {r0, r1}
 20224 0d16 2861     		str	r0, [r5, #16]	@ unaligned
 20225 0d18 6961     		str	r1, [r5, #20]	@ unaligned
 20226 0d1a 2388     		ldrh	r3, [r4]	@ unaligned
 20227 0d1c A278     		ldrb	r2, [r4, #2]
 20228 0d1e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20229 0d20 1346     		mov	r3, r2
 20230 0d22 AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 444


 20231 0d24 2CE0     		b	.L759
 20232              	.L784:
 20233 0d26 00BF     		.align	2
 20234              	.L783:
 20235 0d28 10170000 		.word	.LC218
 20236 0d2c 68130000 		.word	.LC183
 20237 0d30 30110000 		.word	.LC151
 20238 0d34 001E0000 		.word	.LC288
 20239 0d38 30170000 		.word	.LC220
 20240 0d3c 101E0000 		.word	.LC289
 20241 0d40 4C1E0000 		.word	.LC290
 20242 0d44 681E0000 		.word	.LC291
 20243 0d48 D0170000 		.word	.LC226
 20244 0d4c C4180000 		.word	.LC234
 20245 0d50 E8180000 		.word	.LC235
 20246 0d54 38190000 		.word	.LC238
 20247              	.L758:
2632:..\src/command_processing.c **** 			else
2633:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20248              		.loc 1 2633 0
 20249 0d58 7869     		ldr	r0, [r7, #20]
 20250 0d5a FFF7FEFF 		bl	strlen
 20251 0d5e 0346     		mov	r3, r0
 20252 0d60 1A46     		mov	r2, r3
 20253 0d62 7B69     		ldr	r3, [r7, #20]
 20254 0d64 1344     		add	r3, r3, r2
 20255 0d66 D04A     		ldr	r2, .L785
 20256 0d68 1D46     		mov	r5, r3
 20257 0d6a 1446     		mov	r4, r2
 20258 0d6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20259 0d6e 2860     		str	r0, [r5]	@ unaligned
 20260 0d70 6960     		str	r1, [r5, #4]	@ unaligned
 20261 0d72 AA60     		str	r2, [r5, #8]	@ unaligned
 20262 0d74 EB60     		str	r3, [r5, #12]	@ unaligned
 20263 0d76 03CC     		ldmia	r4!, {r0, r1}
 20264 0d78 2861     		str	r0, [r5, #16]	@ unaligned
 20265 0d7a 6961     		str	r1, [r5, #20]	@ unaligned
 20266 0d7c 2388     		ldrh	r3, [r4]	@ unaligned
 20267 0d7e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20268              	.L759:
2634:..\src/command_processing.c **** 
2635:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20269              		.loc 1 2635 0
 20270 0d80 D7F88C30 		ldr	r3, [r7, #140]
 20271 0d84 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20272 0d88 1A46     		mov	r2, r3
 20273 0d8a D7F88C30 		ldr	r3, [r7, #140]
 20274 0d8e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20275 0d92 07F11C00 		add	r0, r7, #28
 20276 0d96 C549     		ldr	r1, .L785+4
 20277 0d98 FFF7FEFF 		bl	sprintf
2636:..\src/command_processing.c **** 			strcat(info_string, str);
 20278              		.loc 1 2636 0
 20279 0d9c 07F11C03 		add	r3, r7, #28
 20280 0da0 1946     		mov	r1, r3
 20281 0da2 7869     		ldr	r0, [r7, #20]
 20282 0da4 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 445


2637:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20283              		.loc 1 2637 0
 20284 0da8 7869     		ldr	r0, [r7, #20]
 20285 0daa FFF7FEFF 		bl	strlen
 20286 0dae 0346     		mov	r3, r0
 20287 0db0 1A46     		mov	r2, r3
 20288 0db2 7B69     		ldr	r3, [r7, #20]
 20289 0db4 1344     		add	r3, r3, r2
 20290 0db6 BE4A     		ldr	r2, .L785+8
 20291 0db8 1188     		ldrh	r1, [r2]	@ unaligned
 20292 0dba 9278     		ldrb	r2, [r2, #2]
 20293 0dbc 1980     		strh	r1, [r3]	@ unaligned
 20294 0dbe 9A70     		strb	r2, [r3, #2]
 20295              	.L757:
 20296              	.LBE24:
2467:..\src/command_processing.c ****             
 20297              		.loc 1 2467 0 discriminator 2
 20298 0dc0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20299 0dc4 0133     		adds	r3, r3, #1
 20300 0dc6 87F89330 		strb	r3, [r7, #147]
 20301              	.L716:
2467:..\src/command_processing.c ****             
 20302              		.loc 1 2467 0 is_stmt 0 discriminator 1
 20303 0dca D7F88C30 		ldr	r3, [r7, #140]
 20304 0dce 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20305 0dd2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20306 0dd6 9A42     		cmp	r2, r3
 20307 0dd8 7FF69BA9 		bls	.L760
 20308              	.LBE23:
2638:..\src/command_processing.c **** 		}
2639:..\src/command_processing.c **** 	}
2640:..\src/command_processing.c **** 	 
2641:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20309              		.loc 1 2641 0 is_stmt 1
 20310 0ddc D7F88C30 		ldr	r3, [r7, #140]
 20311 0de0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20312 0de4 002B     		cmp	r3, #0
 20313 0de6 63D0     		beq	.L761
2642:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20314              		.loc 1 2642 0
 20315 0de8 D7F88C30 		ldr	r3, [r7, #140]
 20316 0dec D3F8A422 		ldr	r2, [r3, #676]
 20317 0df0 07F11C03 		add	r3, r7, #28
 20318 0df4 AF49     		ldr	r1, .L785+12
 20319 0df6 1846     		mov	r0, r3
 20320 0df8 FFF7FEFF 		bl	sprintf
2643:..\src/command_processing.c ****         strcat(info_string, str);
 20321              		.loc 1 2643 0
 20322 0dfc 07F11C03 		add	r3, r7, #28
 20323 0e00 1946     		mov	r1, r3
 20324 0e02 7869     		ldr	r0, [r7, #20]
 20325 0e04 FFF7FEFF 		bl	strcat
2644:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20326              		.loc 1 2644 0
 20327 0e08 7869     		ldr	r0, [r7, #20]
 20328 0e0a FFF7FEFF 		bl	strlen
 20329 0e0e 0346     		mov	r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 446


 20330 0e10 1A46     		mov	r2, r3
 20331 0e12 7B69     		ldr	r3, [r7, #20]
 20332 0e14 1344     		add	r3, r3, r2
 20333 0e16 A64A     		ldr	r2, .L785+8
 20334 0e18 1188     		ldrh	r1, [r2]	@ unaligned
 20335 0e1a 9278     		ldrb	r2, [r2, #2]
 20336 0e1c 1980     		strh	r1, [r3]	@ unaligned
 20337 0e1e 9A70     		strb	r2, [r3, #2]
2645:..\src/command_processing.c ****         
2646:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20338              		.loc 1 2646 0
 20339 0e20 D7F88C30 		ldr	r3, [r7, #140]
 20340 0e24 D3F8A822 		ldr	r2, [r3, #680]
 20341 0e28 07F11C03 		add	r3, r7, #28
 20342 0e2c A249     		ldr	r1, .L785+16
 20343 0e2e 1846     		mov	r0, r3
 20344 0e30 FFF7FEFF 		bl	sprintf
2647:..\src/command_processing.c ****         strcat(info_string, str);
 20345              		.loc 1 2647 0
 20346 0e34 07F11C03 		add	r3, r7, #28
 20347 0e38 1946     		mov	r1, r3
 20348 0e3a 7869     		ldr	r0, [r7, #20]
 20349 0e3c FFF7FEFF 		bl	strcat
2648:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20350              		.loc 1 2648 0
 20351 0e40 7869     		ldr	r0, [r7, #20]
 20352 0e42 FFF7FEFF 		bl	strlen
 20353 0e46 0346     		mov	r3, r0
 20354 0e48 1A46     		mov	r2, r3
 20355 0e4a 7B69     		ldr	r3, [r7, #20]
 20356 0e4c 1344     		add	r3, r3, r2
 20357 0e4e 984A     		ldr	r2, .L785+8
 20358 0e50 1188     		ldrh	r1, [r2]	@ unaligned
 20359 0e52 9278     		ldrb	r2, [r2, #2]
 20360 0e54 1980     		strh	r1, [r3]	@ unaligned
 20361 0e56 9A70     		strb	r2, [r3, #2]
2649:..\src/command_processing.c ****         
2650:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20362              		.loc 1 2650 0
 20363 0e58 D7F88C30 		ldr	r3, [r7, #140]
 20364 0e5c D3F8A022 		ldr	r2, [r3, #672]
 20365 0e60 D7F88C30 		ldr	r3, [r7, #140]
 20366 0e64 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20367 0e68 1846     		mov	r0, r3
 20368 0e6a D7F88C10 		ldr	r1, [r7, #140]
 20369 0e6e 0346     		mov	r3, r0
 20370 0e70 5B00     		lsls	r3, r3, #1
 20371 0e72 0344     		add	r3, r3, r0
 20372 0e74 1B01     		lsls	r3, r3, #4
 20373 0e76 0B44     		add	r3, r3, r1
 20374 0e78 03F29513 		addw	r3, r3, #405
 20375 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20376 0e7e 1A41     		asrs	r2, r2, r3
 20377 0e80 07F11C03 		add	r3, r7, #28
 20378 0e84 8D49     		ldr	r1, .L785+20
 20379 0e86 1846     		mov	r0, r3
 20380 0e88 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 447


2651:..\src/command_processing.c ****         strcat(info_string, str);
 20381              		.loc 1 2651 0
 20382 0e8c 07F11C03 		add	r3, r7, #28
 20383 0e90 1946     		mov	r1, r3
 20384 0e92 7869     		ldr	r0, [r7, #20]
 20385 0e94 FFF7FEFF 		bl	strcat
2652:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20386              		.loc 1 2652 0
 20387 0e98 7869     		ldr	r0, [r7, #20]
 20388 0e9a FFF7FEFF 		bl	strlen
 20389 0e9e 0346     		mov	r3, r0
 20390 0ea0 1A46     		mov	r2, r3
 20391 0ea2 7B69     		ldr	r3, [r7, #20]
 20392 0ea4 1344     		add	r3, r3, r2
 20393 0ea6 824A     		ldr	r2, .L785+8
 20394 0ea8 1188     		ldrh	r1, [r2]	@ unaligned
 20395 0eaa 9278     		ldrb	r2, [r2, #2]
 20396 0eac 1980     		strh	r1, [r3]	@ unaligned
 20397 0eae 9A70     		strb	r2, [r3, #2]
 20398              	.L761:
2653:..\src/command_processing.c ****     }
2654:..\src/command_processing.c **** 	
2655:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20399              		.loc 1 2655 0
 20400 0eb0 D7F88C30 		ldr	r3, [r7, #140]
 20401 0eb4 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20402 0eb8 002B     		cmp	r3, #0
 20403 0eba 00F0CB81 		beq	.L776
2656:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20404              		.loc 1 2656 0
 20405 0ebe 804B     		ldr	r3, .L785+24
 20406 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20407 0ec2 1A46     		mov	r2, r3
 20408 0ec4 07F11C03 		add	r3, r7, #28
 20409 0ec8 7E49     		ldr	r1, .L785+28
 20410 0eca 1846     		mov	r0, r3
 20411 0ecc FFF7FEFF 		bl	sprintf
2657:..\src/command_processing.c **** 		strcat(info_string, str);
 20412              		.loc 1 2657 0
 20413 0ed0 07F11C03 		add	r3, r7, #28
 20414 0ed4 1946     		mov	r1, r3
 20415 0ed6 7869     		ldr	r0, [r7, #20]
 20416 0ed8 FFF7FEFF 		bl	strcat
2658:..\src/command_processing.c **** 		
2659:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20417              		.loc 1 2659 0
 20418 0edc 7869     		ldr	r0, [r7, #20]
 20419 0ede FFF7FEFF 		bl	strlen
 20420 0ee2 0346     		mov	r3, r0
 20421 0ee4 1A46     		mov	r2, r3
 20422 0ee6 7B69     		ldr	r3, [r7, #20]
 20423 0ee8 1344     		add	r3, r3, r2
 20424 0eea 714A     		ldr	r2, .L785+8
 20425 0eec 1188     		ldrh	r1, [r2]	@ unaligned
 20426 0eee 9278     		ldrb	r2, [r2, #2]
 20427 0ef0 1980     		strh	r1, [r3]	@ unaligned
 20428 0ef2 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 448


2660:..\src/command_processing.c **** 		
2661:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20429              		.loc 1 2661 0
 20430 0ef4 7869     		ldr	r0, [r7, #20]
 20431 0ef6 FFF7FEFF 		bl	strlen
 20432 0efa 0346     		mov	r3, r0
 20433 0efc 1A46     		mov	r2, r3
 20434 0efe 7B69     		ldr	r3, [r7, #20]
 20435 0f00 1344     		add	r3, r3, r2
 20436 0f02 714A     		ldr	r2, .L785+32
 20437 0f04 1D46     		mov	r5, r3
 20438 0f06 1446     		mov	r4, r2
 20439 0f08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20440 0f0a 2860     		str	r0, [r5]	@ unaligned
 20441 0f0c 6960     		str	r1, [r5, #4]	@ unaligned
 20442 0f0e AA60     		str	r2, [r5, #8]	@ unaligned
 20443 0f10 EB60     		str	r3, [r5, #12]	@ unaligned
 20444 0f12 2068     		ldr	r0, [r4]	@ unaligned
 20445 0f14 2861     		str	r0, [r5, #16]	@ unaligned
 20446 0f16 2379     		ldrb	r3, [r4, #4]
 20447 0f18 2B75     		strb	r3, [r5, #20]
2662:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20448              		.loc 1 2662 0
 20449 0f1a 0023     		movs	r3, #0
 20450 0f1c C7F89430 		str	r3, [r7, #148]
 20451 0f20 84E1     		b	.L763
 20452              	.L774:
2663:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20453              		.loc 1 2663 0
 20454 0f22 6A4A     		ldr	r2, .L785+36
 20455 0f24 D7F89430 		ldr	r3, [r7, #148]
 20456 0f28 1344     		add	r3, r3, r2
 20457 0f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20458 0f2c 07F11C00 		add	r0, r7, #28
 20459 0f30 D7F89420 		ldr	r2, [r7, #148]
 20460 0f34 6649     		ldr	r1, .L785+40
 20461 0f36 FFF7FEFF 		bl	sprintf
2664:..\src/command_processing.c **** 			strcat(info_string, str);
 20462              		.loc 1 2664 0
 20463 0f3a 07F11C03 		add	r3, r7, #28
 20464 0f3e 1946     		mov	r1, r3
 20465 0f40 7869     		ldr	r0, [r7, #20]
 20466 0f42 FFF7FEFF 		bl	strcat
2665:..\src/command_processing.c **** 			
2666:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20467              		.loc 1 2666 0
 20468 0f46 07F11C03 		add	r3, r7, #28
 20469 0f4a 624A     		ldr	r2, .L785+44
 20470 0f4c 1C46     		mov	r4, r3
 20471 0f4e 1546     		mov	r5, r2
 20472 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20473 0f52 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20474 0f54 2B68     		ldr	r3, [r5]
 20475 0f56 2380     		strh	r3, [r4]	@ movhi
2667:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20476              		.loc 1 2667 0
 20477 0f58 5C4A     		ldr	r2, .L785+36
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 449


 20478 0f5a D7F89430 		ldr	r3, [r7, #148]
 20479 0f5e 1344     		add	r3, r3, r2
 20480 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20481 0f62 1946     		mov	r1, r3
 20482 0f64 D7F88C20 		ldr	r2, [r7, #140]
 20483 0f68 0B46     		mov	r3, r1
 20484 0f6a 9B00     		lsls	r3, r3, #2
 20485 0f6c 0B44     		add	r3, r3, r1
 20486 0f6e 1344     		add	r3, r3, r2
 20487 0f70 03F20223 		addw	r3, r3, #514
 20488 0f74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20489 0f76 002B     		cmp	r3, #0
 20490 0f78 0FD0     		beq	.L764
2668:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20491              		.loc 1 2668 0
 20492 0f7a 07F11C03 		add	r3, r7, #28
 20493 0f7e 1846     		mov	r0, r3
 20494 0f80 FFF7FEFF 		bl	strlen
 20495 0f84 0346     		mov	r3, r0
 20496 0f86 1A46     		mov	r2, r3
 20497 0f88 07F11C03 		add	r3, r7, #28
 20498 0f8c 1344     		add	r3, r3, r2
 20499 0f8e 524A     		ldr	r2, .L785+48
 20500 0f90 1068     		ldr	r0, [r2]	@ unaligned
 20501 0f92 1860     		str	r0, [r3]	@ unaligned
 20502 0f94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20503 0f96 9A80     		strh	r2, [r3, #4]	@ unaligned
 20504 0f98 0EE0     		b	.L765
 20505              	.L764:
2669:..\src/command_processing.c **** 			else
2670:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20506              		.loc 1 2670 0
 20507 0f9a 07F11C03 		add	r3, r7, #28
 20508 0f9e 1846     		mov	r0, r3
 20509 0fa0 FFF7FEFF 		bl	strlen
 20510 0fa4 0346     		mov	r3, r0
 20511 0fa6 1A46     		mov	r2, r3
 20512 0fa8 07F11C03 		add	r3, r7, #28
 20513 0fac 1344     		add	r3, r3, r2
 20514 0fae 4B4A     		ldr	r2, .L785+52
 20515 0fb0 1068     		ldr	r0, [r2]	@ unaligned
 20516 0fb2 1860     		str	r0, [r3]	@ unaligned
 20517 0fb4 1279     		ldrb	r2, [r2, #4]
 20518 0fb6 1A71     		strb	r2, [r3, #4]
 20519              	.L765:
2671:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20520              		.loc 1 2671 0
 20521 0fb8 07F11C03 		add	r3, r7, #28
 20522 0fbc 1846     		mov	r0, r3
 20523 0fbe FFF7FEFF 		bl	strlen
 20524 0fc2 0346     		mov	r3, r0
 20525 0fc4 1A46     		mov	r2, r3
 20526 0fc6 07F11C03 		add	r3, r7, #28
 20527 0fca 1344     		add	r3, r3, r2
 20528 0fcc 444A     		ldr	r2, .L785+56
 20529 0fce 1C46     		mov	r4, r3
 20530 0fd0 1346     		mov	r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 450


 20531 0fd2 07CB     		ldmia	r3!, {r0, r1, r2}
 20532 0fd4 2060     		str	r0, [r4]	@ unaligned
 20533 0fd6 6160     		str	r1, [r4, #4]	@ unaligned
 20534 0fd8 A260     		str	r2, [r4, #8]	@ unaligned
 20535 0fda 1B88     		ldrh	r3, [r3]	@ unaligned
 20536 0fdc A381     		strh	r3, [r4, #12]	@ unaligned
2672:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20537              		.loc 1 2672 0
 20538 0fde 3B4A     		ldr	r2, .L785+36
 20539 0fe0 D7F89430 		ldr	r3, [r7, #148]
 20540 0fe4 1344     		add	r3, r3, r2
 20541 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20542 0fe8 1946     		mov	r1, r3
 20543 0fea D7F88C20 		ldr	r2, [r7, #140]
 20544 0fee 0B46     		mov	r3, r1
 20545 0ff0 9B00     		lsls	r3, r3, #2
 20546 0ff2 0B44     		add	r3, r3, r1
 20547 0ff4 1344     		add	r3, r3, r2
 20548 0ff6 03F20323 		addw	r3, r3, #515
 20549 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20550 0ffc 002B     		cmp	r3, #0
 20551 0ffe 0FD0     		beq	.L766
2673:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20552              		.loc 1 2673 0
 20553 1000 07F11C03 		add	r3, r7, #28
 20554 1004 1846     		mov	r0, r3
 20555 1006 FFF7FEFF 		bl	strlen
 20556 100a 0346     		mov	r3, r0
 20557 100c 1A46     		mov	r2, r3
 20558 100e 07F11C03 		add	r3, r7, #28
 20559 1012 1344     		add	r3, r3, r2
 20560 1014 304A     		ldr	r2, .L785+48
 20561 1016 1068     		ldr	r0, [r2]	@ unaligned
 20562 1018 1860     		str	r0, [r3]	@ unaligned
 20563 101a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20564 101c 9A80     		strh	r2, [r3, #4]	@ unaligned
 20565 101e 0EE0     		b	.L767
 20566              	.L766:
2674:..\src/command_processing.c **** 			else
2675:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20567              		.loc 1 2675 0
 20568 1020 07F11C03 		add	r3, r7, #28
 20569 1024 1846     		mov	r0, r3
 20570 1026 FFF7FEFF 		bl	strlen
 20571 102a 0346     		mov	r3, r0
 20572 102c 1A46     		mov	r2, r3
 20573 102e 07F11C03 		add	r3, r7, #28
 20574 1032 1344     		add	r3, r3, r2
 20575 1034 294A     		ldr	r2, .L785+52
 20576 1036 1068     		ldr	r0, [r2]	@ unaligned
 20577 1038 1860     		str	r0, [r3]	@ unaligned
 20578 103a 1279     		ldrb	r2, [r2, #4]
 20579 103c 1A71     		strb	r2, [r3, #4]
 20580              	.L767:
2676:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20581              		.loc 1 2676 0
 20582 103e 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 451


 20583 1042 1846     		mov	r0, r3
 20584 1044 FFF7FEFF 		bl	strlen
 20585 1048 0346     		mov	r3, r0
 20586 104a 1A46     		mov	r2, r3
 20587 104c 07F11C03 		add	r3, r7, #28
 20588 1050 1344     		add	r3, r3, r2
 20589 1052 244A     		ldr	r2, .L785+60
 20590 1054 1D46     		mov	r5, r3
 20591 1056 1446     		mov	r4, r2
 20592 1058 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20593 105a 2860     		str	r0, [r5]	@ unaligned
 20594 105c 6960     		str	r1, [r5, #4]	@ unaligned
 20595 105e AA60     		str	r2, [r5, #8]	@ unaligned
 20596 1060 EB60     		str	r3, [r5, #12]	@ unaligned
 20597 1062 2378     		ldrb	r3, [r4]
 20598 1064 2B74     		strb	r3, [r5, #16]
2677:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20599              		.loc 1 2677 0
 20600 1066 194A     		ldr	r2, .L785+36
 20601 1068 D7F89430 		ldr	r3, [r7, #148]
 20602 106c 1344     		add	r3, r3, r2
 20603 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20604 1070 1946     		mov	r1, r3
 20605 1072 D7F88C20 		ldr	r2, [r7, #140]
 20606 1076 0B46     		mov	r3, r1
 20607 1078 9B00     		lsls	r3, r3, #2
 20608 107a 0B44     		add	r3, r3, r1
 20609 107c 1344     		add	r3, r3, r2
 20610 107e 03F50173 		add	r3, r3, #516
 20611 1082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20612 1084 002B     		cmp	r3, #0
 20613 1086 2FD0     		beq	.L768
2678:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20614              		.loc 1 2678 0
 20615 1088 07F11C03 		add	r3, r7, #28
 20616 108c 1846     		mov	r0, r3
 20617 108e FFF7FEFF 		bl	strlen
 20618 1092 0346     		mov	r3, r0
 20619 1094 1A46     		mov	r2, r3
 20620 1096 07F11C03 		add	r3, r7, #28
 20621 109a 1344     		add	r3, r3, r2
 20622 109c 0E4A     		ldr	r2, .L785+48
 20623 109e 1068     		ldr	r0, [r2]	@ unaligned
 20624 10a0 1860     		str	r0, [r3]	@ unaligned
 20625 10a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20626 10a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20627 10a6 2EE0     		b	.L769
 20628              	.L786:
 20629              		.align	2
 20630              	.L785:
 20631 10a8 54190000 		.word	.LC239
 20632 10ac 70190000 		.word	.LC240
 20633 10b0 30110000 		.word	.LC151
 20634 10b4 341A0000 		.word	.LC248
 20635 10b8 501A0000 		.word	.LC249
 20636 10bc 781A0000 		.word	.LC250
 20637 10c0 00000000 		.word	N_IMU_Connected
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 452


 20638 10c4 8C1A0000 		.word	.LC251
 20639 10c8 A01A0000 		.word	.LC252
 20640 10cc 00000000 		.word	IMU_connected
 20641 10d0 B81A0000 		.word	.LC253
 20642 10d4 CC1A0000 		.word	.LC254
 20643 10d8 F4120000 		.word	.LC174
 20644 10dc FC120000 		.word	.LC175
 20645 10e0 E01A0000 		.word	.LC255
 20646 10e4 F01A0000 		.word	.LC256
 20647              	.L768:
2679:..\src/command_processing.c **** 			else
2680:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20648              		.loc 1 2680 0
 20649 10e8 07F11C03 		add	r3, r7, #28
 20650 10ec 1846     		mov	r0, r3
 20651 10ee FFF7FEFF 		bl	strlen
 20652 10f2 0346     		mov	r3, r0
 20653 10f4 1A46     		mov	r2, r3
 20654 10f6 07F11C03 		add	r3, r7, #28
 20655 10fa 1344     		add	r3, r3, r2
 20656 10fc 584A     		ldr	r2, .L787
 20657 10fe 1068     		ldr	r0, [r2]	@ unaligned
 20658 1100 1860     		str	r0, [r3]	@ unaligned
 20659 1102 1279     		ldrb	r2, [r2, #4]
 20660 1104 1A71     		strb	r2, [r3, #4]
 20661              	.L769:
2681:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20662              		.loc 1 2681 0
 20663 1106 07F11C03 		add	r3, r7, #28
 20664 110a 1846     		mov	r0, r3
 20665 110c FFF7FEFF 		bl	strlen
 20666 1110 0346     		mov	r3, r0
 20667 1112 1A46     		mov	r2, r3
 20668 1114 07F11C03 		add	r3, r7, #28
 20669 1118 1344     		add	r3, r3, r2
 20670 111a 524A     		ldr	r2, .L787+4
 20671 111c 1C46     		mov	r4, r3
 20672 111e 1346     		mov	r3, r2
 20673 1120 07CB     		ldmia	r3!, {r0, r1, r2}
 20674 1122 2060     		str	r0, [r4]	@ unaligned
 20675 1124 6160     		str	r1, [r4, #4]	@ unaligned
 20676 1126 A260     		str	r2, [r4, #8]	@ unaligned
 20677 1128 1B88     		ldrh	r3, [r3]	@ unaligned
 20678 112a A381     		strh	r3, [r4, #12]	@ unaligned
2682:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20679              		.loc 1 2682 0
 20680 112c 4E4A     		ldr	r2, .L787+8
 20681 112e D7F89430 		ldr	r3, [r7, #148]
 20682 1132 1344     		add	r3, r3, r2
 20683 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20684 1136 1946     		mov	r1, r3
 20685 1138 D7F88C20 		ldr	r2, [r7, #140]
 20686 113c 0B46     		mov	r3, r1
 20687 113e 9B00     		lsls	r3, r3, #2
 20688 1140 0B44     		add	r3, r3, r1
 20689 1142 1344     		add	r3, r3, r2
 20690 1144 03F20523 		addw	r3, r3, #517
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 453


 20691 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20692 114a 002B     		cmp	r3, #0
 20693 114c 0FD0     		beq	.L770
2683:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20694              		.loc 1 2683 0
 20695 114e 07F11C03 		add	r3, r7, #28
 20696 1152 1846     		mov	r0, r3
 20697 1154 FFF7FEFF 		bl	strlen
 20698 1158 0346     		mov	r3, r0
 20699 115a 1A46     		mov	r2, r3
 20700 115c 07F11C03 		add	r3, r7, #28
 20701 1160 1344     		add	r3, r3, r2
 20702 1162 424A     		ldr	r2, .L787+12
 20703 1164 1068     		ldr	r0, [r2]	@ unaligned
 20704 1166 1860     		str	r0, [r3]	@ unaligned
 20705 1168 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20706 116a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20707 116c 0EE0     		b	.L771
 20708              	.L770:
2684:..\src/command_processing.c **** 			else
2685:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20709              		.loc 1 2685 0
 20710 116e 07F11C03 		add	r3, r7, #28
 20711 1172 1846     		mov	r0, r3
 20712 1174 FFF7FEFF 		bl	strlen
 20713 1178 0346     		mov	r3, r0
 20714 117a 1A46     		mov	r2, r3
 20715 117c 07F11C03 		add	r3, r7, #28
 20716 1180 1344     		add	r3, r3, r2
 20717 1182 374A     		ldr	r2, .L787
 20718 1184 1068     		ldr	r0, [r2]	@ unaligned
 20719 1186 1860     		str	r0, [r3]	@ unaligned
 20720 1188 1279     		ldrb	r2, [r2, #4]
 20721 118a 1A71     		strb	r2, [r3, #4]
 20722              	.L771:
2686:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20723              		.loc 1 2686 0
 20724 118c 07F11C03 		add	r3, r7, #28
 20725 1190 1846     		mov	r0, r3
 20726 1192 FFF7FEFF 		bl	strlen
 20727 1196 0346     		mov	r3, r0
 20728 1198 1A46     		mov	r2, r3
 20729 119a 07F11C03 		add	r3, r7, #28
 20730 119e 1344     		add	r3, r3, r2
 20731 11a0 334A     		ldr	r2, .L787+16
 20732 11a2 1C46     		mov	r4, r3
 20733 11a4 1346     		mov	r3, r2
 20734 11a6 07CB     		ldmia	r3!, {r0, r1, r2}
 20735 11a8 2060     		str	r0, [r4]	@ unaligned
 20736 11aa 6160     		str	r1, [r4, #4]	@ unaligned
 20737 11ac A260     		str	r2, [r4, #8]	@ unaligned
 20738 11ae 1A88     		ldrh	r2, [r3]	@ unaligned
 20739 11b0 9B78     		ldrb	r3, [r3, #2]
 20740 11b2 A281     		strh	r2, [r4, #12]	@ unaligned
 20741 11b4 A373     		strb	r3, [r4, #14]
2687:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20742              		.loc 1 2687 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 454


 20743 11b6 2C4A     		ldr	r2, .L787+8
 20744 11b8 D7F89430 		ldr	r3, [r7, #148]
 20745 11bc 1344     		add	r3, r3, r2
 20746 11be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20747 11c0 1946     		mov	r1, r3
 20748 11c2 D7F88C20 		ldr	r2, [r7, #140]
 20749 11c6 0B46     		mov	r3, r1
 20750 11c8 9B00     		lsls	r3, r3, #2
 20751 11ca 0B44     		add	r3, r3, r1
 20752 11cc 1344     		add	r3, r3, r2
 20753 11ce 03F20623 		addw	r3, r3, #518
 20754 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20755 11d4 002B     		cmp	r3, #0
 20756 11d6 0FD0     		beq	.L772
2688:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20757              		.loc 1 2688 0
 20758 11d8 07F11C03 		add	r3, r7, #28
 20759 11dc 1846     		mov	r0, r3
 20760 11de FFF7FEFF 		bl	strlen
 20761 11e2 0346     		mov	r3, r0
 20762 11e4 1A46     		mov	r2, r3
 20763 11e6 07F11C03 		add	r3, r7, #28
 20764 11ea 1344     		add	r3, r3, r2
 20765 11ec 1F4A     		ldr	r2, .L787+12
 20766 11ee 1068     		ldr	r0, [r2]	@ unaligned
 20767 11f0 1860     		str	r0, [r3]	@ unaligned
 20768 11f2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20769 11f4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20770 11f6 0EE0     		b	.L773
 20771              	.L772:
2689:..\src/command_processing.c **** 			else
2690:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20772              		.loc 1 2690 0
 20773 11f8 07F11C03 		add	r3, r7, #28
 20774 11fc 1846     		mov	r0, r3
 20775 11fe FFF7FEFF 		bl	strlen
 20776 1202 0346     		mov	r3, r0
 20777 1204 1A46     		mov	r2, r3
 20778 1206 07F11C03 		add	r3, r7, #28
 20779 120a 1344     		add	r3, r3, r2
 20780 120c 144A     		ldr	r2, .L787
 20781 120e 1068     		ldr	r0, [r2]	@ unaligned
 20782 1210 1860     		str	r0, [r3]	@ unaligned
 20783 1212 1279     		ldrb	r2, [r2, #4]
 20784 1214 1A71     		strb	r2, [r3, #4]
 20785              	.L773:
2691:..\src/command_processing.c **** 				 
2692:..\src/command_processing.c **** 			strcat(info_string, str);
 20786              		.loc 1 2692 0 discriminator 2
 20787 1216 07F11C03 		add	r3, r7, #28
 20788 121a 1946     		mov	r1, r3
 20789 121c 7869     		ldr	r0, [r7, #20]
 20790 121e FFF7FEFF 		bl	strcat
2662:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20791              		.loc 1 2662 0 discriminator 2
 20792 1222 D7F89430 		ldr	r3, [r7, #148]
 20793 1226 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 455


 20794 1228 C7F89430 		str	r3, [r7, #148]
 20795              	.L763:
2662:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20796              		.loc 1 2662 0 is_stmt 0 discriminator 1
 20797 122c 114B     		ldr	r3, .L787+20
 20798 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20799 1230 1A46     		mov	r2, r3
 20800 1232 D7F89430 		ldr	r3, [r7, #148]
 20801 1236 9A42     		cmp	r2, r3
 20802 1238 3FF773AE 		bgt	.L774
2693:..\src/command_processing.c **** 		}       
2694:..\src/command_processing.c **** 		
2695:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20803              		.loc 1 2695 0 is_stmt 1
 20804 123c 7869     		ldr	r0, [r7, #20]
 20805 123e FFF7FEFF 		bl	strlen
 20806 1242 0346     		mov	r3, r0
 20807 1244 1A46     		mov	r2, r3
 20808 1246 7B69     		ldr	r3, [r7, #20]
 20809 1248 1344     		add	r3, r3, r2
 20810 124a 0B4A     		ldr	r2, .L787+24
 20811 124c 1188     		ldrh	r1, [r2]	@ unaligned
 20812 124e 9278     		ldrb	r2, [r2, #2]
 20813 1250 1980     		strh	r1, [r3]	@ unaligned
 20814 1252 9A70     		strb	r2, [r3, #2]
 20815              	.L776:
2696:..\src/command_processing.c **** 	}
2697:..\src/command_processing.c **** }
 20816              		.loc 1 2697 0
 20817 1254 00BF     		nop
 20818 1256 9C37     		adds	r7, r7, #156
 20819              		.cfi_def_cfa_offset 36
 20820 1258 BD46     		mov	sp, r7
 20821              		.cfi_def_cfa_register 13
 20822              		@ sp needed
 20823 125a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20824              	.L788:
 20825 125e 00BF     		.align	2
 20826              	.L787:
 20827 1260 FC120000 		.word	.LC175
 20828 1264 041B0000 		.word	.LC257
 20829 1268 00000000 		.word	IMU_connected
 20830 126c F4120000 		.word	.LC174
 20831 1270 141B0000 		.word	.LC258
 20832 1274 00000000 		.word	N_IMU_Connected
 20833 1278 30110000 		.word	.LC151
 20834              		.cfi_endproc
 20835              	.LFE74:
 20836              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20837              		.section	.rodata
 20838 1e92 0000     		.align	2
 20839              	.LC292:
 20840 1e94 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20840      2C4D696E 
 20840      2C536563 
 20840      2C00
 20841 1ea2 0000     		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 456


 20842              	.LC293:
 20843 1ea4 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20843      25645F50 
 20843      6F732C00 
 20844              		.align	2
 20845              	.LC294:
 20846 1eb0 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20846      25645F43 
 20846      7572722C 
 20846      00
 20847 1ebd 000000   		.align	2
 20848              	.LC295:
 20849 1ec0 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 20849      315F6163 
 20849      742C454D 
 20849      475F325F 
 20849      6163742C 
 20850 1ef3 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 20850      5F74696D 
 20850      652C546F 
 20850      74616C5F 
 20850      72657374 
 20851              		.section	.text.prepare_SD_legend,"ax",%progbits
 20852              		.align	2
 20853              		.global	prepare_SD_legend
 20854              		.thumb
 20855              		.thumb_func
 20856              		.type	prepare_SD_legend, %function
 20857              	prepare_SD_legend:
 20858              	.LFB75:
2698:..\src/command_processing.c **** 
2699:..\src/command_processing.c **** 
2700:..\src/command_processing.c **** //==============================================================================
2701:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2702:..\src/command_processing.c **** //==============================================================================
2703:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2704:..\src/command_processing.c **** {
 20859              		.loc 1 2704 0
 20860              		.cfi_startproc
 20861              		@ args = 0, pretend = 0, frame = 112
 20862              		@ frame_needed = 1, uses_anonymous_args = 0
 20863 0000 90B5     		push	{r4, r7, lr}
 20864              		.cfi_def_cfa_offset 12
 20865              		.cfi_offset 4, -12
 20866              		.cfi_offset 7, -8
 20867              		.cfi_offset 14, -4
 20868 0002 9DB0     		sub	sp, sp, #116
 20869              		.cfi_def_cfa_offset 128
 20870 0004 00AF     		add	r7, sp, #0
 20871              		.cfi_def_cfa_register 7
 20872 0006 7860     		str	r0, [r7, #4]
2705:..\src/command_processing.c ****     char str[100];  
2706:..\src/command_processing.c ****     int i;
2707:..\src/command_processing.c ****         
2708:..\src/command_processing.c ****     // Legend
2709:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20873              		.loc 1 2709 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 457


 20874 0008 7B68     		ldr	r3, [r7, #4]
 20875 000a 2A4A     		ldr	r2, .L794
 20876 000c 1C46     		mov	r4, r3
 20877 000e 1346     		mov	r3, r2
 20878 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20879 0012 2060     		str	r0, [r4]	@ unaligned
 20880 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20881 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20882 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20883 001a A381     		strh	r3, [r4, #12]	@ unaligned
2710:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20884              		.loc 1 2710 0
 20885 001c 0123     		movs	r3, #1
 20886 001e FB66     		str	r3, [r7, #108]
 20887 0020 0FE0     		b	.L790
 20888              	.L791:
2711:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20889              		.loc 1 2711 0 discriminator 3
 20890 0022 07F10803 		add	r3, r7, #8
 20891 0026 FA6E     		ldr	r2, [r7, #108]
 20892 0028 2349     		ldr	r1, .L794+4
 20893 002a 1846     		mov	r0, r3
 20894 002c FFF7FEFF 		bl	sprintf
2712:..\src/command_processing.c ****         strcat(info_string, str);
 20895              		.loc 1 2712 0 discriminator 3
 20896 0030 07F10803 		add	r3, r7, #8
 20897 0034 1946     		mov	r1, r3
 20898 0036 7868     		ldr	r0, [r7, #4]
 20899 0038 FFF7FEFF 		bl	strcat
2710:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20900              		.loc 1 2710 0 discriminator 3
 20901 003c FB6E     		ldr	r3, [r7, #108]
 20902 003e 0133     		adds	r3, r3, #1
 20903 0040 FB66     		str	r3, [r7, #108]
 20904              	.L790:
2710:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20905              		.loc 1 2710 0 is_stmt 0 discriminator 1
 20906 0042 FB6E     		ldr	r3, [r7, #108]
 20907 0044 0A2B     		cmp	r3, #10
 20908 0046 ECDD     		ble	.L791
2713:..\src/command_processing.c ****     }
2714:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20909              		.loc 1 2714 0 is_stmt 1
 20910 0048 0123     		movs	r3, #1
 20911 004a FB66     		str	r3, [r7, #108]
 20912 004c 0FE0     		b	.L792
 20913              	.L793:
2715:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20914              		.loc 1 2715 0 discriminator 3
 20915 004e 07F10803 		add	r3, r7, #8
 20916 0052 FA6E     		ldr	r2, [r7, #108]
 20917 0054 1949     		ldr	r1, .L794+8
 20918 0056 1846     		mov	r0, r3
 20919 0058 FFF7FEFF 		bl	sprintf
2716:..\src/command_processing.c ****         strcat(info_string, str);
 20920              		.loc 1 2716 0 discriminator 3
 20921 005c 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 458


 20922 0060 1946     		mov	r1, r3
 20923 0062 7868     		ldr	r0, [r7, #4]
 20924 0064 FFF7FEFF 		bl	strcat
2714:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20925              		.loc 1 2714 0 discriminator 3
 20926 0068 FB6E     		ldr	r3, [r7, #108]
 20927 006a 0133     		adds	r3, r3, #1
 20928 006c FB66     		str	r3, [r7, #108]
 20929              	.L792:
2714:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20930              		.loc 1 2714 0 is_stmt 0 discriminator 1
 20931 006e FB6E     		ldr	r3, [r7, #108]
 20932 0070 042B     		cmp	r3, #4
 20933 0072 ECDD     		ble	.L793
2717:..\src/command_processing.c ****     }
2718:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 20934              		.loc 1 2718 0 is_stmt 1
 20935 0074 07F10803 		add	r3, r7, #8
 20936 0078 114A     		ldr	r2, .L794+12
 20937 007a 1846     		mov	r0, r3
 20938 007c 1146     		mov	r1, r2
 20939 007e 4D23     		movs	r3, #77
 20940 0080 1A46     		mov	r2, r3
 20941 0082 FFF7FEFF 		bl	memcpy
2719:..\src/command_processing.c ****     strcat(info_string, str);
 20942              		.loc 1 2719 0
 20943 0086 07F10803 		add	r3, r7, #8
 20944 008a 1946     		mov	r1, r3
 20945 008c 7868     		ldr	r0, [r7, #4]
 20946 008e FFF7FEFF 		bl	strcat
2720:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20947              		.loc 1 2720 0
 20948 0092 7868     		ldr	r0, [r7, #4]
 20949 0094 FFF7FEFF 		bl	strlen
 20950 0098 0346     		mov	r3, r0
 20951 009a 1A46     		mov	r2, r3
 20952 009c 7B68     		ldr	r3, [r7, #4]
 20953 009e 1344     		add	r3, r3, r2
 20954 00a0 084A     		ldr	r2, .L794+16
 20955 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 20956 00a4 9278     		ldrb	r2, [r2, #2]
 20957 00a6 1980     		strh	r1, [r3]	@ unaligned
 20958 00a8 9A70     		strb	r2, [r3, #2]
2721:..\src/command_processing.c **** }
 20959              		.loc 1 2721 0
 20960 00aa 00BF     		nop
 20961 00ac 7437     		adds	r7, r7, #116
 20962              		.cfi_def_cfa_offset 12
 20963 00ae BD46     		mov	sp, r7
 20964              		.cfi_def_cfa_register 13
 20965              		@ sp needed
 20966 00b0 90BD     		pop	{r4, r7, pc}
 20967              	.L795:
 20968 00b2 00BF     		.align	2
 20969              	.L794:
 20970 00b4 941E0000 		.word	.LC292
 20971 00b8 A41E0000 		.word	.LC293
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 459


 20972 00bc B01E0000 		.word	.LC294
 20973 00c0 C01E0000 		.word	.LC295
 20974 00c4 30110000 		.word	.LC151
 20975              		.cfi_endproc
 20976              	.LFE75:
 20977              		.size	prepare_SD_legend, .-prepare_SD_legend
 20978              		.section	.rodata
 20979 1f0d 000000   		.align	2
 20980              	.LC296:
 20981 1f10 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20981      2C253032 
 20981      642C2530 
 20981      32642C00 
 20982              		.align	2
 20983              	.LC297:
 20984 1f20 256C752C 		.ascii	"%lu,\000"
 20984      00
 20985 1f25 000000   		.align	2
 20986              	.LC298:
 20987 1f28 256C752C 		.ascii	"%lu,%lu,\000"
 20987      256C752C 
 20987      00
 20988 1f31 000000   		.align	2
 20989              	.LC299:
 20990 1f34 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 20990      256C752C 
 20990      256C752C 
 20990      256C7500 
 20991              		.section	.text.prepare_SD_info,"ax",%progbits
 20992              		.align	2
 20993              		.global	prepare_SD_info
 20994              		.thumb
 20995              		.thumb_func
 20996              		.type	prepare_SD_info, %function
 20997              	prepare_SD_info:
 20998              	.LFB76:
2722:..\src/command_processing.c **** 
2723:..\src/command_processing.c **** 
2724:..\src/command_processing.c **** //==============================================================================
2725:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2726:..\src/command_processing.c **** //==============================================================================
2727:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2728:..\src/command_processing.c **** {
 20999              		.loc 1 2728 0
 21000              		.cfi_startproc
 21001              		@ args = 0, pretend = 0, frame = 112
 21002              		@ frame_needed = 1, uses_anonymous_args = 0
 21003 0000 90B5     		push	{r4, r7, lr}
 21004              		.cfi_def_cfa_offset 12
 21005              		.cfi_offset 4, -12
 21006              		.cfi_offset 7, -8
 21007              		.cfi_offset 14, -4
 21008 0002 9FB0     		sub	sp, sp, #124
 21009              		.cfi_def_cfa_offset 136
 21010 0004 02AF     		add	r7, sp, #8
 21011              		.cfi_def_cfa 7, 128
 21012 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 460


2729:..\src/command_processing.c ****     char str[100];  
2730:..\src/command_processing.c ****     int i;
2731:..\src/command_processing.c ****             
2732:..\src/command_processing.c ****     strcpy(info_string, "");
 21013              		.loc 1 2732 0
 21014 0008 7B68     		ldr	r3, [r7, #4]
 21015 000a 0022     		movs	r2, #0
 21016 000c 1A70     		strb	r2, [r3]
2733:..\src/command_processing.c ****     
2734:..\src/command_processing.c ****     // Time
2735:..\src/command_processing.c ****     strcat(info_string, "");
2736:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 21017              		.loc 1 2736 0
 21018 000e 424B     		ldr	r3, .L801
 21019 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 21020 0014 1A46     		mov	r2, r3
 21021 0016 404B     		ldr	r3, .L801
 21022 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 21023 001c 1946     		mov	r1, r3
 21024 001e 3E4B     		ldr	r3, .L801
 21025 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 21026 0024 07F10800 		add	r0, r7, #8
 21027 0028 0093     		str	r3, [sp]
 21028 002a 0B46     		mov	r3, r1
 21029 002c 3B49     		ldr	r1, .L801+4
 21030 002e FFF7FEFF 		bl	sprintf
2737:..\src/command_processing.c ****     strcat(info_string, str);
 21031              		.loc 1 2737 0
 21032 0032 07F10803 		add	r3, r7, #8
 21033 0036 1946     		mov	r1, r3
 21034 0038 7868     		ldr	r0, [r7, #4]
 21035 003a FFF7FEFF 		bl	strcat
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c ****     // Pos_Bin
2740:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 21036              		.loc 1 2740 0
 21037 003e 0123     		movs	r3, #1
 21038 0040 FB66     		str	r3, [r7, #108]
 21039 0042 14E0     		b	.L797
 21040              	.L798:
2741:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21041              		.loc 1 2741 0 discriminator 3
 21042 0044 FB6E     		ldr	r3, [r7, #108]
 21043 0046 013B     		subs	r3, r3, #1
 21044 0048 334A     		ldr	r2, .L801
 21045 004a 0633     		adds	r3, r3, #6
 21046 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21047 0050 07F10803 		add	r3, r7, #8
 21048 0054 3249     		ldr	r1, .L801+8
 21049 0056 1846     		mov	r0, r3
 21050 0058 FFF7FEFF 		bl	sprintf
2742:..\src/command_processing.c ****         strcat(info_string, str);
 21051              		.loc 1 2742 0 discriminator 3
 21052 005c 07F10803 		add	r3, r7, #8
 21053 0060 1946     		mov	r1, r3
 21054 0062 7868     		ldr	r0, [r7, #4]
 21055 0064 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 461


2740:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21056              		.loc 1 2740 0 discriminator 3
 21057 0068 FB6E     		ldr	r3, [r7, #108]
 21058 006a 0133     		adds	r3, r3, #1
 21059 006c FB66     		str	r3, [r7, #108]
 21060              	.L797:
2740:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21061              		.loc 1 2740 0 is_stmt 0 discriminator 1
 21062 006e FB6E     		ldr	r3, [r7, #108]
 21063 0070 0A2B     		cmp	r3, #10
 21064 0072 E7DD     		ble	.L798
2743:..\src/command_processing.c ****     }
2744:..\src/command_processing.c ****     
2745:..\src/command_processing.c ****     // Curr_Bin
2746:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 21065              		.loc 1 2746 0 is_stmt 1
 21066 0074 0123     		movs	r3, #1
 21067 0076 FB66     		str	r3, [r7, #108]
 21068 0078 14E0     		b	.L799
 21069              	.L800:
2747:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21070              		.loc 1 2747 0 discriminator 3
 21071 007a FB6E     		ldr	r3, [r7, #108]
 21072 007c 013B     		subs	r3, r3, #1
 21073 007e 264A     		ldr	r2, .L801
 21074 0080 1033     		adds	r3, r3, #16
 21075 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21076 0086 07F10803 		add	r3, r7, #8
 21077 008a 2549     		ldr	r1, .L801+8
 21078 008c 1846     		mov	r0, r3
 21079 008e FFF7FEFF 		bl	sprintf
2748:..\src/command_processing.c ****         strcat(info_string, str);
 21080              		.loc 1 2748 0 discriminator 3
 21081 0092 07F10803 		add	r3, r7, #8
 21082 0096 1946     		mov	r1, r3
 21083 0098 7868     		ldr	r0, [r7, #4]
 21084 009a FFF7FEFF 		bl	strcat
2746:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21085              		.loc 1 2746 0 discriminator 3
 21086 009e FB6E     		ldr	r3, [r7, #108]
 21087 00a0 0133     		adds	r3, r3, #1
 21088 00a2 FB66     		str	r3, [r7, #108]
 21089              	.L799:
2746:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21090              		.loc 1 2746 0 is_stmt 0 discriminator 1
 21091 00a4 FB6E     		ldr	r3, [r7, #108]
 21092 00a6 042B     		cmp	r3, #4
 21093 00a8 E7DD     		ble	.L800
2749:..\src/command_processing.c ****     }
2750:..\src/command_processing.c ****        
2751:..\src/command_processing.c ****     // EMG_1, EMG_2
2752:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 21094              		.loc 1 2752 0 is_stmt 1
 21095 00aa 1B4B     		ldr	r3, .L801
 21096 00ac 1A69     		ldr	r2, [r3, #16]
 21097 00ae 1A4B     		ldr	r3, .L801
 21098 00b0 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 462


 21099 00b2 07F10800 		add	r0, r7, #8
 21100 00b6 1B49     		ldr	r1, .L801+12
 21101 00b8 FFF7FEFF 		bl	sprintf
2753:..\src/command_processing.c ****     strcat(info_string, str);
 21102              		.loc 1 2753 0
 21103 00bc 07F10803 		add	r3, r7, #8
 21104 00c0 1946     		mov	r1, r3
 21105 00c2 7868     		ldr	r0, [r7, #4]
 21106 00c4 FFF7FEFF 		bl	strcat
2754:..\src/command_processing.c ****     
2755:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2756:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 21107              		.loc 1 2756 0
 21108 00c8 134B     		ldr	r3, .L801
 21109 00ca 196D     		ldr	r1, [r3, #80]
 21110 00cc 124B     		ldr	r3, .L801
 21111 00ce 5C6D     		ldr	r4, [r3, #84]
 21112 00d0 114B     		ldr	r3, .L801
 21113 00d2 9B6D     		ldr	r3, [r3, #88]
 21114 00d4 104A     		ldr	r2, .L801
 21115 00d6 D26D     		ldr	r2, [r2, #92]
 21116 00d8 07F10800 		add	r0, r7, #8
 21117 00dc 0192     		str	r2, [sp, #4]
 21118 00de 0093     		str	r3, [sp]
 21119 00e0 2346     		mov	r3, r4
 21120 00e2 0A46     		mov	r2, r1
 21121 00e4 1049     		ldr	r1, .L801+16
 21122 00e6 FFF7FEFF 		bl	sprintf
2757:..\src/command_processing.c ****     strcat(info_string, str);
 21123              		.loc 1 2757 0
 21124 00ea 07F10803 		add	r3, r7, #8
 21125 00ee 1946     		mov	r1, r3
 21126 00f0 7868     		ldr	r0, [r7, #4]
 21127 00f2 FFF7FEFF 		bl	strcat
2758:..\src/command_processing.c ****     
2759:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21128              		.loc 1 2759 0
 21129 00f6 7868     		ldr	r0, [r7, #4]
 21130 00f8 FFF7FEFF 		bl	strlen
 21131 00fc 0346     		mov	r3, r0
 21132 00fe 1A46     		mov	r2, r3
 21133 0100 7B68     		ldr	r3, [r7, #4]
 21134 0102 1344     		add	r3, r3, r2
 21135 0104 094A     		ldr	r2, .L801+20
 21136 0106 1188     		ldrh	r1, [r2]	@ unaligned
 21137 0108 9278     		ldrb	r2, [r2, #2]
 21138 010a 1980     		strh	r1, [r3]	@ unaligned
 21139 010c 9A70     		strb	r2, [r3, #2]
2760:..\src/command_processing.c **** }
 21140              		.loc 1 2760 0
 21141 010e 00BF     		nop
 21142 0110 7437     		adds	r7, r7, #116
 21143              		.cfi_def_cfa_offset 12
 21144 0112 BD46     		mov	sp, r7
 21145              		.cfi_def_cfa_register 13
 21146              		@ sp needed
 21147 0114 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 463


 21148              	.L802:
 21149 0116 00BF     		.align	2
 21150              	.L801:
 21151 0118 00000000 		.word	g_mem
 21152 011c 101F0000 		.word	.LC296
 21153 0120 201F0000 		.word	.LC297
 21154 0124 281F0000 		.word	.LC298
 21155 0128 341F0000 		.word	.LC299
 21156 012c 30110000 		.word	.LC151
 21157              		.cfi_endproc
 21158              	.LFE76:
 21159              		.size	prepare_SD_info, .-prepare_SD_info
 21160              		.section	.rodata
 21161              		.align	2
 21162              	.LC300:
 21163 1f44 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 21163      2C454D47 
 21163      312C454D 
 21163      47320A00 
 21164              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21165              		.align	2
 21166              		.global	prepare_SD_EMG_History_legend
 21167              		.thumb
 21168              		.thumb_func
 21169              		.type	prepare_SD_EMG_History_legend, %function
 21170              	prepare_SD_EMG_History_legend:
 21171              	.LFB77:
2761:..\src/command_processing.c **** 
2762:..\src/command_processing.c **** //==============================================================================
2763:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2764:..\src/command_processing.c **** //==============================================================================
2765:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2766:..\src/command_processing.c **** {
 21172              		.loc 1 2766 0
 21173              		.cfi_startproc
 21174              		@ args = 0, pretend = 0, frame = 8
 21175              		@ frame_needed = 1, uses_anonymous_args = 0
 21176              		@ link register save eliminated.
 21177 0000 B0B4     		push	{r4, r5, r7}
 21178              		.cfi_def_cfa_offset 12
 21179              		.cfi_offset 4, -12
 21180              		.cfi_offset 5, -8
 21181              		.cfi_offset 7, -4
 21182 0002 83B0     		sub	sp, sp, #12
 21183              		.cfi_def_cfa_offset 24
 21184 0004 00AF     		add	r7, sp, #0
 21185              		.cfi_def_cfa_register 7
 21186 0006 7860     		str	r0, [r7, #4]
2767:..\src/command_processing.c ****         
2768:..\src/command_processing.c ****     // Legend
2769:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21187              		.loc 1 2769 0
 21188 0008 7B68     		ldr	r3, [r7, #4]
 21189 000a 064A     		ldr	r2, .L804
 21190 000c 1C46     		mov	r4, r3
 21191 000e 1546     		mov	r5, r2
 21192 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 464


 21193 0012 2060     		str	r0, [r4]	@ unaligned
 21194 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21195 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21196 0018 E360     		str	r3, [r4, #12]	@ unaligned
2770:..\src/command_processing.c ****     
2771:..\src/command_processing.c **** }
 21197              		.loc 1 2771 0
 21198 001a 00BF     		nop
 21199 001c 0C37     		adds	r7, r7, #12
 21200              		.cfi_def_cfa_offset 12
 21201 001e BD46     		mov	sp, r7
 21202              		.cfi_def_cfa_register 13
 21203              		@ sp needed
 21204 0020 B0BC     		pop	{r4, r5, r7}
 21205              		.cfi_restore 7
 21206              		.cfi_restore 5
 21207              		.cfi_restore 4
 21208              		.cfi_def_cfa_offset 0
 21209 0022 7047     		bx	lr
 21210              	.L805:
 21211              		.align	2
 21212              	.L804:
 21213 0024 441F0000 		.word	.LC300
 21214              		.cfi_endproc
 21215              	.LFE77:
 21216              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21217              		.section	.rodata
 21218              		.align	2
 21219              	.LC301:
 21220 1f54 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21220      2C25752C 
 21220      25750A00 
 21221              		.global	__aeabi_dadd
 21222              		.global	__aeabi_d2f
 21223              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21224              		.align	2
 21225              		.global	prepare_SD_EMG_history
 21226              		.thumb
 21227              		.thumb_func
 21228              		.type	prepare_SD_EMG_history, %function
 21229              	prepare_SD_EMG_history:
 21230              	.LFB78:
2772:..\src/command_processing.c **** 
2773:..\src/command_processing.c **** //==============================================================================
2774:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2775:..\src/command_processing.c **** //==============================================================================
2776:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2777:..\src/command_processing.c **** {
 21231              		.loc 1 2777 0
 21232              		.cfi_startproc
 21233              		@ args = 0, pretend = 0, frame = 120
 21234              		@ frame_needed = 1, uses_anonymous_args = 0
 21235 0000 B0B5     		push	{r4, r5, r7, lr}
 21236              		.cfi_def_cfa_offset 16
 21237              		.cfi_offset 4, -16
 21238              		.cfi_offset 5, -12
 21239              		.cfi_offset 7, -8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 465


 21240              		.cfi_offset 14, -4
 21241 0002 A0B0     		sub	sp, sp, #128
 21242              		.cfi_def_cfa_offset 144
 21243 0004 02AF     		add	r7, sp, #8
 21244              		.cfi_def_cfa 7, 136
 21245 0006 7860     		str	r0, [r7, #4]
2778:..\src/command_processing.c ****     char str_data[100] = "";
 21246              		.loc 1 2778 0
 21247 0008 0023     		movs	r3, #0
 21248 000a FB60     		str	r3, [r7, #12]
 21249 000c 07F11003 		add	r3, r7, #16
 21250 0010 6022     		movs	r2, #96
 21251 0012 0021     		movs	r1, #0
 21252 0014 1846     		mov	r0, r3
 21253 0016 FFF7FEFF 		bl	memset
2779:..\src/command_processing.c ****     uint16 v_idx = 0;
 21254              		.loc 1 2779 0
 21255 001a 0023     		movs	r3, #0
 21256 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2780:..\src/command_processing.c ****     static float h_time = 0.0;
2781:..\src/command_processing.c ****                 
2782:..\src/command_processing.c ****     strcpy(info_string, "");
 21257              		.loc 1 2782 0
 21258 0020 7B68     		ldr	r3, [r7, #4]
 21259 0022 0022     		movs	r2, #0
 21260 0024 1A70     		strb	r2, [r3]
 21261              	.LBB25:
2783:..\src/command_processing.c ****     
2784:..\src/command_processing.c ****     // Oldest samples of the vector
2785:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21262              		.loc 1 2785 0
 21263 0026 0023     		movs	r3, #0
 21264 0028 3B67     		str	r3, [r7, #112]
 21265 002a 4AE0     		b	.L807
 21266              	.L809:
2786:..\src/command_processing.c ****               
2787:..\src/command_processing.c ****         // Send line per line all the history vector
2788:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2789:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21267              		.loc 1 2789 0
 21268 002c 2C4B     		ldr	r3, .L810+8
 21269 002e 1B68     		ldr	r3, [r3]
 21270 0030 9AB2     		uxth	r2, r3
 21271 0032 3B6F     		ldr	r3, [r7, #112]
 21272 0034 9BB2     		uxth	r3, r3
 21273 0036 1344     		add	r3, r3, r2
 21274 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2790:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21275              		.loc 1 2790 0
 21276 003c B7F87630 		ldrh	r3, [r7, #118]
 21277 0040 B3F5167F 		cmp	r3, #600
 21278 0044 05D9     		bls	.L808
2791:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21279              		.loc 1 2791 0
 21280 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 21281 004a A3F51673 		sub	r3, r3, #600
 21282 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 466


 21283              	.L808:
2792:..\src/command_processing.c ****         }
2793:..\src/command_processing.c ****         
2794:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2795:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21284              		.loc 1 2795 0 discriminator 2
 21285 0052 244B     		ldr	r3, .L810+12
 21286 0054 1B68     		ldr	r3, [r3]	@ float
 21287 0056 1846     		mov	r0, r3
 21288 0058 FFF7FEFF 		bl	__aeabi_f2d
 21289 005c 0446     		mov	r4, r0
 21290 005e 0D46     		mov	r5, r1
 21291 0060 B7F87630 		ldrh	r3, [r7, #118]
 21292 0064 204A     		ldr	r2, .L810+16
 21293 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21294 006a 1946     		mov	r1, r3
 21295 006c B7F87630 		ldrh	r3, [r7, #118]
 21296 0070 1D4A     		ldr	r2, .L810+16
 21297 0072 9B00     		lsls	r3, r3, #2
 21298 0074 1344     		add	r3, r3, r2
 21299 0076 5B88     		ldrh	r3, [r3, #2]
 21300 0078 07F10C00 		add	r0, r7, #12
 21301 007c 0193     		str	r3, [sp, #4]
 21302 007e 0091     		str	r1, [sp]
 21303 0080 2246     		mov	r2, r4
 21304 0082 2B46     		mov	r3, r5
 21305 0084 1949     		ldr	r1, .L810+20
 21306 0086 FFF7FEFF 		bl	sprintf
2796:..\src/command_processing.c ****         
2797:..\src/command_processing.c ****         strcat(info_string, str_data);
 21307              		.loc 1 2797 0 discriminator 2
 21308 008a 07F10C03 		add	r3, r7, #12
 21309 008e 1946     		mov	r1, r3
 21310 0090 7868     		ldr	r0, [r7, #4]
 21311 0092 FFF7FEFF 		bl	strcat
2798:..\src/command_processing.c ****         
2799:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21312              		.loc 1 2799 0 discriminator 2
 21313 0096 134B     		ldr	r3, .L810+12
 21314 0098 1B68     		ldr	r3, [r3]	@ float
 21315 009a 1846     		mov	r0, r3
 21316 009c FFF7FEFF 		bl	__aeabi_f2d
 21317 00a0 0DA3     		adr	r3, .L810
 21318 00a2 D3E90023 		ldrd	r2, [r3]
 21319 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21320 00aa 0346     		mov	r3, r0
 21321 00ac 0C46     		mov	r4, r1
 21322 00ae 1846     		mov	r0, r3
 21323 00b0 2146     		mov	r1, r4
 21324 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21325 00b6 0246     		mov	r2, r0
 21326 00b8 0A4B     		ldr	r3, .L810+12
 21327 00ba 1A60     		str	r2, [r3]	@ float
2785:..\src/command_processing.c ****               
 21328              		.loc 1 2785 0 discriminator 2
 21329 00bc 3B6F     		ldr	r3, [r7, #112]
 21330 00be 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 467


 21331 00c0 3B67     		str	r3, [r7, #112]
 21332              	.L807:
2785:..\src/command_processing.c ****               
 21333              		.loc 1 2785 0 is_stmt 0 discriminator 1
 21334 00c2 3B6F     		ldr	r3, [r7, #112]
 21335 00c4 B3F5167F 		cmp	r3, #600
 21336 00c8 B0DB     		blt	.L809
 21337              	.LBE25:
2800:..\src/command_processing.c **** 
2801:..\src/command_processing.c ****     }
2802:..\src/command_processing.c ****     
2803:..\src/command_processing.c **** }
 21338              		.loc 1 2803 0 is_stmt 1
 21339 00ca 00BF     		nop
 21340 00cc 7837     		adds	r7, r7, #120
 21341              		.cfi_def_cfa_offset 16
 21342 00ce BD46     		mov	sp, r7
 21343              		.cfi_def_cfa_register 13
 21344              		@ sp needed
 21345 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21346              	.L811:
 21347 00d2 00BFAFF3 		.align	3
 21347      0080
 21348              	.L810:
 21349 00d8 9A999999 		.word	-1717986918
 21350 00dc 9999C93F 		.word	1070176665
 21351 00e0 00000000 		.word	emg_history_next_idx
 21352 00e4 00000000 		.word	h_time.11215
 21353 00e8 00000000 		.word	emg_history
 21354 00ec 541F0000 		.word	.LC301
 21355              		.cfi_endproc
 21356              	.LFE78:
 21357              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21358              		.section	.rodata
 21359              		.align	2
 21360              	.LC302:
 21361 1f60 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21361      4F525320 
 21361      494E464F 
 21361      0D0A00
 21362 1f6f 00       		.align	2
 21363              	.LC303:
 21364 1f70 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21364      3A202564 
 21364      09256409 
 21364      25640D0A 
 21364      00
 21365 1f81 000000   		.align	2
 21366              	.LC304:
 21367 1f84 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21367      6F3A2025 
 21367      64092564 
 21367      0925640D 
 21367      0A00
 21368 1f96 0000     		.align	2
 21369              	.LC305:
 21370 1f98 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 468


 21370      3A202564 
 21370      09256409 
 21370      25640D0A 
 21370      00
 21371 1fa9 000000   		.align	2
 21372              	.LC306:
 21373 1fac 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21373      743A2025 
 21373      2E336609 
 21373      252E3366 
 21373      09252E33 
 21374 1fc9 000000   		.align	2
 21375              	.LC307:
 21376 1fcc 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21376      70657261 
 21376      74757265 
 21376      3A202564 
 21376      0D0A00
 21377              		.section	.text.IMU_reading_info,"ax",%progbits
 21378              		.align	2
 21379              		.global	IMU_reading_info
 21380              		.thumb
 21381              		.thumb_func
 21382              		.type	IMU_reading_info, %function
 21383              	IMU_reading_info:
 21384              	.LFB79:
2804:..\src/command_processing.c **** 
2805:..\src/command_processing.c **** //==============================================================================
2806:..\src/command_processing.c **** //                                                              IMU READING INFO
2807:..\src/command_processing.c **** //==============================================================================
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2810:..\src/command_processing.c **** {
 21385              		.loc 1 2810 0
 21386              		.cfi_startproc
 21387              		@ args = 0, pretend = 0, frame = 312
 21388              		@ frame_needed = 1, uses_anonymous_args = 0
 21389 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21390              		.cfi_def_cfa_offset 32
 21391              		.cfi_offset 4, -32
 21392              		.cfi_offset 5, -28
 21393              		.cfi_offset 7, -24
 21394              		.cfi_offset 8, -20
 21395              		.cfi_offset 9, -16
 21396              		.cfi_offset 10, -12
 21397              		.cfi_offset 11, -8
 21398              		.cfi_offset 14, -4
 21399 0004 D4B0     		sub	sp, sp, #336
 21400              		.cfi_def_cfa_offset 368
 21401 0006 06AF     		add	r7, sp, #24
 21402              		.cfi_def_cfa 7, 344
 21403 0008 3B1D     		adds	r3, r7, #4
 21404 000a 1860     		str	r0, [r3]
2811:..\src/command_processing.c ****     char str[300];  
2812:..\src/command_processing.c ****     int i;
2813:..\src/command_processing.c ****                  
2814:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 469


 21405              		.loc 1 2814 0
 21406 000c 3B1D     		adds	r3, r7, #4
 21407 000e 1868     		ldr	r0, [r3]
 21408 0010 FFF7FEFF 		bl	strlen
 21409 0014 0346     		mov	r3, r0
 21410 0016 1A46     		mov	r2, r3
 21411 0018 3B1D     		adds	r3, r7, #4
 21412 001a 1B68     		ldr	r3, [r3]
 21413 001c 1344     		add	r3, r3, r2
 21414 001e C94A     		ldr	r2, .L820
 21415 0020 1C46     		mov	r4, r3
 21416 0022 1346     		mov	r3, r2
 21417 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21418 0026 2060     		str	r0, [r4]	@ unaligned
 21419 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21420 002a A260     		str	r2, [r4, #8]	@ unaligned
 21421 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21422 002e 9B78     		ldrb	r3, [r3, #2]
 21423 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21424 0032 A373     		strb	r3, [r4, #14]
2815:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21425              		.loc 1 2815 0
 21426 0034 0023     		movs	r3, #0
 21427 0036 C7F83431 		str	r3, [r7, #308]
 21428 003a 66E1     		b	.L813
 21429              	.L819:
2816:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21430              		.loc 1 2816 0
 21431 003c C24A     		ldr	r2, .L820+4
 21432 003e D7F83431 		ldr	r3, [r7, #308]
 21433 0042 1344     		add	r3, r3, r2
 21434 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21435 0046 07F10800 		add	r0, r7, #8
 21436 004a D7F83421 		ldr	r2, [r7, #308]
 21437 004e BF49     		ldr	r1, .L820+8
 21438 0050 FFF7FEFF 		bl	sprintf
2817:..\src/command_processing.c ****         strcat(info_string, str);
 21439              		.loc 1 2817 0
 21440 0054 07F10802 		add	r2, r7, #8
 21441 0058 3B1D     		adds	r3, r7, #4
 21442 005a 1146     		mov	r1, r2
 21443 005c 1868     		ldr	r0, [r3]
 21444 005e FFF7FEFF 		bl	strcat
2818:..\src/command_processing.c ****         
2819:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21445              		.loc 1 2819 0
 21446 0062 B94A     		ldr	r2, .L820+4
 21447 0064 D7F83431 		ldr	r3, [r7, #308]
 21448 0068 1344     		add	r3, r3, r2
 21449 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21450 006c 1946     		mov	r1, r3
 21451 006e B84A     		ldr	r2, .L820+12
 21452 0070 0B46     		mov	r3, r1
 21453 0072 9B00     		lsls	r3, r3, #2
 21454 0074 0B44     		add	r3, r3, r1
 21455 0076 1344     		add	r3, r3, r2
 21456 0078 03F20223 		addw	r3, r3, #514
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 470


 21457 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21458 007e 002B     		cmp	r3, #0
 21459 0080 31D0     		beq	.L814
2820:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21460              		.loc 1 2820 0
 21461 0082 B449     		ldr	r1, .L820+16
 21462 0084 D7F83421 		ldr	r2, [r7, #308]
 21463 0088 1346     		mov	r3, r2
 21464 008a 9B00     		lsls	r3, r3, #2
 21465 008c 1344     		add	r3, r3, r2
 21466 008e DB00     		lsls	r3, r3, #3
 21467 0090 0B44     		add	r3, r3, r1
 21468 0092 0233     		adds	r3, r3, #2
 21469 0094 B3F90030 		ldrsh	r3, [r3]
 21470 0098 1C46     		mov	r4, r3
 21471 009a AE49     		ldr	r1, .L820+16
 21472 009c D7F83421 		ldr	r2, [r7, #308]
 21473 00a0 1346     		mov	r3, r2
 21474 00a2 9B00     		lsls	r3, r3, #2
 21475 00a4 1344     		add	r3, r3, r2
 21476 00a6 DB00     		lsls	r3, r3, #3
 21477 00a8 0B44     		add	r3, r3, r1
 21478 00aa 0433     		adds	r3, r3, #4
 21479 00ac B3F90030 		ldrsh	r3, [r3]
 21480 00b0 1D46     		mov	r5, r3
 21481 00b2 A849     		ldr	r1, .L820+16
 21482 00b4 D7F83421 		ldr	r2, [r7, #308]
 21483 00b8 1346     		mov	r3, r2
 21484 00ba 9B00     		lsls	r3, r3, #2
 21485 00bc 1344     		add	r3, r3, r2
 21486 00be DB00     		lsls	r3, r3, #3
 21487 00c0 0B44     		add	r3, r3, r1
 21488 00c2 0633     		adds	r3, r3, #6
 21489 00c4 B3F90030 		ldrsh	r3, [r3]
 21490 00c8 07F10800 		add	r0, r7, #8
 21491 00cc 0093     		str	r3, [sp]
 21492 00ce 2B46     		mov	r3, r5
 21493 00d0 2246     		mov	r2, r4
 21494 00d2 A149     		ldr	r1, .L820+20
 21495 00d4 FFF7FEFF 		bl	sprintf
2821:..\src/command_processing.c ****             strcat(info_string, str);
 21496              		.loc 1 2821 0
 21497 00d8 07F10802 		add	r2, r7, #8
 21498 00dc 3B1D     		adds	r3, r7, #4
 21499 00de 1146     		mov	r1, r2
 21500 00e0 1868     		ldr	r0, [r3]
 21501 00e2 FFF7FEFF 		bl	strcat
 21502              	.L814:
2822:..\src/command_processing.c ****         }
2823:..\src/command_processing.c **** 
2824:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21503              		.loc 1 2824 0
 21504 00e6 984A     		ldr	r2, .L820+4
 21505 00e8 D7F83431 		ldr	r3, [r7, #308]
 21506 00ec 1344     		add	r3, r3, r2
 21507 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21508 00f0 1946     		mov	r1, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 471


 21509 00f2 974A     		ldr	r2, .L820+12
 21510 00f4 0B46     		mov	r3, r1
 21511 00f6 9B00     		lsls	r3, r3, #2
 21512 00f8 0B44     		add	r3, r3, r1
 21513 00fa 1344     		add	r3, r3, r2
 21514 00fc 03F20323 		addw	r3, r3, #515
 21515 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21516 0102 002B     		cmp	r3, #0
 21517 0104 31D0     		beq	.L815
2825:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21518              		.loc 1 2825 0
 21519 0106 9349     		ldr	r1, .L820+16
 21520 0108 D7F83421 		ldr	r2, [r7, #308]
 21521 010c 1346     		mov	r3, r2
 21522 010e 9B00     		lsls	r3, r3, #2
 21523 0110 1344     		add	r3, r3, r2
 21524 0112 DB00     		lsls	r3, r3, #3
 21525 0114 0B44     		add	r3, r3, r1
 21526 0116 0833     		adds	r3, r3, #8
 21527 0118 B3F90030 		ldrsh	r3, [r3]
 21528 011c 1C46     		mov	r4, r3
 21529 011e 8D49     		ldr	r1, .L820+16
 21530 0120 D7F83421 		ldr	r2, [r7, #308]
 21531 0124 1346     		mov	r3, r2
 21532 0126 9B00     		lsls	r3, r3, #2
 21533 0128 1344     		add	r3, r3, r2
 21534 012a DB00     		lsls	r3, r3, #3
 21535 012c 0B44     		add	r3, r3, r1
 21536 012e 0A33     		adds	r3, r3, #10
 21537 0130 B3F90030 		ldrsh	r3, [r3]
 21538 0134 1D46     		mov	r5, r3
 21539 0136 8749     		ldr	r1, .L820+16
 21540 0138 D7F83421 		ldr	r2, [r7, #308]
 21541 013c 1346     		mov	r3, r2
 21542 013e 9B00     		lsls	r3, r3, #2
 21543 0140 1344     		add	r3, r3, r2
 21544 0142 DB00     		lsls	r3, r3, #3
 21545 0144 0B44     		add	r3, r3, r1
 21546 0146 0C33     		adds	r3, r3, #12
 21547 0148 B3F90030 		ldrsh	r3, [r3]
 21548 014c 07F10800 		add	r0, r7, #8
 21549 0150 0093     		str	r3, [sp]
 21550 0152 2B46     		mov	r3, r5
 21551 0154 2246     		mov	r2, r4
 21552 0156 8149     		ldr	r1, .L820+24
 21553 0158 FFF7FEFF 		bl	sprintf
2826:..\src/command_processing.c ****             strcat(info_string, str);
 21554              		.loc 1 2826 0
 21555 015c 07F10802 		add	r2, r7, #8
 21556 0160 3B1D     		adds	r3, r7, #4
 21557 0162 1146     		mov	r1, r2
 21558 0164 1868     		ldr	r0, [r3]
 21559 0166 FFF7FEFF 		bl	strcat
 21560              	.L815:
2827:..\src/command_processing.c ****         }
2828:..\src/command_processing.c **** 
2829:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 472


 21561              		.loc 1 2829 0
 21562 016a 774A     		ldr	r2, .L820+4
 21563 016c D7F83431 		ldr	r3, [r7, #308]
 21564 0170 1344     		add	r3, r3, r2
 21565 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21566 0174 1946     		mov	r1, r3
 21567 0176 764A     		ldr	r2, .L820+12
 21568 0178 0B46     		mov	r3, r1
 21569 017a 9B00     		lsls	r3, r3, #2
 21570 017c 0B44     		add	r3, r3, r1
 21571 017e 1344     		add	r3, r3, r2
 21572 0180 03F50173 		add	r3, r3, #516
 21573 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21574 0186 002B     		cmp	r3, #0
 21575 0188 31D0     		beq	.L816
2830:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21576              		.loc 1 2830 0
 21577 018a 7249     		ldr	r1, .L820+16
 21578 018c D7F83421 		ldr	r2, [r7, #308]
 21579 0190 1346     		mov	r3, r2
 21580 0192 9B00     		lsls	r3, r3, #2
 21581 0194 1344     		add	r3, r3, r2
 21582 0196 DB00     		lsls	r3, r3, #3
 21583 0198 0B44     		add	r3, r3, r1
 21584 019a 0E33     		adds	r3, r3, #14
 21585 019c B3F90030 		ldrsh	r3, [r3]
 21586 01a0 1C46     		mov	r4, r3
 21587 01a2 6C49     		ldr	r1, .L820+16
 21588 01a4 D7F83421 		ldr	r2, [r7, #308]
 21589 01a8 1346     		mov	r3, r2
 21590 01aa 9B00     		lsls	r3, r3, #2
 21591 01ac 1344     		add	r3, r3, r2
 21592 01ae DB00     		lsls	r3, r3, #3
 21593 01b0 0B44     		add	r3, r3, r1
 21594 01b2 1033     		adds	r3, r3, #16
 21595 01b4 B3F90030 		ldrsh	r3, [r3]
 21596 01b8 1D46     		mov	r5, r3
 21597 01ba 6649     		ldr	r1, .L820+16
 21598 01bc D7F83421 		ldr	r2, [r7, #308]
 21599 01c0 1346     		mov	r3, r2
 21600 01c2 9B00     		lsls	r3, r3, #2
 21601 01c4 1344     		add	r3, r3, r2
 21602 01c6 DB00     		lsls	r3, r3, #3
 21603 01c8 0B44     		add	r3, r3, r1
 21604 01ca 1233     		adds	r3, r3, #18
 21605 01cc B3F90030 		ldrsh	r3, [r3]
 21606 01d0 07F10800 		add	r0, r7, #8
 21607 01d4 0093     		str	r3, [sp]
 21608 01d6 2B46     		mov	r3, r5
 21609 01d8 2246     		mov	r2, r4
 21610 01da 6149     		ldr	r1, .L820+28
 21611 01dc FFF7FEFF 		bl	sprintf
2831:..\src/command_processing.c ****             strcat(info_string, str);
 21612              		.loc 1 2831 0
 21613 01e0 07F10802 		add	r2, r7, #8
 21614 01e4 3B1D     		adds	r3, r7, #4
 21615 01e6 1146     		mov	r1, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 473


 21616 01e8 1868     		ldr	r0, [r3]
 21617 01ea FFF7FEFF 		bl	strcat
 21618              	.L816:
2832:..\src/command_processing.c ****         }
2833:..\src/command_processing.c ****         
2834:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21619              		.loc 1 2834 0
 21620 01ee 564A     		ldr	r2, .L820+4
 21621 01f0 D7F83431 		ldr	r3, [r7, #308]
 21622 01f4 1344     		add	r3, r3, r2
 21623 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21624 01f8 1946     		mov	r1, r3
 21625 01fa 554A     		ldr	r2, .L820+12
 21626 01fc 0B46     		mov	r3, r1
 21627 01fe 9B00     		lsls	r3, r3, #2
 21628 0200 0B44     		add	r3, r3, r1
 21629 0202 1344     		add	r3, r3, r2
 21630 0204 03F20523 		addw	r3, r3, #517
 21631 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21632 020a 002B     		cmp	r3, #0
 21633 020c 4FD0     		beq	.L817
2835:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21634              		.loc 1 2835 0
 21635 020e 5149     		ldr	r1, .L820+16
 21636 0210 D7F83421 		ldr	r2, [r7, #308]
 21637 0214 1346     		mov	r3, r2
 21638 0216 9B00     		lsls	r3, r3, #2
 21639 0218 1344     		add	r3, r3, r2
 21640 021a DB00     		lsls	r3, r3, #3
 21641 021c 0B44     		add	r3, r3, r1
 21642 021e 1433     		adds	r3, r3, #20
 21643 0220 1B68     		ldr	r3, [r3]	@ float
 21644 0222 1846     		mov	r0, r3
 21645 0224 FFF7FEFF 		bl	__aeabi_f2d
 21646 0228 8246     		mov	r10, r0
 21647 022a 8B46     		mov	fp, r1
 21648 022c 4949     		ldr	r1, .L820+16
 21649 022e D7F83421 		ldr	r2, [r7, #308]
 21650 0232 1346     		mov	r3, r2
 21651 0234 9B00     		lsls	r3, r3, #2
 21652 0236 1344     		add	r3, r3, r2
 21653 0238 DB00     		lsls	r3, r3, #3
 21654 023a 0B44     		add	r3, r3, r1
 21655 023c 1833     		adds	r3, r3, #24
 21656 023e 1B68     		ldr	r3, [r3]	@ float
 21657 0240 1846     		mov	r0, r3
 21658 0242 FFF7FEFF 		bl	__aeabi_f2d
 21659 0246 0446     		mov	r4, r0
 21660 0248 0D46     		mov	r5, r1
 21661 024a 4249     		ldr	r1, .L820+16
 21662 024c D7F83421 		ldr	r2, [r7, #308]
 21663 0250 1346     		mov	r3, r2
 21664 0252 9B00     		lsls	r3, r3, #2
 21665 0254 1344     		add	r3, r3, r2
 21666 0256 DB00     		lsls	r3, r3, #3
 21667 0258 0B44     		add	r3, r3, r1
 21668 025a 1C33     		adds	r3, r3, #28
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 474


 21669 025c 1B68     		ldr	r3, [r3]	@ float
 21670 025e 1846     		mov	r0, r3
 21671 0260 FFF7FEFF 		bl	__aeabi_f2d
 21672 0264 8046     		mov	r8, r0
 21673 0266 8946     		mov	r9, r1
 21674 0268 3A49     		ldr	r1, .L820+16
 21675 026a D7F83421 		ldr	r2, [r7, #308]
 21676 026e 1346     		mov	r3, r2
 21677 0270 9B00     		lsls	r3, r3, #2
 21678 0272 1344     		add	r3, r3, r2
 21679 0274 DB00     		lsls	r3, r3, #3
 21680 0276 0B44     		add	r3, r3, r1
 21681 0278 2033     		adds	r3, r3, #32
 21682 027a 1B68     		ldr	r3, [r3]	@ float
 21683 027c 1846     		mov	r0, r3
 21684 027e FFF7FEFF 		bl	__aeabi_f2d
 21685 0282 0246     		mov	r2, r0
 21686 0284 0B46     		mov	r3, r1
 21687 0286 07F10800 		add	r0, r7, #8
 21688 028a CDE90423 		strd	r2, [sp, #16]
 21689 028e CDE90289 		strd	r8, [sp, #8]
 21690 0292 CDE90045 		strd	r4, [sp]
 21691 0296 5246     		mov	r2, r10
 21692 0298 5B46     		mov	r3, fp
 21693 029a 3249     		ldr	r1, .L820+32
 21694 029c FFF7FEFF 		bl	sprintf
2836:..\src/command_processing.c ****             strcat(info_string, str);
 21695              		.loc 1 2836 0
 21696 02a0 07F10802 		add	r2, r7, #8
 21697 02a4 3B1D     		adds	r3, r7, #4
 21698 02a6 1146     		mov	r1, r2
 21699 02a8 1868     		ldr	r0, [r3]
 21700 02aa FFF7FEFF 		bl	strcat
 21701              	.L817:
2837:..\src/command_processing.c ****         }
2838:..\src/command_processing.c ****         
2839:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21702              		.loc 1 2839 0
 21703 02ae 264A     		ldr	r2, .L820+4
 21704 02b0 D7F83431 		ldr	r3, [r7, #308]
 21705 02b4 1344     		add	r3, r3, r2
 21706 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21707 02b8 1946     		mov	r1, r3
 21708 02ba 254A     		ldr	r2, .L820+12
 21709 02bc 0B46     		mov	r3, r1
 21710 02be 9B00     		lsls	r3, r3, #2
 21711 02c0 0B44     		add	r3, r3, r1
 21712 02c2 1344     		add	r3, r3, r2
 21713 02c4 03F20623 		addw	r3, r3, #518
 21714 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21715 02ca 002B     		cmp	r3, #0
 21716 02cc 18D0     		beq	.L818
2840:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21717              		.loc 1 2840 0
 21718 02ce 2149     		ldr	r1, .L820+16
 21719 02d0 D7F83421 		ldr	r2, [r7, #308]
 21720 02d4 1346     		mov	r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 475


 21721 02d6 9B00     		lsls	r3, r3, #2
 21722 02d8 1344     		add	r3, r3, r2
 21723 02da DB00     		lsls	r3, r3, #3
 21724 02dc 0B44     		add	r3, r3, r1
 21725 02de 2433     		adds	r3, r3, #36
 21726 02e0 B3F90030 		ldrsh	r3, [r3]
 21727 02e4 1A46     		mov	r2, r3
 21728 02e6 07F10803 		add	r3, r7, #8
 21729 02ea 1F49     		ldr	r1, .L820+36
 21730 02ec 1846     		mov	r0, r3
 21731 02ee FFF7FEFF 		bl	sprintf
2841:..\src/command_processing.c ****             strcat(info_string, str);
 21732              		.loc 1 2841 0
 21733 02f2 07F10802 		add	r2, r7, #8
 21734 02f6 3B1D     		adds	r3, r7, #4
 21735 02f8 1146     		mov	r1, r2
 21736 02fa 1868     		ldr	r0, [r3]
 21737 02fc FFF7FEFF 		bl	strcat
 21738              	.L818:
2815:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21739              		.loc 1 2815 0 discriminator 2
 21740 0300 D7F83431 		ldr	r3, [r7, #308]
 21741 0304 0133     		adds	r3, r3, #1
 21742 0306 C7F83431 		str	r3, [r7, #308]
 21743              	.L813:
2815:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21744              		.loc 1 2815 0 is_stmt 0 discriminator 1
 21745 030a 184B     		ldr	r3, .L820+40
 21746 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21747 030e 1A46     		mov	r2, r3
 21748 0310 D7F83431 		ldr	r3, [r7, #308]
 21749 0314 9A42     		cmp	r2, r3
 21750 0316 3FF791AE 		bgt	.L819
2842:..\src/command_processing.c ****         }
2843:..\src/command_processing.c ****         
2844:..\src/command_processing.c ****     }
2845:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21751              		.loc 1 2845 0 is_stmt 1
 21752 031a 3B1D     		adds	r3, r7, #4
 21753 031c 1868     		ldr	r0, [r3]
 21754 031e FFF7FEFF 		bl	strlen
 21755 0322 0346     		mov	r3, r0
 21756 0324 1A46     		mov	r2, r3
 21757 0326 3B1D     		adds	r3, r7, #4
 21758 0328 1B68     		ldr	r3, [r3]
 21759 032a 1344     		add	r3, r3, r2
 21760 032c 104A     		ldr	r2, .L820+44
 21761 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21762 0330 9278     		ldrb	r2, [r2, #2]
 21763 0332 1980     		strh	r1, [r3]	@ unaligned
 21764 0334 9A70     		strb	r2, [r3, #2]
2846:..\src/command_processing.c **** }
 21765              		.loc 1 2846 0
 21766 0336 00BF     		nop
 21767 0338 07F59C77 		add	r7, r7, #312
 21768              		.cfi_def_cfa_offset 32
 21769 033c BD46     		mov	sp, r7
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 476


 21770              		.cfi_def_cfa_register 13
 21771              		@ sp needed
 21772 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21773              	.L821:
 21774 0342 00BF     		.align	2
 21775              	.L820:
 21776 0344 601F0000 		.word	.LC302
 21777 0348 00000000 		.word	IMU_connected
 21778 034c B81A0000 		.word	.LC253
 21779 0350 00000000 		.word	c_mem
 21780 0354 00000000 		.word	g_imu
 21781 0358 701F0000 		.word	.LC303
 21782 035c 841F0000 		.word	.LC304
 21783 0360 981F0000 		.word	.LC305
 21784 0364 AC1F0000 		.word	.LC306
 21785 0368 CC1F0000 		.word	.LC307
 21786 036c 00000000 		.word	N_IMU_Connected
 21787 0370 30110000 		.word	.LC151
 21788              		.cfi_endproc
 21789              	.LFE79:
 21790              		.size	IMU_reading_info, .-IMU_reading_info
 21791              		.section	.text.commWrite_old_id,"ax",%progbits
 21792              		.align	2
 21793              		.global	commWrite_old_id
 21794              		.thumb
 21795              		.thumb_func
 21796              		.type	commWrite_old_id, %function
 21797              	commWrite_old_id:
 21798              	.LFB80:
2847:..\src/command_processing.c **** 
2848:..\src/command_processing.c **** //==============================================================================
2849:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2850:..\src/command_processing.c **** //==============================================================================
2851:..\src/command_processing.c **** 
2852:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2853:..\src/command_processing.c **** {
 21799              		.loc 1 2853 0
 21800              		.cfi_startproc
 21801              		@ args = 0, pretend = 0, frame = 16
 21802              		@ frame_needed = 1, uses_anonymous_args = 0
 21803 0000 80B5     		push	{r7, lr}
 21804              		.cfi_def_cfa_offset 8
 21805              		.cfi_offset 7, -8
 21806              		.cfi_offset 14, -4
 21807 0002 84B0     		sub	sp, sp, #16
 21808              		.cfi_def_cfa_offset 24
 21809 0004 00AF     		add	r7, sp, #0
 21810              		.cfi_def_cfa_register 7
 21811 0006 7860     		str	r0, [r7, #4]
 21812 0008 0B46     		mov	r3, r1
 21813 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21814 000c 1346     		mov	r3, r2
 21815 000e 7B70     		strb	r3, [r7, #1]
2854:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2855:..\src/command_processing.c **** 
2856:..\src/command_processing.c ****     // frame - start
2857:..\src/command_processing.c ****     UART_RS485_PutChar(':');
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 477


 21816              		.loc 1 2857 0
 21817 0010 3A20     		movs	r0, #58
 21818 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2858:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21819              		.loc 1 2858 0
 21820 0016 3A20     		movs	r0, #58
 21821 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2859:..\src/command_processing.c ****     // frame - ID
2860:..\src/command_processing.c ****     //if(old_id)
2861:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21822              		.loc 1 2861 0
 21823 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21824 001e 1846     		mov	r0, r3
 21825 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2862:..\src/command_processing.c ****     //else
2863:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2864:..\src/command_processing.c ****         
2865:..\src/command_processing.c ****     // frame - length
2866:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21826              		.loc 1 2866 0
 21827 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21828 0026 DBB2     		uxtb	r3, r3
 21829 0028 1846     		mov	r0, r3
 21830 002a FFF7FEFF 		bl	UART_RS485_PutChar
2867:..\src/command_processing.c ****     // frame - packet data
2868:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21831              		.loc 1 2868 0
 21832 002e 0023     		movs	r3, #0
 21833 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21834 0032 09E0     		b	.L823
 21835              	.L824:
2869:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21836              		.loc 1 2869 0 discriminator 3
 21837 0034 FB89     		ldrh	r3, [r7, #14]
 21838 0036 7A68     		ldr	r2, [r7, #4]
 21839 0038 1344     		add	r3, r3, r2
 21840 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21841 003c 1846     		mov	r0, r3
 21842 003e FFF7FEFF 		bl	UART_RS485_PutChar
2868:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21843              		.loc 1 2868 0 discriminator 3
 21844 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21845 0044 0133     		adds	r3, r3, #1
 21846 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21847              	.L823:
2868:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21848              		.loc 1 2868 0 is_stmt 0 discriminator 1
 21849 0048 FA89     		ldrh	r2, [r7, #14]
 21850 004a 7B88     		ldrh	r3, [r7, #2]
 21851 004c 9A42     		cmp	r2, r3
 21852 004e F1D3     		bcc	.L824
2870:..\src/command_processing.c ****     }
2871:..\src/command_processing.c **** 
2872:..\src/command_processing.c ****     index = 0;
 21853              		.loc 1 2872 0 is_stmt 1
 21854 0050 0023     		movs	r3, #0
 21855 0052 FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 478


2873:..\src/command_processing.c **** 
2874:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21856              		.loc 1 2874 0
 21857 0054 00BF     		nop
 21858              	.L826:
 21859              		.loc 1 2874 0 is_stmt 0 discriminator 2
 21860 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21861 005a 0346     		mov	r3, r0
 21862 005c 03F00103 		and	r3, r3, #1
 21863 0060 002B     		cmp	r3, #0
 21864 0062 05D1     		bne	.L825
 21865              		.loc 1 2874 0 discriminator 1
 21866 0064 FB89     		ldrh	r3, [r7, #14]
 21867 0066 5A1C     		adds	r2, r3, #1
 21868 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21869 006a B3F57A7F 		cmp	r3, #1000
 21870 006e F2D9     		bls	.L826
 21871              	.L825:
2875:..\src/command_processing.c **** 
2876:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21872              		.loc 1 2876 0 is_stmt 1
 21873 0070 0120     		movs	r0, #1
 21874 0072 FFF7FEFF 		bl	RS485_CTS_Write
2877:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21875              		.loc 1 2877 0
 21876 0076 0020     		movs	r0, #0
 21877 0078 FFF7FEFF 		bl	RS485_CTS_Write
2878:..\src/command_processing.c **** }
 21878              		.loc 1 2878 0
 21879 007c 00BF     		nop
 21880 007e 1037     		adds	r7, r7, #16
 21881              		.cfi_def_cfa_offset 8
 21882 0080 BD46     		mov	sp, r7
 21883              		.cfi_def_cfa_register 13
 21884              		@ sp needed
 21885 0082 80BD     		pop	{r7, pc}
 21886              		.cfi_endproc
 21887              	.LFE80:
 21888              		.size	commWrite_old_id, .-commWrite_old_id
 21889              		.section	.text.commWrite,"ax",%progbits
 21890              		.align	2
 21891              		.global	commWrite
 21892              		.thumb
 21893              		.thumb_func
 21894              		.type	commWrite, %function
 21895              	commWrite:
 21896              	.LFB81:
2879:..\src/command_processing.c **** 
2880:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2881:..\src/command_processing.c **** {
 21897              		.loc 1 2881 0
 21898              		.cfi_startproc
 21899              		@ args = 0, pretend = 0, frame = 16
 21900              		@ frame_needed = 1, uses_anonymous_args = 0
 21901 0000 80B5     		push	{r7, lr}
 21902              		.cfi_def_cfa_offset 8
 21903              		.cfi_offset 7, -8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 479


 21904              		.cfi_offset 14, -4
 21905 0002 84B0     		sub	sp, sp, #16
 21906              		.cfi_def_cfa_offset 24
 21907 0004 00AF     		add	r7, sp, #0
 21908              		.cfi_def_cfa_register 7
 21909 0006 7860     		str	r0, [r7, #4]
 21910 0008 0B46     		mov	r3, r1
 21911 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2882:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2883:..\src/command_processing.c **** 
2884:..\src/command_processing.c ****     // frame - start
2885:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21912              		.loc 1 2885 0
 21913 000c 3A20     		movs	r0, #58
 21914 000e FFF7FEFF 		bl	UART_RS485_PutChar
2886:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21915              		.loc 1 2886 0
 21916 0012 3A20     		movs	r0, #58
 21917 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2887:..\src/command_processing.c ****     // frame - ID
2888:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21918              		.loc 1 2888 0
 21919 0018 1A4B     		ldr	r3, .L832
 21920 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21921 001e 1846     		mov	r0, r3
 21922 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2889:..\src/command_processing.c ****     // frame - length
2890:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21923              		.loc 1 2890 0
 21924 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21925 0026 DBB2     		uxtb	r3, r3
 21926 0028 1846     		mov	r0, r3
 21927 002a FFF7FEFF 		bl	UART_RS485_PutChar
2891:..\src/command_processing.c ****     // frame - packet data
2892:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21928              		.loc 1 2892 0
 21929 002e 0023     		movs	r3, #0
 21930 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21931 0032 09E0     		b	.L828
 21932              	.L829:
2893:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21933              		.loc 1 2893 0 discriminator 3
 21934 0034 FB89     		ldrh	r3, [r7, #14]
 21935 0036 7A68     		ldr	r2, [r7, #4]
 21936 0038 1344     		add	r3, r3, r2
 21937 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21938 003c 1846     		mov	r0, r3
 21939 003e FFF7FEFF 		bl	UART_RS485_PutChar
2892:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21940              		.loc 1 2892 0 discriminator 3
 21941 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21942 0044 0133     		adds	r3, r3, #1
 21943 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21944              	.L828:
2892:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21945              		.loc 1 2892 0 is_stmt 0 discriminator 1
 21946 0048 FA89     		ldrh	r2, [r7, #14]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 480


 21947 004a 7B88     		ldrh	r3, [r7, #2]
 21948 004c 9A42     		cmp	r2, r3
 21949 004e F1D3     		bcc	.L829
2894:..\src/command_processing.c ****     }
2895:..\src/command_processing.c **** 
2896:..\src/command_processing.c ****     index = 0;
 21950              		.loc 1 2896 0 is_stmt 1
 21951 0050 0023     		movs	r3, #0
 21952 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2897:..\src/command_processing.c **** 
2898:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21953              		.loc 1 2898 0
 21954 0054 00BF     		nop
 21955              	.L831:
 21956              		.loc 1 2898 0 is_stmt 0 discriminator 2
 21957 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21958 005a 0346     		mov	r3, r0
 21959 005c 03F00103 		and	r3, r3, #1
 21960 0060 002B     		cmp	r3, #0
 21961 0062 05D1     		bne	.L830
 21962              		.loc 1 2898 0 discriminator 1
 21963 0064 FB89     		ldrh	r3, [r7, #14]
 21964 0066 5A1C     		adds	r2, r3, #1
 21965 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21966 006a B3F57A7F 		cmp	r3, #1000
 21967 006e F2D9     		bls	.L831
 21968              	.L830:
2899:..\src/command_processing.c **** 
2900:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21969              		.loc 1 2900 0 is_stmt 1
 21970 0070 0120     		movs	r0, #1
 21971 0072 FFF7FEFF 		bl	RS485_CTS_Write
2901:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21972              		.loc 1 2901 0
 21973 0076 0020     		movs	r0, #0
 21974 0078 FFF7FEFF 		bl	RS485_CTS_Write
2902:..\src/command_processing.c **** }
 21975              		.loc 1 2902 0
 21976 007c 00BF     		nop
 21977 007e 1037     		adds	r7, r7, #16
 21978              		.cfi_def_cfa_offset 8
 21979 0080 BD46     		mov	sp, r7
 21980              		.cfi_def_cfa_register 13
 21981              		@ sp needed
 21982 0082 80BD     		pop	{r7, pc}
 21983              	.L833:
 21984              		.align	2
 21985              	.L832:
 21986 0084 00000000 		.word	g_mem
 21987              		.cfi_endproc
 21988              	.LFE81:
 21989              		.size	commWrite, .-commWrite
 21990              		.section	.text.commWriteID,"ax",%progbits
 21991              		.align	2
 21992              		.global	commWriteID
 21993              		.thumb
 21994              		.thumb_func
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 481


 21995              		.type	commWriteID, %function
 21996              	commWriteID:
 21997              	.LFB82:
2903:..\src/command_processing.c **** 
2904:..\src/command_processing.c **** //==============================================================================
2905:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2906:..\src/command_processing.c **** //==============================================================================
2907:..\src/command_processing.c **** 
2908:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2909:..\src/command_processing.c **** {
 21998              		.loc 1 2909 0
 21999              		.cfi_startproc
 22000              		@ args = 0, pretend = 0, frame = 8
 22001              		@ frame_needed = 1, uses_anonymous_args = 0
 22002 0000 80B5     		push	{r7, lr}
 22003              		.cfi_def_cfa_offset 8
 22004              		.cfi_offset 7, -8
 22005              		.cfi_offset 14, -4
 22006 0002 82B0     		sub	sp, sp, #8
 22007              		.cfi_def_cfa_offset 16
 22008 0004 00AF     		add	r7, sp, #0
 22009              		.cfi_def_cfa_register 7
 22010 0006 7860     		str	r0, [r7, #4]
 22011 0008 0B46     		mov	r3, r1
 22012 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 22013 000c 1346     		mov	r3, r2
 22014 000e 7B70     		strb	r3, [r7, #1]
2910:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2911:..\src/command_processing.c **** 
2912:..\src/command_processing.c ****     // frame - start
2913:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22015              		.loc 1 2913 0
 22016 0010 3A20     		movs	r0, #58
 22017 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2914:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22018              		.loc 1 2914 0
 22019 0016 3A20     		movs	r0, #58
 22020 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2915:..\src/command_processing.c ****     // frame - ID
2916:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 22021              		.loc 1 2916 0
 22022 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 22023 001e 1846     		mov	r0, r3
 22024 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2917:..\src/command_processing.c ****     // frame - length
2918:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 22025              		.loc 1 2918 0
 22026 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 22027 0026 DBB2     		uxtb	r3, r3
 22028 0028 1846     		mov	r0, r3
 22029 002a FFF7FEFF 		bl	UART_RS485_PutChar
2919:..\src/command_processing.c ****     // frame - packet data
2920:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 22030              		.loc 1 2920 0
 22031 002e 1B4B     		ldr	r3, .L839
 22032 0030 0022     		movs	r2, #0
 22033 0032 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 482


 22034 0034 0EE0     		b	.L835
 22035              	.L836:
2921:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22036              		.loc 1 2921 0 discriminator 3
 22037 0036 194B     		ldr	r3, .L839
 22038 0038 1B88     		ldrh	r3, [r3]
 22039 003a 1A46     		mov	r2, r3
 22040 003c 7B68     		ldr	r3, [r7, #4]
 22041 003e 1344     		add	r3, r3, r2
 22042 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22043 0042 1846     		mov	r0, r3
 22044 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2920:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22045              		.loc 1 2920 0 discriminator 3
 22046 0048 144B     		ldr	r3, .L839
 22047 004a 1B88     		ldrh	r3, [r3]
 22048 004c 0133     		adds	r3, r3, #1
 22049 004e 9AB2     		uxth	r2, r3
 22050 0050 124B     		ldr	r3, .L839
 22051 0052 1A80     		strh	r2, [r3]	@ movhi
 22052              	.L835:
2920:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22053              		.loc 1 2920 0 is_stmt 0 discriminator 1
 22054 0054 114B     		ldr	r3, .L839
 22055 0056 1B88     		ldrh	r3, [r3]
 22056 0058 7A88     		ldrh	r2, [r7, #2]
 22057 005a 9A42     		cmp	r2, r3
 22058 005c EBD8     		bhi	.L836
2922:..\src/command_processing.c ****     }
2923:..\src/command_processing.c **** 
2924:..\src/command_processing.c ****     i = 0;
 22059              		.loc 1 2924 0 is_stmt 1
 22060 005e 0F4B     		ldr	r3, .L839
 22061 0060 0022     		movs	r2, #0
 22062 0062 1A80     		strh	r2, [r3]	@ movhi
2925:..\src/command_processing.c **** 
2926:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 22063              		.loc 1 2926 0
 22064 0064 00BF     		nop
 22065              	.L838:
 22066              		.loc 1 2926 0 is_stmt 0 discriminator 2
 22067 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 22068 006a 0346     		mov	r3, r0
 22069 006c 03F00103 		and	r3, r3, #1
 22070 0070 002B     		cmp	r3, #0
 22071 0072 08D1     		bne	.L837
 22072              		.loc 1 2926 0 discriminator 1
 22073 0074 094B     		ldr	r3, .L839
 22074 0076 1B88     		ldrh	r3, [r3]
 22075 0078 5A1C     		adds	r2, r3, #1
 22076 007a 91B2     		uxth	r1, r2
 22077 007c 074A     		ldr	r2, .L839
 22078 007e 1180     		strh	r1, [r2]	@ movhi
 22079 0080 B3F57A7F 		cmp	r3, #1000
 22080 0084 EFD9     		bls	.L838
 22081              	.L837:
2927:..\src/command_processing.c ****     
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 483


2928:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22082              		.loc 1 2928 0 is_stmt 1
 22083 0086 0120     		movs	r0, #1
 22084 0088 FFF7FEFF 		bl	RS485_CTS_Write
2929:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22085              		.loc 1 2929 0
 22086 008c 0020     		movs	r0, #0
 22087 008e FFF7FEFF 		bl	RS485_CTS_Write
2930:..\src/command_processing.c **** }
 22088              		.loc 1 2930 0
 22089 0092 00BF     		nop
 22090 0094 0837     		adds	r7, r7, #8
 22091              		.cfi_def_cfa_offset 8
 22092 0096 BD46     		mov	sp, r7
 22093              		.cfi_def_cfa_register 13
 22094              		@ sp needed
 22095 0098 80BD     		pop	{r7, pc}
 22096              	.L840:
 22097 009a 00BF     		.align	2
 22098              	.L839:
 22099 009c 04000000 		.word	i.11256
 22100              		.cfi_endproc
 22101              	.LFE82:
 22102              		.size	commWriteID, .-commWriteID
 22103              		.section	.text.LCRChecksum,"ax",%progbits
 22104              		.align	2
 22105              		.global	LCRChecksum
 22106              		.thumb
 22107              		.thumb_func
 22108              		.type	LCRChecksum, %function
 22109              	LCRChecksum:
 22110              	.LFB83:
2931:..\src/command_processing.c **** 
2932:..\src/command_processing.c **** //==============================================================================
2933:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2934:..\src/command_processing.c **** //==============================================================================
2935:..\src/command_processing.c **** 
2936:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2937:..\src/command_processing.c **** 
2938:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 22111              		.loc 1 2938 0
 22112              		.cfi_startproc
 22113              		@ args = 0, pretend = 0, frame = 16
 22114              		@ frame_needed = 1, uses_anonymous_args = 0
 22115              		@ link register save eliminated.
 22116 0000 80B4     		push	{r7}
 22117              		.cfi_def_cfa_offset 4
 22118              		.cfi_offset 7, -4
 22119 0002 85B0     		sub	sp, sp, #20
 22120              		.cfi_def_cfa_offset 24
 22121 0004 00AF     		add	r7, sp, #0
 22122              		.cfi_def_cfa_register 7
 22123 0006 7860     		str	r0, [r7, #4]
 22124 0008 0B46     		mov	r3, r1
 22125 000a FB70     		strb	r3, [r7, #3]
2939:..\src/command_processing.c ****     
2940:..\src/command_processing.c ****     uint8 CYDATA i;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 484


2941:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 22126              		.loc 1 2941 0
 22127 000c 0023     		movs	r3, #0
 22128 000e BB73     		strb	r3, [r7, #14]
2942:..\src/command_processing.c ****     
2943:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 22129              		.loc 1 2943 0
 22130 0010 0023     		movs	r3, #0
 22131 0012 FB73     		strb	r3, [r7, #15]
 22132 0014 09E0     		b	.L842
 22133              	.L843:
2944:..\src/command_processing.c ****        checksum ^= data_array[i];
 22134              		.loc 1 2944 0 discriminator 3
 22135 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22136 0018 7A68     		ldr	r2, [r7, #4]
 22137 001a 1344     		add	r3, r3, r2
 22138 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22139 001e BB7B     		ldrb	r3, [r7, #14]
 22140 0020 5340     		eors	r3, r3, r2
 22141 0022 BB73     		strb	r3, [r7, #14]
2943:..\src/command_processing.c ****        checksum ^= data_array[i];
 22142              		.loc 1 2943 0 discriminator 3
 22143 0024 FB7B     		ldrb	r3, [r7, #15]
 22144 0026 0133     		adds	r3, r3, #1
 22145 0028 FB73     		strb	r3, [r7, #15]
 22146              	.L842:
2943:..\src/command_processing.c ****        checksum ^= data_array[i];
 22147              		.loc 1 2943 0 is_stmt 0 discriminator 1
 22148 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22149 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22150 002e 9A42     		cmp	r2, r3
 22151 0030 F1D3     		bcc	.L843
2945:..\src/command_processing.c ****   
2946:..\src/command_processing.c ****     return checksum;
 22152              		.loc 1 2946 0 is_stmt 1
 22153 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2947:..\src/command_processing.c **** }
 22154              		.loc 1 2947 0
 22155 0034 1846     		mov	r0, r3
 22156 0036 1437     		adds	r7, r7, #20
 22157              		.cfi_def_cfa_offset 4
 22158 0038 BD46     		mov	sp, r7
 22159              		.cfi_def_cfa_register 13
 22160              		@ sp needed
 22161 003a 80BC     		pop	{r7}
 22162              		.cfi_restore 7
 22163              		.cfi_def_cfa_offset 0
 22164 003c 7047     		bx	lr
 22165              		.cfi_endproc
 22166              	.LFE83:
 22167              		.size	LCRChecksum, .-LCRChecksum
 22168 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22169              		.align	2
 22170              		.global	sendAcknowledgment
 22171              		.thumb
 22172              		.thumb_func
 22173              		.type	sendAcknowledgment, %function
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 485


 22174              	sendAcknowledgment:
 22175              	.LFB84:
2948:..\src/command_processing.c **** 
2949:..\src/command_processing.c **** 
2950:..\src/command_processing.c **** //==============================================================================
2951:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2952:..\src/command_processing.c **** //==============================================================================
2953:..\src/command_processing.c **** 
2954:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22176              		.loc 1 2954 0
 22177              		.cfi_startproc
 22178              		@ args = 0, pretend = 0, frame = 16
 22179              		@ frame_needed = 1, uses_anonymous_args = 0
 22180 0000 80B5     		push	{r7, lr}
 22181              		.cfi_def_cfa_offset 8
 22182              		.cfi_offset 7, -8
 22183              		.cfi_offset 14, -4
 22184 0002 84B0     		sub	sp, sp, #16
 22185              		.cfi_def_cfa_offset 24
 22186 0004 00AF     		add	r7, sp, #0
 22187              		.cfi_def_cfa_register 7
 22188 0006 0346     		mov	r3, r0
 22189 0008 FB71     		strb	r3, [r7, #7]
2955:..\src/command_processing.c ****     int packet_lenght = 2;
 22190              		.loc 1 2955 0
 22191 000a 0223     		movs	r3, #2
 22192 000c FB60     		str	r3, [r7, #12]
2956:..\src/command_processing.c ****     uint8 packet_data[2];
2957:..\src/command_processing.c **** 
2958:..\src/command_processing.c ****     packet_data[0] = value;
 22193              		.loc 1 2958 0
 22194 000e FB79     		ldrb	r3, [r7, #7]
 22195 0010 3B72     		strb	r3, [r7, #8]
2959:..\src/command_processing.c ****     packet_data[1] = value;
 22196              		.loc 1 2959 0
 22197 0012 FB79     		ldrb	r3, [r7, #7]
 22198 0014 7B72     		strb	r3, [r7, #9]
2960:..\src/command_processing.c **** 
2961:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 22199              		.loc 1 2961 0
 22200 0016 FB68     		ldr	r3, [r7, #12]
 22201 0018 9AB2     		uxth	r2, r3
 22202 001a 07F10803 		add	r3, r7, #8
 22203 001e 1146     		mov	r1, r2
 22204 0020 1846     		mov	r0, r3
 22205 0022 FFF7FEFF 		bl	commWrite
2962:..\src/command_processing.c **** }
 22206              		.loc 1 2962 0
 22207 0026 00BF     		nop
 22208 0028 1037     		adds	r7, r7, #16
 22209              		.cfi_def_cfa_offset 8
 22210 002a BD46     		mov	sp, r7
 22211              		.cfi_def_cfa_register 13
 22212              		@ sp needed
 22213 002c 80BD     		pop	{r7, pc}
 22214              		.cfi_endproc
 22215              	.LFE84:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 486


 22216              		.size	sendAcknowledgment, .-sendAcknowledgment
 22217 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22218              		.align	2
 22219              		.global	memStore
 22220              		.thumb
 22221              		.thumb_func
 22222              		.type	memStore, %function
 22223              	memStore:
 22224              	.LFB85:
2963:..\src/command_processing.c **** 
2964:..\src/command_processing.c **** //==============================================================================
2965:..\src/command_processing.c **** //                                                                  STORE MEMORY
2966:..\src/command_processing.c **** //==============================================================================
2967:..\src/command_processing.c **** 
2968:..\src/command_processing.c **** 
2969:..\src/command_processing.c **** uint8 memStore(int displacement)
2970:..\src/command_processing.c **** {
 22225              		.loc 1 2970 0
 22226              		.cfi_startproc
 22227              		@ args = 0, pretend = 0, frame = 24
 22228              		@ frame_needed = 1, uses_anonymous_args = 0
 22229 0000 80B5     		push	{r7, lr}
 22230              		.cfi_def_cfa_offset 8
 22231              		.cfi_offset 7, -8
 22232              		.cfi_offset 14, -4
 22233 0002 86B0     		sub	sp, sp, #24
 22234              		.cfi_def_cfa_offset 32
 22235 0004 00AF     		add	r7, sp, #0
 22236              		.cfi_def_cfa_register 7
 22237 0006 7860     		str	r0, [r7, #4]
2971:..\src/command_processing.c ****     int i;  // iterator
2972:..\src/command_processing.c ****     uint8 writeStatus;
2973:..\src/command_processing.c ****     int pages;
2974:..\src/command_processing.c ****     uint8 ret_val = 1;
 22238              		.loc 1 2974 0
 22239 0008 0123     		movs	r3, #1
 22240 000a FB74     		strb	r3, [r7, #19]
2975:..\src/command_processing.c **** 
2976:..\src/command_processing.c ****     // Disable Interrupt
2977:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22241              		.loc 1 2977 0
 22242 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2978:..\src/command_processing.c **** 
2979:..\src/command_processing.c ****     // Stop motor
2980:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22243              		.loc 1 2980 0
 22244 0010 0020     		movs	r0, #0
 22245 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2981:..\src/command_processing.c **** 
2982:..\src/command_processing.c ****     // Update temperature information for better writing performance
2983:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22246              		.loc 1 2983 0
 22247 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
2984:..\src/command_processing.c **** 
2985:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 22248              		.loc 1 2985 0
 22249 001a 1D4A     		ldr	r2, .L852
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 487


 22250 001c 1D4B     		ldr	r3, .L852+4
 22251 001e 1046     		mov	r0, r2
 22252 0020 1946     		mov	r1, r3
 22253 0022 4FF43D73 		mov	r3, #756
 22254 0026 1A46     		mov	r2, r3
 22255 0028 FFF7FEFF 		bl	memcpy
2986:..\src/command_processing.c **** 
2987:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22256              		.loc 1 2987 0
 22257 002c 3023     		movs	r3, #48
 22258 002e FB60     		str	r3, [r7, #12]
2988:..\src/command_processing.c **** 
2989:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22259              		.loc 1 2989 0
 22260 0030 0023     		movs	r3, #0
 22261 0032 7B61     		str	r3, [r7, #20]
 22262 0034 18E0     		b	.L847
 22263              	.L850:
2990:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22264              		.loc 1 2990 0
 22265 0036 7B69     		ldr	r3, [r7, #20]
 22266 0038 1B01     		lsls	r3, r3, #4
 22267 003a 1A46     		mov	r2, r3
 22268 003c 154B     		ldr	r3, .L852+4
 22269 003e D018     		adds	r0, r2, r3
 22270 0040 7B69     		ldr	r3, [r7, #20]
 22271 0042 DAB2     		uxtb	r2, r3
 22272 0044 7B68     		ldr	r3, [r7, #4]
 22273 0046 DBB2     		uxtb	r3, r3
 22274 0048 1344     		add	r3, r3, r2
 22275 004a DBB2     		uxtb	r3, r3
 22276 004c 1946     		mov	r1, r3
 22277 004e FFF7FEFF 		bl	EEPROM_Write
 22278 0052 0346     		mov	r3, r0
 22279 0054 FB72     		strb	r3, [r7, #11]
2991:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22280              		.loc 1 2991 0
 22281 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22282 0058 002B     		cmp	r3, #0
 22283 005a 02D0     		beq	.L848
2992:..\src/command_processing.c ****             ret_val = 0;
 22284              		.loc 1 2992 0
 22285 005c 0023     		movs	r3, #0
 22286 005e FB74     		strb	r3, [r7, #19]
2993:..\src/command_processing.c ****             break;
 22287              		.loc 1 2993 0
 22288 0060 06E0     		b	.L849
 22289              	.L848:
2989:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22290              		.loc 1 2989 0 discriminator 2
 22291 0062 7B69     		ldr	r3, [r7, #20]
 22292 0064 0133     		adds	r3, r3, #1
 22293 0066 7B61     		str	r3, [r7, #20]
 22294              	.L847:
2989:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22295              		.loc 1 2989 0 is_stmt 0 discriminator 1
 22296 0068 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 488


 22297 006a FB68     		ldr	r3, [r7, #12]
 22298 006c 9A42     		cmp	r2, r3
 22299 006e E2DB     		blt	.L850
 22300              	.L849:
2994:..\src/command_processing.c ****         }
2995:..\src/command_processing.c ****     }
2996:..\src/command_processing.c **** 
2997:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22301              		.loc 1 2997 0 is_stmt 1
 22302 0070 084A     		ldr	r2, .L852+4
 22303 0072 074B     		ldr	r3, .L852
 22304 0074 1046     		mov	r0, r2
 22305 0076 1946     		mov	r1, r3
 22306 0078 4FF43D73 		mov	r3, #756
 22307 007c 1A46     		mov	r2, r3
 22308 007e FFF7FEFF 		bl	memcpy
2998:..\src/command_processing.c **** 
2999:..\src/command_processing.c ****     // Re-Enable Interrupt
3000:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22309              		.loc 1 3000 0
 22310 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3001:..\src/command_processing.c **** 
3002:..\src/command_processing.c ****     return ret_val;
 22311              		.loc 1 3002 0
 22312 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3003:..\src/command_processing.c **** }
 22313              		.loc 1 3003 0
 22314 0088 1846     		mov	r0, r3
 22315 008a 1837     		adds	r7, r7, #24
 22316              		.cfi_def_cfa_offset 8
 22317 008c BD46     		mov	sp, r7
 22318              		.cfi_def_cfa_register 13
 22319              		@ sp needed
 22320 008e 80BD     		pop	{r7, pc}
 22321              	.L853:
 22322              		.align	2
 22323              	.L852:
 22324 0090 00000000 		.word	c_mem
 22325 0094 00000000 		.word	g_mem
 22326              		.cfi_endproc
 22327              	.LFE85:
 22328              		.size	memStore, .-memStore
 22329              		.section	.text.memRecall,"ax",%progbits
 22330              		.align	2
 22331              		.global	memRecall
 22332              		.thumb
 22333              		.thumb_func
 22334              		.type	memRecall, %function
 22335              	memRecall:
 22336              	.LFB86:
3004:..\src/command_processing.c **** 
3005:..\src/command_processing.c **** 
3006:..\src/command_processing.c **** //==============================================================================
3007:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3008:..\src/command_processing.c **** //==============================================================================
3009:..\src/command_processing.c **** 
3010:..\src/command_processing.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 489


3011:..\src/command_processing.c **** void memRecall(void)
3012:..\src/command_processing.c **** {
 22337              		.loc 1 3012 0
 22338              		.cfi_startproc
 22339              		@ args = 0, pretend = 0, frame = 8
 22340              		@ frame_needed = 1, uses_anonymous_args = 0
 22341 0000 80B5     		push	{r7, lr}
 22342              		.cfi_def_cfa_offset 8
 22343              		.cfi_offset 7, -8
 22344              		.cfi_offset 14, -4
 22345 0002 82B0     		sub	sp, sp, #8
 22346              		.cfi_def_cfa_offset 16
 22347 0004 00AF     		add	r7, sp, #0
 22348              		.cfi_def_cfa_register 7
3013:..\src/command_processing.c ****     uint16 i;
3014:..\src/command_processing.c **** 
3015:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22349              		.loc 1 3015 0
 22350 0006 0023     		movs	r3, #0
 22351 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22352 000a 0CE0     		b	.L855
 22353              	.L856:
3016:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22354              		.loc 1 3016 0 discriminator 3
 22355 000c FB88     		ldrh	r3, [r7, #6]
 22356 000e 184A     		ldr	r2, .L860
 22357 0010 1344     		add	r3, r3, r2
 22358 0012 184A     		ldr	r2, .L860+4
 22359 0014 1168     		ldr	r1, [r2]
 22360 0016 FA88     		ldrh	r2, [r7, #6]
 22361 0018 0A44     		add	r2, r2, r1
 22362 001a 1278     		ldrb	r2, [r2]
 22363 001c D2B2     		uxtb	r2, r2
 22364 001e 1A70     		strb	r2, [r3]
3015:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22365              		.loc 1 3015 0 discriminator 3
 22366 0020 FB88     		ldrh	r3, [r7, #6]
 22367 0022 0133     		adds	r3, r3, #1
 22368 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22369              	.L855:
3015:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22370              		.loc 1 3015 0 is_stmt 0 discriminator 1
 22371 0026 FB88     		ldrh	r3, [r7, #6]
 22372 0028 B3F53D7F 		cmp	r3, #756
 22373 002c EED3     		bcc	.L856
3017:..\src/command_processing.c ****     }
3018:..\src/command_processing.c ****     
3019:..\src/command_processing.c ****     // Recall saved user_emg structure
3020:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22374              		.loc 1 3020 0 is_stmt 1
 22375 002e 104B     		ldr	r3, .L860
 22376 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22377 0034 5B01     		lsls	r3, r3, #5
 22378 0036 03F51273 		add	r3, r3, #584
 22379 003a 0D4A     		ldr	r2, .L860
 22380 003c 1344     		add	r3, r3, r2
 22381 003e 1022     		movs	r2, #16
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 490


 22382 0040 1946     		mov	r1, r3
 22383 0042 0D48     		ldr	r0, .L860+8
 22384 0044 FFF7FEFF 		bl	memcpy
3021:..\src/command_processing.c **** 
3022:..\src/command_processing.c ****     //check for initialization
3023:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22385              		.loc 1 3023 0
 22386 0048 094B     		ldr	r3, .L860
 22387 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22388 004c 002B     		cmp	r3, #0
 22389 004e 02D1     		bne	.L857
3024:..\src/command_processing.c ****         memRestore();
 22390              		.loc 1 3024 0
 22391 0050 FFF7FEFF 		bl	memRestore
3025:..\src/command_processing.c ****     } else {
3026:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3027:..\src/command_processing.c ****     }        
3028:..\src/command_processing.c **** }
 22392              		.loc 1 3028 0
 22393 0054 08E0     		b	.L859
 22394              	.L857:
3026:..\src/command_processing.c ****     }        
 22395              		.loc 1 3026 0
 22396 0056 094A     		ldr	r2, .L860+12
 22397 0058 054B     		ldr	r3, .L860
 22398 005a 1046     		mov	r0, r2
 22399 005c 1946     		mov	r1, r3
 22400 005e 4FF43D73 		mov	r3, #756
 22401 0062 1A46     		mov	r2, r3
 22402 0064 FFF7FEFF 		bl	memcpy
 22403              	.L859:
 22404              		.loc 1 3028 0
 22405 0068 00BF     		nop
 22406 006a 0837     		adds	r7, r7, #8
 22407              		.cfi_def_cfa_offset 8
 22408 006c BD46     		mov	sp, r7
 22409              		.cfi_def_cfa_register 13
 22410              		@ sp needed
 22411 006e 80BD     		pop	{r7, pc}
 22412              	.L861:
 22413              		.align	2
 22414              	.L860:
 22415 0070 00000000 		.word	g_mem
 22416 0074 00000000 		.word	EEPROM_ADDR
 22417 0078 F0010000 		.word	g_mem+496
 22418 007c 00000000 		.word	c_mem
 22419              		.cfi_endproc
 22420              	.LFE86:
 22421              		.size	memRecall, .-memRecall
 22422              		.section	.text.memRestore,"ax",%progbits
 22423              		.align	2
 22424              		.global	memRestore
 22425              		.thumb
 22426              		.thumb_func
 22427              		.type	memRestore, %function
 22428              	memRestore:
 22429              	.LFB87:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 491


3029:..\src/command_processing.c **** 
3030:..\src/command_processing.c **** 
3031:..\src/command_processing.c **** //==============================================================================
3032:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3033:..\src/command_processing.c **** //==============================================================================
3034:..\src/command_processing.c **** 
3035:..\src/command_processing.c **** 
3036:..\src/command_processing.c **** uint8 memRestore(void) {
 22430              		.loc 1 3036 0
 22431              		.cfi_startproc
 22432              		@ args = 0, pretend = 0, frame = 8
 22433              		@ frame_needed = 1, uses_anonymous_args = 0
 22434 0000 80B5     		push	{r7, lr}
 22435              		.cfi_def_cfa_offset 8
 22436              		.cfi_offset 7, -8
 22437              		.cfi_offset 14, -4
 22438 0002 82B0     		sub	sp, sp, #8
 22439              		.cfi_def_cfa_offset 16
 22440 0004 00AF     		add	r7, sp, #0
 22441              		.cfi_def_cfa_register 7
3037:..\src/command_processing.c ****     uint16 i;
3038:..\src/command_processing.c **** 
3039:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22442              		.loc 1 3039 0
 22443 0006 0023     		movs	r3, #0
 22444 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22445 000a 0EE0     		b	.L863
 22446              	.L864:
3040:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22447              		.loc 1 3040 0 discriminator 3
 22448 000c FB88     		ldrh	r3, [r7, #6]
 22449 000e 114A     		ldr	r2, .L867
 22450 0010 1344     		add	r3, r3, r2
 22451 0012 114A     		ldr	r2, .L867+4
 22452 0014 1168     		ldr	r1, [r2]
 22453 0016 FA88     		ldrh	r2, [r7, #6]
 22454 0018 02F54872 		add	r2, r2, #800
 22455 001c 0A44     		add	r2, r2, r1
 22456 001e 1278     		ldrb	r2, [r2]
 22457 0020 D2B2     		uxtb	r2, r2
 22458 0022 1A70     		strb	r2, [r3]
3039:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22459              		.loc 1 3039 0 discriminator 3
 22460 0024 FB88     		ldrh	r3, [r7, #6]
 22461 0026 0133     		adds	r3, r3, #1
 22462 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22463              	.L863:
3039:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22464              		.loc 1 3039 0 is_stmt 0 discriminator 1
 22465 002a FB88     		ldrh	r3, [r7, #6]
 22466 002c B3F53D7F 		cmp	r3, #756
 22467 0030 ECD3     		bcc	.L864
3041:..\src/command_processing.c ****     }
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c ****     //check for initialization
3044:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22468              		.loc 1 3044 0 is_stmt 1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 492


 22469 0032 084B     		ldr	r3, .L867
 22470 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22471 0036 002B     		cmp	r3, #0
 22472 0038 03D1     		bne	.L865
3045:..\src/command_processing.c ****         return memInit();
 22473              		.loc 1 3045 0
 22474 003a FFF7FEFF 		bl	memInit
 22475 003e 0346     		mov	r3, r0
 22476 0040 03E0     		b	.L866
 22477              	.L865:
3046:..\src/command_processing.c ****     } else {
3047:..\src/command_processing.c ****         return memStore(0);
 22478              		.loc 1 3047 0
 22479 0042 0020     		movs	r0, #0
 22480 0044 FFF7FEFF 		bl	memStore
 22481 0048 0346     		mov	r3, r0
 22482              	.L866:
3048:..\src/command_processing.c ****     }  
3049:..\src/command_processing.c **** }
 22483              		.loc 1 3049 0
 22484 004a 1846     		mov	r0, r3
 22485 004c 0837     		adds	r7, r7, #8
 22486              		.cfi_def_cfa_offset 8
 22487 004e BD46     		mov	sp, r7
 22488              		.cfi_def_cfa_register 13
 22489              		@ sp needed
 22490 0050 80BD     		pop	{r7, pc}
 22491              	.L868:
 22492 0052 00BF     		.align	2
 22493              	.L867:
 22494 0054 00000000 		.word	g_mem
 22495 0058 00000000 		.word	EEPROM_ADDR
 22496              		.cfi_endproc
 22497              	.LFE87:
 22498              		.size	memRestore, .-memRestore
 22499              		.section	.rodata
 22500 1fdf 00       		.align	2
 22501              	.LC308:
 22502 1fe0 47454E30 		.ascii	"GEN001\000"
 22502      303100
 22503              		.section	.text.memInit,"ax",%progbits
 22504              		.align	2
 22505              		.global	memInit
 22506              		.thumb
 22507              		.thumb_func
 22508              		.type	memInit, %function
 22509              	memInit:
 22510              	.LFB88:
3050:..\src/command_processing.c **** 
3051:..\src/command_processing.c **** //==============================================================================
3052:..\src/command_processing.c **** //                                                                   MEMORY INIT
3053:..\src/command_processing.c **** //==============================================================================
3054:..\src/command_processing.c **** 
3055:..\src/command_processing.c **** uint8 memInit(void)
3056:..\src/command_processing.c **** {
 22511              		.loc 1 3056 0
 22512              		.cfi_startproc
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 493


 22513              		@ args = 0, pretend = 0, frame = 8
 22514              		@ frame_needed = 1, uses_anonymous_args = 0
 22515 0000 80B5     		push	{r7, lr}
 22516              		.cfi_def_cfa_offset 8
 22517              		.cfi_offset 7, -8
 22518              		.cfi_offset 14, -4
 22519 0002 82B0     		sub	sp, sp, #8
 22520              		.cfi_def_cfa_offset 16
 22521 0004 00AF     		add	r7, sp, #0
 22522              		.cfi_def_cfa_register 7
3057:..\src/command_processing.c ****     uint8 i, j;
3058:..\src/command_processing.c **** 
3059:..\src/command_processing.c ****     //initialize memory settings
3060:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22523              		.loc 1 3060 0
 22524 0006 0023     		movs	r3, #0
 22525 0008 FB71     		strb	r3, [r7, #7]
 22526 000a 07E0     		b	.L870
 22527              	.L871:
3061:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22528              		.loc 1 3061 0 discriminator 3
 22529 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22530 000e B44A     		ldr	r2, .L896
 22531 0010 1344     		add	r3, r3, r2
 22532 0012 0022     		movs	r2, #0
 22533 0014 5A70     		strb	r2, [r3, #1]
3060:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22534              		.loc 1 3060 0 discriminator 3
 22535 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22536 0018 0133     		adds	r3, r3, #1
 22537 001a FB71     		strb	r3, [r7, #7]
 22538              	.L870:
3060:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22539              		.loc 1 3060 0 is_stmt 0 discriminator 1
 22540 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22541 001e 0E2B     		cmp	r3, #14
 22542 0020 F4D9     		bls	.L871
3062:..\src/command_processing.c ****     }
3063:..\src/command_processing.c ****         
3064:..\src/command_processing.c ****     // DEV STRUCT
3065:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22543              		.loc 1 3065 0 is_stmt 1
 22544 0022 AF4B     		ldr	r3, .L896
 22545 0024 0122     		movs	r2, #1
 22546 0026 83F8A020 		strb	r2, [r3, #160]
3066:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22547              		.loc 1 3066 0
 22548 002a AD4B     		ldr	r3, .L896
 22549 002c 0022     		movs	r2, #0
 22550 002e 83F8A720 		strb	r2, [r3, #167]
3067:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22551              		.loc 1 3067 0
 22552 0032 AB4B     		ldr	r3, .L896
 22553 0034 0122     		movs	r2, #1
 22554 0036 83F8AC20 		strb	r2, [r3, #172]
3068:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22555              		.loc 1 3068 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 494


 22556 003a A94B     		ldr	r3, .L896
 22557 003c 0022     		movs	r2, #0
 22558 003e 83F8A820 		strb	r2, [r3, #168]
3069:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22559              		.loc 1 3069 0
 22560 0042 FFF7FEFF 		bl	reset_counters
3070:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22561              		.loc 1 3070 0
 22562 0046 0023     		movs	r3, #0
 22563 0048 FB71     		strb	r3, [r7, #7]
 22564 004a 08E0     		b	.L872
 22565              	.L873:
3071:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22566              		.loc 1 3071 0 discriminator 3
 22567 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22568 004e A44A     		ldr	r2, .L896
 22569 0050 1344     		add	r3, r3, r2
 22570 0052 0022     		movs	r2, #0
 22571 0054 83F86020 		strb	r2, [r3, #96]
3070:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22572              		.loc 1 3070 0 discriminator 3
 22573 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22574 005a 0133     		adds	r3, r3, #1
 22575 005c FB71     		strb	r3, [r7, #7]
 22576              	.L872:
3070:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22577              		.loc 1 3070 0 is_stmt 0 discriminator 1
 22578 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22579 0060 3F2B     		cmp	r3, #63
 22580 0062 F3D9     		bls	.L873
3072:..\src/command_processing.c ****     }
3073:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22581              		.loc 1 3073 0 is_stmt 1
 22582 0064 9E4B     		ldr	r3, .L896
 22583 0066 0022     		movs	r2, #0
 22584 0068 83F8A920 		strb	r2, [r3, #169]
3074:..\src/command_processing.c **** 
3075:..\src/command_processing.c ****     // MOTOR STRUCT
3076:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22585              		.loc 1 3076 0
 22586 006c 0023     		movs	r3, #0
 22587 006e FB71     		strb	r3, [r7, #7]
 22588 0070 15E1     		b	.L874
 22589              	.L877:
3077:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22590              		.loc 1 3077 0
 22591 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22592 0074 9A49     		ldr	r1, .L896
 22593 0076 1346     		mov	r3, r2
 22594 0078 DB00     		lsls	r3, r3, #3
 22595 007a 9B1A     		subs	r3, r3, r2
 22596 007c 1B01     		lsls	r3, r3, #4
 22597 007e 0B44     		add	r3, r3, r1
 22598 0080 B033     		adds	r3, r3, #176
 22599 0082 40F23942 		movw	r2, #1081
 22600 0086 1A60     		str	r2, [r3]
3078:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 495


 22601              		.loc 1 3078 0
 22602 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22603 008a 9549     		ldr	r1, .L896
 22604 008c 1346     		mov	r3, r2
 22605 008e DB00     		lsls	r3, r3, #3
 22606 0090 9B1A     		subs	r3, r3, r2
 22607 0092 1B01     		lsls	r3, r3, #4
 22608 0094 0B44     		add	r3, r3, r1
 22609 0096 B433     		adds	r3, r3, #180
 22610 0098 0022     		movs	r2, #0
 22611 009a 1A60     		str	r2, [r3]
3079:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22612              		.loc 1 3079 0
 22613 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22614 009e 9049     		ldr	r1, .L896
 22615 00a0 1346     		mov	r3, r2
 22616 00a2 DB00     		lsls	r3, r3, #3
 22617 00a4 9B1A     		subs	r3, r3, r2
 22618 00a6 1B01     		lsls	r3, r3, #4
 22619 00a8 0B44     		add	r3, r3, r1
 22620 00aa B833     		adds	r3, r3, #184
 22621 00ac 4FF4E572 		mov	r2, #458
 22622 00b0 1A60     		str	r2, [r3]
3080:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22623              		.loc 1 3080 0
 22624 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22625 00b4 8A49     		ldr	r1, .L896
 22626 00b6 1346     		mov	r3, r2
 22627 00b8 DB00     		lsls	r3, r3, #3
 22628 00ba 9B1A     		subs	r3, r3, r2
 22629 00bc 1B01     		lsls	r3, r3, #4
 22630 00be 0B44     		add	r3, r3, r1
 22631 00c0 BC33     		adds	r3, r3, #188
 22632 00c2 4FF48032 		mov	r2, #65536
 22633 00c6 1A60     		str	r2, [r3]
3081:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22634              		.loc 1 3081 0
 22635 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22636 00ca 8549     		ldr	r1, .L896
 22637 00cc 1346     		mov	r3, r2
 22638 00ce DB00     		lsls	r3, r3, #3
 22639 00d0 9B1A     		subs	r3, r3, r2
 22640 00d2 1B01     		lsls	r3, r3, #4
 22641 00d4 0B44     		add	r3, r3, r1
 22642 00d6 C033     		adds	r3, r3, #192
 22643 00d8 4122     		movs	r2, #65
 22644 00da 1A60     		str	r2, [r3]
3082:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22645              		.loc 1 3082 0
 22646 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22647 00de 8049     		ldr	r1, .L896
 22648 00e0 1346     		mov	r3, r2
 22649 00e2 DB00     		lsls	r3, r3, #3
 22650 00e4 9B1A     		subs	r3, r3, r2
 22651 00e6 1B01     		lsls	r3, r3, #4
 22652 00e8 0B44     		add	r3, r3, r1
 22653 00ea C433     		adds	r3, r3, #196
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 496


 22654 00ec 0022     		movs	r2, #0
 22655 00ee 1A60     		str	r2, [r3]
3083:..\src/command_processing.c **** 
3084:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22656              		.loc 1 3084 0
 22657 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22658 00f2 7B49     		ldr	r1, .L896
 22659 00f4 1346     		mov	r3, r2
 22660 00f6 DB00     		lsls	r3, r3, #3
 22661 00f8 9B1A     		subs	r3, r3, r2
 22662 00fa 1B01     		lsls	r3, r3, #4
 22663 00fc 0B44     		add	r3, r3, r1
 22664 00fe C833     		adds	r3, r3, #200
 22665 0100 41F69912 		movw	r2, #6553
 22666 0104 1A60     		str	r2, [r3]
3085:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22667              		.loc 1 3085 0
 22668 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22669 0108 7549     		ldr	r1, .L896
 22670 010a 1346     		mov	r3, r2
 22671 010c DB00     		lsls	r3, r3, #3
 22672 010e 9B1A     		subs	r3, r3, r2
 22673 0110 1B01     		lsls	r3, r3, #4
 22674 0112 0B44     		add	r3, r3, r1
 22675 0114 CC33     		adds	r3, r3, #204
 22676 0116 0022     		movs	r2, #0
 22677 0118 1A60     		str	r2, [r3]
3086:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22678              		.loc 1 3086 0
 22679 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22680 011c 7049     		ldr	r1, .L896
 22681 011e 1346     		mov	r3, r2
 22682 0120 DB00     		lsls	r3, r3, #3
 22683 0122 9B1A     		subs	r3, r3, r2
 22684 0124 1B01     		lsls	r3, r3, #4
 22685 0126 0B44     		add	r3, r3, r1
 22686 0128 D033     		adds	r3, r3, #208
 22687 012a 0022     		movs	r2, #0
 22688 012c 1A60     		str	r2, [r3]
3087:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22689              		.loc 1 3087 0
 22690 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22691 0130 6B49     		ldr	r1, .L896
 22692 0132 1346     		mov	r3, r2
 22693 0134 DB00     		lsls	r3, r3, #3
 22694 0136 9B1A     		subs	r3, r3, r2
 22695 0138 1B01     		lsls	r3, r3, #4
 22696 013a 0B44     		add	r3, r3, r1
 22697 013c D433     		adds	r3, r3, #212
 22698 013e 44F6CC42 		movw	r2, #19660
 22699 0142 1A60     		str	r2, [r3]
3088:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22700              		.loc 1 3088 0
 22701 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22702 0146 6649     		ldr	r1, .L896
 22703 0148 1346     		mov	r3, r2
 22704 014a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 497


 22705 014c 9B1A     		subs	r3, r3, r2
 22706 014e 1B01     		lsls	r3, r3, #4
 22707 0150 0B44     		add	r3, r3, r1
 22708 0152 D833     		adds	r3, r3, #216
 22709 0154 0D22     		movs	r2, #13
 22710 0156 1A60     		str	r2, [r3]
3089:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22711              		.loc 1 3089 0
 22712 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22713 015a 6149     		ldr	r1, .L896
 22714 015c 1346     		mov	r3, r2
 22715 015e DB00     		lsls	r3, r3, #3
 22716 0160 9B1A     		subs	r3, r3, r2
 22717 0162 1B01     		lsls	r3, r3, #4
 22718 0164 0B44     		add	r3, r3, r1
 22719 0166 DC33     		adds	r3, r3, #220
 22720 0168 0022     		movs	r2, #0
 22721 016a 1A60     		str	r2, [r3]
3090:..\src/command_processing.c **** 
3091:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22722              		.loc 1 3091 0
 22723 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22724 016e 5C49     		ldr	r1, .L896
 22725 0170 1346     		mov	r3, r2
 22726 0172 DB00     		lsls	r3, r3, #3
 22727 0174 9B1A     		subs	r3, r3, r2
 22728 0176 1B01     		lsls	r3, r3, #4
 22729 0178 0B44     		add	r3, r3, r1
 22730 017a E033     		adds	r3, r3, #224
 22731 017c 0122     		movs	r2, #1
 22732 017e 1A70     		strb	r2, [r3]
3092:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22733              		.loc 1 3092 0
 22734 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22735 0182 5749     		ldr	r1, .L896
 22736 0184 1346     		mov	r3, r2
 22737 0186 DB00     		lsls	r3, r3, #3
 22738 0188 9B1A     		subs	r3, r3, r2
 22739 018a 1B01     		lsls	r3, r3, #4
 22740 018c 0B44     		add	r3, r3, r1
 22741 018e E133     		adds	r3, r3, #225
 22742 0190 0022     		movs	r2, #0
 22743 0192 1A70     		strb	r2, [r3]
3093:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22744              		.loc 1 3093 0
 22745 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22746 0196 5249     		ldr	r1, .L896
 22747 0198 1346     		mov	r3, r2
 22748 019a DB00     		lsls	r3, r3, #3
 22749 019c 9B1A     		subs	r3, r3, r2
 22750 019e 1B01     		lsls	r3, r3, #4
 22751 01a0 0B44     		add	r3, r3, r1
 22752 01a2 E233     		adds	r3, r3, #226
 22753 01a4 0022     		movs	r2, #0
 22754 01a6 1A70     		strb	r2, [r3]
3094:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22755              		.loc 1 3094 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 498


 22756 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22757 01aa 4D49     		ldr	r1, .L896
 22758 01ac 1346     		mov	r3, r2
 22759 01ae DB00     		lsls	r3, r3, #3
 22760 01b0 9B1A     		subs	r3, r3, r2
 22761 01b2 1B01     		lsls	r3, r3, #4
 22762 01b4 0B44     		add	r3, r3, r1
 22763 01b6 03F58773 		add	r3, r3, #270
 22764 01ba 0022     		movs	r2, #0
 22765 01bc 1A70     		strb	r2, [r3]
3095:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22766              		.loc 1 3095 0
 22767 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22768 01c0 4749     		ldr	r1, .L896
 22769 01c2 1346     		mov	r3, r2
 22770 01c4 DB00     		lsls	r3, r3, #3
 22771 01c6 9B1A     		subs	r3, r3, r2
 22772 01c8 1B01     		lsls	r3, r3, #4
 22773 01ca 0B44     		add	r3, r3, r1
 22774 01cc 03F20F13 		addw	r3, r3, #271
 22775 01d0 0022     		movs	r2, #0
 22776 01d2 1A70     		strb	r2, [r3]
3096:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22777              		.loc 1 3096 0
 22778 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22779 01d6 4249     		ldr	r1, .L896
 22780 01d8 1346     		mov	r3, r2
 22781 01da DB00     		lsls	r3, r3, #3
 22782 01dc 9B1A     		subs	r3, r3, r2
 22783 01de 1B01     		lsls	r3, r3, #4
 22784 01e0 0B44     		add	r3, r3, r1
 22785 01e2 F033     		adds	r3, r3, #240
 22786 01e4 0022     		movs	r2, #0
 22787 01e6 1A60     		str	r2, [r3]
3097:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22788              		.loc 1 3097 0
 22789 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22790 01ea 3D49     		ldr	r1, .L896
 22791 01ec 1346     		mov	r3, r2
 22792 01ee DB00     		lsls	r3, r3, #3
 22793 01f0 9B1A     		subs	r3, r3, r2
 22794 01f2 1B01     		lsls	r3, r3, #4
 22795 01f4 0B44     		add	r3, r3, r1
 22796 01f6 EC33     		adds	r3, r3, #236
 22797 01f8 0022     		movs	r2, #0
 22798 01fa 1A60     		str	r2, [r3]
3098:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22799              		.loc 1 3098 0
 22800 01fc 0023     		movs	r3, #0
 22801 01fe BB71     		strb	r3, [r7, #6]
 22802 0200 10E0     		b	.L875
 22803              	.L876:
3099:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22804              		.loc 1 3099 0 discriminator 3
 22805 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22806 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22807 0206 3648     		ldr	r0, .L896
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 499


 22808 0208 1346     		mov	r3, r2
 22809 020a DB00     		lsls	r3, r3, #3
 22810 020c 9B1A     		subs	r3, r3, r2
 22811 020e 9B00     		lsls	r3, r3, #2
 22812 0210 0B44     		add	r3, r3, r1
 22813 0212 3C33     		adds	r3, r3, #60
 22814 0214 9B00     		lsls	r3, r3, #2
 22815 0216 0344     		add	r3, r3, r0
 22816 0218 4FF00002 		mov	r2, #0
 22817 021c 5A60     		str	r2, [r3, #4]	@ float
3098:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22818              		.loc 1 3098 0 discriminator 3
 22819 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22820 0220 0133     		adds	r3, r3, #1
 22821 0222 BB71     		strb	r3, [r7, #6]
 22822              	.L875:
3098:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22823              		.loc 1 3098 0 is_stmt 0 discriminator 1
 22824 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22825 0226 052B     		cmp	r3, #5
 22826 0228 EBD9     		bls	.L876
3100:..\src/command_processing.c ****         }
3101:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22827              		.loc 1 3101 0 is_stmt 1 discriminator 2
 22828 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22829 022c 2C49     		ldr	r1, .L896
 22830 022e 1346     		mov	r3, r2
 22831 0230 DB00     		lsls	r3, r3, #3
 22832 0232 9B1A     		subs	r3, r3, r2
 22833 0234 1B01     		lsls	r3, r3, #4
 22834 0236 0B44     		add	r3, r3, r1
 22835 0238 03F58673 		add	r3, r3, #268
 22836 023c 40F2DC52 		movw	r2, #1500
 22837 0240 1A80     		strh	r2, [r3]	@ movhi
3102:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22838              		.loc 1 3102 0 discriminator 2
 22839 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22840 0244 2649     		ldr	r1, .L896
 22841 0246 1346     		mov	r3, r2
 22842 0248 DB00     		lsls	r3, r3, #3
 22843 024a 9B1A     		subs	r3, r3, r2
 22844 024c 1B01     		lsls	r3, r3, #4
 22845 024e 0B44     		add	r3, r3, r1
 22846 0250 03F58873 		add	r3, r3, #272
 22847 0254 FA79     		ldrb	r2, [r7, #7]
 22848 0256 1A70     		strb	r2, [r3]
3103:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22849              		.loc 1 3103 0 discriminator 2
 22850 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22851 025a 2149     		ldr	r1, .L896
 22852 025c 1346     		mov	r3, r2
 22853 025e DB00     		lsls	r3, r3, #3
 22854 0260 9B1A     		subs	r3, r3, r2
 22855 0262 1B01     		lsls	r3, r3, #4
 22856 0264 0B44     		add	r3, r3, r1
 22857 0266 E333     		adds	r3, r3, #227
 22858 0268 0122     		movs	r2, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 500


 22859 026a 1A70     		strb	r2, [r3]
3104:..\src/command_processing.c ****         
3105:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22860              		.loc 1 3105 0 discriminator 2
 22861 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22862 026e 1C49     		ldr	r1, .L896
 22863 0270 1346     		mov	r3, r2
 22864 0272 DB00     		lsls	r3, r3, #3
 22865 0274 9B1A     		subs	r3, r3, r2
 22866 0276 1B01     		lsls	r3, r3, #4
 22867 0278 0B44     		add	r3, r3, r1
 22868 027a 03F21113 		addw	r3, r3, #273
 22869 027e 0122     		movs	r2, #1
 22870 0280 1A70     		strb	r2, [r3]
3106:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22871              		.loc 1 3106 0 discriminator 2
 22872 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22873 0284 1649     		ldr	r1, .L896
 22874 0286 1346     		mov	r3, r2
 22875 0288 DB00     		lsls	r3, r3, #3
 22876 028a 9B1A     		subs	r3, r3, r2
 22877 028c 1B01     		lsls	r3, r3, #4
 22878 028e 0B44     		add	r3, r3, r1
 22879 0290 03F58973 		add	r3, r3, #274
 22880 0294 0022     		movs	r2, #0
 22881 0296 1A70     		strb	r2, [r3]
3076:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22882              		.loc 1 3076 0 discriminator 2
 22883 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22884 029a 0133     		adds	r3, r3, #1
 22885 029c FB71     		strb	r3, [r7, #7]
 22886              	.L874:
3076:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22887              		.loc 1 3076 0 is_stmt 0 discriminator 1
 22888 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22889 02a0 012B     		cmp	r3, #1
 22890 02a2 7FF6E6AE 		bls	.L877
3107:..\src/command_processing.c ****     }
3108:..\src/command_processing.c ****     
3109:..\src/command_processing.c ****     // ENC STRUCT
3110:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22891              		.loc 1 3110 0 is_stmt 1
 22892 02a6 0023     		movs	r3, #0
 22893 02a8 FB71     		strb	r3, [r7, #7]
 22894 02aa 98E0     		b	.L878
 22895              	.L885:
3111:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22896              		.loc 1 3111 0
 22897 02ac 0023     		movs	r3, #0
 22898 02ae BB71     		strb	r3, [r7, #6]
 22899 02b0 0FE0     		b	.L879
 22900              	.L880:
3112:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22901              		.loc 1 3112 0 discriminator 3
 22902 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22903 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22904 02b6 0A48     		ldr	r0, .L896
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 501


 22905 02b8 1346     		mov	r3, r2
 22906 02ba 5B00     		lsls	r3, r3, #1
 22907 02bc 1344     		add	r3, r3, r2
 22908 02be 1B01     		lsls	r3, r3, #4
 22909 02c0 0344     		add	r3, r3, r0
 22910 02c2 0B44     		add	r3, r3, r1
 22911 02c4 03F5C873 		add	r3, r3, #400
 22912 02c8 0022     		movs	r2, #0
 22913 02ca 1A70     		strb	r2, [r3]
3111:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22914              		.loc 1 3111 0 discriminator 3
 22915 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22916 02ce 0133     		adds	r3, r3, #1
 22917 02d0 BB71     		strb	r3, [r7, #6]
 22918              	.L879:
3111:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22919              		.loc 1 3111 0 is_stmt 0 discriminator 1
 22920 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22921 02d4 042B     		cmp	r3, #4
 22922 02d6 ECD9     		bls	.L880
3113:..\src/command_processing.c ****         }
3114:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22923              		.loc 1 3114 0 is_stmt 1
 22924 02d8 0023     		movs	r3, #0
 22925 02da BB71     		strb	r3, [r7, #6]
 22926 02dc 2CE0     		b	.L881
 22927              	.L897:
 22928 02de 00BF     		.align	2
 22929              	.L896:
 22930 02e0 00000000 		.word	g_mem
 22931              	.L882:
3115:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22932              		.loc 1 3115 0 discriminator 3
 22933 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22934 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22935 02e8 C748     		ldr	r0, .L898
 22936 02ea 1346     		mov	r3, r2
 22937 02ec 5B00     		lsls	r3, r3, #1
 22938 02ee 1344     		add	r3, r3, r2
 22939 02f0 1B01     		lsls	r3, r3, #4
 22940 02f2 0344     		add	r3, r3, r0
 22941 02f4 0B44     		add	r3, r3, r1
 22942 02f6 03F29513 		addw	r3, r3, #405
 22943 02fa 0322     		movs	r2, #3
 22944 02fc 1A70     		strb	r2, [r3]
3116:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22945              		.loc 1 3116 0 discriminator 3
 22946 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22947 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22948 0302 C148     		ldr	r0, .L898
 22949 0304 1346     		mov	r3, r2
 22950 0306 5B00     		lsls	r3, r3, #1
 22951 0308 1344     		add	r3, r3, r2
 22952 030a 9B00     		lsls	r3, r3, #2
 22953 030c 0B44     		add	r3, r3, r1
 22954 030e 6833     		adds	r3, r3, #104
 22955 0310 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 502


 22956 0312 0344     		add	r3, r3, r0
 22957 0314 4FF07E52 		mov	r2, #1065353216
 22958 0318 5A60     		str	r2, [r3, #4]	@ float
3117:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22959              		.loc 1 3117 0 discriminator 3
 22960 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22961 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22962 031e BA48     		ldr	r0, .L898
 22963 0320 1346     		mov	r3, r2
 22964 0322 5B00     		lsls	r3, r3, #1
 22965 0324 1344     		add	r3, r3, r2
 22966 0326 9B00     		lsls	r3, r3, #2
 22967 0328 0B44     		add	r3, r3, r1
 22968 032a 6633     		adds	r3, r3, #102
 22969 032c 0022     		movs	r2, #0
 22970 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3114:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22971              		.loc 1 3114 0 discriminator 3
 22972 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22973 0334 0133     		adds	r3, r3, #1
 22974 0336 BB71     		strb	r3, [r7, #6]
 22975              	.L881:
3114:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22976              		.loc 1 3114 0 is_stmt 0 discriminator 1
 22977 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22978 033a 022B     		cmp	r3, #2
 22979 033c D2D9     		bls	.L882
3118:..\src/command_processing.c ****         }
3119:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22980              		.loc 1 3119 0 is_stmt 1
 22981 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22982 0340 B149     		ldr	r1, .L898
 22983 0342 1346     		mov	r3, r2
 22984 0344 5B00     		lsls	r3, r3, #1
 22985 0346 1344     		add	r3, r3, r2
 22986 0348 1B01     		lsls	r3, r3, #4
 22987 034a 0B44     		add	r3, r3, r1
 22988 034c 03F5D873 		add	r3, r3, #432
 22989 0350 0022     		movs	r2, #0
 22990 0352 1A70     		strb	r2, [r3]
3120:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22991              		.loc 1 3120 0
 22992 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22993 0356 AC49     		ldr	r1, .L898
 22994 0358 1346     		mov	r3, r2
 22995 035a 5B00     		lsls	r3, r3, #1
 22996 035c 1344     		add	r3, r3, r2
 22997 035e 1B01     		lsls	r3, r3, #4
 22998 0360 0B44     		add	r3, r3, r1
 22999 0362 03F5DA73 		add	r3, r3, #436
 23000 0366 1622     		movs	r2, #22
 23001 0368 1A70     		strb	r2, [r3]
3121:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23002              		.loc 1 3121 0
 23003 036a 0023     		movs	r3, #0
 23004 036c BB71     		strb	r3, [r7, #6]
 23005 036e 0FE0     		b	.L883
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 503


 23006              	.L884:
3122:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 23007              		.loc 1 3122 0 discriminator 3
 23008 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23009 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23010 0374 A448     		ldr	r0, .L898
 23011 0376 1346     		mov	r3, r2
 23012 0378 5B00     		lsls	r3, r3, #1
 23013 037a 1344     		add	r3, r3, r2
 23014 037c 1B01     		lsls	r3, r3, #4
 23015 037e 0344     		add	r3, r3, r0
 23016 0380 0B44     		add	r3, r3, r1
 23017 0382 03F2B113 		addw	r3, r3, #433
 23018 0386 BA79     		ldrb	r2, [r7, #6]
 23019 0388 1A70     		strb	r2, [r3]
3121:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23020              		.loc 1 3121 0 discriminator 3
 23021 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23022 038c 0133     		adds	r3, r3, #1
 23023 038e BB71     		strb	r3, [r7, #6]
 23024              	.L883:
3121:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23025              		.loc 1 3121 0 is_stmt 0 discriminator 1
 23026 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23027 0392 022B     		cmp	r3, #2
 23028 0394 ECD9     		bls	.L884
3123:..\src/command_processing.c ****         }
3124:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 23029              		.loc 1 3124 0 is_stmt 1 discriminator 2
 23030 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23031 0398 9B49     		ldr	r1, .L898
 23032 039a 1346     		mov	r3, r2
 23033 039c 5B00     		lsls	r3, r3, #1
 23034 039e 1344     		add	r3, r3, r2
 23035 03a0 1B01     		lsls	r3, r3, #4
 23036 03a2 0B44     		add	r3, r3, r1
 23037 03a4 03F2B513 		addw	r3, r3, #437
 23038 03a8 0F22     		movs	r2, #15
 23039 03aa 1A70     		strb	r2, [r3]
3125:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 23040              		.loc 1 3125 0 discriminator 2
 23041 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23042 03ae 9649     		ldr	r1, .L898
 23043 03b0 1346     		mov	r3, r2
 23044 03b2 5B00     		lsls	r3, r3, #1
 23045 03b4 1344     		add	r3, r3, r2
 23046 03b6 1B01     		lsls	r3, r3, #4
 23047 03b8 0B44     		add	r3, r3, r1
 23048 03ba 03F5DB73 		add	r3, r3, #438
 23049 03be 0E22     		movs	r2, #14
 23050 03c0 1A70     		strb	r2, [r3]
3126:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 23051              		.loc 1 3126 0 discriminator 2
 23052 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23053 03c4 9049     		ldr	r1, .L898
 23054 03c6 1346     		mov	r3, r2
 23055 03c8 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 504


 23056 03ca 1344     		add	r3, r3, r2
 23057 03cc 1B01     		lsls	r3, r3, #4
 23058 03ce 0B44     		add	r3, r3, r1
 23059 03d0 03F2B713 		addw	r3, r3, #439
 23060 03d4 0122     		movs	r2, #1
 23061 03d6 1A70     		strb	r2, [r3]
3110:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23062              		.loc 1 3110 0 discriminator 2
 23063 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23064 03da 0133     		adds	r3, r3, #1
 23065 03dc FB71     		strb	r3, [r7, #7]
 23066              	.L878:
3110:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23067              		.loc 1 3110 0 is_stmt 0 discriminator 1
 23068 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23069 03e0 012B     		cmp	r3, #1
 23070 03e2 7FF663AF 		bls	.L885
3127:..\src/command_processing.c ****     }
3128:..\src/command_processing.c ****     
3129:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 23071              		.loc 1 3129 0 is_stmt 1
 23072 03e6 0023     		movs	r3, #0
 23073 03e8 FB71     		strb	r3, [r7, #7]
 23074 03ea 2EE0     		b	.L886
 23075              	.L887:
3130:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23076              		.loc 1 3130 0 discriminator 3
 23077 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23078 03ee 8649     		ldr	r1, .L898
 23079 03f0 1346     		mov	r3, r2
 23080 03f2 DB00     		lsls	r3, r3, #3
 23081 03f4 9B1A     		subs	r3, r3, r2
 23082 03f6 1B01     		lsls	r3, r3, #4
 23083 03f8 0B44     		add	r3, r3, r1
 23084 03fa E433     		adds	r3, r3, #228
 23085 03fc 0022     		movs	r2, #0
 23086 03fe 1A60     		str	r2, [r3]
3131:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 23087              		.loc 1 3131 0 discriminator 3
 23088 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23089 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 23090 0404 8048     		ldr	r0, .L898
 23091 0406 0B46     		mov	r3, r1
 23092 0408 DB00     		lsls	r3, r3, #3
 23093 040a 5B1A     		subs	r3, r3, r1
 23094 040c 1B01     		lsls	r3, r3, #4
 23095 040e 0344     		add	r3, r3, r0
 23096 0410 03F58873 		add	r3, r3, #272
 23097 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23098 0416 1846     		mov	r0, r3
 23099 0418 7B49     		ldr	r1, .L898
 23100 041a 0346     		mov	r3, r0
 23101 041c 5B00     		lsls	r3, r3, #1
 23102 041e 0344     		add	r3, r3, r0
 23103 0420 1B01     		lsls	r3, r3, #4
 23104 0422 0B44     		add	r3, r3, r1
 23105 0424 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 505


 23106 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23107 042a 1946     		mov	r1, r3
 23108 042c 44F63823 		movw	r3, #19000
 23109 0430 03FA01F1 		lsl	r1, r3, r1
 23110 0434 7448     		ldr	r0, .L898
 23111 0436 1346     		mov	r3, r2
 23112 0438 DB00     		lsls	r3, r3, #3
 23113 043a 9B1A     		subs	r3, r3, r2
 23114 043c 1B01     		lsls	r3, r3, #4
 23115 043e 0344     		add	r3, r3, r0
 23116 0440 E833     		adds	r3, r3, #232
 23117 0442 1960     		str	r1, [r3]
3129:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23118              		.loc 1 3129 0 discriminator 3
 23119 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23120 0446 0133     		adds	r3, r3, #1
 23121 0448 FB71     		strb	r3, [r7, #7]
 23122              	.L886:
3129:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23123              		.loc 1 3129 0 is_stmt 0 discriminator 1
 23124 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23125 044c 012B     		cmp	r3, #1
 23126 044e CDD9     		bls	.L887
3132:..\src/command_processing.c ****     }
3133:..\src/command_processing.c ****     
3134:..\src/command_processing.c ****     // EMG STRUCT     
3135:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23127              		.loc 1 3135 0 is_stmt 1
 23128 0450 6D4B     		ldr	r3, .L898
 23129 0452 C822     		movs	r2, #200
 23130 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3136:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23131              		.loc 1 3136 0
 23132 0458 6B4B     		ldr	r3, .L898
 23133 045a C822     		movs	r2, #200
 23134 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3137:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23135              		.loc 1 3137 0
 23136 0460 694B     		ldr	r3, .L898
 23137 0462 4FF48062 		mov	r2, #1024
 23138 0466 C3F8F421 		str	r2, [r3, #500]
3138:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 23139              		.loc 1 3138 0
 23140 046a 674B     		ldr	r3, .L898
 23141 046c 4FF48062 		mov	r2, #1024
 23142 0470 C3F8F821 		str	r2, [r3, #504]
3139:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 23143              		.loc 1 3139 0
 23144 0474 644B     		ldr	r3, .L898
 23145 0476 6422     		movs	r2, #100
 23146 0478 83F8FC21 		strb	r2, [r3, #508]
3140:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 23147              		.loc 1 3140 0
 23148 047c 624B     		ldr	r3, .L898
 23149 047e 6422     		movs	r2, #100
 23150 0480 83F8FD21 		strb	r2, [r3, #509]
3141:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 506


 23151              		.loc 1 3141 0
 23152 0484 604B     		ldr	r3, .L898
 23153 0486 0022     		movs	r2, #0
 23154 0488 83F8FE21 		strb	r2, [r3, #510]
3142:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23155              		.loc 1 3142 0
 23156 048c 5E4B     		ldr	r3, .L898
 23157 048e 0022     		movs	r2, #0
 23158 0490 83F8FF21 		strb	r2, [r3, #511]
3143:..\src/command_processing.c **** 
3144:..\src/command_processing.c ****     // IMU STRUCT
3145:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23159              		.loc 1 3145 0
 23160 0494 5C4B     		ldr	r3, .L898
 23161 0496 0022     		movs	r2, #0
 23162 0498 83F80022 		strb	r2, [r3, #512]
3146:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23163              		.loc 1 3146 0
 23164 049c 5A4B     		ldr	r3, .L898
 23165 049e 0022     		movs	r2, #0
 23166 04a0 83F80122 		strb	r2, [r3, #513]
3147:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 23167              		.loc 1 3147 0
 23168 04a4 0023     		movs	r3, #0
 23169 04a6 FB71     		strb	r3, [r7, #7]
 23170 04a8 34E0     		b	.L888
 23171              	.L889:
3148:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23172              		.loc 1 3148 0 discriminator 3
 23173 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23174 04ac 5649     		ldr	r1, .L898
 23175 04ae 1346     		mov	r3, r2
 23176 04b0 9B00     		lsls	r3, r3, #2
 23177 04b2 1344     		add	r3, r3, r2
 23178 04b4 0B44     		add	r3, r3, r1
 23179 04b6 03F20223 		addw	r3, r3, #514
 23180 04ba 0122     		movs	r2, #1
 23181 04bc 1A70     		strb	r2, [r3]
3149:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23182              		.loc 1 3149 0 discriminator 3
 23183 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23184 04c0 5149     		ldr	r1, .L898
 23185 04c2 1346     		mov	r3, r2
 23186 04c4 9B00     		lsls	r3, r3, #2
 23187 04c6 1344     		add	r3, r3, r2
 23188 04c8 0B44     		add	r3, r3, r1
 23189 04ca 03F20323 		addw	r3, r3, #515
 23190 04ce 0122     		movs	r2, #1
 23191 04d0 1A70     		strb	r2, [r3]
3150:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 23192              		.loc 1 3150 0 discriminator 3
 23193 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23194 04d4 4C49     		ldr	r1, .L898
 23195 04d6 1346     		mov	r3, r2
 23196 04d8 9B00     		lsls	r3, r3, #2
 23197 04da 1344     		add	r3, r3, r2
 23198 04dc 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 507


 23199 04de 03F50173 		add	r3, r3, #516
 23200 04e2 0022     		movs	r2, #0
 23201 04e4 1A70     		strb	r2, [r3]
3151:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23202              		.loc 1 3151 0 discriminator 3
 23203 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23204 04e8 4749     		ldr	r1, .L898
 23205 04ea 1346     		mov	r3, r2
 23206 04ec 9B00     		lsls	r3, r3, #2
 23207 04ee 1344     		add	r3, r3, r2
 23208 04f0 0B44     		add	r3, r3, r1
 23209 04f2 03F20523 		addw	r3, r3, #517
 23210 04f6 0022     		movs	r2, #0
 23211 04f8 1A70     		strb	r2, [r3]
3152:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23212              		.loc 1 3152 0 discriminator 3
 23213 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23214 04fc 4249     		ldr	r1, .L898
 23215 04fe 1346     		mov	r3, r2
 23216 0500 9B00     		lsls	r3, r3, #2
 23217 0502 1344     		add	r3, r3, r2
 23218 0504 0B44     		add	r3, r3, r1
 23219 0506 03F20623 		addw	r3, r3, #518
 23220 050a 0022     		movs	r2, #0
 23221 050c 1A70     		strb	r2, [r3]
3147:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23222              		.loc 1 3147 0 discriminator 3
 23223 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23224 0510 0133     		adds	r3, r3, #1
 23225 0512 FB71     		strb	r3, [r7, #7]
 23226              	.L888:
3147:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23227              		.loc 1 3147 0 is_stmt 0 discriminator 1
 23228 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23229 0516 042B     		cmp	r3, #4
 23230 0518 C7D9     		bls	.L889
3153:..\src/command_processing.c ****     }
3154:..\src/command_processing.c ****      
3155:..\src/command_processing.c ****     // EXP STRUCT
3156:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23231              		.loc 1 3156 0 is_stmt 1
 23232 051a 3B4B     		ldr	r3, .L898
 23233 051c 0022     		movs	r2, #0
 23234 051e 83F82622 		strb	r2, [r3, #550]
3157:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23235              		.loc 1 3157 0
 23236 0522 394B     		ldr	r3, .L898
 23237 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23238 0528 1233     		adds	r3, r3, #18
 23239 052a 5B01     		lsls	r3, r3, #5
 23240 052c 364A     		ldr	r2, .L898
 23241 052e 1344     		add	r3, r3, r2
 23242 0530 364A     		ldr	r2, .L898+4
 23243 0532 1068     		ldr	r0, [r2]	@ unaligned
 23244 0534 1860     		str	r0, [r3]	@ unaligned
 23245 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23246 0538 9279     		ldrb	r2, [r2, #6]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 508


 23247 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 23248 053c 9A71     		strb	r2, [r3, #6]
3158:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23249              		.loc 1 3158 0
 23250 053e 324B     		ldr	r3, .L898
 23251 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23252 0544 012B     		cmp	r3, #1
 23253 0546 13D1     		bne	.L890
3159:..\src/command_processing.c ****         // Set date of maintenance from RTC
3160:..\src/command_processing.c ****         store_RTC_current_time();
 23254              		.loc 1 3160 0
 23255 0548 FFF7FEFF 		bl	store_RTC_current_time
3161:..\src/command_processing.c ****         
3162:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23256              		.loc 1 3162 0
 23257 054c 2E4B     		ldr	r3, .L898
 23258 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23259 0552 2D4B     		ldr	r3, .L898
 23260 0554 83F8A420 		strb	r2, [r3, #164]
3163:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23261              		.loc 1 3163 0
 23262 0558 2B4B     		ldr	r3, .L898
 23263 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23264 055e 2A4B     		ldr	r3, .L898
 23265 0560 83F8A520 		strb	r2, [r3, #165]
3164:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23266              		.loc 1 3164 0
 23267 0564 284B     		ldr	r3, .L898
 23268 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23269 056a 274B     		ldr	r3, .L898
 23270 056c 83F8A620 		strb	r2, [r3, #166]
 23271              	.L890:
3165:..\src/command_processing.c ****     }
3166:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23272              		.loc 1 3166 0
 23273 0570 254B     		ldr	r3, .L898
 23274 0572 0022     		movs	r2, #0
 23275 0574 83F82722 		strb	r2, [r3, #551]
3167:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23276              		.loc 1 3167 0
 23277 0578 0023     		movs	r3, #0
 23278 057a FB71     		strb	r3, [r7, #7]
 23279 057c 08E0     		b	.L891
 23280              	.L892:
3168:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23281              		.loc 1 3168 0 discriminator 3
 23282 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23283 0580 214A     		ldr	r2, .L898
 23284 0582 1344     		add	r3, r3, r2
 23285 0584 0022     		movs	r2, #0
 23286 0586 83F82822 		strb	r2, [r3, #552]
3167:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23287              		.loc 1 3167 0 discriminator 3
 23288 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23289 058c 0133     		adds	r3, r3, #1
 23290 058e FB71     		strb	r3, [r7, #7]
 23291              	.L891:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 509


3167:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23292              		.loc 1 3167 0 is_stmt 0 discriminator 1
 23293 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23294 0592 0B2B     		cmp	r3, #11
 23295 0594 F3D9     		bls	.L892
3169:..\src/command_processing.c ****     }
3170:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3171:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23296              		.loc 1 3171 0 is_stmt 1
 23297 0596 1C4B     		ldr	r3, .L898
 23298 0598 0122     		movs	r2, #1
 23299 059a 83F82A22 		strb	r2, [r3, #554]
3172:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23300              		.loc 1 3172 0
 23301 059e 1A4B     		ldr	r3, .L898
 23302 05a0 0122     		movs	r2, #1
 23303 05a2 83F82B22 		strb	r2, [r3, #555]
3173:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23304              		.loc 1 3173 0
 23305 05a6 184B     		ldr	r3, .L898
 23306 05a8 0022     		movs	r2, #0
 23307 05aa 83F83422 		strb	r2, [r3, #564]
3174:..\src/command_processing.c **** 
3175:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3176:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3177:..\src/command_processing.c ****     memInit_SoftHandPro();
3178:..\src/command_processing.c **** #endif 
3179:..\src/command_processing.c **** 
3180:..\src/command_processing.c **** #ifdef MASTER_FW
3181:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3182:..\src/command_processing.c ****     memInit_Master();
3183:..\src/command_processing.c **** #endif 
3184:..\src/command_processing.c **** 
3185:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3186:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3187:..\src/command_processing.c ****     memInit_AirChambersFb();
3188:..\src/command_processing.c **** #endif 
3189:..\src/command_processing.c **** 
3190:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3191:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3192:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3193:..\src/command_processing.c **** #endif
3194:..\src/command_processing.c **** 
3195:..\src/command_processing.c ****     // JOYSTICK STRUCT
3196:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23308              		.loc 1 3196 0
 23309 05ae 164B     		ldr	r3, .L898
 23310 05b0 9622     		movs	r2, #150
 23311 05b2 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3197:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23312              		.loc 1 3197 0
 23313 05b6 144B     		ldr	r3, .L898
 23314 05b8 6422     		movs	r2, #100
 23315 05ba A3F8B222 		strh	r2, [r3, #690]	@ movhi
3198:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23316              		.loc 1 3198 0
 23317 05be 124B     		ldr	r3, .L898
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 510


 23318 05c0 4FF48062 		mov	r2, #1024
 23319 05c4 A3F8B422 		strh	r2, [r3, #692]	@ movhi
3199:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23320              		.loc 1 3199 0
 23321 05c8 0F4B     		ldr	r3, .L898
 23322 05ca 4FF48062 		mov	r2, #1024
 23323 05ce A3F8B622 		strh	r2, [r3, #694]	@ movhi
3200:..\src/command_processing.c **** 
3201:..\src/command_processing.c ****     // Default generic user_id
3202:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23324              		.loc 1 3202 0
 23325 05d2 0D4B     		ldr	r3, .L898
 23326 05d4 0022     		movs	r2, #0
 23327 05d6 83F8AB20 		strb	r2, [r3, #171]
3203:..\src/command_processing.c **** 
3204:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3205:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23328              		.loc 1 3205 0
 23329 05da 0B4B     		ldr	r3, .L898
 23330 05dc 0122     		movs	r2, #1
 23331 05de 1A70     		strb	r2, [r3]
3206:..\src/command_processing.c ****     
3207:..\src/command_processing.c ****     //write that configuration to EEPROM
3208:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23332              		.loc 1 3208 0
 23333 05e0 0020     		movs	r0, #0
 23334 05e2 FFF7FEFF 		bl	memStore
 23335 05e6 0346     		mov	r3, r0
 23336 05e8 002B     		cmp	r3, #0
 23337 05ea 07D0     		beq	.L893
 23338              		.loc 1 3208 0 is_stmt 0 discriminator 1
 23339 05ec 3220     		movs	r0, #50
 23340 05ee FFF7FEFF 		bl	memStore
 23341 05f2 0346     		mov	r3, r0
 23342 05f4 002B     		cmp	r3, #0
 23343 05f6 01D0     		beq	.L893
 23344              		.loc 1 3208 0 discriminator 3
 23345 05f8 0123     		movs	r3, #1
 23346 05fa 00E0     		b	.L894
 23347              	.L893:
 23348              		.loc 1 3208 0 discriminator 4
 23349 05fc 0023     		movs	r3, #0
 23350              	.L894:
 23351              		.loc 1 3208 0 discriminator 6
 23352 05fe DBB2     		uxtb	r3, r3
3209:..\src/command_processing.c **** }
 23353              		.loc 1 3209 0 is_stmt 1 discriminator 6
 23354 0600 1846     		mov	r0, r3
 23355 0602 0837     		adds	r7, r7, #8
 23356              		.cfi_def_cfa_offset 8
 23357 0604 BD46     		mov	sp, r7
 23358              		.cfi_def_cfa_register 13
 23359              		@ sp needed
 23360 0606 80BD     		pop	{r7, pc}
 23361              	.L899:
 23362              		.align	2
 23363              	.L898:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 511


 23364 0608 00000000 		.word	g_mem
 23365 060c E01F0000 		.word	.LC308
 23366              		.cfi_endproc
 23367              	.LFE88:
 23368              		.size	memInit, .-memInit
 23369              		.section	.rodata
 23370 1fe7 00       		.align	2
 23371              	.LC309:
 23372 1fe8 55535230 		.ascii	"USR001\000"
 23372      303100
 23373              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23374              		.align	2
 23375              		.global	memInit_SoftHandPro
 23376              		.thumb
 23377              		.thumb_func
 23378              		.type	memInit_SoftHandPro, %function
 23379              	memInit_SoftHandPro:
 23380              	.LFB89:
3210:..\src/command_processing.c **** 
3211:..\src/command_processing.c **** //==============================================================================
3212:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3213:..\src/command_processing.c **** //==============================================================================
3214:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3215:..\src/command_processing.c **** {
 23381              		.loc 1 3215 0
 23382              		.cfi_startproc
 23383              		@ args = 0, pretend = 0, frame = 8
 23384              		@ frame_needed = 1, uses_anonymous_args = 0
 23385              		@ link register save eliminated.
 23386 0000 80B4     		push	{r7}
 23387              		.cfi_def_cfa_offset 4
 23388              		.cfi_offset 7, -4
 23389 0002 83B0     		sub	sp, sp, #12
 23390              		.cfi_def_cfa_offset 16
 23391 0004 00AF     		add	r7, sp, #0
 23392              		.cfi_def_cfa_register 7
3216:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23393              		.loc 1 3216 0
 23394 0006 0023     		movs	r3, #0
 23395 0008 FB70     		strb	r3, [r7, #3]
3217:..\src/command_processing.c ****     
3218:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3219:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23396              		.loc 1 3219 0
 23397 000a 894B     		ldr	r3, .L903
 23398 000c 0122     		movs	r2, #1
 23399 000e 83F8A720 		strb	r2, [r3, #167]
3220:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23400              		.loc 1 3220 0
 23401 0012 874B     		ldr	r3, .L903
 23402 0014 0022     		movs	r2, #0
 23403 0016 83F8AC20 		strb	r2, [r3, #172]
3221:..\src/command_processing.c ****     
3222:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23404              		.loc 1 3222 0
 23405 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23406 001c 8449     		ldr	r1, .L903
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 512


 23407 001e 1346     		mov	r3, r2
 23408 0020 DB00     		lsls	r3, r3, #3
 23409 0022 9B1A     		subs	r3, r3, r2
 23410 0024 1B01     		lsls	r3, r3, #4
 23411 0026 0B44     		add	r3, r3, r1
 23412 0028 E033     		adds	r3, r3, #224
 23413 002a 0122     		movs	r2, #1
 23414 002c 1A70     		strb	r2, [r3]
3223:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23415              		.loc 1 3223 0
 23416 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23417 0030 7F49     		ldr	r1, .L903
 23418 0032 1346     		mov	r3, r2
 23419 0034 DB00     		lsls	r3, r3, #3
 23420 0036 9B1A     		subs	r3, r3, r2
 23421 0038 1B01     		lsls	r3, r3, #4
 23422 003a 0B44     		add	r3, r3, r1
 23423 003c 03F58773 		add	r3, r3, #270
 23424 0040 0022     		movs	r2, #0
 23425 0042 1A70     		strb	r2, [r3]
3224:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23426              		.loc 1 3224 0
 23427 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23428 0046 7A49     		ldr	r1, .L903
 23429 0048 1346     		mov	r3, r2
 23430 004a DB00     		lsls	r3, r3, #3
 23431 004c 9B1A     		subs	r3, r3, r2
 23432 004e 1B01     		lsls	r3, r3, #4
 23433 0050 0B44     		add	r3, r3, r1
 23434 0052 03F20F13 		addw	r3, r3, #271
 23435 0056 0022     		movs	r2, #0
 23436 0058 1A70     		strb	r2, [r3]
3225:..\src/command_processing.c ****     
3226:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3227:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23437              		.loc 1 3227 0
 23438 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23439 005c 744B     		ldr	r3, .L903
 23440 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23441 0062 7349     		ldr	r1, .L903
 23442 0064 1346     		mov	r3, r2
 23443 0066 DB00     		lsls	r3, r3, #3
 23444 0068 9B1A     		subs	r3, r3, r2
 23445 006a 1B01     		lsls	r3, r3, #4
 23446 006c 0B44     		add	r3, r3, r1
 23447 006e 03F58873 		add	r3, r3, #272
 23448 0072 0246     		mov	r2, r0
 23449 0074 1A70     		strb	r2, [r3]
3228:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23450              		.loc 1 3228 0
 23451 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23452 0078 6D49     		ldr	r1, .L903
 23453 007a 1346     		mov	r3, r2
 23454 007c DB00     		lsls	r3, r3, #3
 23455 007e 9B1A     		subs	r3, r3, r2
 23456 0080 1B01     		lsls	r3, r3, #4
 23457 0082 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 513


 23458 0084 03F21113 		addw	r3, r3, #273
 23459 0088 0122     		movs	r2, #1
 23460 008a 1A70     		strb	r2, [r3]
3229:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23461              		.loc 1 3229 0
 23462 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23463 008e 6849     		ldr	r1, .L903
 23464 0090 1346     		mov	r3, r2
 23465 0092 DB00     		lsls	r3, r3, #3
 23466 0094 9B1A     		subs	r3, r3, r2
 23467 0096 1B01     		lsls	r3, r3, #4
 23468 0098 0B44     		add	r3, r3, r1
 23469 009a 03F58973 		add	r3, r3, #274
 23470 009e 0122     		movs	r2, #1
 23471 00a0 1A70     		strb	r2, [r3]
3230:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23472              		.loc 1 3230 0
 23473 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23474 00a4 6249     		ldr	r1, .L903
 23475 00a6 1346     		mov	r3, r2
 23476 00a8 DB00     		lsls	r3, r3, #3
 23477 00aa 9B1A     		subs	r3, r3, r2
 23478 00ac 1B01     		lsls	r3, r3, #4
 23479 00ae 0B44     		add	r3, r3, r1
 23480 00b0 E433     		adds	r3, r3, #228
 23481 00b2 0022     		movs	r2, #0
 23482 00b4 1A60     		str	r2, [r3]
3231:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23483              		.loc 1 3231 0
 23484 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23485 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23486 00ba 5D48     		ldr	r0, .L903
 23487 00bc 0B46     		mov	r3, r1
 23488 00be DB00     		lsls	r3, r3, #3
 23489 00c0 5B1A     		subs	r3, r3, r1
 23490 00c2 1B01     		lsls	r3, r3, #4
 23491 00c4 0344     		add	r3, r3, r0
 23492 00c6 03F58873 		add	r3, r3, #272
 23493 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23494 00cc 1846     		mov	r0, r3
 23495 00ce 5849     		ldr	r1, .L903
 23496 00d0 0346     		mov	r3, r0
 23497 00d2 5B00     		lsls	r3, r3, #1
 23498 00d4 0344     		add	r3, r3, r0
 23499 00d6 1B01     		lsls	r3, r3, #4
 23500 00d8 0B44     		add	r3, r3, r1
 23501 00da 03F29513 		addw	r3, r3, #405
 23502 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23503 00e0 1946     		mov	r1, r3
 23504 00e2 4FF47A53 		mov	r3, #16000
 23505 00e6 03FA01F1 		lsl	r1, r3, r1
 23506 00ea 5148     		ldr	r0, .L903
 23507 00ec 1346     		mov	r3, r2
 23508 00ee DB00     		lsls	r3, r3, #3
 23509 00f0 9B1A     		subs	r3, r3, r2
 23510 00f2 1B01     		lsls	r3, r3, #4
 23511 00f4 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 514


 23512 00f6 E833     		adds	r3, r3, #232
 23513 00f8 1960     		str	r1, [r3]
 23514              	.LBB26:
3232:..\src/command_processing.c ****     
3233:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23515              		.loc 1 3233 0
 23516 00fa 0023     		movs	r3, #0
 23517 00fc 7B60     		str	r3, [r7, #4]
 23518 00fe 2EE0     		b	.L901
 23519              	.L902:
3234:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3235:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23520              		.loc 1 3235 0 discriminator 3
 23521 0100 4B49     		ldr	r1, .L903
 23522 0102 7A68     		ldr	r2, [r7, #4]
 23523 0104 1346     		mov	r3, r2
 23524 0106 5B00     		lsls	r3, r3, #1
 23525 0108 1344     		add	r3, r3, r2
 23526 010a 1B01     		lsls	r3, r3, #4
 23527 010c 0B44     		add	r3, r3, r1
 23528 010e 03F5D873 		add	r3, r3, #432
 23529 0112 0122     		movs	r2, #1
 23530 0114 1A70     		strb	r2, [r3]
3236:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23531              		.loc 1 3236 0 discriminator 3
 23532 0116 4649     		ldr	r1, .L903
 23533 0118 7A68     		ldr	r2, [r7, #4]
 23534 011a 1346     		mov	r3, r2
 23535 011c 5B00     		lsls	r3, r3, #1
 23536 011e 1344     		add	r3, r3, r2
 23537 0120 1B01     		lsls	r3, r3, #4
 23538 0122 0B44     		add	r3, r3, r1
 23539 0124 03F2B513 		addw	r3, r3, #437
 23540 0128 2322     		movs	r2, #35
 23541 012a 1A70     		strb	r2, [r3]
3237:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23542              		.loc 1 3237 0 discriminator 3
 23543 012c 4049     		ldr	r1, .L903
 23544 012e 7A68     		ldr	r2, [r7, #4]
 23545 0130 1346     		mov	r3, r2
 23546 0132 5B00     		lsls	r3, r3, #1
 23547 0134 1344     		add	r3, r3, r2
 23548 0136 1B01     		lsls	r3, r3, #4
 23549 0138 0B44     		add	r3, r3, r1
 23550 013a 03F5DB73 		add	r3, r3, #438
 23551 013e 0322     		movs	r2, #3
 23552 0140 1A70     		strb	r2, [r3]
3238:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23553              		.loc 1 3238 0 discriminator 3
 23554 0142 3B49     		ldr	r1, .L903
 23555 0144 7A68     		ldr	r2, [r7, #4]
 23556 0146 1346     		mov	r3, r2
 23557 0148 5B00     		lsls	r3, r3, #1
 23558 014a 1344     		add	r3, r3, r2
 23559 014c 1B01     		lsls	r3, r3, #4
 23560 014e 0B44     		add	r3, r3, r1
 23561 0150 03F2B713 		addw	r3, r3, #439
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 515


 23562 0154 FF22     		movs	r2, #255
 23563 0156 1A70     		strb	r2, [r3]
3233:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23564              		.loc 1 3233 0 discriminator 3
 23565 0158 7B68     		ldr	r3, [r7, #4]
 23566 015a 0133     		adds	r3, r3, #1
 23567 015c 7B60     		str	r3, [r7, #4]
 23568              	.L901:
3233:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23569              		.loc 1 3233 0 is_stmt 0 discriminator 1
 23570 015e 7B68     		ldr	r3, [r7, #4]
 23571 0160 012B     		cmp	r3, #1
 23572 0162 CDDD     		ble	.L902
 23573              	.LBE26:
3239:..\src/command_processing.c ****     }
3240:..\src/command_processing.c ****     
3241:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23574              		.loc 1 3241 0 is_stmt 1
 23575 0164 324B     		ldr	r3, .L903
 23576 0166 4FF48062 		mov	r2, #1024
 23577 016a C3F8F421 		str	r2, [r3, #500]
3242:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23578              		.loc 1 3242 0
 23579 016e 304B     		ldr	r3, .L903
 23580 0170 4FF48062 		mov	r2, #1024
 23581 0174 C3F8F821 		str	r2, [r3, #504]
3243:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23582              		.loc 1 3243 0
 23583 0178 2D4B     		ldr	r3, .L903
 23584 017a C822     		movs	r2, #200
 23585 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3244:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23586              		.loc 1 3244 0
 23587 0180 2B4B     		ldr	r3, .L903
 23588 0182 C822     		movs	r2, #200
 23589 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3245:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23590              		.loc 1 3245 0
 23591 0188 294B     		ldr	r3, .L903
 23592 018a 6422     		movs	r2, #100
 23593 018c 83F8FC21 		strb	r2, [r3, #508]
3246:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23594              		.loc 1 3246 0
 23595 0190 274B     		ldr	r3, .L903
 23596 0192 6422     		movs	r2, #100
 23597 0194 83F8FD21 		strb	r2, [r3, #509]
3247:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23598              		.loc 1 3247 0
 23599 0198 254B     		ldr	r3, .L903
 23600 019a 0022     		movs	r2, #0
 23601 019c 83F8FE21 		strb	r2, [r3, #510]
3248:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23602              		.loc 1 3248 0
 23603 01a0 234B     		ldr	r3, .L903
 23604 01a2 0022     		movs	r2, #0
 23605 01a4 83F8FF21 		strb	r2, [r3, #511]
3249:..\src/command_processing.c ****     
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 516


3250:..\src/command_processing.c ****     //Initialize rest position parameters  
3251:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23606              		.loc 1 3251 0
 23607 01a8 214B     		ldr	r3, .L903
 23608 01aa 0022     		movs	r2, #0
 23609 01ac 83F8AC22 		strb	r2, [r3, #684]
3252:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23610              		.loc 1 3252 0
 23611 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23612 01b2 1F49     		ldr	r1, .L903
 23613 01b4 1346     		mov	r3, r2
 23614 01b6 DB00     		lsls	r3, r3, #3
 23615 01b8 9B1A     		subs	r3, r3, r2
 23616 01ba 1B01     		lsls	r3, r3, #4
 23617 01bc 0B44     		add	r3, r3, r1
 23618 01be 03F58873 		add	r3, r3, #272
 23619 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23620 01c4 1946     		mov	r1, r3
 23621 01c6 1A4A     		ldr	r2, .L903
 23622 01c8 0B46     		mov	r3, r1
 23623 01ca 5B00     		lsls	r3, r3, #1
 23624 01cc 0B44     		add	r3, r3, r1
 23625 01ce 1B01     		lsls	r3, r3, #4
 23626 01d0 1344     		add	r3, r3, r2
 23627 01d2 03F29513 		addw	r3, r3, #405
 23628 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23629 01d8 1A46     		mov	r2, r3
 23630 01da 41F65833 		movw	r3, #7000
 23631 01de 9340     		lsls	r3, r3, r2
 23632 01e0 134A     		ldr	r2, .L903
 23633 01e2 C2F8A032 		str	r3, [r2, #672]
3253:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23634              		.loc 1 3253 0
 23635 01e6 124B     		ldr	r3, .L903
 23636 01e8 0A22     		movs	r2, #10
 23637 01ea C3F8A422 		str	r2, [r3, #676]
3254:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23638              		.loc 1 3254 0
 23639 01ee 104B     		ldr	r3, .L903
 23640 01f0 42F21072 		movw	r2, #10000
 23641 01f4 C3F8A822 		str	r2, [r3, #680]
3255:..\src/command_processing.c **** 	
3256:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23642              		.loc 1 3256 0
 23643 01f8 0D4B     		ldr	r3, .L903
 23644 01fa 0022     		movs	r2, #0
 23645 01fc 83F80022 		strb	r2, [r3, #512]
3257:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23646              		.loc 1 3257 0
 23647 0200 0B4B     		ldr	r3, .L903
 23648 0202 0022     		movs	r2, #0
 23649 0204 83F82622 		strb	r2, [r3, #550]
3258:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23650              		.loc 1 3258 0
 23651 0208 094B     		ldr	r3, .L903
 23652 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23653 020e 1233     		adds	r3, r3, #18
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 517


 23654 0210 5B01     		lsls	r3, r3, #5
 23655 0212 074A     		ldr	r2, .L903
 23656 0214 1344     		add	r3, r3, r2
 23657 0216 074A     		ldr	r2, .L903+4
 23658 0218 1068     		ldr	r0, [r2]	@ unaligned
 23659 021a 1860     		str	r0, [r3]	@ unaligned
 23660 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23661 021e 9279     		ldrb	r2, [r2, #6]
 23662 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 23663 0222 9A71     		strb	r2, [r3, #6]
3259:..\src/command_processing.c **** }
 23664              		.loc 1 3259 0
 23665 0224 00BF     		nop
 23666 0226 0C37     		adds	r7, r7, #12
 23667              		.cfi_def_cfa_offset 4
 23668 0228 BD46     		mov	sp, r7
 23669              		.cfi_def_cfa_register 13
 23670              		@ sp needed
 23671 022a 80BC     		pop	{r7}
 23672              		.cfi_restore 7
 23673              		.cfi_def_cfa_offset 0
 23674 022c 7047     		bx	lr
 23675              	.L904:
 23676 022e 00BF     		.align	2
 23677              	.L903:
 23678 0230 00000000 		.word	g_mem
 23679 0234 E81F0000 		.word	.LC309
 23680              		.cfi_endproc
 23681              	.LFE89:
 23682              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23683              		.section	.text.memInit_Master,"ax",%progbits
 23684              		.align	2
 23685              		.global	memInit_Master
 23686              		.thumb
 23687              		.thumb_func
 23688              		.type	memInit_Master, %function
 23689              	memInit_Master:
 23690              	.LFB90:
3260:..\src/command_processing.c **** 
3261:..\src/command_processing.c **** //==============================================================================
3262:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3263:..\src/command_processing.c **** //==============================================================================
3264:..\src/command_processing.c **** void memInit_Master(void)
3265:..\src/command_processing.c **** {
 23691              		.loc 1 3265 0
 23692              		.cfi_startproc
 23693              		@ args = 0, pretend = 0, frame = 0
 23694              		@ frame_needed = 1, uses_anonymous_args = 0
 23695              		@ link register save eliminated.
 23696 0000 80B4     		push	{r7}
 23697              		.cfi_def_cfa_offset 4
 23698              		.cfi_offset 7, -4
 23699 0002 00AF     		add	r7, sp, #0
 23700              		.cfi_def_cfa_register 7
3266:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23701              		.loc 1 3266 0
 23702 0004 074B     		ldr	r3, .L906
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 518


 23703 0006 0222     		movs	r2, #2
 23704 0008 83F8A020 		strb	r2, [r3, #160]
3267:..\src/command_processing.c ****     
3268:..\src/command_processing.c ****     // MS STRUCT
3269:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23705              		.loc 1 3269 0
 23706 000c 054B     		ldr	r3, .L906
 23707 000e 0122     		movs	r2, #1
 23708 0010 83F8C122 		strb	r2, [r3, #705]
3270:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 23709              		.loc 1 3270 0
 23710 0014 034B     		ldr	r3, .L906
 23711 0016 0022     		movs	r2, #0
 23712 0018 83F8C022 		strb	r2, [r3, #704]
3271:..\src/command_processing.c **** }
 23713              		.loc 1 3271 0
 23714 001c 00BF     		nop
 23715 001e BD46     		mov	sp, r7
 23716              		.cfi_def_cfa_register 13
 23717              		@ sp needed
 23718 0020 80BC     		pop	{r7}
 23719              		.cfi_restore 7
 23720              		.cfi_def_cfa_offset 0
 23721 0022 7047     		bx	lr
 23722              	.L907:
 23723              		.align	2
 23724              	.L906:
 23725 0024 00000000 		.word	g_mem
 23726              		.cfi_endproc
 23727              	.LFE90:
 23728              		.size	memInit_Master, .-memInit_Master
 23729              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 23730              		.align	2
 23731              		.global	memInit_AirChambersFb
 23732              		.thumb
 23733              		.thumb_func
 23734              		.type	memInit_AirChambersFb, %function
 23735              	memInit_AirChambersFb:
 23736              	.LFB91:
3272:..\src/command_processing.c **** 
3273:..\src/command_processing.c **** //==============================================================================
3274:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3275:..\src/command_processing.c **** //==============================================================================
3276:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3277:..\src/command_processing.c **** {
 23737              		.loc 1 3277 0
 23738              		.cfi_startproc
 23739              		@ args = 0, pretend = 0, frame = 0
 23740              		@ frame_needed = 1, uses_anonymous_args = 0
 23741              		@ link register save eliminated.
 23742 0000 80B4     		push	{r7}
 23743              		.cfi_def_cfa_offset 4
 23744              		.cfi_offset 7, -4
 23745 0002 00AF     		add	r7, sp, #0
 23746              		.cfi_def_cfa_register 7
3278:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3279:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 519


 23747              		.loc 1 3279 0
 23748 0004 1A4B     		ldr	r3, .L909
 23749 0006 0222     		movs	r2, #2
 23750 0008 83F8AC20 		strb	r2, [r3, #172]
3280:..\src/command_processing.c ****     
3281:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23751              		.loc 1 3281 0
 23752 000c 184B     		ldr	r3, .L909
 23753 000e 0122     		movs	r2, #1
 23754 0010 83F80F21 		strb	r2, [r3, #271]
3282:..\src/command_processing.c ****     
3283:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3284:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3285:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23755              		.loc 1 3285 0
 23756 0014 164B     		ldr	r3, .L909
 23757 0016 0422     		movs	r2, #4
 23758 0018 83F87E21 		strb	r2, [r3, #382]
3286:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23759              		.loc 1 3286 0
 23760 001c 144B     		ldr	r3, .L909
 23761 001e 0022     		movs	r2, #0
 23762 0020 C3F85421 		str	r2, [r3, #340]
3287:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23763              		.loc 1 3287 0
 23764 0024 124B     		ldr	r3, .L909
 23765 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23766 002a 1946     		mov	r1, r3
 23767 002c 104A     		ldr	r2, .L909
 23768 002e 0B46     		mov	r3, r1
 23769 0030 5B00     		lsls	r3, r3, #1
 23770 0032 0B44     		add	r3, r3, r1
 23771 0034 1B01     		lsls	r3, r3, #4
 23772 0036 1344     		add	r3, r3, r2
 23773 0038 03F29513 		addw	r3, r3, #405
 23774 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23775 003e 1A46     		mov	r2, r3
 23776 0040 45F2F053 		movw	r3, #22000
 23777 0044 9340     		lsls	r3, r3, r2
 23778 0046 0A4A     		ldr	r2, .L909
 23779 0048 C2F85831 		str	r3, [r2, #344]
3288:..\src/command_processing.c ****     
3289:..\src/command_processing.c ****     // FB STRUCT
3290:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23780              		.loc 1 3290 0
 23781 004c 084B     		ldr	r3, .L909
 23782 004e 4FF4E172 		mov	r2, #450
 23783 0052 C3F8D022 		str	r2, [r3, #720]
3291:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23784              		.loc 1 3291 0
 23785 0056 064B     		ldr	r3, .L909
 23786 0058 064A     		ldr	r2, .L909+4
 23787 005a C3F8D422 		str	r2, [r3, #724]	@ float
3292:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23788              		.loc 1 3292 0
 23789 005e 044B     		ldr	r3, .L909
 23790 0060 4FF07E52 		mov	r2, #1065353216
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 520


 23791 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3293:..\src/command_processing.c **** }
 23792              		.loc 1 3293 0
 23793 0068 00BF     		nop
 23794 006a BD46     		mov	sp, r7
 23795              		.cfi_def_cfa_register 13
 23796              		@ sp needed
 23797 006c 80BC     		pop	{r7}
 23798              		.cfi_restore 7
 23799              		.cfi_def_cfa_offset 0
 23800 006e 7047     		bx	lr
 23801              	.L910:
 23802              		.align	2
 23803              	.L909:
 23804 0070 00000000 		.word	g_mem
 23805 0074 0000C841 		.word	1103626240
 23806              		.cfi_endproc
 23807              	.LFE91:
 23808              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 23809              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23810              		.align	2
 23811              		.global	memInit_OtbkActWristMs
 23812              		.thumb
 23813              		.thumb_func
 23814              		.type	memInit_OtbkActWristMs, %function
 23815              	memInit_OtbkActWristMs:
 23816              	.LFB92:
3294:..\src/command_processing.c **** 
3295:..\src/command_processing.c **** //==============================================================================
3296:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3297:..\src/command_processing.c **** //==============================================================================
3298:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3299:..\src/command_processing.c **** {
 23817              		.loc 1 3299 0
 23818              		.cfi_startproc
 23819              		@ args = 0, pretend = 0, frame = 0
 23820              		@ frame_needed = 1, uses_anonymous_args = 0
 23821              		@ link register save eliminated.
 23822 0000 80B4     		push	{r7}
 23823              		.cfi_def_cfa_offset 4
 23824              		.cfi_offset 7, -4
 23825 0002 00AF     		add	r7, sp, #0
 23826              		.cfi_def_cfa_register 7
3300:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3301:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23827              		.loc 1 3301 0
 23828 0004 294B     		ldr	r3, .L912
 23829 0006 0322     		movs	r2, #3
 23830 0008 83F8AC20 		strb	r2, [r3, #172]
3302:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23831              		.loc 1 3302 0
 23832 000c 274B     		ldr	r3, .L912
 23833 000e 0122     		movs	r2, #1
 23834 0010 83F8A720 		strb	r2, [r3, #167]
3303:..\src/command_processing.c ****     
3304:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23835              		.loc 1 3304 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 521


 23836 0014 254B     		ldr	r3, .L912
 23837 0016 0122     		movs	r2, #1
 23838 0018 83F80F21 		strb	r2, [r3, #271]
3305:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23839              		.loc 1 3305 0
 23840 001c 234B     		ldr	r3, .L912
 23841 001e 6422     		movs	r2, #100
 23842 0020 83F81121 		strb	r2, [r3, #273]
3306:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23843              		.loc 1 3306 0
 23844 0024 214B     		ldr	r3, .L912
 23845 0026 0022     		movs	r2, #0
 23846 0028 83F81221 		strb	r2, [r3, #274]
3307:..\src/command_processing.c ****     
3308:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3309:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3310:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23847              		.loc 1 3310 0
 23848 002c 1F4B     		ldr	r3, .L912
 23849 002e 0422     		movs	r2, #4
 23850 0030 83F87E21 		strb	r2, [r3, #382]
3311:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23851              		.loc 1 3311 0
 23852 0034 1D4B     		ldr	r3, .L912
 23853 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23854 003a 1C4B     		ldr	r3, .L912
 23855 003c 83F88021 		strb	r2, [r3, #384]
3312:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23856              		.loc 1 3312 0
 23857 0040 1A4B     		ldr	r3, .L912
 23858 0042 0122     		movs	r2, #1
 23859 0044 83F88121 		strb	r2, [r3, #385]
3313:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23860              		.loc 1 3313 0
 23861 0048 184B     		ldr	r3, .L912
 23862 004a 0022     		movs	r2, #0
 23863 004c 83F88221 		strb	r2, [r3, #386]
3314:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23864              		.loc 1 3314 0
 23865 0050 164B     		ldr	r3, .L912
 23866 0052 0022     		movs	r2, #0
 23867 0054 C3F85421 		str	r2, [r3, #340]
3315:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23868              		.loc 1 3315 0
 23869 0058 144B     		ldr	r3, .L912
 23870 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23871 005e 1946     		mov	r1, r3
 23872 0060 124A     		ldr	r2, .L912
 23873 0062 0B46     		mov	r3, r1
 23874 0064 5B00     		lsls	r3, r3, #1
 23875 0066 0B44     		add	r3, r3, r1
 23876 0068 1B01     		lsls	r3, r3, #4
 23877 006a 1344     		add	r3, r3, r2
 23878 006c 03F29513 		addw	r3, r3, #405
 23879 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23880 0072 1A46     		mov	r2, r3
 23881 0074 4FF47A53 		mov	r3, #16000
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 522


 23882 0078 9340     		lsls	r3, r3, r2
 23883 007a 0C4A     		ldr	r2, .L912
 23884 007c C2F85831 		str	r3, [r2, #344]
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     // WR STRUCT
3318:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23885              		.loc 1 3318 0
 23886 0080 0A4B     		ldr	r3, .L912
 23887 0082 0022     		movs	r2, #0
 23888 0084 83F8E022 		strb	r2, [r3, #736]
3319:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23889              		.loc 1 3319 0
 23890 0088 084B     		ldr	r3, .L912
 23891 008a 4FF44872 		mov	r2, #800
 23892 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3320:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23893              		.loc 1 3320 0
 23894 0092 064B     		ldr	r3, .L912
 23895 0094 4FF44872 		mov	r2, #800
 23896 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3321:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23897              		.loc 1 3321 0
 23898 009c 034B     		ldr	r3, .L912
 23899 009e 0022     		movs	r2, #0
 23900 00a0 83F8E622 		strb	r2, [r3, #742]
3322:..\src/command_processing.c **** }
 23901              		.loc 1 3322 0
 23902 00a4 00BF     		nop
 23903 00a6 BD46     		mov	sp, r7
 23904              		.cfi_def_cfa_register 13
 23905              		@ sp needed
 23906 00a8 80BC     		pop	{r7}
 23907              		.cfi_restore 7
 23908              		.cfi_def_cfa_offset 0
 23909 00aa 7047     		bx	lr
 23910              	.L913:
 23911              		.align	2
 23912              	.L912:
 23913 00ac 00000000 		.word	g_mem
 23914              		.cfi_endproc
 23915              	.LFE92:
 23916              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23917              		.section	.text.cmd_get_measurements,"ax",%progbits
 23918              		.align	2
 23919              		.global	cmd_get_measurements
 23920              		.thumb
 23921              		.thumb_func
 23922              		.type	cmd_get_measurements, %function
 23923              	cmd_get_measurements:
 23924              	.LFB93:
3323:..\src/command_processing.c **** 
3324:..\src/command_processing.c **** //==============================================================================
3325:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3326:..\src/command_processing.c **** //==============================================================================
3327:..\src/command_processing.c **** /**
3328:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3329:..\src/command_processing.c **** **/
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 523


3330:..\src/command_processing.c **** 
3331:..\src/command_processing.c **** void cmd_get_measurements(){
 23925              		.loc 1 3331 0
 23926              		.cfi_startproc
 23927              		@ args = 0, pretend = 0, frame = 16
 23928              		@ frame_needed = 1, uses_anonymous_args = 0
 23929 0000 90B5     		push	{r4, r7, lr}
 23930              		.cfi_def_cfa_offset 12
 23931              		.cfi_offset 4, -12
 23932              		.cfi_offset 7, -8
 23933              		.cfi_offset 14, -4
 23934 0002 85B0     		sub	sp, sp, #20
 23935              		.cfi_def_cfa_offset 32
 23936 0004 00AF     		add	r7, sp, #0
 23937              		.cfi_def_cfa_register 7
3332:..\src/command_processing.c ****  
3333:..\src/command_processing.c ****     uint8 CYDATA index;
3334:..\src/command_processing.c ****     int16 aux_int16;
3335:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3336:..\src/command_processing.c ****     
3337:..\src/command_processing.c ****     uint8 packet_data[8]; 
3338:..\src/command_processing.c ****     
3339:..\src/command_processing.c ****     //Header package
3340:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23938              		.loc 1 3340 0
 23939 0006 8423     		movs	r3, #132
 23940 0008 3B71     		strb	r3, [r7, #4]
3341:..\src/command_processing.c ****     
3342:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23941              		.loc 1 3342 0
 23942 000a 0323     		movs	r3, #3
 23943 000c FB73     		strb	r3, [r7, #15]
 23944 000e 38E0     		b	.L915
 23945              	.L916:
3343:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23946              		.loc 1 3343 0
 23947 0010 434B     		ldr	r3, .L918
 23948 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23949 0016 1A46     		mov	r2, r3
 23950 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23951 001a 4248     		ldr	r0, .L918+4
 23952 001c 1346     		mov	r3, r2
 23953 001e 5B00     		lsls	r3, r3, #1
 23954 0020 1344     		add	r3, r3, r2
 23955 0022 9B00     		lsls	r3, r3, #2
 23956 0024 1344     		add	r3, r3, r2
 23957 0026 0B44     		add	r3, r3, r1
 23958 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23959 002c 3C4B     		ldr	r3, .L918
 23960 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23961 0032 1C46     		mov	r4, r3
 23962 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23963 0036 3A48     		ldr	r0, .L918
 23964 0038 2346     		mov	r3, r4
 23965 003a 5B00     		lsls	r3, r3, #1
 23966 003c 2344     		add	r3, r3, r4
 23967 003e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 524


 23968 0040 0344     		add	r3, r3, r0
 23969 0042 0B44     		add	r3, r3, r1
 23970 0044 03F29513 		addw	r3, r3, #405
 23971 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23972 004a 42FA03F3 		asr	r3, r2, r3
 23973 004e 1BB2     		sxth	r3, r3
 23974 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3344:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23975              		.loc 1 3344 0
 23976 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23977 0054 5B00     		lsls	r3, r3, #1
 23978 0056 0233     		adds	r3, r3, #2
 23979 0058 07F10C02 		add	r2, r7, #12
 23980 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23981 005e 07F11001 		add	r1, r7, #16
 23982 0062 0B44     		add	r3, r3, r1
 23983 0064 03F80C2C 		strb	r2, [r3, #-12]
3345:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23984              		.loc 1 3345 0
 23985 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23986 006a 5B00     		lsls	r3, r3, #1
 23987 006c 5A1C     		adds	r2, r3, #1
 23988 006e 07F10C03 		add	r3, r7, #12
 23989 0072 0133     		adds	r3, r3, #1
 23990 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23991 0076 07F11003 		add	r3, r7, #16
 23992 007a 1344     		add	r3, r3, r2
 23993 007c 0A46     		mov	r2, r1
 23994 007e 03F80C2C 		strb	r2, [r3, #-12]
 23995              	.L915:
3342:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23996              		.loc 1 3342 0 discriminator 1
 23997 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23998 0084 5A1E     		subs	r2, r3, #1
 23999 0086 FA73     		strb	r2, [r7, #15]
 24000 0088 002B     		cmp	r3, #0
 24001 008a C1D1     		bne	.L916
3346:..\src/command_processing.c ****     }
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 24002              		.loc 1 3348 0
 24003 008c 244B     		ldr	r3, .L918
 24004 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24005 0092 012B     		cmp	r3, #1
 24006 0094 34D1     		bne	.L917
3349:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3350:..\src/command_processing.c ****         index = 1;
 24007              		.loc 1 3350 0
 24008 0096 0123     		movs	r3, #1
 24009 0098 FB73     		strb	r3, [r7, #15]
3351:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 24010              		.loc 1 3351 0
 24011 009a 214B     		ldr	r3, .L918
 24012 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24013 00a0 1946     		mov	r1, r3
 24014 00a2 204A     		ldr	r2, .L918+4
 24015 00a4 3423     		movs	r3, #52
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 525


 24016 00a6 03FB01F3 		mul	r3, r3, r1
 24017 00aa 1344     		add	r3, r3, r2
 24018 00ac 1A68     		ldr	r2, [r3]
 24019 00ae 1C4B     		ldr	r3, .L918
 24020 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24021 00b4 1846     		mov	r0, r3
 24022 00b6 1A49     		ldr	r1, .L918
 24023 00b8 0346     		mov	r3, r0
 24024 00ba 5B00     		lsls	r3, r3, #1
 24025 00bc 0344     		add	r3, r3, r0
 24026 00be 1B01     		lsls	r3, r3, #4
 24027 00c0 0B44     		add	r3, r3, r1
 24028 00c2 03F29513 		addw	r3, r3, #405
 24029 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24030 00c8 42FA03F3 		asr	r3, r2, r3
 24031 00cc 1BB2     		sxth	r3, r3
 24032 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3352:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24033              		.loc 1 3352 0
 24034 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24035 00d2 5B00     		lsls	r3, r3, #1
 24036 00d4 0233     		adds	r3, r3, #2
 24037 00d6 07F10C02 		add	r2, r7, #12
 24038 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24039 00dc 07F11001 		add	r1, r7, #16
 24040 00e0 0B44     		add	r3, r3, r1
 24041 00e2 03F80C2C 		strb	r2, [r3, #-12]
3353:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24042              		.loc 1 3353 0
 24043 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24044 00e8 5B00     		lsls	r3, r3, #1
 24045 00ea 5A1C     		adds	r2, r3, #1
 24046 00ec 07F10C03 		add	r3, r7, #12
 24047 00f0 0133     		adds	r3, r3, #1
 24048 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24049 00f4 07F11003 		add	r3, r7, #16
 24050 00f8 1344     		add	r3, r3, r2
 24051 00fa 0A46     		mov	r2, r1
 24052 00fc 03F80C2C 		strb	r2, [r3, #-12]
 24053              	.L917:
3354:..\src/command_processing.c ****     }
3355:..\src/command_processing.c ****     
3356:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3357:..\src/command_processing.c **** 
3358:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24054              		.loc 1 3358 0
 24055 0100 3B1D     		adds	r3, r7, #4
 24056 0102 0721     		movs	r1, #7
 24057 0104 1846     		mov	r0, r3
 24058 0106 FFF7FEFF 		bl	LCRChecksum
 24059 010a 0346     		mov	r3, r0
 24060 010c FB72     		strb	r3, [r7, #11]
3359:..\src/command_processing.c **** 
3360:..\src/command_processing.c ****     commWrite(packet_data, 8);
 24061              		.loc 1 3360 0
 24062 010e 3B1D     		adds	r3, r7, #4
 24063 0110 0821     		movs	r1, #8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 526


 24064 0112 1846     		mov	r0, r3
 24065 0114 FFF7FEFF 		bl	commWrite
3361:..\src/command_processing.c ****    
3362:..\src/command_processing.c **** }
 24066              		.loc 1 3362 0
 24067 0118 00BF     		nop
 24068 011a 1437     		adds	r7, r7, #20
 24069              		.cfi_def_cfa_offset 12
 24070 011c BD46     		mov	sp, r7
 24071              		.cfi_def_cfa_register 13
 24072              		@ sp needed
 24073 011e 90BD     		pop	{r4, r7, pc}
 24074              	.L919:
 24075              		.align	2
 24076              	.L918:
 24077 0120 00000000 		.word	g_mem
 24078 0124 00000000 		.word	g_measOld
 24079              		.cfi_endproc
 24080              	.LFE93:
 24081              		.size	cmd_get_measurements, .-cmd_get_measurements
 24082              		.section	.text.cmd_get_velocities,"ax",%progbits
 24083              		.align	2
 24084              		.global	cmd_get_velocities
 24085              		.thumb
 24086              		.thumb_func
 24087              		.type	cmd_get_velocities, %function
 24088              	cmd_get_velocities:
 24089              	.LFB94:
3363:..\src/command_processing.c **** 
3364:..\src/command_processing.c **** void cmd_get_velocities(){
 24090              		.loc 1 3364 0
 24091              		.cfi_startproc
 24092              		@ args = 0, pretend = 0, frame = 16
 24093              		@ frame_needed = 1, uses_anonymous_args = 0
 24094 0000 90B5     		push	{r4, r7, lr}
 24095              		.cfi_def_cfa_offset 12
 24096              		.cfi_offset 4, -12
 24097              		.cfi_offset 7, -8
 24098              		.cfi_offset 14, -4
 24099 0002 85B0     		sub	sp, sp, #20
 24100              		.cfi_def_cfa_offset 32
 24101 0004 00AF     		add	r7, sp, #0
 24102              		.cfi_def_cfa_register 7
3365:..\src/command_processing.c ****  
3366:..\src/command_processing.c ****     uint8 CYDATA index;
3367:..\src/command_processing.c ****     int16 aux_int16;
3368:..\src/command_processing.c ****    
3369:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3370:..\src/command_processing.c ****     
3371:..\src/command_processing.c ****     uint8 packet_data[8]; 
3372:..\src/command_processing.c ****     
3373:..\src/command_processing.c ****     //Header package
3374:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 24103              		.loc 1 3374 0
 24104 0006 8923     		movs	r3, #137
 24105 0008 3B71     		strb	r3, [r7, #4]
3375:..\src/command_processing.c ****     
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 527


3376:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24106              		.loc 1 3376 0
 24107 000a 0323     		movs	r3, #3
 24108 000c FB73     		strb	r3, [r7, #15]
 24109 000e 3AE0     		b	.L921
 24110              	.L922:
3377:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24111              		.loc 1 3377 0
 24112 0010 274B     		ldr	r3, .L923
 24113 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24114 0016 1A46     		mov	r2, r3
 24115 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24116 001a 2648     		ldr	r0, .L923+4
 24117 001c 1346     		mov	r3, r2
 24118 001e 5B00     		lsls	r3, r3, #1
 24119 0020 1344     		add	r3, r3, r2
 24120 0022 9B00     		lsls	r3, r3, #2
 24121 0024 1344     		add	r3, r3, r2
 24122 0026 0B44     		add	r3, r3, r1
 24123 0028 0633     		adds	r3, r3, #6
 24124 002a 9B00     		lsls	r3, r3, #2
 24125 002c 0344     		add	r3, r3, r0
 24126 002e 5A68     		ldr	r2, [r3, #4]
 24127 0030 1F4B     		ldr	r3, .L923
 24128 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24129 0036 1C46     		mov	r4, r3
 24130 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24131 003a 1D48     		ldr	r0, .L923
 24132 003c 2346     		mov	r3, r4
 24133 003e 5B00     		lsls	r3, r3, #1
 24134 0040 2344     		add	r3, r3, r4
 24135 0042 1B01     		lsls	r3, r3, #4
 24136 0044 0344     		add	r3, r3, r0
 24137 0046 0B44     		add	r3, r3, r1
 24138 0048 03F29513 		addw	r3, r3, #405
 24139 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24140 004e 42FA03F3 		asr	r3, r2, r3
 24141 0052 1BB2     		sxth	r3, r3
 24142 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3378:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24143              		.loc 1 3378 0
 24144 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24145 0058 5B00     		lsls	r3, r3, #1
 24146 005a 0233     		adds	r3, r3, #2
 24147 005c 07F10C02 		add	r2, r7, #12
 24148 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24149 0062 07F11001 		add	r1, r7, #16
 24150 0066 0B44     		add	r3, r3, r1
 24151 0068 03F80C2C 		strb	r2, [r3, #-12]
3379:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24152              		.loc 1 3379 0
 24153 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24154 006e 5B00     		lsls	r3, r3, #1
 24155 0070 5A1C     		adds	r2, r3, #1
 24156 0072 07F10C03 		add	r3, r7, #12
 24157 0076 0133     		adds	r3, r3, #1
 24158 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 528


 24159 007a 07F11003 		add	r3, r7, #16
 24160 007e 1344     		add	r3, r3, r2
 24161 0080 0A46     		mov	r2, r1
 24162 0082 03F80C2C 		strb	r2, [r3, #-12]
 24163              	.L921:
3376:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24164              		.loc 1 3376 0 discriminator 1
 24165 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24166 0088 5A1E     		subs	r2, r3, #1
 24167 008a FA73     		strb	r2, [r7, #15]
 24168 008c 002B     		cmp	r3, #0
 24169 008e BFD1     		bne	.L922
3380:..\src/command_processing.c ****     }
3381:..\src/command_processing.c ****             
3382:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3383:..\src/command_processing.c **** 
3384:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24170              		.loc 1 3384 0
 24171 0090 3B1D     		adds	r3, r7, #4
 24172 0092 0721     		movs	r1, #7
 24173 0094 1846     		mov	r0, r3
 24174 0096 FFF7FEFF 		bl	LCRChecksum
 24175 009a 0346     		mov	r3, r0
 24176 009c FB72     		strb	r3, [r7, #11]
3385:..\src/command_processing.c **** 
3386:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24177              		.loc 1 3386 0
 24178 009e 3B1D     		adds	r3, r7, #4
 24179 00a0 0821     		movs	r1, #8
 24180 00a2 1846     		mov	r0, r3
 24181 00a4 FFF7FEFF 		bl	commWrite
3387:..\src/command_processing.c **** }
 24182              		.loc 1 3387 0
 24183 00a8 00BF     		nop
 24184 00aa 1437     		adds	r7, r7, #20
 24185              		.cfi_def_cfa_offset 12
 24186 00ac BD46     		mov	sp, r7
 24187              		.cfi_def_cfa_register 13
 24188              		@ sp needed
 24189 00ae 90BD     		pop	{r4, r7, pc}
 24190              	.L924:
 24191              		.align	2
 24192              	.L923:
 24193 00b0 00000000 		.word	g_mem
 24194 00b4 00000000 		.word	g_measOld
 24195              		.cfi_endproc
 24196              	.LFE94:
 24197              		.size	cmd_get_velocities, .-cmd_get_velocities
 24198              		.section	.text.cmd_get_accelerations,"ax",%progbits
 24199              		.align	2
 24200              		.global	cmd_get_accelerations
 24201              		.thumb
 24202              		.thumb_func
 24203              		.type	cmd_get_accelerations, %function
 24204              	cmd_get_accelerations:
 24205              	.LFB95:
3388:..\src/command_processing.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 529


3389:..\src/command_processing.c **** void cmd_get_accelerations(){
 24206              		.loc 1 3389 0
 24207              		.cfi_startproc
 24208              		@ args = 0, pretend = 0, frame = 16
 24209              		@ frame_needed = 1, uses_anonymous_args = 0
 24210 0000 90B5     		push	{r4, r7, lr}
 24211              		.cfi_def_cfa_offset 12
 24212              		.cfi_offset 4, -12
 24213              		.cfi_offset 7, -8
 24214              		.cfi_offset 14, -4
 24215 0002 85B0     		sub	sp, sp, #20
 24216              		.cfi_def_cfa_offset 32
 24217 0004 00AF     		add	r7, sp, #0
 24218              		.cfi_def_cfa_register 7
3390:..\src/command_processing.c ****  
3391:..\src/command_processing.c ****     uint8 CYDATA index;
3392:..\src/command_processing.c ****     int16 aux_int16;
3393:..\src/command_processing.c ****     
3394:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3395:..\src/command_processing.c ****     
3396:..\src/command_processing.c ****     uint8 packet_data[8]; 
3397:..\src/command_processing.c ****     
3398:..\src/command_processing.c ****     //Header package
3399:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24219              		.loc 1 3399 0
 24220 0006 8B23     		movs	r3, #139
 24221 0008 3B71     		strb	r3, [r7, #4]
3400:..\src/command_processing.c ****     
3401:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24222              		.loc 1 3401 0
 24223 000a 0323     		movs	r3, #3
 24224 000c FB73     		strb	r3, [r7, #15]
 24225 000e 39E0     		b	.L926
 24226              	.L927:
3402:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24227              		.loc 1 3402 0
 24228 0010 274B     		ldr	r3, .L928
 24229 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24230 0016 1A46     		mov	r2, r3
 24231 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24232 001a 2648     		ldr	r0, .L928+4
 24233 001c 1346     		mov	r3, r2
 24234 001e 5B00     		lsls	r3, r3, #1
 24235 0020 1344     		add	r3, r3, r2
 24236 0022 9B00     		lsls	r3, r3, #2
 24237 0024 1344     		add	r3, r3, r2
 24238 0026 0B44     		add	r3, r3, r1
 24239 0028 0A33     		adds	r3, r3, #10
 24240 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24241 002e 204B     		ldr	r3, .L928
 24242 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24243 0034 1C46     		mov	r4, r3
 24244 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24245 0038 1D48     		ldr	r0, .L928
 24246 003a 2346     		mov	r3, r4
 24247 003c 5B00     		lsls	r3, r3, #1
 24248 003e 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 530


 24249 0040 1B01     		lsls	r3, r3, #4
 24250 0042 0344     		add	r3, r3, r0
 24251 0044 0B44     		add	r3, r3, r1
 24252 0046 03F29513 		addw	r3, r3, #405
 24253 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24254 004c 42FA03F3 		asr	r3, r2, r3
 24255 0050 1BB2     		sxth	r3, r3
 24256 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3403:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24257              		.loc 1 3403 0
 24258 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24259 0056 5B00     		lsls	r3, r3, #1
 24260 0058 0233     		adds	r3, r3, #2
 24261 005a 07F10C02 		add	r2, r7, #12
 24262 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24263 0060 07F11001 		add	r1, r7, #16
 24264 0064 0B44     		add	r3, r3, r1
 24265 0066 03F80C2C 		strb	r2, [r3, #-12]
3404:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24266              		.loc 1 3404 0
 24267 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24268 006c 5B00     		lsls	r3, r3, #1
 24269 006e 5A1C     		adds	r2, r3, #1
 24270 0070 07F10C03 		add	r3, r7, #12
 24271 0074 0133     		adds	r3, r3, #1
 24272 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24273 0078 07F11003 		add	r3, r7, #16
 24274 007c 1344     		add	r3, r3, r2
 24275 007e 0A46     		mov	r2, r1
 24276 0080 03F80C2C 		strb	r2, [r3, #-12]
 24277              	.L926:
3401:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24278              		.loc 1 3401 0 discriminator 1
 24279 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24280 0086 5A1E     		subs	r2, r3, #1
 24281 0088 FA73     		strb	r2, [r7, #15]
 24282 008a 002B     		cmp	r3, #0
 24283 008c C0D1     		bne	.L927
3405:..\src/command_processing.c ****     }
3406:..\src/command_processing.c ****     
3407:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3408:..\src/command_processing.c **** 
3409:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24284              		.loc 1 3409 0
 24285 008e 3B1D     		adds	r3, r7, #4
 24286 0090 0721     		movs	r1, #7
 24287 0092 1846     		mov	r0, r3
 24288 0094 FFF7FEFF 		bl	LCRChecksum
 24289 0098 0346     		mov	r3, r0
 24290 009a FB72     		strb	r3, [r7, #11]
3410:..\src/command_processing.c **** 
3411:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24291              		.loc 1 3411 0
 24292 009c 3B1D     		adds	r3, r7, #4
 24293 009e 0821     		movs	r1, #8
 24294 00a0 1846     		mov	r0, r3
 24295 00a2 FFF7FEFF 		bl	commWrite
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 531


3412:..\src/command_processing.c **** }
 24296              		.loc 1 3412 0
 24297 00a6 00BF     		nop
 24298 00a8 1437     		adds	r7, r7, #20
 24299              		.cfi_def_cfa_offset 12
 24300 00aa BD46     		mov	sp, r7
 24301              		.cfi_def_cfa_register 13
 24302              		@ sp needed
 24303 00ac 90BD     		pop	{r4, r7, pc}
 24304              	.L929:
 24305 00ae 00BF     		.align	2
 24306              	.L928:
 24307 00b0 00000000 		.word	g_mem
 24308 00b4 00000000 		.word	g_measOld
 24309              		.cfi_endproc
 24310              	.LFE95:
 24311              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24312              		.section	.text.cmd_get_joystick,"ax",%progbits
 24313              		.align	2
 24314              		.global	cmd_get_joystick
 24315              		.thumb
 24316              		.thumb_func
 24317              		.type	cmd_get_joystick, %function
 24318              	cmd_get_joystick:
 24319              	.LFB96:
3413:..\src/command_processing.c **** 
3414:..\src/command_processing.c **** void cmd_get_joystick() {
 24320              		.loc 1 3414 0
 24321              		.cfi_startproc
 24322              		@ args = 0, pretend = 0, frame = 8
 24323              		@ frame_needed = 1, uses_anonymous_args = 0
 24324 0000 80B5     		push	{r7, lr}
 24325              		.cfi_def_cfa_offset 8
 24326              		.cfi_offset 7, -8
 24327              		.cfi_offset 14, -4
 24328 0002 82B0     		sub	sp, sp, #8
 24329              		.cfi_def_cfa_offset 16
 24330 0004 00AF     		add	r7, sp, #0
 24331              		.cfi_def_cfa_register 7
3415:..\src/command_processing.c ****  
3416:..\src/command_processing.c ****     int16 aux_int16;
3417:..\src/command_processing.c ****     
3418:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3419:..\src/command_processing.c ****     
3420:..\src/command_processing.c ****     uint8 packet_data[6];
3421:..\src/command_processing.c ****     
3422:..\src/command_processing.c ****     // Header        
3423:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24332              		.loc 1 3423 0
 24333 0006 9223     		movs	r3, #146
 24334 0008 3B70     		strb	r3, [r7]
3424:..\src/command_processing.c ****     
3425:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24335              		.loc 1 3425 0
 24336 000a 134B     		ldr	r3, .L931
 24337 000c 1B6A     		ldr	r3, [r3, #32]
 24338 000e 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 532


 24339 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3426:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24340              		.loc 1 3426 0
 24341 0012 BB1D     		adds	r3, r7, #6
 24342 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24343 0016 BB70     		strb	r3, [r7, #2]
3427:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24344              		.loc 1 3427 0
 24345 0018 BB1D     		adds	r3, r7, #6
 24346 001a 0133     		adds	r3, r3, #1
 24347 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24348 001e 7B70     		strb	r3, [r7, #1]
3428:..\src/command_processing.c ****     
3429:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24349              		.loc 1 3429 0
 24350 0020 0D4B     		ldr	r3, .L931
 24351 0022 5B6A     		ldr	r3, [r3, #36]
 24352 0024 1BB2     		sxth	r3, r3
 24353 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3430:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24354              		.loc 1 3430 0
 24355 0028 BB1D     		adds	r3, r7, #6
 24356 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24357 002c 3B71     		strb	r3, [r7, #4]
3431:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24358              		.loc 1 3431 0
 24359 002e BB1D     		adds	r3, r7, #6
 24360 0030 0133     		adds	r3, r3, #1
 24361 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24362 0034 FB70     		strb	r3, [r7, #3]
3432:..\src/command_processing.c **** 
3433:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24363              		.loc 1 3433 0
 24364 0036 3B46     		mov	r3, r7
 24365 0038 0521     		movs	r1, #5
 24366 003a 1846     		mov	r0, r3
 24367 003c FFF7FEFF 		bl	LCRChecksum
 24368 0040 0346     		mov	r3, r0
 24369 0042 7B71     		strb	r3, [r7, #5]
3434:..\src/command_processing.c **** 
3435:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24370              		.loc 1 3435 0
 24371 0044 3B46     		mov	r3, r7
 24372 0046 0621     		movs	r1, #6
 24373 0048 1846     		mov	r0, r3
 24374 004a FFF7FEFF 		bl	commWrite
3436:..\src/command_processing.c **** }
 24375              		.loc 1 3436 0
 24376 004e 00BF     		nop
 24377 0050 0837     		adds	r7, r7, #8
 24378              		.cfi_def_cfa_offset 8
 24379 0052 BD46     		mov	sp, r7
 24380              		.cfi_def_cfa_register 13
 24381              		@ sp needed
 24382 0054 80BD     		pop	{r7, pc}
 24383              	.L932:
 24384 0056 00BF     		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 533


 24385              	.L931:
 24386 0058 00000000 		.word	g_adc_measOld
 24387              		.cfi_endproc
 24388              	.LFE96:
 24389              		.size	cmd_get_joystick, .-cmd_get_joystick
 24390              		.section	.text.cmd_set_inputs,"ax",%progbits
 24391              		.align	2
 24392              		.global	cmd_set_inputs
 24393              		.thumb
 24394              		.thumb_func
 24395              		.type	cmd_set_inputs, %function
 24396              	cmd_set_inputs:
 24397              	.LFB97:
3437:..\src/command_processing.c **** 
3438:..\src/command_processing.c **** void cmd_set_inputs(){
 24398              		.loc 1 3438 0
 24399              		.cfi_startproc
 24400              		@ args = 0, pretend = 0, frame = 8
 24401              		@ frame_needed = 1, uses_anonymous_args = 0
 24402              		@ link register save eliminated.
 24403 0000 90B4     		push	{r4, r7}
 24404              		.cfi_def_cfa_offset 8
 24405              		.cfi_offset 4, -8
 24406              		.cfi_offset 7, -4
 24407 0002 82B0     		sub	sp, sp, #8
 24408              		.cfi_def_cfa_offset 16
 24409 0004 00AF     		add	r7, sp, #0
 24410              		.cfi_def_cfa_register 7
3439:..\src/command_processing.c ****     
3440:..\src/command_processing.c ****     // Store position setted in right variables
3441:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3442:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3443:..\src/command_processing.c ****     
3444:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24411              		.loc 1 3444 0
 24412 0006 894B     		ldr	r3, .L947
 24413 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24414 000a 1B02     		lsls	r3, r3, #8
 24415 000c 1AB2     		sxth	r2, r3
 24416 000e 874B     		ldr	r3, .L947
 24417 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24418 0012 1BB2     		sxth	r3, r3
 24419 0014 1343     		orrs	r3, r3, r2
 24420 0016 1BB2     		sxth	r3, r3
 24421 0018 3B80     		strh	r3, [r7]	@ movhi
3445:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24422              		.loc 1 3445 0
 24423 001a 844B     		ldr	r3, .L947
 24424 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24425 001e 1B02     		lsls	r3, r3, #8
 24426 0020 1AB2     		sxth	r2, r3
 24427 0022 824B     		ldr	r3, .L947
 24428 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24429 0026 1BB2     		sxth	r3, r3
 24430 0028 1343     		orrs	r3, r3, r2
 24431 002a 1BB2     		sxth	r3, r3
 24432 002c 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 534


 24433              	.LBB27:
3446:..\src/command_processing.c ****     
3447:..\src/command_processing.c ****     // Check if last command received was the same as this 
3448:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3449:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 24434              		.loc 1 3449 0
 24435 002e 0023     		movs	r3, #0
 24436 0030 FB71     		strb	r3, [r7, #7]
 24437 0032 1DE0     		b	.L934
 24438              	.L936:
3450:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24439              		.loc 1 3450 0
 24440 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24441 0036 7E4A     		ldr	r2, .L947+4
 24442 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24443 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24444 003e 5B00     		lsls	r3, r3, #1
 24445 0040 07F10801 		add	r1, r7, #8
 24446 0044 0B44     		add	r3, r3, r1
 24447 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24448 004a 9A42     		cmp	r2, r3
 24449 004c 02D0     		beq	.L935
3451:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 24450              		.loc 1 3451 0
 24451 004e 794B     		ldr	r3, .L947+8
 24452 0050 0122     		movs	r2, #1
 24453 0052 1A70     		strb	r2, [r3]
 24454              	.L935:
3452:..\src/command_processing.c ****        }
3453:..\src/command_processing.c ****         // Update last command
3454:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24455              		.loc 1 3454 0 discriminator 2
 24456 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24457 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24458 0058 5B00     		lsls	r3, r3, #1
 24459 005a 07F10801 		add	r1, r7, #8
 24460 005e 0B44     		add	r3, r3, r1
 24461 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 24462 0064 724B     		ldr	r3, .L947+4
 24463 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3449:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24464              		.loc 1 3449 0 discriminator 2
 24465 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24466 006c 0133     		adds	r3, r3, #1
 24467 006e FB71     		strb	r3, [r7, #7]
 24468              	.L934:
3449:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24469              		.loc 1 3449 0 is_stmt 0 discriminator 1
 24470 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24471 0072 714B     		ldr	r3, .L947+12
 24472 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24473 0078 0133     		adds	r3, r3, #1
 24474 007a 9A42     		cmp	r2, r3
 24475 007c DADB     		blt	.L936
 24476              	.LBE27:
3455:..\src/command_processing.c ****     }
3456:..\src/command_processing.c ****     
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 535


3457:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3458:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 24477              		.loc 1 3458 0 is_stmt 1
 24478 007e 6D4B     		ldr	r3, .L947+8
 24479 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24480 0082 002B     		cmp	r3, #0
 24481 0084 00F0CC80 		beq	.L946
 24482              	.LBB28:
3459:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24483              		.loc 1 3459 0
 24484 0088 0023     		movs	r3, #0
 24485 008a BB71     		strb	r3, [r7, #6]
 24486 008c C4E0     		b	.L938
 24487              	.L945:
3460:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24488              		.loc 1 3460 0
 24489 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24490 0090 6A49     		ldr	r1, .L947+16
 24491 0092 1346     		mov	r3, r2
 24492 0094 DB00     		lsls	r3, r3, #3
 24493 0096 9B1A     		subs	r3, r3, r2
 24494 0098 1B01     		lsls	r3, r3, #4
 24495 009a 0B44     		add	r3, r3, r1
 24496 009c 03F20F13 		addw	r3, r3, #271
 24497 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24498 00a2 022B     		cmp	r3, #2
 24499 00a4 0ED1     		bne	.L939
3461:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24500              		.loc 1 3461 0
 24501 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24502 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24503 00aa 5B00     		lsls	r3, r3, #1
 24504 00ac 07F10801 		add	r1, r7, #8
 24505 00b0 0B44     		add	r3, r3, r1
 24506 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24507 00b6 1846     		mov	r0, r3
 24508 00b8 6149     		ldr	r1, .L947+20
 24509 00ba 1301     		lsls	r3, r2, #4
 24510 00bc 0B44     		add	r3, r3, r1
 24511 00be 0433     		adds	r3, r3, #4
 24512 00c0 1860     		str	r0, [r3]
 24513 00c2 47E0     		b	.L940
 24514              	.L939:
3462:..\src/command_processing.c ****             }
3463:..\src/command_processing.c ****             else {
3464:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24515              		.loc 1 3464 0
 24516 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24517 00c6 5D49     		ldr	r1, .L947+16
 24518 00c8 1346     		mov	r3, r2
 24519 00ca DB00     		lsls	r3, r3, #3
 24520 00cc 9B1A     		subs	r3, r3, r2
 24521 00ce 1B01     		lsls	r3, r3, #4
 24522 00d0 0B44     		add	r3, r3, r1
 24523 00d2 03F20F13 		addw	r3, r3, #271
 24524 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24525 00d8 012B     		cmp	r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 536


 24526 00da 0ED1     		bne	.L941
3465:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24527              		.loc 1 3465 0
 24528 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24529 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24530 00e0 5B00     		lsls	r3, r3, #1
 24531 00e2 07F10801 		add	r1, r7, #8
 24532 00e6 0B44     		add	r3, r3, r1
 24533 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24534 00ec 1846     		mov	r0, r3
 24535 00ee 5449     		ldr	r1, .L947+20
 24536 00f0 1301     		lsls	r3, r2, #4
 24537 00f2 0B44     		add	r3, r3, r1
 24538 00f4 0833     		adds	r3, r3, #8
 24539 00f6 1860     		str	r0, [r3]
 24540 00f8 2CE0     		b	.L940
 24541              	.L941:
3466:..\src/command_processing.c ****                 }
3467:..\src/command_processing.c ****                 else {
3468:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24542              		.loc 1 3468 0
 24543 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24544 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24545 00fe 5B00     		lsls	r3, r3, #1
 24546 0100 07F10801 		add	r1, r7, #8
 24547 0104 0B44     		add	r3, r3, r1
 24548 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24549 010a 1846     		mov	r0, r3
 24550 010c 4C49     		ldr	r1, .L947+20
 24551 010e 1301     		lsls	r3, r2, #4
 24552 0110 0B44     		add	r3, r3, r1
 24553 0112 1860     		str	r0, [r3]
3469:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24554              		.loc 1 3469 0
 24555 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24556 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24557 0118 494A     		ldr	r2, .L947+20
 24558 011a 1B01     		lsls	r3, r3, #4
 24559 011c 1344     		add	r3, r3, r2
 24560 011e 1868     		ldr	r0, [r3]
 24561 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24562 0122 454C     		ldr	r4, .L947+12
 24563 0124 1346     		mov	r3, r2
 24564 0126 DB00     		lsls	r3, r3, #3
 24565 0128 9B1A     		subs	r3, r3, r2
 24566 012a 1B01     		lsls	r3, r3, #4
 24567 012c 2344     		add	r3, r3, r4
 24568 012e 03F58873 		add	r3, r3, #272
 24569 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24570 0134 1C46     		mov	r4, r3
 24571 0136 414A     		ldr	r2, .L947+16
 24572 0138 2346     		mov	r3, r4
 24573 013a 5B00     		lsls	r3, r3, #1
 24574 013c 2344     		add	r3, r3, r4
 24575 013e 1B01     		lsls	r3, r3, #4
 24576 0140 1344     		add	r3, r3, r2
 24577 0142 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 537


 24578 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24579 0148 00FA03F2 		lsl	r2, r0, r3
 24580 014c 3C48     		ldr	r0, .L947+20
 24581 014e 0B01     		lsls	r3, r1, #4
 24582 0150 0344     		add	r3, r3, r0
 24583 0152 1A60     		str	r2, [r3]
 24584              	.L940:
3470:..\src/command_processing.c ****                 }
3471:..\src/command_processing.c ****             }  
3472:..\src/command_processing.c ****                
3473:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3474:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24585              		.loc 1 3474 0
 24586 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24587 0156 3849     		ldr	r1, .L947+12
 24588 0158 1346     		mov	r3, r2
 24589 015a DB00     		lsls	r3, r3, #3
 24590 015c 9B1A     		subs	r3, r3, r2
 24591 015e 1B01     		lsls	r3, r3, #4
 24592 0160 0B44     		add	r3, r3, r1
 24593 0162 E333     		adds	r3, r3, #227
 24594 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24595 0166 002B     		cmp	r3, #0
 24596 0168 53D0     		beq	.L942
 24597              		.loc 1 3474 0 is_stmt 0 discriminator 1
 24598 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24599 016c 3349     		ldr	r1, .L947+16
 24600 016e 1346     		mov	r3, r2
 24601 0170 DB00     		lsls	r3, r3, #3
 24602 0172 9B1A     		subs	r3, r3, r2
 24603 0174 1B01     		lsls	r3, r3, #4
 24604 0176 0B44     		add	r3, r3, r1
 24605 0178 03F20F13 		addw	r3, r3, #271
 24606 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24607 017e 032B     		cmp	r3, #3
 24608 0180 0BD0     		beq	.L943
 24609              		.loc 1 3474 0 discriminator 2
 24610 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24611 0184 2D49     		ldr	r1, .L947+16
 24612 0186 1346     		mov	r3, r2
 24613 0188 DB00     		lsls	r3, r3, #3
 24614 018a 9B1A     		subs	r3, r3, r2
 24615 018c 1B01     		lsls	r3, r3, #4
 24616 018e 0B44     		add	r3, r3, r1
 24617 0190 03F20F13 		addw	r3, r3, #271
 24618 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24619 0196 002B     		cmp	r3, #0
 24620 0198 3BD1     		bne	.L942
 24621              	.L943:
3475:..\src/command_processing.c ****                 
3476:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24622              		.loc 1 3476 0 is_stmt 1
 24623 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24624 019c 284A     		ldr	r2, .L947+20
 24625 019e 1B01     		lsls	r3, r3, #4
 24626 01a0 1344     		add	r3, r3, r2
 24627 01a2 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 538


 24628 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24629 01a6 2448     		ldr	r0, .L947+12
 24630 01a8 1346     		mov	r3, r2
 24631 01aa DB00     		lsls	r3, r3, #3
 24632 01ac 9B1A     		subs	r3, r3, r2
 24633 01ae 1B01     		lsls	r3, r3, #4
 24634 01b0 0344     		add	r3, r3, r0
 24635 01b2 E433     		adds	r3, r3, #228
 24636 01b4 1B68     		ldr	r3, [r3]
 24637 01b6 9942     		cmp	r1, r3
 24638 01b8 0DDA     		bge	.L944
3477:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24639              		.loc 1 3477 0
 24640 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24641 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24642 01be 1E48     		ldr	r0, .L947+12
 24643 01c0 1346     		mov	r3, r2
 24644 01c2 DB00     		lsls	r3, r3, #3
 24645 01c4 9B1A     		subs	r3, r3, r2
 24646 01c6 1B01     		lsls	r3, r3, #4
 24647 01c8 0344     		add	r3, r3, r0
 24648 01ca E433     		adds	r3, r3, #228
 24649 01cc 1A68     		ldr	r2, [r3]
 24650 01ce 1C48     		ldr	r0, .L947+20
 24651 01d0 0B01     		lsls	r3, r1, #4
 24652 01d2 0344     		add	r3, r3, r0
 24653 01d4 1A60     		str	r2, [r3]
 24654              	.L944:
3478:..\src/command_processing.c **** 
3479:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24655              		.loc 1 3479 0
 24656 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24657 01d8 194A     		ldr	r2, .L947+20
 24658 01da 1B01     		lsls	r3, r3, #4
 24659 01dc 1344     		add	r3, r3, r2
 24660 01de 1968     		ldr	r1, [r3]
 24661 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24662 01e2 1548     		ldr	r0, .L947+12
 24663 01e4 1346     		mov	r3, r2
 24664 01e6 DB00     		lsls	r3, r3, #3
 24665 01e8 9B1A     		subs	r3, r3, r2
 24666 01ea 1B01     		lsls	r3, r3, #4
 24667 01ec 0344     		add	r3, r3, r0
 24668 01ee E833     		adds	r3, r3, #232
 24669 01f0 1B68     		ldr	r3, [r3]
 24670 01f2 9942     		cmp	r1, r3
 24671 01f4 0DDD     		ble	.L942
3480:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24672              		.loc 1 3480 0
 24673 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24674 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24675 01fa 0F48     		ldr	r0, .L947+12
 24676 01fc 1346     		mov	r3, r2
 24677 01fe DB00     		lsls	r3, r3, #3
 24678 0200 9B1A     		subs	r3, r3, r2
 24679 0202 1B01     		lsls	r3, r3, #4
 24680 0204 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 539


 24681 0206 E833     		adds	r3, r3, #232
 24682 0208 1A68     		ldr	r2, [r3]
 24683 020a 0D48     		ldr	r0, .L947+20
 24684 020c 0B01     		lsls	r3, r1, #4
 24685 020e 0344     		add	r3, r3, r0
 24686 0210 1A60     		str	r2, [r3]
 24687              	.L942:
3459:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24688              		.loc 1 3459 0 discriminator 2
 24689 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24690 0214 0133     		adds	r3, r3, #1
 24691 0216 BB71     		strb	r3, [r7, #6]
 24692              	.L938:
3459:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24693              		.loc 1 3459 0 is_stmt 0 discriminator 1
 24694 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24695 021a 012B     		cmp	r3, #1
 24696 021c 7FF637AF 		bls	.L945
 24697              	.L946:
 24698              	.LBE28:
3481:..\src/command_processing.c ****             }
3482:..\src/command_processing.c ****         }  
3483:..\src/command_processing.c ****     }
3484:..\src/command_processing.c **** }
 24699              		.loc 1 3484 0 is_stmt 1
 24700 0220 00BF     		nop
 24701 0222 0837     		adds	r7, r7, #8
 24702              		.cfi_def_cfa_offset 8
 24703 0224 BD46     		mov	sp, r7
 24704              		.cfi_def_cfa_register 13
 24705              		@ sp needed
 24706 0226 90BC     		pop	{r4, r7}
 24707              		.cfi_restore 7
 24708              		.cfi_restore 4
 24709              		.cfi_def_cfa_offset 0
 24710 0228 7047     		bx	lr
 24711              	.L948:
 24712 022a 00BF     		.align	2
 24713              	.L947:
 24714 022c 00000000 		.word	g_rx
 24715 0230 08000000 		.word	last_aux_int16.11387
 24716 0234 00000000 		.word	change_ext_ref_flag
 24717 0238 00000000 		.word	c_mem
 24718 023c 00000000 		.word	g_mem
 24719 0240 00000000 		.word	g_refNew
 24720              		.cfi_endproc
 24721              	.LFE97:
 24722              		.size	cmd_set_inputs, .-cmd_set_inputs
 24723              		.section	.text.cmd_activate,"ax",%progbits
 24724              		.align	2
 24725              		.global	cmd_activate
 24726              		.thumb
 24727              		.thumb_func
 24728              		.type	cmd_activate, %function
 24729              	cmd_activate:
 24730              	.LFB98:
3485:..\src/command_processing.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 540


3486:..\src/command_processing.c **** void cmd_activate(){
 24731              		.loc 1 3486 0
 24732              		.cfi_startproc
 24733              		@ args = 0, pretend = 0, frame = 8
 24734              		@ frame_needed = 1, uses_anonymous_args = 0
 24735 0000 80B5     		push	{r7, lr}
 24736              		.cfi_def_cfa_offset 8
 24737              		.cfi_offset 7, -8
 24738              		.cfi_offset 14, -4
 24739 0002 82B0     		sub	sp, sp, #8
 24740              		.cfi_def_cfa_offset 16
 24741 0004 00AF     		add	r7, sp, #0
 24742              		.cfi_def_cfa_register 7
3487:..\src/command_processing.c ****     
3488:..\src/command_processing.c ****     // Store new value reads
3489:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24743              		.loc 1 3489 0
 24744 0006 294B     		ldr	r3, .L956
 24745 0008 5B78     		ldrb	r3, [r3, #1]
 24746 000a FB71     		strb	r3, [r7, #7]
3490:..\src/command_processing.c ****     
3491:..\src/command_processing.c ****     // Check type of control mode enabled
3492:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24747              		.loc 1 3492 0
 24748 000c 284B     		ldr	r3, .L956+4
 24749 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24750 0012 002B     		cmp	r3, #0
 24751 0014 04D0     		beq	.L950
 24752              		.loc 1 3492 0 is_stmt 0 discriminator 1
 24753 0016 264B     		ldr	r3, .L956+4
 24754 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24755 001c 032B     		cmp	r3, #3
 24756 001e 0BD1     		bne	.L951
 24757              	.L950:
3493:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24758              		.loc 1 3493 0 is_stmt 1
 24759 0020 234B     		ldr	r3, .L956+4
 24760 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24761 0026 1946     		mov	r1, r3
 24762 0028 224A     		ldr	r2, .L956+8
 24763 002a 3423     		movs	r3, #52
 24764 002c 03FB01F3 		mul	r3, r3, r1
 24765 0030 1344     		add	r3, r3, r2
 24766 0032 1B68     		ldr	r3, [r3]
 24767 0034 204A     		ldr	r2, .L956+12
 24768 0036 1360     		str	r3, [r2]
 24769              	.L951:
3494:..\src/command_processing.c ****     }
3495:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24770              		.loc 1 3495 0
 24771 0038 FB79     		ldrb	r3, [r7, #7]
 24772 003a 03F00103 		and	r3, r3, #1
 24773 003e DAB2     		uxtb	r2, r3
 24774 0040 1D4B     		ldr	r3, .L956+12
 24775 0042 1A73     		strb	r2, [r3, #12]
3496:..\src/command_processing.c ****     
3497:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 541


3498:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3499:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3500:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3501:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3502:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3503:..\src/command_processing.c ****         }
3504:..\src/command_processing.c ****         
3505:..\src/command_processing.c ****         // Activate or deactivate the valve
3506:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3507:..\src/command_processing.c ****     }
3508:..\src/command_processing.c **** #endif
3509:..\src/command_processing.c ****     
3510:..\src/command_processing.c ****     // Activate/Deactivate motor
3511:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24776              		.loc 1 3511 0
 24777 0044 1C4B     		ldr	r3, .L956+12
 24778 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24779 0048 1946     		mov	r1, r3
 24780 004a 0020     		movs	r0, #0
 24781 004c FFF7FEFF 		bl	enable_motor
3512:..\src/command_processing.c ****     
3513:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24782              		.loc 1 3513 0
 24783 0050 174B     		ldr	r3, .L956+4
 24784 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24785 0056 012B     		cmp	r3, #1
 24786 0058 23D1     		bne	.L955
3514:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24787              		.loc 1 3514 0
 24788 005a 154B     		ldr	r3, .L956+4
 24789 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24790 0060 002B     		cmp	r3, #0
 24791 0062 04D0     		beq	.L953
 24792              		.loc 1 3514 0 is_stmt 0 discriminator 1
 24793 0064 124B     		ldr	r3, .L956+4
 24794 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24795 006a 032B     		cmp	r3, #3
 24796 006c 0BD1     		bne	.L954
 24797              	.L953:
3515:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24798              		.loc 1 3515 0 is_stmt 1
 24799 006e 104B     		ldr	r3, .L956+4
 24800 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24801 0074 1946     		mov	r1, r3
 24802 0076 0F4A     		ldr	r2, .L956+8
 24803 0078 3423     		movs	r3, #52
 24804 007a 03FB01F3 		mul	r3, r3, r1
 24805 007e 1344     		add	r3, r3, r2
 24806 0080 1B68     		ldr	r3, [r3]
 24807 0082 0D4A     		ldr	r2, .L956+12
 24808 0084 1361     		str	r3, [r2, #16]
 24809              	.L954:
3516:..\src/command_processing.c ****         }
3517:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24810              		.loc 1 3517 0
 24811 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24812 0088 5B08     		lsrs	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 542


 24813 008a DBB2     		uxtb	r3, r3
 24814 008c 03F00103 		and	r3, r3, #1
 24815 0090 DAB2     		uxtb	r2, r3
 24816 0092 094B     		ldr	r3, .L956+12
 24817 0094 1A77     		strb	r2, [r3, #28]
3518:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24818              		.loc 1 3518 0
 24819 0096 084B     		ldr	r3, .L956+12
 24820 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24821 009a 1946     		mov	r1, r3
 24822 009c 0120     		movs	r0, #1
 24823 009e FFF7FEFF 		bl	enable_motor
 24824              	.L955:
3519:..\src/command_processing.c ****     }
3520:..\src/command_processing.c ****     
3521:..\src/command_processing.c **** }
 24825              		.loc 1 3521 0
 24826 00a2 00BF     		nop
 24827 00a4 0837     		adds	r7, r7, #8
 24828              		.cfi_def_cfa_offset 8
 24829 00a6 BD46     		mov	sp, r7
 24830              		.cfi_def_cfa_register 13
 24831              		@ sp needed
 24832 00a8 80BD     		pop	{r7, pc}
 24833              	.L957:
 24834 00aa 00BF     		.align	2
 24835              	.L956:
 24836 00ac 00000000 		.word	g_rx
 24837 00b0 00000000 		.word	g_mem
 24838 00b4 00000000 		.word	g_meas
 24839 00b8 00000000 		.word	g_refNew
 24840              		.cfi_endproc
 24841              	.LFE98:
 24842              		.size	cmd_activate, .-cmd_activate
 24843              		.section	.text.cmd_get_activate,"ax",%progbits
 24844              		.align	2
 24845              		.global	cmd_get_activate
 24846              		.thumb
 24847              		.thumb_func
 24848              		.type	cmd_get_activate, %function
 24849              	cmd_get_activate:
 24850              	.LFB99:
3522:..\src/command_processing.c **** 
3523:..\src/command_processing.c **** void cmd_get_activate(){
 24851              		.loc 1 3523 0
 24852              		.cfi_startproc
 24853              		@ args = 0, pretend = 0, frame = 8
 24854              		@ frame_needed = 1, uses_anonymous_args = 0
 24855 0000 80B5     		push	{r7, lr}
 24856              		.cfi_def_cfa_offset 8
 24857              		.cfi_offset 7, -8
 24858              		.cfi_offset 14, -4
 24859 0002 82B0     		sub	sp, sp, #8
 24860              		.cfi_def_cfa_offset 16
 24861 0004 00AF     		add	r7, sp, #0
 24862              		.cfi_def_cfa_register 7
3524:..\src/command_processing.c ****     
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 543


3525:..\src/command_processing.c ****     uint8 packet_data[3];
3526:..\src/command_processing.c **** 
3527:..\src/command_processing.c ****     // Header        
3528:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24863              		.loc 1 3528 0
 24864 0006 8123     		movs	r3, #129
 24865 0008 3B71     		strb	r3, [r7, #4]
3529:..\src/command_processing.c ****     
3530:..\src/command_processing.c ****     // Fill payload
3531:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24866              		.loc 1 3531 0
 24867 000a 124B     		ldr	r3, .L961
 24868 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24869 0010 012B     		cmp	r3, #1
 24870 0012 0BD1     		bne	.L959
3532:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24871              		.loc 1 3532 0
 24872 0014 104B     		ldr	r3, .L961+4
 24873 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24874 0018 5B00     		lsls	r3, r3, #1
 24875 001a 5AB2     		sxtb	r2, r3
 24876 001c 0E4B     		ldr	r3, .L961+4
 24877 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24878 0020 5BB2     		sxtb	r3, r3
 24879 0022 1343     		orrs	r3, r3, r2
 24880 0024 5BB2     		sxtb	r3, r3
 24881 0026 DBB2     		uxtb	r3, r3
 24882 0028 7B71     		strb	r3, [r7, #5]
 24883 002a 02E0     		b	.L960
 24884              	.L959:
3533:..\src/command_processing.c ****     } 
3534:..\src/command_processing.c ****     else {
3535:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24885              		.loc 1 3535 0
 24886 002c 0A4B     		ldr	r3, .L961+4
 24887 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24888 0030 7B71     		strb	r3, [r7, #5]
 24889              	.L960:
3536:..\src/command_processing.c ****     }
3537:..\src/command_processing.c ****     
3538:..\src/command_processing.c ****     // Calculate checksum
3539:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24890              		.loc 1 3539 0
 24891 0032 3B1D     		adds	r3, r7, #4
 24892 0034 0221     		movs	r1, #2
 24893 0036 1846     		mov	r0, r3
 24894 0038 FFF7FEFF 		bl	LCRChecksum
 24895 003c 0346     		mov	r3, r0
 24896 003e BB71     		strb	r3, [r7, #6]
3540:..\src/command_processing.c ****     
3541:..\src/command_processing.c ****     // Send package to UART
3542:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24897              		.loc 1 3542 0
 24898 0040 3B1D     		adds	r3, r7, #4
 24899 0042 0321     		movs	r1, #3
 24900 0044 1846     		mov	r0, r3
 24901 0046 FFF7FEFF 		bl	commWrite
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 544


3543:..\src/command_processing.c **** 
3544:..\src/command_processing.c **** }
 24902              		.loc 1 3544 0
 24903 004a 00BF     		nop
 24904 004c 0837     		adds	r7, r7, #8
 24905              		.cfi_def_cfa_offset 8
 24906 004e BD46     		mov	sp, r7
 24907              		.cfi_def_cfa_register 13
 24908              		@ sp needed
 24909 0050 80BD     		pop	{r7, pc}
 24910              	.L962:
 24911 0052 00BF     		.align	2
 24912              	.L961:
 24913 0054 00000000 		.word	g_mem
 24914 0058 00000000 		.word	g_ref
 24915              		.cfi_endproc
 24916              	.LFE99:
 24917              		.size	cmd_get_activate, .-cmd_get_activate
 24918              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24919              		.align	2
 24920              		.global	cmd_get_curr_and_meas
 24921              		.thumb
 24922              		.thumb_func
 24923              		.type	cmd_get_curr_and_meas, %function
 24924              	cmd_get_curr_and_meas:
 24925              	.LFB100:
3545:..\src/command_processing.c **** 
3546:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24926              		.loc 1 3546 0
 24927              		.cfi_startproc
 24928              		@ args = 0, pretend = 0, frame = 16
 24929              		@ frame_needed = 1, uses_anonymous_args = 0
 24930 0000 90B5     		push	{r4, r7, lr}
 24931              		.cfi_def_cfa_offset 12
 24932              		.cfi_offset 4, -12
 24933              		.cfi_offset 7, -8
 24934              		.cfi_offset 14, -4
 24935 0002 85B0     		sub	sp, sp, #20
 24936              		.cfi_def_cfa_offset 32
 24937 0004 00AF     		add	r7, sp, #0
 24938              		.cfi_def_cfa_register 7
3547:..\src/command_processing.c ****     
3548:..\src/command_processing.c ****     uint8 CYDATA index;
3549:..\src/command_processing.c ****     int16 aux_int16;
3550:..\src/command_processing.c ****    
3551:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3552:..\src/command_processing.c ****     
3553:..\src/command_processing.c ****     uint8 packet_data[12]; 
3554:..\src/command_processing.c **** 
3555:..\src/command_processing.c ****     //Header package
3556:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24939              		.loc 1 3556 0
 24940 0006 8623     		movs	r3, #134
 24941 0008 3B70     		strb	r3, [r7]
3557:..\src/command_processing.c **** 
3558:..\src/command_processing.c ****     // Currents
3559:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 545


 24942              		.loc 1 3559 0
 24943 000a 484B     		ldr	r3, .L968
 24944 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24945 0010 1946     		mov	r1, r3
 24946 0012 474A     		ldr	r2, .L968+4
 24947 0014 3423     		movs	r3, #52
 24948 0016 03FB01F3 		mul	r3, r3, r1
 24949 001a 1344     		add	r3, r3, r2
 24950 001c 0C33     		adds	r3, r3, #12
 24951 001e 1B68     		ldr	r3, [r3]
 24952 0020 1BB2     		sxth	r3, r3
 24953 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3560:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24954              		.loc 1 3560 0
 24955 0024 07F10C03 		add	r3, r7, #12
 24956 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24957 002a BB70     		strb	r3, [r7, #2]
3561:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24958              		.loc 1 3561 0
 24959 002c 07F10C03 		add	r3, r7, #12
 24960 0030 0133     		adds	r3, r3, #1
 24961 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24962 0034 7B70     		strb	r3, [r7, #1]
3562:..\src/command_processing.c ****     
3563:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24963              		.loc 1 3563 0
 24964 0036 3F4B     		ldr	r3, .L968+8
 24965 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24966 003c 012B     		cmp	r3, #1
 24967 003e 0DD1     		bne	.L964
3564:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24968              		.loc 1 3564 0
 24969 0040 3A4B     		ldr	r3, .L968
 24970 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24971 0046 1946     		mov	r1, r3
 24972 0048 394A     		ldr	r2, .L968+4
 24973 004a 3423     		movs	r3, #52
 24974 004c 03FB01F3 		mul	r3, r3, r1
 24975 0050 1344     		add	r3, r3, r2
 24976 0052 0C33     		adds	r3, r3, #12
 24977 0054 1B68     		ldr	r3, [r3]
 24978 0056 1BB2     		sxth	r3, r3
 24979 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24980 005a 0CE0     		b	.L965
 24981              	.L964:
3565:..\src/command_processing.c ****     }
3566:..\src/command_processing.c ****     else {
3567:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24982              		.loc 1 3567 0
 24983 005c 334B     		ldr	r3, .L968
 24984 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24985 0062 1946     		mov	r1, r3
 24986 0064 324A     		ldr	r2, .L968+4
 24987 0066 3423     		movs	r3, #52
 24988 0068 03FB01F3 		mul	r3, r3, r1
 24989 006c 1344     		add	r3, r3, r2
 24990 006e 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 546


 24991 0070 1B68     		ldr	r3, [r3]
 24992 0072 1BB2     		sxth	r3, r3
 24993 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24994              	.L965:
3568:..\src/command_processing.c ****     }
3569:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24995              		.loc 1 3569 0
 24996 0076 07F10C03 		add	r3, r7, #12
 24997 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24998 007c 3B71     		strb	r3, [r7, #4]
3570:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24999              		.loc 1 3570 0
 25000 007e 07F10C03 		add	r3, r7, #12
 25001 0082 0133     		adds	r3, r3, #1
 25002 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25003 0086 FB70     		strb	r3, [r7, #3]
3571:..\src/command_processing.c **** 
3572:..\src/command_processing.c ****     // Positions
3573:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 25004              		.loc 1 3573 0
 25005 0088 0323     		movs	r3, #3
 25006 008a FB73     		strb	r3, [r7, #15]
 25007 008c 38E0     		b	.L966
 25008              	.L967:
3574:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 25009              		.loc 1 3574 0
 25010 008e 274B     		ldr	r3, .L968
 25011 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25012 0094 1A46     		mov	r2, r3
 25013 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25014 0098 2548     		ldr	r0, .L968+4
 25015 009a 1346     		mov	r3, r2
 25016 009c 5B00     		lsls	r3, r3, #1
 25017 009e 1344     		add	r3, r3, r2
 25018 00a0 9B00     		lsls	r3, r3, #2
 25019 00a2 1344     		add	r3, r3, r2
 25020 00a4 0B44     		add	r3, r3, r1
 25021 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 25022 00aa 204B     		ldr	r3, .L968
 25023 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25024 00b0 1C46     		mov	r4, r3
 25025 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25026 00b4 1D48     		ldr	r0, .L968
 25027 00b6 2346     		mov	r3, r4
 25028 00b8 5B00     		lsls	r3, r3, #1
 25029 00ba 2344     		add	r3, r3, r4
 25030 00bc 1B01     		lsls	r3, r3, #4
 25031 00be 0344     		add	r3, r3, r0
 25032 00c0 0B44     		add	r3, r3, r1
 25033 00c2 03F29513 		addw	r3, r3, #405
 25034 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25035 00c8 42FA03F3 		asr	r3, r2, r3
 25036 00cc 1BB2     		sxth	r3, r3
 25037 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3575:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 25038              		.loc 1 3575 0
 25039 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 547


 25040 00d2 5B00     		lsls	r3, r3, #1
 25041 00d4 0633     		adds	r3, r3, #6
 25042 00d6 07F10C02 		add	r2, r7, #12
 25043 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25044 00dc 07F11001 		add	r1, r7, #16
 25045 00e0 0B44     		add	r3, r3, r1
 25046 00e2 03F8102C 		strb	r2, [r3, #-16]
3576:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 25047              		.loc 1 3576 0
 25048 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25049 00e8 5B00     		lsls	r3, r3, #1
 25050 00ea 5A1D     		adds	r2, r3, #5
 25051 00ec 07F10C03 		add	r3, r7, #12
 25052 00f0 0133     		adds	r3, r3, #1
 25053 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25054 00f4 07F11003 		add	r3, r7, #16
 25055 00f8 1344     		add	r3, r3, r2
 25056 00fa 0A46     		mov	r2, r1
 25057 00fc 03F8102C 		strb	r2, [r3, #-16]
 25058              	.L966:
3573:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 25059              		.loc 1 3573 0 discriminator 1
 25060 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25061 0102 5A1E     		subs	r2, r3, #1
 25062 0104 FA73     		strb	r2, [r7, #15]
 25063 0106 002B     		cmp	r3, #0
 25064 0108 C1D1     		bne	.L967
3577:..\src/command_processing.c ****     }
3578:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3579:..\src/command_processing.c ****         
3580:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 25065              		.loc 1 3580 0
 25066 010a 3B46     		mov	r3, r7
 25067 010c 0B21     		movs	r1, #11
 25068 010e 1846     		mov	r0, r3
 25069 0110 FFF7FEFF 		bl	LCRChecksum
 25070 0114 0346     		mov	r3, r0
 25071 0116 FB72     		strb	r3, [r7, #11]
3581:..\src/command_processing.c ****     commWrite(packet_data, 12);
 25072              		.loc 1 3581 0
 25073 0118 3B46     		mov	r3, r7
 25074 011a 0C21     		movs	r1, #12
 25075 011c 1846     		mov	r0, r3
 25076 011e FFF7FEFF 		bl	commWrite
3582:..\src/command_processing.c ****    
3583:..\src/command_processing.c **** }
 25077              		.loc 1 3583 0
 25078 0122 00BF     		nop
 25079 0124 1437     		adds	r7, r7, #20
 25080              		.cfi_def_cfa_offset 12
 25081 0126 BD46     		mov	sp, r7
 25082              		.cfi_def_cfa_register 13
 25083              		@ sp needed
 25084 0128 90BD     		pop	{r4, r7, pc}
 25085              	.L969:
 25086 012a 00BF     		.align	2
 25087              	.L968:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 548


 25088 012c 00000000 		.word	g_mem
 25089 0130 00000000 		.word	g_measOld
 25090 0134 00000000 		.word	c_mem
 25091              		.cfi_endproc
 25092              	.LFE100:
 25093              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 25094              		.global	__aeabi_dmul
 25095              		.global	__aeabi_d2iz
 25096              		.section	.text.cmd_get_currents,"ax",%progbits
 25097              		.align	2
 25098              		.global	cmd_get_currents
 25099              		.thumb
 25100              		.thumb_func
 25101              		.type	cmd_get_currents, %function
 25102              	cmd_get_currents:
 25103              	.LFB101:
3584:..\src/command_processing.c **** 
3585:..\src/command_processing.c **** void cmd_get_currents(){
 25104              		.loc 1 3585 0
 25105              		.cfi_startproc
 25106              		@ args = 0, pretend = 0, frame = 16
 25107              		@ frame_needed = 1, uses_anonymous_args = 0
 25108 0000 90B5     		push	{r4, r7, lr}
 25109              		.cfi_def_cfa_offset 12
 25110              		.cfi_offset 4, -12
 25111              		.cfi_offset 7, -8
 25112              		.cfi_offset 14, -4
 25113 0002 85B0     		sub	sp, sp, #20
 25114              		.cfi_def_cfa_offset 32
 25115 0004 00AF     		add	r7, sp, #0
 25116              		.cfi_def_cfa_register 7
3586:..\src/command_processing.c ****     
3587:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3588:..\src/command_processing.c ****     
3589:..\src/command_processing.c ****     uint8 packet_data[6]; 
3590:..\src/command_processing.c ****     int16 aux_int16;
3591:..\src/command_processing.c ****     
3592:..\src/command_processing.c ****     //Header package
3593:..\src/command_processing.c **** 
3594:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 25117              		.loc 1 3594 0
 25118 0006 8523     		movs	r3, #133
 25119 0008 3B72     		strb	r3, [r7, #8]
3595:..\src/command_processing.c **** 
3596:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 25120              		.loc 1 3596 0
 25121 000a 334B     		ldr	r3, .L975
 25122 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 25123 0010 022B     		cmp	r3, #2
 25124 0012 0DD0     		beq	.L971
3597:..\src/command_processing.c ****         // Currents
3598:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 25125              		.loc 1 3598 0
 25126 0014 314B     		ldr	r3, .L975+4
 25127 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25128 001a 1946     		mov	r1, r3
 25129 001c 304A     		ldr	r2, .L975+8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 549


 25130 001e 3423     		movs	r3, #52
 25131 0020 03FB01F3 		mul	r3, r3, r1
 25132 0024 1344     		add	r3, r3, r2
 25133 0026 0C33     		adds	r3, r3, #12
 25134 0028 1B68     		ldr	r3, [r3]
 25135 002a 1BB2     		sxth	r3, r3
 25136 002c FB80     		strh	r3, [r7, #6]	@ movhi
 25137 002e 12E0     		b	.L972
 25138              	.L971:
3599:..\src/command_processing.c ****     }
3600:..\src/command_processing.c ****     else {
3601:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3602:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 25139              		.loc 1 3602 0
 25140 0030 2C4B     		ldr	r3, .L975+12
 25141 0032 1B68     		ldr	r3, [r3]	@ float
 25142 0034 1846     		mov	r0, r3
 25143 0036 FFF7FEFF 		bl	__aeabi_f2d
 25144 003a 4FF00002 		mov	r2, #0
 25145 003e 2A4B     		ldr	r3, .L975+16
 25146 0040 FFF7FEFF 		bl	__aeabi_dmul
 25147 0044 0346     		mov	r3, r0
 25148 0046 0C46     		mov	r4, r1
 25149 0048 1846     		mov	r0, r3
 25150 004a 2146     		mov	r1, r4
 25151 004c FFF7FEFF 		bl	__aeabi_d2iz
 25152 0050 0346     		mov	r3, r0
 25153 0052 1BB2     		sxth	r3, r3
 25154 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 25155              	.L972:
3603:..\src/command_processing.c ****     }
3604:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25156              		.loc 1 3604 0
 25157 0056 BB1D     		adds	r3, r7, #6
 25158 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25159 005a BB72     		strb	r3, [r7, #10]
3605:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25160              		.loc 1 3605 0
 25161 005c BB1D     		adds	r3, r7, #6
 25162 005e 0133     		adds	r3, r3, #1
 25163 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25164 0062 7B72     		strb	r3, [r7, #9]
3606:..\src/command_processing.c ****     
3607:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25165              		.loc 1 3607 0
 25166 0064 1C4B     		ldr	r3, .L975
 25167 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25168 006a 012B     		cmp	r3, #1
 25169 006c 0DD1     		bne	.L973
3608:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 25170              		.loc 1 3608 0
 25171 006e 1B4B     		ldr	r3, .L975+4
 25172 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25173 0074 1946     		mov	r1, r3
 25174 0076 1A4A     		ldr	r2, .L975+8
 25175 0078 3423     		movs	r3, #52
 25176 007a 03FB01F3 		mul	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 550


 25177 007e 1344     		add	r3, r3, r2
 25178 0080 0C33     		adds	r3, r3, #12
 25179 0082 1B68     		ldr	r3, [r3]
 25180 0084 1BB2     		sxth	r3, r3
 25181 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 25182 0088 0CE0     		b	.L974
 25183              	.L973:
3609:..\src/command_processing.c ****     }
3610:..\src/command_processing.c ****     else {
3611:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 25184              		.loc 1 3611 0
 25185 008a 144B     		ldr	r3, .L975+4
 25186 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25187 0090 1946     		mov	r1, r3
 25188 0092 134A     		ldr	r2, .L975+8
 25189 0094 3423     		movs	r3, #52
 25190 0096 03FB01F3 		mul	r3, r3, r1
 25191 009a 1344     		add	r3, r3, r2
 25192 009c 1033     		adds	r3, r3, #16
 25193 009e 1B68     		ldr	r3, [r3]
 25194 00a0 1BB2     		sxth	r3, r3
 25195 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 25196              	.L974:
3612:..\src/command_processing.c ****     }
3613:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25197              		.loc 1 3613 0
 25198 00a4 BB1D     		adds	r3, r7, #6
 25199 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25200 00a8 3B73     		strb	r3, [r7, #12]
3614:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25201              		.loc 1 3614 0
 25202 00aa BB1D     		adds	r3, r7, #6
 25203 00ac 0133     		adds	r3, r3, #1
 25204 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25205 00b0 FB72     		strb	r3, [r7, #11]
3615:..\src/command_processing.c **** 
3616:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3617:..\src/command_processing.c **** 
3618:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25206              		.loc 1 3618 0
 25207 00b2 07F10803 		add	r3, r7, #8
 25208 00b6 0521     		movs	r1, #5
 25209 00b8 1846     		mov	r0, r3
 25210 00ba FFF7FEFF 		bl	LCRChecksum
 25211 00be 0346     		mov	r3, r0
 25212 00c0 7B73     		strb	r3, [r7, #13]
3619:..\src/command_processing.c ****     
3620:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25213              		.loc 1 3620 0
 25214 00c2 07F10803 		add	r3, r7, #8
 25215 00c6 0621     		movs	r1, #6
 25216 00c8 1846     		mov	r0, r3
 25217 00ca FFF7FEFF 		bl	commWrite
3621:..\src/command_processing.c **** }
 25218              		.loc 1 3621 0
 25219 00ce 00BF     		nop
 25220 00d0 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 551


 25221              		.cfi_def_cfa_offset 12
 25222 00d2 BD46     		mov	sp, r7
 25223              		.cfi_def_cfa_register 13
 25224              		@ sp needed
 25225 00d4 90BD     		pop	{r4, r7, pc}
 25226              	.L976:
 25227 00d6 00BF     		.align	2
 25228              	.L975:
 25229 00d8 00000000 		.word	c_mem
 25230 00dc 00000000 		.word	g_mem
 25231 00e0 00000000 		.word	g_measOld
 25232 00e4 00000000 		.word	g_fb_meas
 25233 00e8 00005940 		.word	1079574528
 25234              		.cfi_endproc
 25235              	.LFE101:
 25236              		.size	cmd_get_currents, .-cmd_get_currents
 25237              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25238              		.align	2
 25239              		.global	cmd_get_currents_for_cuff
 25240              		.thumb
 25241              		.thumb_func
 25242              		.type	cmd_get_currents_for_cuff, %function
 25243              	cmd_get_currents_for_cuff:
 25244              	.LFB102:
3622:..\src/command_processing.c **** 
3623:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25245              		.loc 1 3623 0
 25246              		.cfi_startproc
 25247              		@ args = 0, pretend = 0, frame = 8
 25248              		@ frame_needed = 1, uses_anonymous_args = 0
 25249 0000 80B5     		push	{r7, lr}
 25250              		.cfi_def_cfa_offset 8
 25251              		.cfi_offset 7, -8
 25252              		.cfi_offset 14, -4
 25253 0002 82B0     		sub	sp, sp, #8
 25254              		.cfi_def_cfa_offset 16
 25255 0004 00AF     		add	r7, sp, #0
 25256              		.cfi_def_cfa_register 7
3624:..\src/command_processing.c ****     
3625:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3626:..\src/command_processing.c ****     
3627:..\src/command_processing.c ****     uint8 packet_data[4]; 
3628:..\src/command_processing.c ****     int16 aux_int16;
3629:..\src/command_processing.c ****     
3630:..\src/command_processing.c ****     //Header package
3631:..\src/command_processing.c **** 
3632:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25257              		.loc 1 3632 0
 25258 0006 8E23     		movs	r3, #142
 25259 0008 3B71     		strb	r3, [r7, #4]
3633:..\src/command_processing.c **** 
3634:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25260              		.loc 1 3634 0
 25261 000a 144B     		ldr	r3, .L978
 25262 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25263 0010 1946     		mov	r1, r3
 25264 0012 134A     		ldr	r2, .L978+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 552


 25265 0014 3423     		movs	r3, #52
 25266 0016 03FB01F3 		mul	r3, r3, r1
 25267 001a 1344     		add	r3, r3, r2
 25268 001c 1033     		adds	r3, r3, #16
 25269 001e 1B68     		ldr	r3, [r3]
 25270 0020 1BB2     		sxth	r3, r3
 25271 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3635:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25272              		.loc 1 3635 0
 25273 0024 BB1C     		adds	r3, r7, #2
 25274 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25275 0028 BB71     		strb	r3, [r7, #6]
3636:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25276              		.loc 1 3636 0
 25277 002a BB1C     		adds	r3, r7, #2
 25278 002c 0133     		adds	r3, r3, #1
 25279 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25280 0030 7B71     		strb	r3, [r7, #5]
3637:..\src/command_processing.c **** 
3638:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3639:..\src/command_processing.c **** 
3640:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25281              		.loc 1 3640 0
 25282 0032 3B1D     		adds	r3, r7, #4
 25283 0034 0321     		movs	r1, #3
 25284 0036 1846     		mov	r0, r3
 25285 0038 FFF7FEFF 		bl	LCRChecksum
 25286 003c 0346     		mov	r3, r0
 25287 003e FB71     		strb	r3, [r7, #7]
3641:..\src/command_processing.c ****     
3642:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25288              		.loc 1 3642 0
 25289 0040 064B     		ldr	r3, .L978
 25290 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25291 0046 013B     		subs	r3, r3, #1
 25292 0048 DAB2     		uxtb	r2, r3
 25293 004a 3B1D     		adds	r3, r7, #4
 25294 004c 0421     		movs	r1, #4
 25295 004e 1846     		mov	r0, r3
 25296 0050 FFF7FEFF 		bl	commWriteID
3643:..\src/command_processing.c **** }
 25297              		.loc 1 3643 0
 25298 0054 00BF     		nop
 25299 0056 0837     		adds	r7, r7, #8
 25300              		.cfi_def_cfa_offset 8
 25301 0058 BD46     		mov	sp, r7
 25302              		.cfi_def_cfa_register 13
 25303              		@ sp needed
 25304 005a 80BD     		pop	{r7, pc}
 25305              	.L979:
 25306              		.align	2
 25307              	.L978:
 25308 005c 00000000 		.word	g_mem
 25309 0060 00000000 		.word	g_measOld
 25310              		.cfi_endproc
 25311              	.LFE102:
 25312              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 553


 25313              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25314              		.align	2
 25315              		.global	commReadResCurrFromSH
 25316              		.thumb
 25317              		.thumb_func
 25318              		.type	commReadResCurrFromSH, %function
 25319              	commReadResCurrFromSH:
 25320              	.LFB103:
3644:..\src/command_processing.c **** 
3645:..\src/command_processing.c **** //==============================================================================
3646:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3647:..\src/command_processing.c **** //==============================================================================
3648:..\src/command_processing.c **** 
3649:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3650:..\src/command_processing.c **** {
 25321              		.loc 1 3650 0
 25322              		.cfi_startproc
 25323              		@ args = 0, pretend = 0, frame = 32
 25324              		@ frame_needed = 1, uses_anonymous_args = 0
 25325 0000 80B5     		push	{r7, lr}
 25326              		.cfi_def_cfa_offset 8
 25327              		.cfi_offset 7, -8
 25328              		.cfi_offset 14, -4
 25329 0002 88B0     		sub	sp, sp, #32
 25330              		.cfi_def_cfa_offset 40
 25331 0004 00AF     		add	r7, sp, #0
 25332              		.cfi_def_cfa_register 7
3651:..\src/command_processing.c ****     uint8 packet_data[16];
3652:..\src/command_processing.c ****     uint8 packet_lenght;
3653:..\src/command_processing.c ****     int16 curr_diff = 0;
 25333              		.loc 1 3653 0
 25334 0006 0023     		movs	r3, #0
 25335 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3654:..\src/command_processing.c ****     uint32 t_start, t_end;
3655:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25336              		.loc 1 3655 0
 25337 000a 0123     		movs	r3, #1
 25338 000c 7B77     		strb	r3, [r7, #29]
3656:..\src/command_processing.c **** 
3657:..\src/command_processing.c ****     packet_lenght = 2;
 25339              		.loc 1 3657 0
 25340 000e 0223     		movs	r3, #2
 25341 0010 3B77     		strb	r3, [r7, #28]
3658:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25342              		.loc 1 3658 0
 25343 0012 8C23     		movs	r3, #140
 25344 0014 3B71     		strb	r3, [r7, #4]
3659:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25345              		.loc 1 3659 0
 25346 0016 8C23     		movs	r3, #140
 25347 0018 7B71     		strb	r3, [r7, #5]
3660:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 25348              		.loc 1 3660 0
 25349 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25350 001c 99B2     		uxth	r1, r3
 25351 001e 1D4B     		ldr	r3, .L987
 25352 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 554


 25353 0024 3B1D     		adds	r3, r7, #4
 25354 0026 1846     		mov	r0, r3
 25355 0028 FFF7FEFF 		bl	commWriteID
3661:..\src/command_processing.c **** 
3662:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25356              		.loc 1 3662 0
 25357 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25358 0030 0346     		mov	r3, r0
 25359 0032 BB61     		str	r3, [r7, #24]
3663:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25360              		.loc 1 3663 0
 25361 0034 18E0     		b	.L981
 25362              	.L984:
3664:..\src/command_processing.c ****         if (interrupt_flag){
 25363              		.loc 1 3664 0
 25364 0036 184B     		ldr	r3, .L987+4
 25365 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25366 003a 002B     		cmp	r3, #0
 25367 003c 04D0     		beq	.L982
3665:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25368              		.loc 1 3665 0
 25369 003e 164B     		ldr	r3, .L987+4
 25370 0040 0022     		movs	r2, #0
 25371 0042 1A70     		strb	r2, [r3]
3666:..\src/command_processing.c ****             interrupt_manager();
 25372              		.loc 1 3666 0
 25373 0044 FFF7FEFF 		bl	interrupt_manager
 25374              	.L982:
3667:..\src/command_processing.c ****         }
3668:..\src/command_processing.c **** 
3669:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25375              		.loc 1 3669 0
 25376 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25377 004c 0346     		mov	r3, r0
 25378 004e 7B61     		str	r3, [r7, #20]
3670:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25379              		.loc 1 3670 0
 25380 0050 BA69     		ldr	r2, [r7, #24]
 25381 0052 7B69     		ldr	r3, [r7, #20]
 25382 0054 D31A     		subs	r3, r2, r3
 25383 0056 114A     		ldr	r2, .L987+8
 25384 0058 9342     		cmp	r3, r2
 25385 005a 05D9     		bls	.L981
3671:..\src/command_processing.c ****             read_flag = FALSE;
 25386              		.loc 1 3671 0
 25387 005c 0023     		movs	r3, #0
 25388 005e 7B77     		strb	r3, [r7, #29]
3672:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25389              		.loc 1 3672 0
 25390 0060 0F4B     		ldr	r3, .L987+12
 25391 0062 0022     		movs	r2, #0
 25392 0064 1A70     		strb	r2, [r3]
3673:..\src/command_processing.c ****             break;
 25393              		.loc 1 3673 0
 25394 0066 03E0     		b	.L983
 25395              	.L981:
3663:..\src/command_processing.c ****         if (interrupt_flag){
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 555


 25396              		.loc 1 3663 0
 25397 0068 0E4B     		ldr	r3, .L987+16
 25398 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25399 006c 8E2B     		cmp	r3, #142
 25400 006e E2D1     		bne	.L984
 25401              	.L983:
3674:..\src/command_processing.c ****         }
3675:..\src/command_processing.c ****     }
3676:..\src/command_processing.c **** 
3677:..\src/command_processing.c ****     if (read_flag) {
 25402              		.loc 1 3677 0
 25403 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25404 0072 002B     		cmp	r3, #0
 25405 0074 08D0     		beq	.L985
3678:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25406              		.loc 1 3678 0
 25407 0076 0B4B     		ldr	r3, .L987+16
 25408 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25409 007a 1B02     		lsls	r3, r3, #8
 25410 007c 1AB2     		sxth	r2, r3
 25411 007e 094B     		ldr	r3, .L987+16
 25412 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25413 0082 1BB2     		sxth	r3, r3
 25414 0084 1343     		orrs	r3, r3, r2
 25415 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25416              	.L985:
3679:..\src/command_processing.c ****     }
3680:..\src/command_processing.c ****     
3681:..\src/command_processing.c ****     return curr_diff;
 25417              		.loc 1 3681 0
 25418 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3682:..\src/command_processing.c **** }
 25419              		.loc 1 3682 0
 25420 008c 1846     		mov	r0, r3
 25421 008e 2037     		adds	r7, r7, #32
 25422              		.cfi_def_cfa_offset 8
 25423 0090 BD46     		mov	sp, r7
 25424              		.cfi_def_cfa_register 13
 25425              		@ sp needed
 25426 0092 80BD     		pop	{r7, pc}
 25427              	.L988:
 25428              		.align	2
 25429              	.L987:
 25430 0094 00000000 		.word	c_mem
 25431 0098 00000000 		.word	interrupt_flag
 25432 009c 20AA4400 		.word	4500000
 25433 00a0 00000000 		.word	master_mode
 25434 00a4 00000000 		.word	g_rx
 25435              		.cfi_endproc
 25436              	.LFE103:
 25437              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25438              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25439              		.align	2
 25440              		.global	cmd_set_baudrate
 25441              		.thumb
 25442              		.thumb_func
 25443              		.type	cmd_set_baudrate, %function
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 556


 25444              	cmd_set_baudrate:
 25445              	.LFB104:
3683:..\src/command_processing.c **** 
3684:..\src/command_processing.c **** void cmd_set_baudrate(){
 25446              		.loc 1 3684 0
 25447              		.cfi_startproc
 25448              		@ args = 0, pretend = 0, frame = 0
 25449              		@ frame_needed = 1, uses_anonymous_args = 0
 25450 0000 80B5     		push	{r7, lr}
 25451              		.cfi_def_cfa_offset 8
 25452              		.cfi_offset 7, -8
 25453              		.cfi_offset 14, -4
 25454 0002 00AF     		add	r7, sp, #0
 25455              		.cfi_def_cfa_register 7
3685:..\src/command_processing.c ****     
3686:..\src/command_processing.c ****     // Set BaudRate
3687:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25456              		.loc 1 3687 0
 25457 0004 094B     		ldr	r3, .L994
 25458 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25459 0008 094B     		ldr	r3, .L994+4
 25460 000a 83F8AA20 		strb	r2, [r3, #170]
3688:..\src/command_processing.c ****     
3689:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25461              		.loc 1 3689 0
 25462 000e 074B     		ldr	r3, .L994
 25463 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25464 0012 0D2B     		cmp	r3, #13
 25465 0014 04D1     		bne	.L993
3690:..\src/command_processing.c ****         case 13:
3691:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25466              		.loc 1 3691 0
 25467 0016 0121     		movs	r1, #1
 25468 0018 0C20     		movs	r0, #12
 25469 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3692:..\src/command_processing.c ****             break;
 25470              		.loc 1 3692 0
 25471 001e 03E0     		b	.L992
 25472              	.L993:
3693:..\src/command_processing.c ****         default:
3694:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25473              		.loc 1 3694 0
 25474 0020 0121     		movs	r1, #1
 25475 0022 0220     		movs	r0, #2
 25476 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25477              	.L992:
3695:..\src/command_processing.c ****     }
3696:..\src/command_processing.c **** }
 25478              		.loc 1 3696 0
 25479 0028 00BF     		nop
 25480 002a 80BD     		pop	{r7, pc}
 25481              	.L995:
 25482              		.align	2
 25483              	.L994:
 25484 002c 00000000 		.word	g_rx
 25485 0030 00000000 		.word	c_mem
 25486              		.cfi_endproc
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 557


 25487              	.LFE104:
 25488              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25489              		.section	.text.cmd_ping,"ax",%progbits
 25490              		.align	2
 25491              		.global	cmd_ping
 25492              		.thumb
 25493              		.thumb_func
 25494              		.type	cmd_ping, %function
 25495              	cmd_ping:
 25496              	.LFB105:
3697:..\src/command_processing.c **** 
3698:..\src/command_processing.c **** void cmd_ping(){
 25497              		.loc 1 3698 0
 25498              		.cfi_startproc
 25499              		@ args = 0, pretend = 0, frame = 8
 25500              		@ frame_needed = 1, uses_anonymous_args = 0
 25501 0000 80B5     		push	{r7, lr}
 25502              		.cfi_def_cfa_offset 8
 25503              		.cfi_offset 7, -8
 25504              		.cfi_offset 14, -4
 25505 0002 82B0     		sub	sp, sp, #8
 25506              		.cfi_def_cfa_offset 16
 25507 0004 00AF     		add	r7, sp, #0
 25508              		.cfi_def_cfa_register 7
3699:..\src/command_processing.c **** 
3700:..\src/command_processing.c ****     uint8 packet_data[2];
3701:..\src/command_processing.c **** 
3702:..\src/command_processing.c ****     // Header
3703:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25509              		.loc 1 3703 0
 25510 0006 0023     		movs	r3, #0
 25511 0008 3B71     		strb	r3, [r7, #4]
3704:..\src/command_processing.c ****     
3705:..\src/command_processing.c ****     // Load Payload
3706:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25512              		.loc 1 3706 0
 25513 000a 0023     		movs	r3, #0
 25514 000c 7B71     		strb	r3, [r7, #5]
3707:..\src/command_processing.c **** 
3708:..\src/command_processing.c ****     // Send Package to uart
3709:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25515              		.loc 1 3709 0
 25516 000e 3B1D     		adds	r3, r7, #4
 25517 0010 0221     		movs	r1, #2
 25518 0012 1846     		mov	r0, r3
 25519 0014 FFF7FEFF 		bl	commWrite
3710:..\src/command_processing.c **** }
 25520              		.loc 1 3710 0
 25521 0018 00BF     		nop
 25522 001a 0837     		adds	r7, r7, #8
 25523              		.cfi_def_cfa_offset 8
 25524 001c BD46     		mov	sp, r7
 25525              		.cfi_def_cfa_register 13
 25526              		@ sp needed
 25527 001e 80BD     		pop	{r7, pc}
 25528              		.cfi_endproc
 25529              	.LFE105:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 558


 25530              		.size	cmd_ping, .-cmd_ping
 25531              		.section	.text.cmd_get_inputs,"ax",%progbits
 25532              		.align	2
 25533              		.global	cmd_get_inputs
 25534              		.thumb
 25535              		.thumb_func
 25536              		.type	cmd_get_inputs, %function
 25537              	cmd_get_inputs:
 25538              	.LFB106:
3711:..\src/command_processing.c **** 
3712:..\src/command_processing.c **** void cmd_get_inputs(){
 25539              		.loc 1 3712 0
 25540              		.cfi_startproc
 25541              		@ args = 0, pretend = 0, frame = 16
 25542              		@ frame_needed = 1, uses_anonymous_args = 0
 25543 0000 80B5     		push	{r7, lr}
 25544              		.cfi_def_cfa_offset 8
 25545              		.cfi_offset 7, -8
 25546              		.cfi_offset 14, -4
 25547 0002 84B0     		sub	sp, sp, #16
 25548              		.cfi_def_cfa_offset 24
 25549 0004 00AF     		add	r7, sp, #0
 25550              		.cfi_def_cfa_register 7
3713:..\src/command_processing.c **** 
3714:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3715:..\src/command_processing.c **** 
3716:..\src/command_processing.c ****     uint8 packet_data[6]; 
3717:..\src/command_processing.c ****     int16 aux_int16;
3718:..\src/command_processing.c ****     
3719:..\src/command_processing.c ****     //Header package
3720:..\src/command_processing.c **** 
3721:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25551              		.loc 1 3721 0
 25552 0006 8323     		movs	r3, #131
 25553 0008 3B72     		strb	r3, [r7, #8]
3722:..\src/command_processing.c ****         
3723:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25554              		.loc 1 3723 0
 25555 000a 234B     		ldr	r3, .L998
 25556 000c 1A68     		ldr	r2, [r3]
 25557 000e 234B     		ldr	r3, .L998+4
 25558 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25559 0014 1846     		mov	r0, r3
 25560 0016 2149     		ldr	r1, .L998+4
 25561 0018 0346     		mov	r3, r0
 25562 001a 5B00     		lsls	r3, r3, #1
 25563 001c 0344     		add	r3, r3, r0
 25564 001e 1B01     		lsls	r3, r3, #4
 25565 0020 0B44     		add	r3, r3, r1
 25566 0022 03F29513 		addw	r3, r3, #405
 25567 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25568 0028 42FA03F3 		asr	r3, r2, r3
 25569 002c 1BB2     		sxth	r3, r3
 25570 002e FB80     		strh	r3, [r7, #6]	@ movhi
3724:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25571              		.loc 1 3724 0
 25572 0030 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 559


 25573 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25574 0034 BB72     		strb	r3, [r7, #10]
3725:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25575              		.loc 1 3725 0
 25576 0036 BB1D     		adds	r3, r7, #6
 25577 0038 0133     		adds	r3, r3, #1
 25578 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25579 003c 7B72     		strb	r3, [r7, #9]
3726:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25580              		.loc 1 3726 0
 25581 003e 164B     		ldr	r3, .L998
 25582 0040 1A69     		ldr	r2, [r3, #16]
 25583 0042 164B     		ldr	r3, .L998+4
 25584 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25585 0048 1846     		mov	r0, r3
 25586 004a 1449     		ldr	r1, .L998+4
 25587 004c 0346     		mov	r3, r0
 25588 004e 5B00     		lsls	r3, r3, #1
 25589 0050 0344     		add	r3, r3, r0
 25590 0052 1B01     		lsls	r3, r3, #4
 25591 0054 0B44     		add	r3, r3, r1
 25592 0056 03F29513 		addw	r3, r3, #405
 25593 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25594 005c 42FA03F3 		asr	r3, r2, r3
 25595 0060 1BB2     		sxth	r3, r3
 25596 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3727:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25597              		.loc 1 3727 0
 25598 0064 BB1D     		adds	r3, r7, #6
 25599 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25600 0068 3B73     		strb	r3, [r7, #12]
3728:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25601              		.loc 1 3728 0
 25602 006a BB1D     		adds	r3, r7, #6
 25603 006c 0133     		adds	r3, r3, #1
 25604 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25605 0070 FB72     		strb	r3, [r7, #11]
3729:..\src/command_processing.c ****     
3730:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3731:..\src/command_processing.c **** 
3732:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25606              		.loc 1 3732 0
 25607 0072 07F10803 		add	r3, r7, #8
 25608 0076 0521     		movs	r1, #5
 25609 0078 1846     		mov	r0, r3
 25610 007a FFF7FEFF 		bl	LCRChecksum
 25611 007e 0346     		mov	r3, r0
 25612 0080 7B73     		strb	r3, [r7, #13]
3733:..\src/command_processing.c **** 
3734:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25613              		.loc 1 3734 0
 25614 0082 07F10803 		add	r3, r7, #8
 25615 0086 0621     		movs	r1, #6
 25616 0088 1846     		mov	r0, r3
 25617 008a FFF7FEFF 		bl	commWrite
3735:..\src/command_processing.c **** }
 25618              		.loc 1 3735 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 560


 25619 008e 00BF     		nop
 25620 0090 1037     		adds	r7, r7, #16
 25621              		.cfi_def_cfa_offset 8
 25622 0092 BD46     		mov	sp, r7
 25623              		.cfi_def_cfa_register 13
 25624              		@ sp needed
 25625 0094 80BD     		pop	{r7, pc}
 25626              	.L999:
 25627 0096 00BF     		.align	2
 25628              	.L998:
 25629 0098 00000000 		.word	g_refOld
 25630 009c 00000000 		.word	g_mem
 25631              		.cfi_endproc
 25632              	.LFE106:
 25633              		.size	cmd_get_inputs, .-cmd_get_inputs
 25634              		.section	.text.cmd_store_params,"ax",%progbits
 25635              		.align	2
 25636              		.global	cmd_store_params
 25637              		.thumb
 25638              		.thumb_func
 25639              		.type	cmd_store_params, %function
 25640              	cmd_store_params:
 25641              	.LFB107:
3736:..\src/command_processing.c **** 
3737:..\src/command_processing.c **** void cmd_store_params(){
 25642              		.loc 1 3737 0
 25643              		.cfi_startproc
 25644              		@ args = 0, pretend = 0, frame = 16
 25645              		@ frame_needed = 1, uses_anonymous_args = 0
 25646 0000 80B5     		push	{r7, lr}
 25647              		.cfi_def_cfa_offset 8
 25648              		.cfi_offset 7, -8
 25649              		.cfi_offset 14, -4
 25650 0002 84B0     		sub	sp, sp, #16
 25651              		.cfi_def_cfa_offset 24
 25652 0004 00AF     		add	r7, sp, #0
 25653              		.cfi_def_cfa_register 7
3738:..\src/command_processing.c ****     
3739:..\src/command_processing.c ****     // Check input mode enabled
3740:..\src/command_processing.c ****     uint32 off_1;
3741:..\src/command_processing.c ****     float mult_1;
3742:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25654              		.loc 1 3742 0
 25655 0006 0223     		movs	r3, #2
 25656 0008 FB73     		strb	r3, [r7, #15]
3743:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3744:..\src/command_processing.c ****     uint8 CYDATA old_id;
3745:..\src/command_processing.c ****     
3746:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25657              		.loc 1 3746 0
 25658 000a 674B     		ldr	r3, .L1011
 25659 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25660 0010 002B     		cmp	r3, #0
 25661 0012 7CD1     		bne	.L1001
3747:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25662              		.loc 1 3747 0
 25663 0014 644B     		ldr	r3, .L1011
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 561


 25664 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25665 001a 1946     		mov	r1, r3
 25666 001c 624A     		ldr	r2, .L1011
 25667 001e 0B46     		mov	r3, r1
 25668 0020 5B00     		lsls	r3, r3, #1
 25669 0022 0B44     		add	r3, r3, r1
 25670 0024 1B01     		lsls	r3, r3, #4
 25671 0026 1344     		add	r3, r3, r2
 25672 0028 03F5CC73 		add	r3, r3, #408
 25673 002c 1B68     		ldr	r3, [r3]
 25674 002e BB60     		str	r3, [r7, #8]
3748:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25675              		.loc 1 3748 0
 25676 0030 5D4B     		ldr	r3, .L1011
 25677 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25678 0036 1946     		mov	r1, r3
 25679 0038 5B4A     		ldr	r2, .L1011
 25680 003a 0B46     		mov	r3, r1
 25681 003c 5B00     		lsls	r3, r3, #1
 25682 003e 0B44     		add	r3, r3, r1
 25683 0040 1B01     		lsls	r3, r3, #4
 25684 0042 1344     		add	r3, r3, r2
 25685 0044 03F5D273 		add	r3, r3, #420
 25686 0048 1B68     		ldr	r3, [r3]	@ float
 25687 004a 7B60     		str	r3, [r7, #4]	@ float
3749:..\src/command_processing.c **** 
3750:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25688              		.loc 1 3750 0
 25689 004c 574B     		ldr	r3, .L1011+4
 25690 004e 1B68     		ldr	r3, [r3]
 25691 0050 1846     		mov	r0, r3
 25692 0052 FFF7FEFF 		bl	__aeabi_i2f
 25693 0056 0346     		mov	r3, r0
 25694 0058 7968     		ldr	r1, [r7, #4]	@ float
 25695 005a 1846     		mov	r0, r3
 25696 005c FFF7FEFF 		bl	__aeabi_fdiv
 25697 0060 0346     		mov	r3, r0
 25698 0062 1846     		mov	r0, r3
 25699 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25700 0068 0246     		mov	r2, r0
 25701 006a 504B     		ldr	r3, .L1011+4
 25702 006c 1A60     		str	r2, [r3]
3751:..\src/command_processing.c **** 
3752:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25703              		.loc 1 3752 0
 25704 006e 4F4B     		ldr	r3, .L1011+4
 25705 0070 1B68     		ldr	r3, [r3]
 25706 0072 1846     		mov	r0, r3
 25707 0074 FFF7FEFF 		bl	__aeabi_i2f
 25708 0078 4B4B     		ldr	r3, .L1011
 25709 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25710 007e 1946     		mov	r1, r3
 25711 0080 4B4A     		ldr	r2, .L1011+8
 25712 0082 0B46     		mov	r3, r1
 25713 0084 5B00     		lsls	r3, r3, #1
 25714 0086 0B44     		add	r3, r3, r1
 25715 0088 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 562


 25716 008a 1344     		add	r3, r3, r2
 25717 008c 03F5D273 		add	r3, r3, #420
 25718 0090 1B68     		ldr	r3, [r3]	@ float
 25719 0092 1946     		mov	r1, r3
 25720 0094 FFF7FEFF 		bl	__aeabi_fmul
 25721 0098 0346     		mov	r3, r0
 25722 009a 1846     		mov	r0, r3
 25723 009c FFF7FEFF 		bl	__aeabi_f2iz
 25724 00a0 0246     		mov	r2, r0
 25725 00a2 424B     		ldr	r3, .L1011+4
 25726 00a4 1A60     		str	r2, [r3]
3753:..\src/command_processing.c **** 
3754:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25727              		.loc 1 3754 0
 25728 00a6 414B     		ldr	r3, .L1011+4
 25729 00a8 1B68     		ldr	r3, [r3]
 25730 00aa 1846     		mov	r0, r3
 25731 00ac 3E4B     		ldr	r3, .L1011
 25732 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25733 00b2 1946     		mov	r1, r3
 25734 00b4 3E4A     		ldr	r2, .L1011+8
 25735 00b6 0B46     		mov	r3, r1
 25736 00b8 5B00     		lsls	r3, r3, #1
 25737 00ba 0B44     		add	r3, r3, r1
 25738 00bc 1B01     		lsls	r3, r3, #4
 25739 00be 1344     		add	r3, r3, r2
 25740 00c0 03F5CC73 		add	r3, r3, #408
 25741 00c4 1B68     		ldr	r3, [r3]
 25742 00c6 1A46     		mov	r2, r3
 25743 00c8 BB68     		ldr	r3, [r7, #8]
 25744 00ca D31A     		subs	r3, r2, r3
 25745 00cc 0344     		add	r3, r3, r0
 25746 00ce 1A46     		mov	r2, r3
 25747 00d0 364B     		ldr	r3, .L1011+4
 25748 00d2 1A60     		str	r2, [r3]
3755:..\src/command_processing.c ****         
3756:..\src/command_processing.c ****         // Check position Limits
3757:..\src/command_processing.c **** 
3758:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25749              		.loc 1 3758 0
 25750 00d4 344B     		ldr	r3, .L1011
 25751 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25752 00da 002B     		cmp	r3, #0
 25753 00dc 17D0     		beq	.L1001
3759:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25754              		.loc 1 3759 0
 25755 00de 334B     		ldr	r3, .L1011+4
 25756 00e0 1A68     		ldr	r2, [r3]
 25757 00e2 314B     		ldr	r3, .L1011
 25758 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25759 00e8 9A42     		cmp	r2, r3
 25760 00ea 04DA     		bge	.L1002
3760:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25761              		.loc 1 3760 0
 25762 00ec 2E4B     		ldr	r3, .L1011
 25763 00ee D3F8E430 		ldr	r3, [r3, #228]
 25764 00f2 2E4A     		ldr	r2, .L1011+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 563


 25765 00f4 1360     		str	r3, [r2]
 25766              	.L1002:
3761:..\src/command_processing.c **** 
3762:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25767              		.loc 1 3762 0
 25768 00f6 2D4B     		ldr	r3, .L1011+4
 25769 00f8 1A68     		ldr	r2, [r3]
 25770 00fa 2B4B     		ldr	r3, .L1011
 25771 00fc D3F8E830 		ldr	r3, [r3, #232]
 25772 0100 9A42     		cmp	r2, r3
 25773 0102 04DD     		ble	.L1001
3763:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25774              		.loc 1 3763 0
 25775 0104 284B     		ldr	r3, .L1011
 25776 0106 D3F8E830 		ldr	r3, [r3, #232]
 25777 010a 284A     		ldr	r2, .L1011+4
 25778 010c 1360     		str	r3, [r2]
 25779              	.L1001:
3764:..\src/command_processing.c ****         }
3765:..\src/command_processing.c ****     }
3766:..\src/command_processing.c ****     
3767:..\src/command_processing.c ****     // If SD is used, create new param and data file
3768:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25780              		.loc 1 3768 0
 25781 010e 264B     		ldr	r3, .L1011
 25782 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25783 0114 012B     		cmp	r3, #1
 25784 0116 06D1     		bne	.L1003
3769:..\src/command_processing.c ****         FS_FClose(pFile);
 25785              		.loc 1 3769 0
 25786 0118 264B     		ldr	r3, .L1011+12
 25787 011a 1B68     		ldr	r3, [r3]
 25788 011c 1846     		mov	r0, r3
 25789 011e FFF7FEFF 		bl	FS_FClose
3770:..\src/command_processing.c ****         
3771:..\src/command_processing.c ****         InitSD_FS();
 25790              		.loc 1 3771 0
 25791 0122 FFF7FEFF 		bl	InitSD_FS
 25792              	.L1003:
3772:..\src/command_processing.c ****     }
3773:..\src/command_processing.c ****    
3774:..\src/command_processing.c ****     // Store params 
3775:..\src/command_processing.c **** 
3776:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25793              		.loc 1 3776 0
 25794 0126 204B     		ldr	r3, .L1011
 25795 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25796 012c 204B     		ldr	r3, .L1011+8
 25797 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25798 0132 9A42     		cmp	r2, r3
 25799 0134 21D0     		beq	.L1004
3777:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25800              		.loc 1 3777 0
 25801 0136 1C4B     		ldr	r3, .L1011
 25802 0138 93F8A030 		ldrb	r3, [r3, #160]
 25803 013c FB70     		strb	r3, [r7, #3]
3778:..\src/command_processing.c ****         if(memStore(0)) {
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 564


 25804              		.loc 1 3778 0
 25805 013e 0020     		movs	r0, #0
 25806 0140 FFF7FEFF 		bl	memStore
 25807 0144 0346     		mov	r3, r0
 25808 0146 002B     		cmp	r3, #0
 25809 0148 0BD0     		beq	.L1005
3779:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25810              		.loc 1 3779 0
 25811 014a 0123     		movs	r3, #1
 25812 014c 3B70     		strb	r3, [r7]
3780:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25813              		.loc 1 3780 0
 25814 014e 0123     		movs	r3, #1
 25815 0150 7B70     		strb	r3, [r7, #1]
3781:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25816              		.loc 1 3781 0
 25817 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25818 0154 99B2     		uxth	r1, r3
 25819 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25820 0158 3B46     		mov	r3, r7
 25821 015a 1846     		mov	r0, r3
 25822 015c FFF7FEFF 		bl	commWrite_old_id
 25823 0160 18E0     		b	.L1007
 25824              	.L1005:
3782:..\src/command_processing.c ****         }    
3783:..\src/command_processing.c ****         else{
3784:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25825              		.loc 1 3784 0
 25826 0162 0023     		movs	r3, #0
 25827 0164 3B70     		strb	r3, [r7]
3785:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25828              		.loc 1 3785 0
 25829 0166 0023     		movs	r3, #0
 25830 0168 7B70     		strb	r3, [r7, #1]
3786:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25831              		.loc 1 3786 0
 25832 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25833 016c 99B2     		uxth	r1, r3
 25834 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25835 0170 3B46     		mov	r3, r7
 25836 0172 1846     		mov	r0, r3
 25837 0174 FFF7FEFF 		bl	commWrite_old_id
 25838 0178 0CE0     		b	.L1007
 25839              	.L1004:
3787:..\src/command_processing.c ****         }
3788:..\src/command_processing.c ****     }    
3789:..\src/command_processing.c ****     else {
3790:..\src/command_processing.c ****         if(memStore(0))
 25840              		.loc 1 3790 0
 25841 017a 0020     		movs	r0, #0
 25842 017c FFF7FEFF 		bl	memStore
 25843 0180 0346     		mov	r3, r0
 25844 0182 002B     		cmp	r3, #0
 25845 0184 03D0     		beq	.L1008
3791:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25846              		.loc 1 3791 0
 25847 0186 0120     		movs	r0, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 565


 25848 0188 FFF7FEFF 		bl	sendAcknowledgment
 25849 018c 02E0     		b	.L1007
 25850              	.L1008:
3792:..\src/command_processing.c ****         else
3793:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25851              		.loc 1 3793 0
 25852 018e 0020     		movs	r0, #0
 25853 0190 FFF7FEFF 		bl	sendAcknowledgment
 25854              	.L1007:
3794:..\src/command_processing.c ****     }
3795:..\src/command_processing.c ****     
3796:..\src/command_processing.c ****     // FW reset (if necessary)
3797:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25855              		.loc 1 3797 0
 25856 0194 084B     		ldr	r3, .L1011+16
 25857 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25858 0198 012B     		cmp	r3, #1
 25859 019a 01D1     		bne	.L1010
3798:..\src/command_processing.c ****         CySoftwareReset();
 25860              		.loc 1 3798 0
 25861 019c FFF7FEFF 		bl	CySoftwareReset
 25862              	.L1010:
3799:..\src/command_processing.c ****     }
3800:..\src/command_processing.c **** }
 25863              		.loc 1 3800 0
 25864 01a0 00BF     		nop
 25865 01a2 1037     		adds	r7, r7, #16
 25866              		.cfi_def_cfa_offset 8
 25867 01a4 BD46     		mov	sp, r7
 25868              		.cfi_def_cfa_register 13
 25869              		@ sp needed
 25870 01a6 80BD     		pop	{r7, pc}
 25871              	.L1012:
 25872              		.align	2
 25873              	.L1011:
 25874 01a8 00000000 		.word	c_mem
 25875 01ac 00000000 		.word	g_refNew
 25876 01b0 00000000 		.word	g_mem
 25877 01b4 00000000 		.word	pFile
 25878 01b8 00000000 		.word	reset_PSoC_flag
 25879              		.cfi_endproc
 25880              	.LFE107:
 25881              		.size	cmd_store_params, .-cmd_store_params
 25882              		.section	.text.cmd_get_emg,"ax",%progbits
 25883              		.align	2
 25884              		.global	cmd_get_emg
 25885              		.thumb
 25886              		.thumb_func
 25887              		.type	cmd_get_emg, %function
 25888              	cmd_get_emg:
 25889              	.LFB108:
3801:..\src/command_processing.c **** 
3802:..\src/command_processing.c **** void cmd_get_emg(){
 25890              		.loc 1 3802 0
 25891              		.cfi_startproc
 25892              		@ args = 0, pretend = 0, frame = 16
 25893              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 566


 25894 0000 80B5     		push	{r7, lr}
 25895              		.cfi_def_cfa_offset 8
 25896              		.cfi_offset 7, -8
 25897              		.cfi_offset 14, -4
 25898 0002 84B0     		sub	sp, sp, #16
 25899              		.cfi_def_cfa_offset 24
 25900 0004 00AF     		add	r7, sp, #0
 25901              		.cfi_def_cfa_register 7
3803:..\src/command_processing.c ****     
3804:..\src/command_processing.c ****     uint8 packet_data[6];
3805:..\src/command_processing.c ****     int16 aux_int16;
3806:..\src/command_processing.c ****     
3807:..\src/command_processing.c ****     // Header        
3808:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25902              		.loc 1 3808 0
 25903 0006 8823     		movs	r3, #136
 25904 0008 3B72     		strb	r3, [r7, #8]
3809:..\src/command_processing.c ****     
3810:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25905              		.loc 1 3810 0
 25906 000a 144B     		ldr	r3, .L1014
 25907 000c 1B68     		ldr	r3, [r3]
 25908 000e 1BB2     		sxth	r3, r3
 25909 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3811:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25910              		.loc 1 3811 0
 25911 0012 BB1D     		adds	r3, r7, #6
 25912 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25913 0016 BB72     		strb	r3, [r7, #10]
3812:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25914              		.loc 1 3812 0
 25915 0018 BB1D     		adds	r3, r7, #6
 25916 001a 0133     		adds	r3, r3, #1
 25917 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25918 001e 7B72     		strb	r3, [r7, #9]
3813:..\src/command_processing.c ****     
3814:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25919              		.loc 1 3814 0
 25920 0020 0E4B     		ldr	r3, .L1014
 25921 0022 5B68     		ldr	r3, [r3, #4]
 25922 0024 1BB2     		sxth	r3, r3
 25923 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3815:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25924              		.loc 1 3815 0
 25925 0028 BB1D     		adds	r3, r7, #6
 25926 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25927 002c 3B73     		strb	r3, [r7, #12]
3816:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25928              		.loc 1 3816 0
 25929 002e BB1D     		adds	r3, r7, #6
 25930 0030 0133     		adds	r3, r3, #1
 25931 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25932 0034 FB72     		strb	r3, [r7, #11]
3817:..\src/command_processing.c **** 
3818:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25933              		.loc 1 3818 0
 25934 0036 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 567


 25935 003a 0521     		movs	r1, #5
 25936 003c 1846     		mov	r0, r3
 25937 003e FFF7FEFF 		bl	LCRChecksum
 25938 0042 0346     		mov	r3, r0
 25939 0044 7B73     		strb	r3, [r7, #13]
3819:..\src/command_processing.c **** 
3820:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25940              		.loc 1 3820 0
 25941 0046 07F10803 		add	r3, r7, #8
 25942 004a 0621     		movs	r1, #6
 25943 004c 1846     		mov	r0, r3
 25944 004e FFF7FEFF 		bl	commWrite
3821:..\src/command_processing.c **** 
3822:..\src/command_processing.c **** }
 25945              		.loc 1 3822 0
 25946 0052 00BF     		nop
 25947 0054 1037     		adds	r7, r7, #16
 25948              		.cfi_def_cfa_offset 8
 25949 0056 BD46     		mov	sp, r7
 25950              		.cfi_def_cfa_register 13
 25951              		@ sp needed
 25952 0058 80BD     		pop	{r7, pc}
 25953              	.L1015:
 25954 005a 00BF     		.align	2
 25955              	.L1014:
 25956 005c 00000000 		.word	g_adc_measOld
 25957              		.cfi_endproc
 25958              	.LFE108:
 25959              		.size	cmd_get_emg, .-cmd_get_emg
 25960              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25961              		.align	2
 25962              		.global	cmd_get_imu_readings
 25963              		.thumb
 25964              		.thumb_func
 25965              		.type	cmd_get_imu_readings, %function
 25966              	cmd_get_imu_readings:
 25967              	.LFB109:
3823:..\src/command_processing.c **** 
3824:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25968              		.loc 1 3824 0
 25969              		.cfi_startproc
 25970              		@ args = 0, pretend = 0, frame = 400
 25971              		@ frame_needed = 1, uses_anonymous_args = 0
 25972 0000 90B5     		push	{r4, r7, lr}
 25973              		.cfi_def_cfa_offset 12
 25974              		.cfi_offset 4, -12
 25975              		.cfi_offset 7, -8
 25976              		.cfi_offset 14, -4
 25977 0002 E5B0     		sub	sp, sp, #404
 25978              		.cfi_def_cfa_offset 416
 25979 0004 00AF     		add	r7, sp, #0
 25980              		.cfi_def_cfa_register 7
3825:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3826:..\src/command_processing.c ****     
3827:..\src/command_processing.c ****     uint8 k_imu;
3828:..\src/command_processing.c ****     uint16 c = 1;
 25981              		.loc 1 3828 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 568


 25982 0006 0123     		movs	r3, #1
 25983 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3829:..\src/command_processing.c ****     uint8 k = 0;
 25984              		.loc 1 3829 0
 25985 000c 0023     		movs	r3, #0
 25986 000e 87F88B31 		strb	r3, [r7, #395]
3830:..\src/command_processing.c ****     uint16 gl_c = 1;
 25987              		.loc 1 3830 0
 25988 0012 0123     		movs	r3, #1
 25989 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3831:..\src/command_processing.c ****     int16 aux_int16;
3832:..\src/command_processing.c ****     float aux_float;
3833:..\src/command_processing.c ****     
3834:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3835:..\src/command_processing.c ****     uint8 packet_data[350];
3836:..\src/command_processing.c ****     uint8 single_packet[32];
3837:..\src/command_processing.c ****     
3838:..\src/command_processing.c ****     //Header package 
3839:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 25990              		.loc 1 3839 0
 25991 0018 07F12003 		add	r3, r7, #32
 25992 001c A122     		movs	r2, #161
 25993 001e 1A70     		strb	r2, [r3]
3840:..\src/command_processing.c ****  
3841:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 25994              		.loc 1 3841 0
 25995 0020 0023     		movs	r3, #0
 25996 0022 87F88F31 		strb	r3, [r7, #399]
 25997 0026 82E2     		b	.L1017
 25998              	.L1033:
3842:..\src/command_processing.c ****     {	
3843:..\src/command_processing.c ****             
3844:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 25999              		.loc 1 3844 0
 26000 0028 3B46     		mov	r3, r7
 26001 002a 3A22     		movs	r2, #58
 26002 002c 1A70     		strb	r2, [r3]
3845:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 26003              		.loc 1 3845 0
 26004 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26005 0032 DB4A     		ldr	r2, .L1034
 26006 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26007 0036 1946     		mov	r1, r3
 26008 0038 DA4A     		ldr	r2, .L1034+4
 26009 003a 0B46     		mov	r3, r1
 26010 003c 9B00     		lsls	r3, r3, #2
 26011 003e 0B44     		add	r3, r3, r1
 26012 0040 1344     		add	r3, r3, r2
 26013 0042 03F20223 		addw	r3, r3, #514
 26014 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26015 0048 002B     		cmp	r3, #0
 26016 004a 5DD0     		beq	.L1018
3846:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 26017              		.loc 1 3846 0
 26018 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26019 0050 D549     		ldr	r1, .L1034+8
 26020 0052 1346     		mov	r3, r2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 569


 26021 0054 9B00     		lsls	r3, r3, #2
 26022 0056 1344     		add	r3, r3, r2
 26023 0058 DB00     		lsls	r3, r3, #3
 26024 005a 0B44     		add	r3, r3, r1
 26025 005c 0233     		adds	r3, r3, #2
 26026 005e B3F90030 		ldrsh	r3, [r3]
 26027 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3847:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26028              		.loc 1 3847 0
 26029 0066 B7F88C31 		ldrh	r3, [r7, #396]
 26030 006a 0133     		adds	r3, r3, #1
 26031 006c 07F5C372 		add	r2, r7, #390
 26032 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26033 0072 3A46     		mov	r2, r7
 26034 0074 D154     		strb	r1, [r2, r3]
3848:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26035              		.loc 1 3848 0
 26036 0076 B7F88C21 		ldrh	r2, [r7, #396]
 26037 007a 07F5C373 		add	r3, r7, #390
 26038 007e 0133     		adds	r3, r3, #1
 26039 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26040 0082 3B46     		mov	r3, r7
 26041 0084 9954     		strb	r1, [r3, r2]
3849:..\src/command_processing.c **** 
3850:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 26042              		.loc 1 3850 0
 26043 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26044 008a C749     		ldr	r1, .L1034+8
 26045 008c 1346     		mov	r3, r2
 26046 008e 9B00     		lsls	r3, r3, #2
 26047 0090 1344     		add	r3, r3, r2
 26048 0092 DB00     		lsls	r3, r3, #3
 26049 0094 0B44     		add	r3, r3, r1
 26050 0096 0433     		adds	r3, r3, #4
 26051 0098 B3F90030 		ldrsh	r3, [r3]
 26052 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3851:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26053              		.loc 1 3851 0
 26054 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 26055 00a4 0333     		adds	r3, r3, #3
 26056 00a6 07F5C372 		add	r2, r7, #390
 26057 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26058 00ac 3A46     		mov	r2, r7
 26059 00ae D154     		strb	r1, [r2, r3]
3852:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26060              		.loc 1 3852 0
 26061 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 26062 00b4 9A1C     		adds	r2, r3, #2
 26063 00b6 07F5C373 		add	r3, r7, #390
 26064 00ba 0133     		adds	r3, r3, #1
 26065 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26066 00be 3B46     		mov	r3, r7
 26067 00c0 9954     		strb	r1, [r3, r2]
3853:..\src/command_processing.c **** 
3854:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 26068              		.loc 1 3854 0
 26069 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 570


 26070 00c6 B849     		ldr	r1, .L1034+8
 26071 00c8 1346     		mov	r3, r2
 26072 00ca 9B00     		lsls	r3, r3, #2
 26073 00cc 1344     		add	r3, r3, r2
 26074 00ce DB00     		lsls	r3, r3, #3
 26075 00d0 0B44     		add	r3, r3, r1
 26076 00d2 0633     		adds	r3, r3, #6
 26077 00d4 B3F90030 		ldrsh	r3, [r3]
 26078 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3855:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26079              		.loc 1 3855 0
 26080 00dc B7F88C31 		ldrh	r3, [r7, #396]
 26081 00e0 0533     		adds	r3, r3, #5
 26082 00e2 07F5C372 		add	r2, r7, #390
 26083 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26084 00e8 3A46     		mov	r2, r7
 26085 00ea D154     		strb	r1, [r2, r3]
3856:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26086              		.loc 1 3856 0
 26087 00ec B7F88C31 		ldrh	r3, [r7, #396]
 26088 00f0 1A1D     		adds	r2, r3, #4
 26089 00f2 07F5C373 		add	r3, r7, #390
 26090 00f6 0133     		adds	r3, r3, #1
 26091 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26092 00fa 3B46     		mov	r3, r7
 26093 00fc 9954     		strb	r1, [r3, r2]
3857:..\src/command_processing.c **** 
3858:..\src/command_processing.c ****             c = c + 6;
 26094              		.loc 1 3858 0
 26095 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26096 0102 0633     		adds	r3, r3, #6
 26097 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26098              	.L1018:
3859:..\src/command_processing.c ****         }
3860:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 26099              		.loc 1 3860 0
 26100 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26101 010c A44A     		ldr	r2, .L1034
 26102 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26103 0110 1946     		mov	r1, r3
 26104 0112 A44A     		ldr	r2, .L1034+4
 26105 0114 0B46     		mov	r3, r1
 26106 0116 9B00     		lsls	r3, r3, #2
 26107 0118 0B44     		add	r3, r3, r1
 26108 011a 1344     		add	r3, r3, r2
 26109 011c 03F20323 		addw	r3, r3, #515
 26110 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26111 0122 002B     		cmp	r3, #0
 26112 0124 5DD0     		beq	.L1019
3861:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 26113              		.loc 1 3861 0
 26114 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26115 012a 9F49     		ldr	r1, .L1034+8
 26116 012c 1346     		mov	r3, r2
 26117 012e 9B00     		lsls	r3, r3, #2
 26118 0130 1344     		add	r3, r3, r2
 26119 0132 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 571


 26120 0134 0B44     		add	r3, r3, r1
 26121 0136 0833     		adds	r3, r3, #8
 26122 0138 B3F90030 		ldrsh	r3, [r3]
 26123 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3862:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26124              		.loc 1 3862 0
 26125 0140 B7F88C31 		ldrh	r3, [r7, #396]
 26126 0144 0133     		adds	r3, r3, #1
 26127 0146 07F5C372 		add	r2, r7, #390
 26128 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26129 014c 3A46     		mov	r2, r7
 26130 014e D154     		strb	r1, [r2, r3]
3863:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26131              		.loc 1 3863 0
 26132 0150 B7F88C21 		ldrh	r2, [r7, #396]
 26133 0154 07F5C373 		add	r3, r7, #390
 26134 0158 0133     		adds	r3, r3, #1
 26135 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26136 015c 3B46     		mov	r3, r7
 26137 015e 9954     		strb	r1, [r3, r2]
3864:..\src/command_processing.c **** 
3865:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 26138              		.loc 1 3865 0
 26139 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26140 0164 9049     		ldr	r1, .L1034+8
 26141 0166 1346     		mov	r3, r2
 26142 0168 9B00     		lsls	r3, r3, #2
 26143 016a 1344     		add	r3, r3, r2
 26144 016c DB00     		lsls	r3, r3, #3
 26145 016e 0B44     		add	r3, r3, r1
 26146 0170 0A33     		adds	r3, r3, #10
 26147 0172 B3F90030 		ldrsh	r3, [r3]
 26148 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3866:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26149              		.loc 1 3866 0
 26150 017a B7F88C31 		ldrh	r3, [r7, #396]
 26151 017e 0333     		adds	r3, r3, #3
 26152 0180 07F5C372 		add	r2, r7, #390
 26153 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26154 0186 3A46     		mov	r2, r7
 26155 0188 D154     		strb	r1, [r2, r3]
3867:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26156              		.loc 1 3867 0
 26157 018a B7F88C31 		ldrh	r3, [r7, #396]
 26158 018e 9A1C     		adds	r2, r3, #2
 26159 0190 07F5C373 		add	r3, r7, #390
 26160 0194 0133     		adds	r3, r3, #1
 26161 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26162 0198 3B46     		mov	r3, r7
 26163 019a 9954     		strb	r1, [r3, r2]
3868:..\src/command_processing.c **** 
3869:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 26164              		.loc 1 3869 0
 26165 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26166 01a0 8149     		ldr	r1, .L1034+8
 26167 01a2 1346     		mov	r3, r2
 26168 01a4 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 572


 26169 01a6 1344     		add	r3, r3, r2
 26170 01a8 DB00     		lsls	r3, r3, #3
 26171 01aa 0B44     		add	r3, r3, r1
 26172 01ac 0C33     		adds	r3, r3, #12
 26173 01ae B3F90030 		ldrsh	r3, [r3]
 26174 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3870:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26175              		.loc 1 3870 0
 26176 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26177 01ba 0533     		adds	r3, r3, #5
 26178 01bc 07F5C372 		add	r2, r7, #390
 26179 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26180 01c2 3A46     		mov	r2, r7
 26181 01c4 D154     		strb	r1, [r2, r3]
3871:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26182              		.loc 1 3871 0
 26183 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26184 01ca 1A1D     		adds	r2, r3, #4
 26185 01cc 07F5C373 		add	r3, r7, #390
 26186 01d0 0133     		adds	r3, r3, #1
 26187 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26188 01d4 3B46     		mov	r3, r7
 26189 01d6 9954     		strb	r1, [r3, r2]
3872:..\src/command_processing.c **** 
3873:..\src/command_processing.c ****             c = c + 6;
 26190              		.loc 1 3873 0
 26191 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26192 01dc 0633     		adds	r3, r3, #6
 26193 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26194              	.L1019:
3874:..\src/command_processing.c ****         }
3875:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26195              		.loc 1 3875 0
 26196 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26197 01e6 6E4A     		ldr	r2, .L1034
 26198 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26199 01ea 1946     		mov	r1, r3
 26200 01ec 6D4A     		ldr	r2, .L1034+4
 26201 01ee 0B46     		mov	r3, r1
 26202 01f0 9B00     		lsls	r3, r3, #2
 26203 01f2 0B44     		add	r3, r3, r1
 26204 01f4 1344     		add	r3, r3, r2
 26205 01f6 03F50173 		add	r3, r3, #516
 26206 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26207 01fc 002B     		cmp	r3, #0
 26208 01fe 5DD0     		beq	.L1020
3876:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26209              		.loc 1 3876 0
 26210 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26211 0204 6849     		ldr	r1, .L1034+8
 26212 0206 1346     		mov	r3, r2
 26213 0208 9B00     		lsls	r3, r3, #2
 26214 020a 1344     		add	r3, r3, r2
 26215 020c DB00     		lsls	r3, r3, #3
 26216 020e 0B44     		add	r3, r3, r1
 26217 0210 0E33     		adds	r3, r3, #14
 26218 0212 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 573


 26219 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3877:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26220              		.loc 1 3877 0
 26221 021a B7F88C31 		ldrh	r3, [r7, #396]
 26222 021e 0133     		adds	r3, r3, #1
 26223 0220 07F5C372 		add	r2, r7, #390
 26224 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26225 0226 3A46     		mov	r2, r7
 26226 0228 D154     		strb	r1, [r2, r3]
3878:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26227              		.loc 1 3878 0
 26228 022a B7F88C21 		ldrh	r2, [r7, #396]
 26229 022e 07F5C373 		add	r3, r7, #390
 26230 0232 0133     		adds	r3, r3, #1
 26231 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26232 0236 3B46     		mov	r3, r7
 26233 0238 9954     		strb	r1, [r3, r2]
3879:..\src/command_processing.c **** 
3880:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26234              		.loc 1 3880 0
 26235 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26236 023e 5A49     		ldr	r1, .L1034+8
 26237 0240 1346     		mov	r3, r2
 26238 0242 9B00     		lsls	r3, r3, #2
 26239 0244 1344     		add	r3, r3, r2
 26240 0246 DB00     		lsls	r3, r3, #3
 26241 0248 0B44     		add	r3, r3, r1
 26242 024a 1033     		adds	r3, r3, #16
 26243 024c B3F90030 		ldrsh	r3, [r3]
 26244 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3881:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26245              		.loc 1 3881 0
 26246 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26247 0258 0333     		adds	r3, r3, #3
 26248 025a 07F5C372 		add	r2, r7, #390
 26249 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26250 0260 3A46     		mov	r2, r7
 26251 0262 D154     		strb	r1, [r2, r3]
3882:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26252              		.loc 1 3882 0
 26253 0264 B7F88C31 		ldrh	r3, [r7, #396]
 26254 0268 9A1C     		adds	r2, r3, #2
 26255 026a 07F5C373 		add	r3, r7, #390
 26256 026e 0133     		adds	r3, r3, #1
 26257 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26258 0272 3B46     		mov	r3, r7
 26259 0274 9954     		strb	r1, [r3, r2]
3883:..\src/command_processing.c **** 
3884:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26260              		.loc 1 3884 0
 26261 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26262 027a 4B49     		ldr	r1, .L1034+8
 26263 027c 1346     		mov	r3, r2
 26264 027e 9B00     		lsls	r3, r3, #2
 26265 0280 1344     		add	r3, r3, r2
 26266 0282 DB00     		lsls	r3, r3, #3
 26267 0284 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 574


 26268 0286 1233     		adds	r3, r3, #18
 26269 0288 B3F90030 		ldrsh	r3, [r3]
 26270 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3885:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26271              		.loc 1 3885 0
 26272 0290 B7F88C31 		ldrh	r3, [r7, #396]
 26273 0294 0533     		adds	r3, r3, #5
 26274 0296 07F5C372 		add	r2, r7, #390
 26275 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26276 029c 3A46     		mov	r2, r7
 26277 029e D154     		strb	r1, [r2, r3]
3886:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26278              		.loc 1 3886 0
 26279 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26280 02a4 1A1D     		adds	r2, r3, #4
 26281 02a6 07F5C373 		add	r3, r7, #390
 26282 02aa 0133     		adds	r3, r3, #1
 26283 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26284 02ae 3B46     		mov	r3, r7
 26285 02b0 9954     		strb	r1, [r3, r2]
3887:..\src/command_processing.c **** 
3888:..\src/command_processing.c ****             c = c + 6;
 26286              		.loc 1 3888 0
 26287 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26288 02b6 0633     		adds	r3, r3, #6
 26289 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26290              	.L1020:
3889:..\src/command_processing.c ****         }
3890:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26291              		.loc 1 3890 0
 26292 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26293 02c0 374A     		ldr	r2, .L1034
 26294 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26295 02c4 1946     		mov	r1, r3
 26296 02c6 374A     		ldr	r2, .L1034+4
 26297 02c8 0B46     		mov	r3, r1
 26298 02ca 9B00     		lsls	r3, r3, #2
 26299 02cc 0B44     		add	r3, r3, r1
 26300 02ce 1344     		add	r3, r3, r2
 26301 02d0 03F20523 		addw	r3, r3, #517
 26302 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26303 02d6 002B     		cmp	r3, #0
 26304 02d8 00F0AF80 		beq	.L1021
3891:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 26305              		.loc 1 3891 0
 26306 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26307 02e0 3149     		ldr	r1, .L1034+8
 26308 02e2 1346     		mov	r3, r2
 26309 02e4 9B00     		lsls	r3, r3, #2
 26310 02e6 1344     		add	r3, r3, r2
 26311 02e8 DB00     		lsls	r3, r3, #3
 26312 02ea 0B44     		add	r3, r3, r1
 26313 02ec 1433     		adds	r3, r3, #20
 26314 02ee 1B68     		ldr	r3, [r3]	@ float
 26315 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3892:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26316              		.loc 1 3892 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 575


 26317 02f4 0023     		movs	r3, #0
 26318 02f6 87F88B31 		strb	r3, [r7, #395]
 26319 02fa 13E0     		b	.L1022
 26320              	.L1023:
3893:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26321              		.loc 1 3893 0 discriminator 3
 26322 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26323 0300 1A1D     		adds	r2, r3, #4
 26324 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26325 0306 D31A     		subs	r3, r2, r3
 26326 0308 013B     		subs	r3, r3, #1
 26327 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26328 030e 07F5C071 		add	r1, r7, #384
 26329 0312 0A44     		add	r2, r2, r1
 26330 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26331 0316 3A46     		mov	r2, r7
 26332 0318 D154     		strb	r1, [r2, r3]
3892:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26333              		.loc 1 3892 0 discriminator 3
 26334 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26335 031e 0133     		adds	r3, r3, #1
 26336 0320 87F88B31 		strb	r3, [r7, #395]
 26337              	.L1022:
3892:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26338              		.loc 1 3892 0 is_stmt 0 discriminator 1
 26339 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26340 0328 032B     		cmp	r3, #3
 26341 032a E7D9     		bls	.L1023
3894:..\src/command_processing.c ****             }
3895:..\src/command_processing.c **** 
3896:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 26342              		.loc 1 3896 0 is_stmt 1
 26343 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26344 0330 1D49     		ldr	r1, .L1034+8
 26345 0332 1346     		mov	r3, r2
 26346 0334 9B00     		lsls	r3, r3, #2
 26347 0336 1344     		add	r3, r3, r2
 26348 0338 DB00     		lsls	r3, r3, #3
 26349 033a 0B44     		add	r3, r3, r1
 26350 033c 1833     		adds	r3, r3, #24
 26351 033e 1B68     		ldr	r3, [r3]	@ float
 26352 0340 C7F88031 		str	r3, [r7, #384]	@ float
3897:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26353              		.loc 1 3897 0
 26354 0344 0023     		movs	r3, #0
 26355 0346 87F88B31 		strb	r3, [r7, #395]
 26356 034a 14E0     		b	.L1024
 26357              	.L1025:
3898:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26358              		.loc 1 3898 0 discriminator 3
 26359 034c B7F88C31 		ldrh	r3, [r7, #396]
 26360 0350 03F10802 		add	r2, r3, #8
 26361 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26362 0358 D31A     		subs	r3, r2, r3
 26363 035a 013B     		subs	r3, r3, #1
 26364 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26365 0360 07F5C071 		add	r1, r7, #384
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 576


 26366 0364 0A44     		add	r2, r2, r1
 26367 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26368 0368 3A46     		mov	r2, r7
 26369 036a D154     		strb	r1, [r2, r3]
3897:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26370              		.loc 1 3897 0 discriminator 3
 26371 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26372 0370 0133     		adds	r3, r3, #1
 26373 0372 87F88B31 		strb	r3, [r7, #395]
 26374              	.L1024:
3897:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26375              		.loc 1 3897 0 is_stmt 0 discriminator 1
 26376 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26377 037a 032B     		cmp	r3, #3
 26378 037c E6D9     		bls	.L1025
3899:..\src/command_processing.c ****             }
3900:..\src/command_processing.c **** 
3901:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26379              		.loc 1 3901 0 is_stmt 1
 26380 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26381 0382 0949     		ldr	r1, .L1034+8
 26382 0384 1346     		mov	r3, r2
 26383 0386 9B00     		lsls	r3, r3, #2
 26384 0388 1344     		add	r3, r3, r2
 26385 038a DB00     		lsls	r3, r3, #3
 26386 038c 0B44     		add	r3, r3, r1
 26387 038e 1C33     		adds	r3, r3, #28
 26388 0390 1B68     		ldr	r3, [r3]	@ float
 26389 0392 C7F88031 		str	r3, [r7, #384]	@ float
3902:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26390              		.loc 1 3902 0
 26391 0396 0023     		movs	r3, #0
 26392 0398 87F88B31 		strb	r3, [r7, #395]
 26393 039c 1BE0     		b	.L1026
 26394              	.L1035:
 26395 039e 00BF     		.align	2
 26396              	.L1034:
 26397 03a0 00000000 		.word	IMU_connected
 26398 03a4 00000000 		.word	c_mem
 26399 03a8 00000000 		.word	g_imu
 26400              	.L1027:
3903:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26401              		.loc 1 3903 0 discriminator 3
 26402 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26403 03b0 03F10C02 		add	r2, r3, #12
 26404 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26405 03b8 D31A     		subs	r3, r2, r3
 26406 03ba 013B     		subs	r3, r3, #1
 26407 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26408 03c0 07F5C071 		add	r1, r7, #384
 26409 03c4 0A44     		add	r2, r2, r1
 26410 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26411 03c8 3A46     		mov	r2, r7
 26412 03ca D154     		strb	r1, [r2, r3]
3902:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26413              		.loc 1 3902 0 discriminator 3
 26414 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 577


 26415 03d0 0133     		adds	r3, r3, #1
 26416 03d2 87F88B31 		strb	r3, [r7, #395]
 26417              	.L1026:
3902:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26418              		.loc 1 3902 0 is_stmt 0 discriminator 1
 26419 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26420 03da 032B     		cmp	r3, #3
 26421 03dc E6D9     		bls	.L1027
3904:..\src/command_processing.c ****             }
3905:..\src/command_processing.c **** 
3906:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26422              		.loc 1 3906 0 is_stmt 1
 26423 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26424 03e2 6749     		ldr	r1, .L1036
 26425 03e4 1346     		mov	r3, r2
 26426 03e6 9B00     		lsls	r3, r3, #2
 26427 03e8 1344     		add	r3, r3, r2
 26428 03ea DB00     		lsls	r3, r3, #3
 26429 03ec 0B44     		add	r3, r3, r1
 26430 03ee 2033     		adds	r3, r3, #32
 26431 03f0 1B68     		ldr	r3, [r3]	@ float
 26432 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3907:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26433              		.loc 1 3907 0
 26434 03f6 0023     		movs	r3, #0
 26435 03f8 87F88B31 		strb	r3, [r7, #395]
 26436 03fc 14E0     		b	.L1028
 26437              	.L1029:
3908:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26438              		.loc 1 3908 0 discriminator 3
 26439 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26440 0402 03F11002 		add	r2, r3, #16
 26441 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26442 040a D31A     		subs	r3, r2, r3
 26443 040c 013B     		subs	r3, r3, #1
 26444 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26445 0412 07F5C071 		add	r1, r7, #384
 26446 0416 0A44     		add	r2, r2, r1
 26447 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26448 041a 3A46     		mov	r2, r7
 26449 041c D154     		strb	r1, [r2, r3]
3907:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26450              		.loc 1 3907 0 discriminator 3
 26451 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26452 0422 0133     		adds	r3, r3, #1
 26453 0424 87F88B31 		strb	r3, [r7, #395]
 26454              	.L1028:
3907:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26455              		.loc 1 3907 0 is_stmt 0 discriminator 1
 26456 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26457 042c 032B     		cmp	r3, #3
 26458 042e E6D9     		bls	.L1029
3909:..\src/command_processing.c ****             }
3910:..\src/command_processing.c ****             c = c + 16;
 26459              		.loc 1 3910 0 is_stmt 1
 26460 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26461 0434 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 578


 26462 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26463              	.L1021:
3911:..\src/command_processing.c ****         }
3912:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26464              		.loc 1 3912 0
 26465 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26466 043e 514A     		ldr	r2, .L1036+4
 26467 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26468 0442 1946     		mov	r1, r3
 26469 0444 504A     		ldr	r2, .L1036+8
 26470 0446 0B46     		mov	r3, r1
 26471 0448 9B00     		lsls	r3, r3, #2
 26472 044a 0B44     		add	r3, r3, r1
 26473 044c 1344     		add	r3, r3, r2
 26474 044e 03F20623 		addw	r3, r3, #518
 26475 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26476 0454 002B     		cmp	r3, #0
 26477 0456 21D0     		beq	.L1030
3913:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26478              		.loc 1 3913 0
 26479 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26480 045c 4849     		ldr	r1, .L1036
 26481 045e 1346     		mov	r3, r2
 26482 0460 9B00     		lsls	r3, r3, #2
 26483 0462 1344     		add	r3, r3, r2
 26484 0464 DB00     		lsls	r3, r3, #3
 26485 0466 0B44     		add	r3, r3, r1
 26486 0468 2433     		adds	r3, r3, #36
 26487 046a B3F90030 		ldrsh	r3, [r3]
 26488 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3914:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26489              		.loc 1 3914 0
 26490 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26491 0476 0133     		adds	r3, r3, #1
 26492 0478 07F5C372 		add	r2, r7, #390
 26493 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26494 047e 3A46     		mov	r2, r7
 26495 0480 D154     		strb	r1, [r2, r3]
3915:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26496              		.loc 1 3915 0
 26497 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26498 0486 07F5C373 		add	r3, r7, #390
 26499 048a 0133     		adds	r3, r3, #1
 26500 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26501 048e 3B46     		mov	r3, r7
 26502 0490 9954     		strb	r1, [r3, r2]
3916:..\src/command_processing.c ****             c = c + 2;
 26503              		.loc 1 3916 0
 26504 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26505 0496 0233     		adds	r3, r3, #2
 26506 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26507              	.L1030:
3917:..\src/command_processing.c ****         }
3918:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26508              		.loc 1 3918 0
 26509 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26510 04a0 384A     		ldr	r2, .L1036+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 579


 26511 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26512 04a4 1A46     		mov	r2, r3
 26513 04a6 394B     		ldr	r3, .L1036+12
 26514 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26515 04ac 013B     		subs	r3, r3, #1
 26516 04ae 3A46     		mov	r2, r7
 26517 04b0 3A21     		movs	r1, #58
 26518 04b2 D154     		strb	r1, [r2, r3]
3919:..\src/command_processing.c ****         c = 1;
 26519              		.loc 1 3919 0
 26520 04b4 0123     		movs	r3, #1
 26521 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3920:..\src/command_processing.c ****                
3921:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26522              		.loc 1 3921 0
 26523 04ba 0023     		movs	r3, #0
 26524 04bc 87F88B31 		strb	r3, [r7, #395]
 26525 04c0 10E0     		b	.L1031
 26526              	.L1032:
3922:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26527              		.loc 1 3922 0 discriminator 3
 26528 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26529 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26530 04ca 1344     		add	r3, r3, r2
 26531 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26532 04d0 3946     		mov	r1, r7
 26533 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26534 04d4 07F12002 		add	r2, r7, #32
 26535 04d8 D154     		strb	r1, [r2, r3]
3921:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26536              		.loc 1 3921 0 discriminator 3
 26537 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26538 04de 0133     		adds	r3, r3, #1
 26539 04e0 87F88B31 		strb	r3, [r7, #395]
 26540              	.L1031:
3921:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26541              		.loc 1 3921 0 is_stmt 0 discriminator 1
 26542 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26543 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26544 04ec 2549     		ldr	r1, .L1036+4
 26545 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26546 04f0 1946     		mov	r1, r3
 26547 04f2 264B     		ldr	r3, .L1036+12
 26548 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26549 04f8 9A42     		cmp	r2, r3
 26550 04fa E2DB     		blt	.L1032
3923:..\src/command_processing.c ****         }
3924:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26551              		.loc 1 3924 0 is_stmt 1 discriminator 2
 26552 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26553 0500 204A     		ldr	r2, .L1036+4
 26554 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26555 0504 1A46     		mov	r2, r3
 26556 0506 214B     		ldr	r3, .L1036+12
 26557 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26558 050c 9AB2     		uxth	r2, r3
 26559 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 580


 26560 0512 1344     		add	r3, r3, r2
 26561 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3925:..\src/command_processing.c ****         
3926:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26562              		.loc 1 3926 0 discriminator 2
 26563 0518 3B46     		mov	r3, r7
 26564 051a 2022     		movs	r2, #32
 26565 051c 0021     		movs	r1, #0
 26566 051e 1846     		mov	r0, r3
 26567 0520 FFF7FEFF 		bl	memset
3841:..\src/command_processing.c ****     {	
 26568              		.loc 1 3841 0 discriminator 2
 26569 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26570 0528 0133     		adds	r3, r3, #1
 26571 052a 87F88F31 		strb	r3, [r7, #399]
 26572              	.L1017:
3841:..\src/command_processing.c ****     {	
 26573              		.loc 1 3841 0 is_stmt 0 discriminator 1
 26574 052e 184B     		ldr	r3, .L1036+16
 26575 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26576 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26577 0536 9A42     		cmp	r2, r3
 26578 0538 FFF476AD 		bcc	.L1033
3927:..\src/command_processing.c ****         
3928:..\src/command_processing.c ****     }
3929:..\src/command_processing.c **** 
3930:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3931:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26579              		.loc 1 3931 0 is_stmt 1
 26580 053c 154B     		ldr	r3, .L1036+20
 26581 053e 1B68     		ldr	r3, [r3]
 26582 0540 5C1E     		subs	r4, r3, #1
 26583 0542 144B     		ldr	r3, .L1036+20
 26584 0544 1B68     		ldr	r3, [r3]
 26585 0546 DBB2     		uxtb	r3, r3
 26586 0548 013B     		subs	r3, r3, #1
 26587 054a DAB2     		uxtb	r2, r3
 26588 054c 07F12003 		add	r3, r7, #32
 26589 0550 1146     		mov	r1, r2
 26590 0552 1846     		mov	r0, r3
 26591 0554 FFF7FEFF 		bl	LCRChecksum
 26592 0558 0346     		mov	r3, r0
 26593 055a 1A46     		mov	r2, r3
 26594 055c 07F12003 		add	r3, r7, #32
 26595 0560 1A55     		strb	r2, [r3, r4]
3932:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26596              		.loc 1 3932 0
 26597 0562 0C4B     		ldr	r3, .L1036+20
 26598 0564 1B68     		ldr	r3, [r3]
 26599 0566 9AB2     		uxth	r2, r3
 26600 0568 07F12003 		add	r3, r7, #32
 26601 056c 1146     		mov	r1, r2
 26602 056e 1846     		mov	r0, r3
 26603 0570 FFF7FEFF 		bl	commWrite
3933:..\src/command_processing.c **** }
 26604              		.loc 1 3933 0
 26605 0574 00BF     		nop
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 581


 26606 0576 07F5CA77 		add	r7, r7, #404
 26607              		.cfi_def_cfa_offset 12
 26608 057a BD46     		mov	sp, r7
 26609              		.cfi_def_cfa_register 13
 26610              		@ sp needed
 26611 057c 90BD     		pop	{r4, r7, pc}
 26612              	.L1037:
 26613 057e 00BF     		.align	2
 26614              	.L1036:
 26615 0580 00000000 		.word	g_imu
 26616 0584 00000000 		.word	IMU_connected
 26617 0588 00000000 		.word	c_mem
 26618 058c 00000000 		.word	single_imu_size
 26619 0590 00000000 		.word	N_IMU_Connected
 26620 0594 00000000 		.word	imus_data_size
 26621              		.cfi_endproc
 26622              	.LFE109:
 26623              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26624              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26625              		.align	2
 26626              		.global	cmd_get_encoder_map
 26627              		.thumb
 26628              		.thumb_func
 26629              		.type	cmd_get_encoder_map, %function
 26630              	cmd_get_encoder_map:
 26631              	.LFB110:
3934:..\src/command_processing.c **** 
3935:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26632              		.loc 1 3935 0
 26633              		.cfi_startproc
 26634              		@ args = 0, pretend = 0, frame = 16
 26635              		@ frame_needed = 1, uses_anonymous_args = 0
 26636 0000 90B5     		push	{r4, r7, lr}
 26637              		.cfi_def_cfa_offset 12
 26638              		.cfi_offset 4, -12
 26639              		.cfi_offset 7, -8
 26640              		.cfi_offset 14, -4
 26641 0002 85B0     		sub	sp, sp, #20
 26642              		.cfi_def_cfa_offset 32
 26643 0004 00AF     		add	r7, sp, #0
 26644              		.cfi_def_cfa_register 7
3936:..\src/command_processing.c ****     //Retrieve Encoder map
3937:..\src/command_processing.c ****     
3938:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3939:..\src/command_processing.c ****     uint8 CYDATA i, j;
3940:..\src/command_processing.c ****     
3941:..\src/command_processing.c ****     // Header        
3942:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26645              		.loc 1 3942 0
 26646 0006 A323     		movs	r3, #163
 26647 0008 3B70     		strb	r3, [r7]
3943:..\src/command_processing.c ****     
3944:..\src/command_processing.c ****     // Fill payload
3945:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26648              		.loc 1 3945 0
 26649 000a 0223     		movs	r3, #2
 26650 000c 7B70     		strb	r3, [r7, #1]
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 582


3946:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26651              		.loc 1 3946 0
 26652 000e 0523     		movs	r3, #5
 26653 0010 BB70     		strb	r3, [r7, #2]
3947:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26654              		.loc 1 3947 0
 26655 0012 0023     		movs	r3, #0
 26656 0014 FB73     		strb	r3, [r7, #15]
 26657 0016 23E0     		b	.L1039
 26658              	.L1042:
3948:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26659              		.loc 1 3948 0
 26660 0018 0023     		movs	r3, #0
 26661 001a BB73     		strb	r3, [r7, #14]
 26662 001c 1AE0     		b	.L1040
 26663              	.L1041:
3949:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26664              		.loc 1 3949 0 discriminator 3
 26665 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26666 0020 1346     		mov	r3, r2
 26667 0022 9B00     		lsls	r3, r3, #2
 26668 0024 1344     		add	r3, r3, r2
 26669 0026 DA1C     		adds	r2, r3, #3
 26670 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26671 002a D118     		adds	r1, r2, r3
 26672 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26673 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26674 0030 154C     		ldr	r4, .L1043
 26675 0032 1346     		mov	r3, r2
 26676 0034 5B00     		lsls	r3, r3, #1
 26677 0036 1344     		add	r3, r3, r2
 26678 0038 1B01     		lsls	r3, r3, #4
 26679 003a 2344     		add	r3, r3, r4
 26680 003c 0344     		add	r3, r3, r0
 26681 003e 03F5C873 		add	r3, r3, #400
 26682 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26683 0044 07F11003 		add	r3, r7, #16
 26684 0048 0B44     		add	r3, r3, r1
 26685 004a 03F8102C 		strb	r2, [r3, #-16]
3948:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26686              		.loc 1 3948 0 discriminator 3
 26687 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26688 0050 0133     		adds	r3, r3, #1
 26689 0052 BB73     		strb	r3, [r7, #14]
 26690              	.L1040:
3948:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26691              		.loc 1 3948 0 is_stmt 0 discriminator 1
 26692 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26693 0056 042B     		cmp	r3, #4
 26694 0058 E1D9     		bls	.L1041
3947:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26695              		.loc 1 3947 0 is_stmt 1 discriminator 2
 26696 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26697 005c 0133     		adds	r3, r3, #1
 26698 005e FB73     		strb	r3, [r7, #15]
 26699              	.L1039:
3947:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 583


 26700              		.loc 1 3947 0 is_stmt 0 discriminator 1
 26701 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26702 0062 012B     		cmp	r3, #1
 26703 0064 D8D9     		bls	.L1042
3950:..\src/command_processing.c ****         }
3951:..\src/command_processing.c ****     }
3952:..\src/command_processing.c ****     
3953:..\src/command_processing.c ****     // Calculate checksum
3954:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26704              		.loc 1 3954 0 is_stmt 1
 26705 0066 3B46     		mov	r3, r7
 26706 0068 0D21     		movs	r1, #13
 26707 006a 1846     		mov	r0, r3
 26708 006c FFF7FEFF 		bl	LCRChecksum
 26709 0070 0346     		mov	r3, r0
 26710 0072 7B73     		strb	r3, [r7, #13]
3955:..\src/command_processing.c ****     
3956:..\src/command_processing.c ****     // Send package to UART
3957:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26711              		.loc 1 3957 0
 26712 0074 3B46     		mov	r3, r7
 26713 0076 0E21     		movs	r1, #14
 26714 0078 1846     		mov	r0, r3
 26715 007a FFF7FEFF 		bl	commWrite
3958:..\src/command_processing.c **** }
 26716              		.loc 1 3958 0
 26717 007e 00BF     		nop
 26718 0080 1437     		adds	r7, r7, #20
 26719              		.cfi_def_cfa_offset 12
 26720 0082 BD46     		mov	sp, r7
 26721              		.cfi_def_cfa_register 13
 26722              		@ sp needed
 26723 0084 90BD     		pop	{r4, r7, pc}
 26724              	.L1044:
 26725 0086 00BF     		.align	2
 26726              	.L1043:
 26727 0088 00000000 		.word	c_mem
 26728              		.cfi_endproc
 26729              	.LFE110:
 26730              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26731              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26732              		.align	2
 26733              		.global	cmd_get_encoder_raw
 26734              		.thumb
 26735              		.thumb_func
 26736              		.type	cmd_get_encoder_raw, %function
 26737              	cmd_get_encoder_raw:
 26738              	.LFB111:
3959:..\src/command_processing.c **** 
3960:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26739              		.loc 1 3960 0
 26740              		.cfi_startproc
 26741              		@ args = 0, pretend = 0, frame = 32
 26742              		@ frame_needed = 1, uses_anonymous_args = 0
 26743 0000 90B5     		push	{r4, r7, lr}
 26744              		.cfi_def_cfa_offset 12
 26745              		.cfi_offset 4, -12
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 584


 26746              		.cfi_offset 7, -8
 26747              		.cfi_offset 14, -4
 26748 0002 89B0     		sub	sp, sp, #36
 26749              		.cfi_def_cfa_offset 48
 26750 0004 00AF     		add	r7, sp, #0
 26751              		.cfi_def_cfa_register 7
3961:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3962:..\src/command_processing.c ****     
3963:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3964:..\src/command_processing.c ****     uint8 i, j, idx;
3965:..\src/command_processing.c ****     uint16 aux_uint16;
3966:..\src/command_processing.c ****     
3967:..\src/command_processing.c ****     //Header package 
3968:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26752              		.loc 1 3968 0
 26753 0006 A423     		movs	r3, #164
 26754 0008 3B71     		strb	r3, [r7, #4]
3969:..\src/command_processing.c ****  
3970:..\src/command_processing.c ****     // Fill payload
3971:..\src/command_processing.c ****     idx = 0;
 26755              		.loc 1 3971 0
 26756 000a 0023     		movs	r3, #0
 26757 000c 7B77     		strb	r3, [r7, #29]
3972:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26758              		.loc 1 3972 0
 26759 000e 0023     		movs	r3, #0
 26760 0010 FB77     		strb	r3, [r7, #31]
 26761 0012 3FE0     		b	.L1046
 26762              	.L1050:
3973:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26763              		.loc 1 3973 0
 26764 0014 0023     		movs	r3, #0
 26765 0016 BB77     		strb	r3, [r7, #30]
 26766 0018 33E0     		b	.L1047
 26767              	.L1049:
3974:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26768              		.loc 1 3974 0
 26769 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26770 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26771 001e 3048     		ldr	r0, .L1051
 26772 0020 1346     		mov	r3, r2
 26773 0022 5B00     		lsls	r3, r3, #1
 26774 0024 1344     		add	r3, r3, r2
 26775 0026 1B01     		lsls	r3, r3, #4
 26776 0028 0344     		add	r3, r3, r0
 26777 002a 0B44     		add	r3, r3, r1
 26778 002c 03F5C873 		add	r3, r3, #400
 26779 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26780 0032 012B     		cmp	r3, #1
 26781 0034 22D1     		bne	.L1048
3975:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26782              		.loc 1 3975 0
 26783 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26784 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26785 003a 2A48     		ldr	r0, .L1051+4
 26786 003c 1346     		mov	r3, r2
 26787 003e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 585


 26788 0040 1344     		add	r3, r3, r2
 26789 0042 0B44     		add	r3, r3, r1
 26790 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26791 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3976:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26792              		.loc 1 3976 0
 26793 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26794 004c 5B00     		lsls	r3, r3, #1
 26795 004e 0233     		adds	r3, r3, #2
 26796 0050 BA1C     		adds	r2, r7, #2
 26797 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26798 0054 07F12001 		add	r1, r7, #32
 26799 0058 0B44     		add	r3, r3, r1
 26800 005a 03F81C2C 		strb	r2, [r3, #-28]
3977:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26801              		.loc 1 3977 0
 26802 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26803 0060 5B00     		lsls	r3, r3, #1
 26804 0062 5A1C     		adds	r2, r3, #1
 26805 0064 BB1C     		adds	r3, r7, #2
 26806 0066 0133     		adds	r3, r3, #1
 26807 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26808 006a 07F12003 		add	r3, r7, #32
 26809 006e 1344     		add	r3, r3, r2
 26810 0070 0A46     		mov	r2, r1
 26811 0072 03F81C2C 		strb	r2, [r3, #-28]
3978:..\src/command_processing.c ****                 idx++;
 26812              		.loc 1 3978 0
 26813 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26814 0078 0133     		adds	r3, r3, #1
 26815 007a 7B77     		strb	r3, [r7, #29]
 26816              	.L1048:
3973:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26817              		.loc 1 3973 0 discriminator 2
 26818 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26819 007e 0133     		adds	r3, r3, #1
 26820 0080 BB77     		strb	r3, [r7, #30]
 26821              	.L1047:
3973:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26822              		.loc 1 3973 0 is_stmt 0 discriminator 1
 26823 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26824 0084 184A     		ldr	r2, .L1051+8
 26825 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26826 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26827 008a 9A42     		cmp	r2, r3
 26828 008c C5D3     		bcc	.L1049
3972:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26829              		.loc 1 3972 0 is_stmt 1 discriminator 2
 26830 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26831 0090 0133     		adds	r3, r3, #1
 26832 0092 FB77     		strb	r3, [r7, #31]
 26833              	.L1046:
3972:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26834              		.loc 1 3972 0 is_stmt 0 discriminator 1
 26835 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26836 0096 012B     		cmp	r3, #1
 26837 0098 BCD9     		bls	.L1050
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 586


3979:..\src/command_processing.c ****             }
3980:..\src/command_processing.c ****         }
3981:..\src/command_processing.c ****     }
3982:..\src/command_processing.c **** 
3983:..\src/command_processing.c ****     // Calculate checksum
3984:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26838              		.loc 1 3984 0 is_stmt 1
 26839 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26840 009c 5B00     		lsls	r3, r3, #1
 26841 009e 5C1C     		adds	r4, r3, #1
 26842 00a0 7B7F     		ldrb	r3, [r7, #29]
 26843 00a2 5B00     		lsls	r3, r3, #1
 26844 00a4 DBB2     		uxtb	r3, r3
 26845 00a6 0133     		adds	r3, r3, #1
 26846 00a8 DAB2     		uxtb	r2, r3
 26847 00aa 3B1D     		adds	r3, r7, #4
 26848 00ac 1146     		mov	r1, r2
 26849 00ae 1846     		mov	r0, r3
 26850 00b0 FFF7FEFF 		bl	LCRChecksum
 26851 00b4 0346     		mov	r3, r0
 26852 00b6 1A46     		mov	r2, r3
 26853 00b8 07F12003 		add	r3, r7, #32
 26854 00bc 2344     		add	r3, r3, r4
 26855 00be 03F81C2C 		strb	r2, [r3, #-28]
3985:..\src/command_processing.c ****     
3986:..\src/command_processing.c ****     // Send package to UART
3987:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26856              		.loc 1 3987 0
 26857 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26858 00c4 0133     		adds	r3, r3, #1
 26859 00c6 9BB2     		uxth	r3, r3
 26860 00c8 5B00     		lsls	r3, r3, #1
 26861 00ca 9AB2     		uxth	r2, r3
 26862 00cc 3B1D     		adds	r3, r7, #4
 26863 00ce 1146     		mov	r1, r2
 26864 00d0 1846     		mov	r0, r3
 26865 00d2 FFF7FEFF 		bl	commWrite
3988:..\src/command_processing.c **** }
 26866              		.loc 1 3988 0
 26867 00d6 00BF     		nop
 26868 00d8 2437     		adds	r7, r7, #36
 26869              		.cfi_def_cfa_offset 12
 26870 00da BD46     		mov	sp, r7
 26871              		.cfi_def_cfa_register 13
 26872              		@ sp needed
 26873 00dc 90BD     		pop	{r4, r7, pc}
 26874              	.L1052:
 26875 00de 00BF     		.align	2
 26876              	.L1051:
 26877 00e0 00000000 		.word	c_mem
 26878 00e4 00000000 		.word	Encoder_Value
 26879 00e8 00000000 		.word	N_Encoder_Line_Connected
 26880              		.cfi_endproc
 26881              	.LFE111:
 26882              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26883              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26884              		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 587


 26885              		.global	cmd_get_ADC_map
 26886              		.thumb
 26887              		.thumb_func
 26888              		.type	cmd_get_ADC_map, %function
 26889              	cmd_get_ADC_map:
 26890              	.LFB112:
3989:..\src/command_processing.c **** 
3990:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26891              		.loc 1 3990 0
 26892              		.cfi_startproc
 26893              		@ args = 0, pretend = 0, frame = 16
 26894              		@ frame_needed = 1, uses_anonymous_args = 0
 26895 0000 80B5     		push	{r7, lr}
 26896              		.cfi_def_cfa_offset 8
 26897              		.cfi_offset 7, -8
 26898              		.cfi_offset 14, -4
 26899 0002 84B0     		sub	sp, sp, #16
 26900              		.cfi_def_cfa_offset 24
 26901 0004 00AF     		add	r7, sp, #0
 26902              		.cfi_def_cfa_register 7
3991:..\src/command_processing.c ****     //Retrieve Encoder map
3992:..\src/command_processing.c ****     
3993:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3994:..\src/command_processing.c ****     uint8 CYDATA i;
3995:..\src/command_processing.c ****     
3996:..\src/command_processing.c ****     // Header        
3997:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26903              		.loc 1 3997 0
 26904 0006 A523     		movs	r3, #165
 26905 0008 3B70     		strb	r3, [r7]
3998:..\src/command_processing.c ****     
3999:..\src/command_processing.c ****     // Fill payload
4000:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26906              		.loc 1 4000 0
 26907 000a 0C23     		movs	r3, #12
 26908 000c 7B70     		strb	r3, [r7, #1]
4001:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26909              		.loc 1 4001 0
 26910 000e 0023     		movs	r3, #0
 26911 0010 FB73     		strb	r3, [r7, #15]
 26912 0012 0EE0     		b	.L1054
 26913              	.L1055:
4002:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26914              		.loc 1 4002 0 discriminator 3
 26915 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26916 0016 0233     		adds	r3, r3, #2
 26917 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26918 001a 0F49     		ldr	r1, .L1056
 26919 001c 0A44     		add	r2, r2, r1
 26920 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 26921 0022 07F11001 		add	r1, r7, #16
 26922 0026 0B44     		add	r3, r3, r1
 26923 0028 03F8102C 		strb	r2, [r3, #-16]
4001:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26924              		.loc 1 4001 0 discriminator 3
 26925 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26926 002e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 588


 26927 0030 FB73     		strb	r3, [r7, #15]
 26928              	.L1054:
4001:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26929              		.loc 1 4001 0 is_stmt 0 discriminator 1
 26930 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26931 0034 0B2B     		cmp	r3, #11
 26932 0036 EDD9     		bls	.L1055
4003:..\src/command_processing.c ****     }
4004:..\src/command_processing.c ****     
4005:..\src/command_processing.c ****     // Calculate checksum
4006:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26933              		.loc 1 4006 0 is_stmt 1
 26934 0038 3B46     		mov	r3, r7
 26935 003a 0E21     		movs	r1, #14
 26936 003c 1846     		mov	r0, r3
 26937 003e FFF7FEFF 		bl	LCRChecksum
 26938 0042 0346     		mov	r3, r0
 26939 0044 BB73     		strb	r3, [r7, #14]
4007:..\src/command_processing.c ****     
4008:..\src/command_processing.c ****     // Send package to UART
4009:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26940              		.loc 1 4009 0
 26941 0046 3B46     		mov	r3, r7
 26942 0048 0F21     		movs	r1, #15
 26943 004a 1846     		mov	r0, r3
 26944 004c FFF7FEFF 		bl	commWrite
4010:..\src/command_processing.c ****     
4011:..\src/command_processing.c **** }
 26945              		.loc 1 4011 0
 26946 0050 00BF     		nop
 26947 0052 1037     		adds	r7, r7, #16
 26948              		.cfi_def_cfa_offset 8
 26949 0054 BD46     		mov	sp, r7
 26950              		.cfi_def_cfa_register 13
 26951              		@ sp needed
 26952 0056 80BD     		pop	{r7, pc}
 26953              	.L1057:
 26954              		.align	2
 26955              	.L1056:
 26956 0058 00000000 		.word	c_mem
 26957              		.cfi_endproc
 26958              	.LFE112:
 26959              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 26960              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26961              		.align	2
 26962              		.global	cmd_get_ADC_raw
 26963              		.thumb
 26964              		.thumb_func
 26965              		.type	cmd_get_ADC_raw, %function
 26966              	cmd_get_ADC_raw:
 26967              	.LFB113:
4012:..\src/command_processing.c **** 
4013:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 26968              		.loc 1 4013 0
 26969              		.cfi_startproc
 26970              		@ args = 0, pretend = 0, frame = 32
 26971              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 589


 26972 0000 90B5     		push	{r4, r7, lr}
 26973              		.cfi_def_cfa_offset 12
 26974              		.cfi_offset 4, -12
 26975              		.cfi_offset 7, -8
 26976              		.cfi_offset 14, -4
 26977 0002 89B0     		sub	sp, sp, #36
 26978              		.cfi_def_cfa_offset 48
 26979 0004 00AF     		add	r7, sp, #0
 26980              		.cfi_def_cfa_register 7
4014:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4015:..\src/command_processing.c ****     
4016:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4017:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26981              		.loc 1 4017 0
 26982 0006 0023     		movs	r3, #0
 26983 0008 BB77     		strb	r3, [r7, #30]
4018:..\src/command_processing.c ****     int16 aux_int16;
4019:..\src/command_processing.c ****     
4020:..\src/command_processing.c ****     // Header        
4021:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 26984              		.loc 1 4021 0
 26985 000a A623     		movs	r3, #166
 26986 000c 3B71     		strb	r3, [r7, #4]
4022:..\src/command_processing.c ****     
4023:..\src/command_processing.c ****     // Fill payload
4024:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 26987              		.loc 1 4024 0
 26988 000e 0023     		movs	r3, #0
 26989 0010 FB77     		strb	r3, [r7, #31]
 26990 0012 27E0     		b	.L1059
 26991              	.L1061:
4025:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26992              		.loc 1 4025 0
 26993 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26994 0016 274A     		ldr	r2, .L1062
 26995 0018 1344     		add	r3, r3, r2
 26996 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 26997 001e 012B     		cmp	r3, #1
 26998 0020 1DD1     		bne	.L1060
4026:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 26999              		.loc 1 4026 0
 27000 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27001 0024 244A     		ldr	r2, .L1062+4
 27002 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 27003 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4027:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 27004              		.loc 1 4027 0
 27005 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27006 002e 5B00     		lsls	r3, r3, #1
 27007 0030 0233     		adds	r3, r3, #2
 27008 0032 BA1C     		adds	r2, r7, #2
 27009 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27010 0036 07F12001 		add	r1, r7, #32
 27011 003a 0B44     		add	r3, r3, r1
 27012 003c 03F81C2C 		strb	r2, [r3, #-28]
4028:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 27013              		.loc 1 4028 0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 590


 27014 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27015 0042 5B00     		lsls	r3, r3, #1
 27016 0044 5A1C     		adds	r2, r3, #1
 27017 0046 BB1C     		adds	r3, r7, #2
 27018 0048 0133     		adds	r3, r3, #1
 27019 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 27020 004c 07F12003 		add	r3, r7, #32
 27021 0050 1344     		add	r3, r3, r2
 27022 0052 0A46     		mov	r2, r1
 27023 0054 03F81C2C 		strb	r2, [r3, #-28]
4029:..\src/command_processing.c ****             idx++;
 27024              		.loc 1 4029 0
 27025 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27026 005a 0133     		adds	r3, r3, #1
 27027 005c BB77     		strb	r3, [r7, #30]
 27028              	.L1060:
4024:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27029              		.loc 1 4024 0 discriminator 2
 27030 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27031 0060 0133     		adds	r3, r3, #1
 27032 0062 FB77     		strb	r3, [r7, #31]
 27033              	.L1059:
4024:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27034              		.loc 1 4024 0 is_stmt 0 discriminator 1
 27035 0064 154B     		ldr	r3, .L1062+8
 27036 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27037 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 27038 006a 9A42     		cmp	r2, r3
 27039 006c D2D3     		bcc	.L1061
4030:..\src/command_processing.c ****         }
4031:..\src/command_processing.c ****     }
4032:..\src/command_processing.c **** 
4033:..\src/command_processing.c ****     // Calculate checksum
4034:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 27040              		.loc 1 4034 0 is_stmt 1
 27041 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27042 0070 5B00     		lsls	r3, r3, #1
 27043 0072 5C1C     		adds	r4, r3, #1
 27044 0074 BB7F     		ldrb	r3, [r7, #30]
 27045 0076 5B00     		lsls	r3, r3, #1
 27046 0078 DBB2     		uxtb	r3, r3
 27047 007a 0133     		adds	r3, r3, #1
 27048 007c DAB2     		uxtb	r2, r3
 27049 007e 3B1D     		adds	r3, r7, #4
 27050 0080 1146     		mov	r1, r2
 27051 0082 1846     		mov	r0, r3
 27052 0084 FFF7FEFF 		bl	LCRChecksum
 27053 0088 0346     		mov	r3, r0
 27054 008a 1A46     		mov	r2, r3
 27055 008c 07F12003 		add	r3, r7, #32
 27056 0090 2344     		add	r3, r3, r4
 27057 0092 03F81C2C 		strb	r2, [r3, #-28]
4035:..\src/command_processing.c ****     
4036:..\src/command_processing.c ****     // Send package to UART
4037:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 27058              		.loc 1 4037 0
 27059 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 591


 27060 0098 0133     		adds	r3, r3, #1
 27061 009a 9BB2     		uxth	r3, r3
 27062 009c 5B00     		lsls	r3, r3, #1
 27063 009e 9AB2     		uxth	r2, r3
 27064 00a0 3B1D     		adds	r3, r7, #4
 27065 00a2 1146     		mov	r1, r2
 27066 00a4 1846     		mov	r0, r3
 27067 00a6 FFF7FEFF 		bl	commWrite
4038:..\src/command_processing.c **** }
 27068              		.loc 1 4038 0
 27069 00aa 00BF     		nop
 27070 00ac 2437     		adds	r7, r7, #36
 27071              		.cfi_def_cfa_offset 12
 27072 00ae BD46     		mov	sp, r7
 27073              		.cfi_def_cfa_register 13
 27074              		@ sp needed
 27075 00b0 90BD     		pop	{r4, r7, pc}
 27076              	.L1063:
 27077 00b2 00BF     		.align	2
 27078              	.L1062:
 27079 00b4 00000000 		.word	c_mem
 27080 00b8 00000000 		.word	ADC_buf
 27081 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 27082              		.cfi_endproc
 27083              	.LFE113:
 27084              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 27085              		.section	.rodata
 27086 1fef 00       		.align	2
 27087              	.LC310:
 27088 1ff0 00       		.ascii	"\000"
 27089              		.section	.text.cmd_get_SD_file,"ax",%progbits
 27090              		.align	2
 27091              		.global	cmd_get_SD_file
 27092              		.thumb
 27093              		.thumb_func
 27094              		.type	cmd_get_SD_file, %function
 27095              	cmd_get_SD_file:
 27096              	.LFB114:
4039:..\src/command_processing.c **** 
4040:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 27097              		.loc 1 4040 0
 27098              		.cfi_startproc
 27099              		@ args = 0, pretend = 0, frame = 20064
 27100              		@ frame_needed = 1, uses_anonymous_args = 0
 27101 0000 80B5     		push	{r7, lr}
 27102              		.cfi_def_cfa_offset 8
 27103              		.cfi_offset 7, -8
 27104              		.cfi_offset 14, -4
 27105 0002 ADF59C4D 		sub	sp, sp, #19968
 27106              		.cfi_def_cfa_offset 19976
 27107 0006 98B0     		sub	sp, sp, #96
 27108              		.cfi_def_cfa_offset 20072
 27109 0008 00AF     		add	r7, sp, #0
 27110              		.cfi_def_cfa_register 7
 27111 000a 0246     		mov	r2, r0
 27112 000c 07F16003 		add	r3, r7, #96
 27113 0010 5A3B     		subs	r3, r3, #90
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 592


 27114 0012 1A80     		strh	r2, [r3]	@ movhi
4041:..\src/command_processing.c ****     
4042:..\src/command_processing.c ****     uint8 i = 0;
 27115              		.loc 1 4042 0
 27116 0014 0023     		movs	r3, #0
 27117 0016 07F59C42 		add	r2, r7, #19968
 27118 001a 02F15F02 		add	r2, r2, #95
 27119 001e 1370     		strb	r3, [r2]
4043:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27120              		.loc 1 4043 0
 27121 0020 0023     		movs	r3, #0
 27122 0022 07F59C42 		add	r2, r7, #19968
 27123 0026 02F12C02 		add	r2, r2, #44
 27124 002a 1360     		str	r3, [r2]
 27125 002c 07F59C43 		add	r3, r7, #19968
 27126 0030 03F13003 		add	r3, r3, #48
 27127 0034 2E22     		movs	r2, #46
 27128 0036 0021     		movs	r1, #0
 27129 0038 1846     		mov	r0, r3
 27130 003a FFF7FEFF 		bl	memset
4044:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 27131              		.loc 1 4044 0
 27132 003e 07F16003 		add	r3, r7, #96
 27133 0042 543B     		subs	r3, r3, #84
 27134 0044 0022     		movs	r2, #0
 27135 0046 1A60     		str	r2, [r3]
 27136 0048 0433     		adds	r3, r3, #4
 27137 004a 44F61C62 		movw	r2, #19996
 27138 004e 0021     		movs	r1, #0
 27139 0050 1846     		mov	r0, r3
 27140 0052 FFF7FEFF 		bl	memset
4045:..\src/command_processing.c ****     strcpy(filename, "");
 27141              		.loc 1 4045 0
 27142 0056 3C4B     		ldr	r3, .L1069
 27143 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27144 005a 07F59C42 		add	r2, r7, #19968
 27145 005e 02F12C02 		add	r2, r2, #44
 27146 0062 1370     		strb	r3, [r2]
4046:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 27147              		.loc 1 4046 0
 27148 0064 384B     		ldr	r3, .L1069
 27149 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27150 0068 07F16003 		add	r3, r7, #96
 27151 006c 543B     		subs	r3, r3, #84
 27152 006e 1A70     		strb	r2, [r3]
4047:..\src/command_processing.c ****     
4048:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27153              		.loc 1 4048 0
 27154 0070 0023     		movs	r3, #0
 27155 0072 07F59C42 		add	r2, r7, #19968
 27156 0076 02F15F02 		add	r2, r2, #95
 27157 007a 1370     		strb	r3, [r2]
 27158 007c 1DE0     		b	.L1065
 27159              	.L1066:
4049:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27160              		.loc 1 4049 0 discriminator 3
 27161 007e 07F59C43 		add	r3, r7, #19968
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 593


 27162 0082 03F15F03 		add	r3, r3, #95
 27163 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27164 0088 07F59C42 		add	r2, r7, #19968
 27165 008c 02F12C02 		add	r2, r2, #44
 27166 0090 1344     		add	r3, r3, r2
 27167 0092 07F59C42 		add	r2, r7, #19968
 27168 0096 02F15F02 		add	r2, r2, #95
 27169 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27170 009c 0332     		adds	r2, r2, #3
 27171 009e 2B49     		ldr	r1, .L1069+4
 27172 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27173 00a2 1A70     		strb	r2, [r3]
4048:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27174              		.loc 1 4048 0 discriminator 3
 27175 00a4 07F59C43 		add	r3, r7, #19968
 27176 00a8 03F15F03 		add	r3, r3, #95
 27177 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27178 00ae 0133     		adds	r3, r3, #1
 27179 00b0 07F59C42 		add	r2, r7, #19968
 27180 00b4 02F15F02 		add	r2, r2, #95
 27181 00b8 1370     		strb	r3, [r2]
 27182              	.L1065:
4048:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27183              		.loc 1 4048 0 is_stmt 0 discriminator 1
 27184 00ba 07F59C43 		add	r3, r7, #19968
 27185 00be 03F15F03 		add	r3, r3, #95
 27186 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27187 00c4 9AB2     		uxth	r2, r3
 27188 00c6 07F16003 		add	r3, r7, #96
 27189 00ca 5A3B     		subs	r3, r3, #90
 27190 00cc 1B88     		ldrh	r3, [r3]
 27191 00ce 9342     		cmp	r3, r2
 27192 00d0 D5D8     		bhi	.L1066
4050:..\src/command_processing.c ****     }
4051:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27193              		.loc 1 4051 0 is_stmt 1
 27194 00d2 07F59C43 		add	r3, r7, #19968
 27195 00d6 03F15F03 		add	r3, r3, #95
 27196 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27197 00dc 07F59C42 		add	r2, r7, #19968
 27198 00e0 02F12C02 		add	r2, r2, #44
 27199 00e4 1344     		add	r3, r3, r2
 27200 00e6 0022     		movs	r2, #0
 27201 00e8 1A70     		strb	r2, [r3]
4052:..\src/command_processing.c ****      
4053:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4054:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27202              		.loc 1 4054 0
 27203 00ea 07F59C43 		add	r3, r7, #19968
 27204 00ee 03F12C03 		add	r3, r3, #44
 27205 00f2 1749     		ldr	r1, .L1069+8
 27206 00f4 1846     		mov	r0, r3
 27207 00f6 FFF7FEFF 		bl	strcmp
 27208 00fa 0346     		mov	r3, r0
 27209 00fc 002B     		cmp	r3, #0
 27210 00fe 0CD0     		beq	.L1067
4055:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 594


 27211              		.loc 1 4055 0
 27212 0100 07F16003 		add	r3, r7, #96
 27213 0104 543B     		subs	r3, r3, #84
 27214 0106 07F59C40 		add	r0, r7, #19968
 27215 010a 00F12C00 		add	r0, r0, #44
 27216 010e 44F62062 		movw	r2, #20000
 27217 0112 1946     		mov	r1, r3
 27218 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27219 0118 07E0     		b	.L1068
 27220              	.L1067:
4056:..\src/command_processing.c ****     }
4057:..\src/command_processing.c ****     else {
4058:..\src/command_processing.c ****         //It is the currently open working file
4059:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27221              		.loc 1 4059 0
 27222 011a 07F16003 		add	r3, r7, #96
 27223 011e 543B     		subs	r3, r3, #84
 27224 0120 44F62061 		movw	r1, #20000
 27225 0124 1846     		mov	r0, r3
 27226 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27227              	.L1068:
4060:..\src/command_processing.c ****     }
4061:..\src/command_processing.c **** 
4062:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4063:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4064:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27228              		.loc 1 4064 0
 27229 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4065:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27230              		.loc 1 4065 0
 27231 012e 07F16003 		add	r3, r7, #96
 27232 0132 543B     		subs	r3, r3, #84
 27233 0134 1846     		mov	r0, r3
 27234 0136 FFF7FEFF 		bl	UART_RS485_PutString
4066:..\src/command_processing.c **** }
 27235              		.loc 1 4066 0
 27236 013a 00BF     		nop
 27237 013c 07F59C47 		add	r7, r7, #19968
 27238 0140 6037     		adds	r7, r7, #96
 27239              		.cfi_def_cfa_offset 8
 27240 0142 BD46     		mov	sp, r7
 27241              		.cfi_def_cfa_register 13
 27242              		@ sp needed
 27243 0144 80BD     		pop	{r7, pc}
 27244              	.L1070:
 27245 0146 00BF     		.align	2
 27246              	.L1069:
 27247 0148 F01F0000 		.word	.LC310
 27248 014c 00000000 		.word	g_rx
 27249 0150 00000000 		.word	sdFile
 27250              		.cfi_endproc
 27251              	.LFE114:
 27252              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 27253              		.section	.text.air_chambers_control,"ax",%progbits
 27254              		.align	2
 27255              		.global	air_chambers_control
 27256              		.thumb
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 595


 27257              		.thumb_func
 27258              		.type	air_chambers_control, %function
 27259              	air_chambers_control:
 27260              	.LFB115:
4067:..\src/command_processing.c **** 
4068:..\src/command_processing.c **** //==============================================================================
4069:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4070:..\src/command_processing.c **** //==============================================================================
4071:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4072:..\src/command_processing.c **** 
4073:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 27261              		.loc 1 4073 0
 27262              		.cfi_startproc
 27263              		@ args = 0, pretend = 0, frame = 8
 27264              		@ frame_needed = 1, uses_anonymous_args = 0
 27265              		@ link register save eliminated.
 27266 0000 80B4     		push	{r7}
 27267              		.cfi_def_cfa_offset 4
 27268              		.cfi_offset 7, -4
 27269 0002 83B0     		sub	sp, sp, #12
 27270              		.cfi_def_cfa_offset 16
 27271 0004 00AF     		add	r7, sp, #0
 27272              		.cfi_def_cfa_register 7
 27273 0006 7860     		str	r0, [r7, #4]
4074:..\src/command_processing.c ****     
4075:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4076:..\src/command_processing.c ****     
4077:..\src/command_processing.c ****     int16 curr_diff;
4078:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4079:..\src/command_processing.c ****     int32 valve_command;
4080:..\src/command_processing.c ****     int16 x_value;
4081:..\src/command_processing.c **** 
4082:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4083:..\src/command_processing.c ****     
4084:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4085:..\src/command_processing.c ****     
4086:..\src/command_processing.c ****     // Current difference saturation old mapping
4087:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4088:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4089:..\src/command_processing.c **** //    }
4090:..\src/command_processing.c **** //    if(curr_diff < 0) {
4091:..\src/command_processing.c **** //        curr_diff = 0;
4092:..\src/command_processing.c **** //    }
4093:..\src/command_processing.c **** 
4094:..\src/command_processing.c ****     // Compute pressure reference
4095:..\src/command_processing.c **** 
4096:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4097:..\src/command_processing.c ****     if (x_value < 0)
4098:..\src/command_processing.c ****         x_value = 0;
4099:..\src/command_processing.c ****     
4100:..\src/command_processing.c ****     // old mapping --- linear mapping
4101:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4102:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4103:..\src/command_processing.c ****     if (pressure_reference < 0)
4104:..\src/command_processing.c ****         pressure_reference = 0;
4105:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4106:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 596


4107:..\src/command_processing.c ****     
4108:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4109:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4110:..\src/command_processing.c **** //    if (err_pressure < 0){
4111:..\src/command_processing.c **** //        err_pressure = 0;
4112:..\src/command_processing.c **** //    }
4113:..\src/command_processing.c ****     
4114:..\src/command_processing.c ****     if (x_value <= 0){
4115:..\src/command_processing.c ****         //i.e the hand is opening
4116:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4117:..\src/command_processing.c ****     }
4118:..\src/command_processing.c ****     else {
4119:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4120:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4121:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4122:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4123:..\src/command_processing.c ****     }
4124:..\src/command_processing.c ****     
4125:..\src/command_processing.c ****     // Pump control
4126:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4127:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4128:..\src/command_processing.c ****     
4129:..\src/command_processing.c ****     // Limit output voltage
4130:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4131:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4132:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4133:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4134:..\src/command_processing.c ****         
4135:..\src/command_processing.c ****     VALVE_Write(valve_command);
4136:..\src/command_processing.c ****     
4137:..\src/command_processing.c ****     
4138:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4139:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4140:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4141:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4142:..\src/command_processing.c **** #endif
4143:..\src/command_processing.c **** }
 27274              		.loc 1 4143 0
 27275 0008 00BF     		nop
 27276 000a 0C37     		adds	r7, r7, #12
 27277              		.cfi_def_cfa_offset 4
 27278 000c BD46     		mov	sp, r7
 27279              		.cfi_def_cfa_register 13
 27280              		@ sp needed
 27281 000e 80BC     		pop	{r7}
 27282              		.cfi_restore 7
 27283              		.cfi_def_cfa_offset 0
 27284 0010 7047     		bx	lr
 27285              		.cfi_endproc
 27286              	.LFE115:
 27287              		.size	air_chambers_control, .-air_chambers_control
 27288 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27289              		.align	2
 27290              		.global	emg_activation_velocity_fsm
 27291              		.thumb
 27292              		.thumb_func
 27293              		.type	emg_activation_velocity_fsm, %function
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 597


 27294              	emg_activation_velocity_fsm:
 27295              	.LFB116:
4144:..\src/command_processing.c **** 
4145:..\src/command_processing.c **** 
4146:..\src/command_processing.c **** //==============================================================================
4147:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4148:..\src/command_processing.c **** //==============================================================================
4149:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4150:..\src/command_processing.c **** 
4151:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27296              		.loc 1 4151 0
 27297              		.cfi_startproc
 27298              		@ args = 0, pretend = 0, frame = 16
 27299              		@ frame_needed = 1, uses_anonymous_args = 0
 27300              		@ link register save eliminated.
 27301 0000 80B4     		push	{r7}
 27302              		.cfi_def_cfa_offset 4
 27303              		.cfi_offset 7, -4
 27304 0002 85B0     		sub	sp, sp, #20
 27305              		.cfi_def_cfa_offset 24
 27306 0004 00AF     		add	r7, sp, #0
 27307              		.cfi_def_cfa_register 7
4152:..\src/command_processing.c ****       
4153:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4154:..\src/command_processing.c ****     static int32 cnt = 0;
4155:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4156:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4157:..\src/command_processing.c ****     
4158:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27308              		.loc 1 4158 0
 27309 0006 534B     		ldr	r3, .L1101
 27310 0008 1B68     		ldr	r3, [r3]
 27311 000a 534A     		ldr	r2, .L1101+4
 27312 000c B2F8F021 		ldrh	r2, [r2, #496]
 27313 0010 9B1A     		subs	r3, r3, r2
 27314 0012 FB60     		str	r3, [r7, #12]
4159:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27315              		.loc 1 4159 0
 27316 0014 4F4B     		ldr	r3, .L1101
 27317 0016 5B68     		ldr	r3, [r3, #4]
 27318 0018 4F4A     		ldr	r2, .L1101+4
 27319 001a B2F8F221 		ldrh	r2, [r2, #498]
 27320 001e 9B1A     		subs	r3, r3, r2
 27321 0020 BB60     		str	r3, [r7, #8]
4160:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27322              		.loc 1 4160 0
 27323 0022 4C4B     		ldr	r3, .L1101
 27324 0024 1B68     		ldr	r3, [r3]
 27325 0026 4C4A     		ldr	r2, .L1101+4
 27326 0028 B2F8E222 		ldrh	r2, [r2, #738]
 27327 002c 9B1A     		subs	r3, r3, r2
 27328 002e 7B60     		str	r3, [r7, #4]
4161:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27329              		.loc 1 4161 0
 27330 0030 484B     		ldr	r3, .L1101
 27331 0032 5B68     		ldr	r3, [r3, #4]
 27332 0034 484A     		ldr	r2, .L1101+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 598


 27333 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27334 003a 9B1A     		subs	r3, r3, r2
 27335 003c 3B60     		str	r3, [r7]
4162:..\src/command_processing.c ****     
4163:..\src/command_processing.c **** 
4164:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4165:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4166:..\src/command_processing.c ****     switch (fsm_state){
 27336              		.loc 1 4166 0
 27337 003e 474B     		ldr	r3, .L1101+8
 27338 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27339 0042 032B     		cmp	r3, #3
 27340 0044 7FD8     		bhi	.L1073
 27341 0046 01A2     		adr	r2, .L1075
 27342 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27343              		.p2align 2
 27344              	.L1075:
 27345 004c 5D000000 		.word	.L1074+1
 27346 0050 71000000 		.word	.L1076+1
 27347 0054 11010000 		.word	.L1077+1
 27348 0058 25010000 		.word	.L1078+1
 27349              		.p2align 1
 27350              	.L1074:
4167:..\src/command_processing.c ****         case RELAX_STATE:
4168:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27351              		.loc 1 4168 0
 27352 005c FB68     		ldr	r3, [r7, #12]
 27353 005e 002B     		cmp	r3, #0
 27354 0060 02DC     		bgt	.L1079
 27355              		.loc 1 4168 0 is_stmt 0 discriminator 1
 27356 0062 BB68     		ldr	r3, [r7, #8]
 27357 0064 002B     		cmp	r3, #0
 27358 0066 67DD     		ble	.L1097
 27359              	.L1079:
4169:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27360              		.loc 1 4169 0 is_stmt 1
 27361 0068 3C4B     		ldr	r3, .L1101+8
 27362 006a 0122     		movs	r2, #1
 27363 006c 1A70     		strb	r2, [r3]
4170:..\src/command_processing.c ****             }
4171:..\src/command_processing.c ****             
4172:..\src/command_processing.c ****             break;
 27364              		.loc 1 4172 0
 27365 006e 63E0     		b	.L1097
 27366              	.L1076:
4173:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4174:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27367              		.loc 1 4174 0
 27368 0070 FB68     		ldr	r3, [r7, #12]
 27369 0072 002B     		cmp	r3, #0
 27370 0074 02DC     		bgt	.L1081
 27371              		.loc 1 4174 0 is_stmt 0 discriminator 1
 27372 0076 BB68     		ldr	r3, [r7, #8]
 27373 0078 002B     		cmp	r3, #0
 27374 007a 05DD     		ble	.L1082
 27375              	.L1081:
4175:..\src/command_processing.c ****                 cnt = cnt +1;
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 599


 27376              		.loc 1 4175 0 is_stmt 1
 27377 007c 384B     		ldr	r3, .L1101+12
 27378 007e 1B68     		ldr	r3, [r3]
 27379 0080 0133     		adds	r3, r3, #1
 27380 0082 374A     		ldr	r2, .L1101+12
 27381 0084 1360     		str	r3, [r2]
 27382 0086 02E0     		b	.L1083
 27383              	.L1082:
4176:..\src/command_processing.c ****             }
4177:..\src/command_processing.c ****             else {
4178:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27384              		.loc 1 4178 0
 27385 0088 344B     		ldr	r3, .L1101+8
 27386 008a 0022     		movs	r2, #0
 27387 008c 1A70     		strb	r2, [r3]
 27388              	.L1083:
4179:..\src/command_processing.c ****             }
4180:..\src/command_processing.c ****             
4181:..\src/command_processing.c ****             if (cnt > 100){
 27389              		.loc 1 4181 0
 27390 008e 344B     		ldr	r3, .L1101+12
 27391 0090 1B68     		ldr	r3, [r3]
 27392 0092 642B     		cmp	r3, #100
 27393 0094 52DD     		ble	.L1098
4182:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27394              		.loc 1 4182 0
 27395 0096 FB68     		ldr	r3, [r7, #12]
 27396 0098 002B     		cmp	r3, #0
 27397 009a 02DD     		ble	.L1085
 27398              		.loc 1 4182 0 is_stmt 0 discriminator 1
 27399 009c 7B68     		ldr	r3, [r7, #4]
 27400 009e 002B     		cmp	r3, #0
 27401 00a0 05DC     		bgt	.L1086
 27402              	.L1085:
 27403              		.loc 1 4182 0 discriminator 3
 27404 00a2 BB68     		ldr	r3, [r7, #8]
 27405 00a4 002B     		cmp	r3, #0
 27406 00a6 0EDD     		ble	.L1087
 27407              		.loc 1 4182 0 discriminator 4
 27408 00a8 3B68     		ldr	r3, [r7]
 27409 00aa 002B     		cmp	r3, #0
 27410 00ac 0BDD     		ble	.L1087
 27411              	.L1086:
4183:..\src/command_processing.c ****                     // Fast activation
4184:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27412              		.loc 1 4184 0 is_stmt 1
 27413 00ae 2A4B     		ldr	r3, .L1101+4
 27414 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27415 00b4 002B     		cmp	r3, #0
 27416 00b6 03D1     		bne	.L1088
4185:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27417              		.loc 1 4185 0
 27418 00b8 284B     		ldr	r3, .L1101+8
 27419 00ba 0222     		movs	r2, #2
 27420 00bc 1A70     		strb	r2, [r3]
 27421 00be 02E0     		b	.L1087
 27422              	.L1088:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 600


4186:..\src/command_processing.c ****                     }
4187:..\src/command_processing.c ****                     else{
4188:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27423              		.loc 1 4188 0
 27424 00c0 264B     		ldr	r3, .L1101+8
 27425 00c2 0322     		movs	r2, #3
 27426 00c4 1A70     		strb	r2, [r3]
 27427              	.L1087:
4189:..\src/command_processing.c ****                     }
4190:..\src/command_processing.c ****                 }
4191:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27428              		.loc 1 4191 0
 27429 00c6 FB68     		ldr	r3, [r7, #12]
 27430 00c8 002B     		cmp	r3, #0
 27431 00ca 02DD     		ble	.L1089
 27432              		.loc 1 4191 0 is_stmt 0 discriminator 1
 27433 00cc 7B68     		ldr	r3, [r7, #4]
 27434 00ce 002B     		cmp	r3, #0
 27435 00d0 05DB     		blt	.L1090
 27436              	.L1089:
 27437              		.loc 1 4191 0 discriminator 3
 27438 00d2 BB68     		ldr	r3, [r7, #8]
 27439 00d4 002B     		cmp	r3, #0
 27440 00d6 0EDD     		ble	.L1091
 27441              		.loc 1 4191 0 discriminator 4
 27442 00d8 3B68     		ldr	r3, [r7]
 27443 00da 002B     		cmp	r3, #0
 27444 00dc 0BDA     		bge	.L1091
 27445              	.L1090:
4192:..\src/command_processing.c ****                     // Slow activation
4193:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27446              		.loc 1 4193 0 is_stmt 1
 27447 00de 1E4B     		ldr	r3, .L1101+4
 27448 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27449 00e4 002B     		cmp	r3, #0
 27450 00e6 03D1     		bne	.L1092
4194:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27451              		.loc 1 4194 0
 27452 00e8 1C4B     		ldr	r3, .L1101+8
 27453 00ea 0322     		movs	r2, #3
 27454 00ec 1A70     		strb	r2, [r3]
 27455 00ee 02E0     		b	.L1091
 27456              	.L1092:
4195:..\src/command_processing.c ****                     }
4196:..\src/command_processing.c ****                     else{
4197:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27457              		.loc 1 4197 0
 27458 00f0 1A4B     		ldr	r3, .L1101+8
 27459 00f2 0222     		movs	r2, #2
 27460 00f4 1A70     		strb	r2, [r3]
 27461              	.L1091:
4198:..\src/command_processing.c ****                     }
4199:..\src/command_processing.c ****                 }
4200:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 27462              		.loc 1 4200 0
 27463 00f6 FB68     		ldr	r3, [r7, #12]
 27464 00f8 002B     		cmp	r3, #0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 601


 27465 00fa 05DA     		bge	.L1093
 27466              		.loc 1 4200 0 is_stmt 0 discriminator 1
 27467 00fc BB68     		ldr	r3, [r7, #8]
 27468 00fe 002B     		cmp	r3, #0
 27469 0100 02DA     		bge	.L1093
4201:..\src/command_processing.c ****                     // Involuntary activation
4202:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 27470              		.loc 1 4202 0 is_stmt 1
 27471 0102 164B     		ldr	r3, .L1101+8
 27472 0104 0022     		movs	r2, #0
 27473 0106 1A70     		strb	r2, [r3]
 27474              	.L1093:
4203:..\src/command_processing.c ****                 }
4204:..\src/command_processing.c ****                 cnt = 0;
 27475              		.loc 1 4204 0
 27476 0108 154B     		ldr	r3, .L1101+12
 27477 010a 0022     		movs	r2, #0
 27478 010c 1A60     		str	r2, [r3]
4205:..\src/command_processing.c ****             }
4206:..\src/command_processing.c ****     
4207:..\src/command_processing.c ****             break;
 27479              		.loc 1 4207 0
 27480 010e 15E0     		b	.L1098
 27481              	.L1077:
4208:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4209:..\src/command_processing.c ****             
4210:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27482              		.loc 1 4210 0
 27483 0110 FB68     		ldr	r3, [r7, #12]
 27484 0112 002B     		cmp	r3, #0
 27485 0114 14DA     		bge	.L1099
 27486              		.loc 1 4210 0 is_stmt 0 discriminator 1
 27487 0116 BB68     		ldr	r3, [r7, #8]
 27488 0118 002B     		cmp	r3, #0
 27489 011a 11DA     		bge	.L1099
4211:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27490              		.loc 1 4211 0 is_stmt 1
 27491 011c 0F4B     		ldr	r3, .L1101+8
 27492 011e 0022     		movs	r2, #0
 27493 0120 1A70     		strb	r2, [r3]
4212:..\src/command_processing.c ****             }
4213:..\src/command_processing.c ****         
4214:..\src/command_processing.c ****             break;
 27494              		.loc 1 4214 0
 27495 0122 0DE0     		b	.L1099
 27496              	.L1078:
4215:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4216:..\src/command_processing.c ****           
4217:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27497              		.loc 1 4217 0
 27498 0124 FB68     		ldr	r3, [r7, #12]
 27499 0126 002B     		cmp	r3, #0
 27500 0128 0CDA     		bge	.L1100
 27501              		.loc 1 4217 0 is_stmt 0 discriminator 1
 27502 012a BB68     		ldr	r3, [r7, #8]
 27503 012c 002B     		cmp	r3, #0
 27504 012e 09DA     		bge	.L1100
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 602


4218:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27505              		.loc 1 4218 0 is_stmt 1
 27506 0130 0A4B     		ldr	r3, .L1101+8
 27507 0132 0022     		movs	r2, #0
 27508 0134 1A70     		strb	r2, [r3]
4219:..\src/command_processing.c ****             }
4220:..\src/command_processing.c ****             
4221:..\src/command_processing.c ****             break;
 27509              		.loc 1 4221 0
 27510 0136 05E0     		b	.L1100
 27511              	.L1097:
4172:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 27512              		.loc 1 4172 0
 27513 0138 00BF     		nop
 27514 013a 04E0     		b	.L1073
 27515              	.L1098:
4207:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 27516              		.loc 1 4207 0
 27517 013c 00BF     		nop
 27518 013e 02E0     		b	.L1073
 27519              	.L1099:
4214:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 27520              		.loc 1 4214 0
 27521 0140 00BF     		nop
 27522 0142 00E0     		b	.L1073
 27523              	.L1100:
 27524              		.loc 1 4221 0
 27525 0144 00BF     		nop
 27526              	.L1073:
4222:..\src/command_processing.c ****     }
4223:..\src/command_processing.c ****     
4224:..\src/command_processing.c ****     return fsm_state;
 27527              		.loc 1 4224 0
 27528 0146 054B     		ldr	r3, .L1101+8
 27529 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4225:..\src/command_processing.c **** 
4226:..\src/command_processing.c **** }
 27530              		.loc 1 4226 0
 27531 014a 1846     		mov	r0, r3
 27532 014c 1437     		adds	r7, r7, #20
 27533              		.cfi_def_cfa_offset 4
 27534 014e BD46     		mov	sp, r7
 27535              		.cfi_def_cfa_register 13
 27536              		@ sp needed
 27537 0150 80BC     		pop	{r7}
 27538              		.cfi_restore 7
 27539              		.cfi_def_cfa_offset 0
 27540 0152 7047     		bx	lr
 27541              	.L1102:
 27542              		.align	2
 27543              	.L1101:
 27544 0154 00000000 		.word	g_adc_meas
 27545 0158 00000000 		.word	c_mem
 27546 015c 0C000000 		.word	fsm_state.11534
 27547 0160 10000000 		.word	cnt.11535
 27548              		.cfi_endproc
 27549              	.LFE116:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 603


 27550              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 27551              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 27552              		.align	2
 27553              		.global	otbk_act_wrist_control
 27554              		.thumb
 27555              		.thumb_func
 27556              		.type	otbk_act_wrist_control, %function
 27557              	otbk_act_wrist_control:
 27558              	.LFB117:
4227:..\src/command_processing.c **** 
4228:..\src/command_processing.c **** //==============================================================================
4229:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4230:..\src/command_processing.c **** //==============================================================================
4231:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4232:..\src/command_processing.c **** 
4233:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 27559              		.loc 1 4233 0
 27560              		.cfi_startproc
 27561              		@ args = 0, pretend = 0, frame = 8
 27562              		@ frame_needed = 1, uses_anonymous_args = 0
 27563              		@ link register save eliminated.
 27564 0000 80B4     		push	{r7}
 27565              		.cfi_def_cfa_offset 4
 27566              		.cfi_offset 7, -4
 27567 0002 83B0     		sub	sp, sp, #12
 27568              		.cfi_def_cfa_offset 16
 27569 0004 00AF     		add	r7, sp, #0
 27570              		.cfi_def_cfa_register 7
 27571 0006 7860     		str	r0, [r7, #4]
4234:..\src/command_processing.c ****     
4235:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4236:..\src/command_processing.c ****     
4237:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4238:..\src/command_processing.c ****         
4239:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4240:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4241:..\src/command_processing.c ****     switch (fsm_state){
4242:..\src/command_processing.c ****         case RELAX_STATE:
4243:..\src/command_processing.c ****             
4244:..\src/command_processing.c ****             // Wrist stop
4245:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4246:..\src/command_processing.c ****             
4247:..\src/command_processing.c ****             // Softhand stop
4248:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4249:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4250:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4251:..\src/command_processing.c ****             
4252:..\src/command_processing.c ****             break;
4253:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4254:..\src/command_processing.c ****                 
4255:..\src/command_processing.c ****             break;
4256:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4257:..\src/command_processing.c ****             
4258:..\src/command_processing.c ****             // Wrist movement
4259:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4260:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4261:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 604


4262:..\src/command_processing.c ****                 }
4263:..\src/command_processing.c ****                 else {
4264:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4265:..\src/command_processing.c ****                 }
4266:..\src/command_processing.c ****             }
4267:..\src/command_processing.c ****             else {
4268:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4269:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4270:..\src/command_processing.c ****                 }
4271:..\src/command_processing.c ****                 else {
4272:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4273:..\src/command_processing.c ****                 }
4274:..\src/command_processing.c ****             }
4275:..\src/command_processing.c ****             
4276:..\src/command_processing.c ****             // Softhand stop
4277:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4278:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4279:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4280:..\src/command_processing.c ****             
4281:..\src/command_processing.c ****             break;
4282:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4283:..\src/command_processing.c ****             
4284:..\src/command_processing.c ****             // Wrist stop
4285:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4286:..\src/command_processing.c ****             
4287:..\src/command_processing.c ****             // SoftHand movement
4288:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4289:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4290:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4291:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4292:..\src/command_processing.c ****             
4293:..\src/command_processing.c ****             break;
4294:..\src/command_processing.c ****     }
4295:..\src/command_processing.c ****         
4296:..\src/command_processing.c ****     // Limit output voltage
4297:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4298:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4299:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4300:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4301:..\src/command_processing.c ****     
4302:..\src/command_processing.c **** #endif
4303:..\src/command_processing.c **** }
 27572              		.loc 1 4303 0
 27573 0008 00BF     		nop
 27574 000a 0C37     		adds	r7, r7, #12
 27575              		.cfi_def_cfa_offset 4
 27576 000c BD46     		mov	sp, r7
 27577              		.cfi_def_cfa_register 13
 27578              		@ sp needed
 27579 000e 80BC     		pop	{r7}
 27580              		.cfi_restore 7
 27581              		.cfi_def_cfa_offset 0
 27582 0010 7047     		bx	lr
 27583              		.cfi_endproc
 27584              	.LFE117:
 27585              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 27586 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 605


 27587              		.align	2
 27588              		.global	drive_slave
 27589              		.thumb
 27590              		.thumb_func
 27591              		.type	drive_slave, %function
 27592              	drive_slave:
 27593              	.LFB118:
4304:..\src/command_processing.c **** 
4305:..\src/command_processing.c **** //==============================================================================
4306:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4307:..\src/command_processing.c **** //==============================================================================
4308:..\src/command_processing.c ****  
4309:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 27594              		.loc 1 4309 0
 27595              		.cfi_startproc
 27596              		@ args = 0, pretend = 0, frame = 8
 27597              		@ frame_needed = 1, uses_anonymous_args = 0
 27598              		@ link register save eliminated.
 27599 0000 80B4     		push	{r7}
 27600              		.cfi_def_cfa_offset 4
 27601              		.cfi_offset 7, -4
 27602 0002 83B0     		sub	sp, sp, #12
 27603              		.cfi_def_cfa_offset 16
 27604 0004 00AF     		add	r7, sp, #0
 27605              		.cfi_def_cfa_register 7
 27606 0006 0346     		mov	r3, r0
 27607 0008 0A46     		mov	r2, r1
 27608 000a FB71     		strb	r3, [r7, #7]
 27609 000c 1346     		mov	r3, r2
 27610 000e BB71     		strb	r3, [r7, #6]
4310:..\src/command_processing.c **** 
4311:..\src/command_processing.c **** #ifdef MASTER_FW
4312:..\src/command_processing.c ****     uint8 packet_data[6];
4313:..\src/command_processing.c ****     uint8 packet_lenght;
4314:..\src/command_processing.c ****     int16 aux_int16;
4315:..\src/command_processing.c **** 
4316:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4317:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4318:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4319:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4320:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4321:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4322:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4323:..\src/command_processing.c ****         master_mode = 0;
4324:..\src/command_processing.c ****         return;
4325:..\src/command_processing.c ****     }
4326:..\src/command_processing.c ****         
4327:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4328:..\src/command_processing.c ****         master_mode = 0;
4329:..\src/command_processing.c ****         return;
4330:..\src/command_processing.c ****     }
4331:..\src/command_processing.c ****     
4332:..\src/command_processing.c ****        
4333:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4334:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4335:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4336:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 606


4337:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4338:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4339:..\src/command_processing.c ****     
4340:..\src/command_processing.c ****     packet_lenght = 6;
4341:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4342:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4343:..\src/command_processing.c **** 
4344:..\src/command_processing.c **** #endif
4345:..\src/command_processing.c **** }
 27611              		.loc 1 4345 0
 27612 0010 00BF     		nop
 27613 0012 0C37     		adds	r7, r7, #12
 27614              		.cfi_def_cfa_offset 4
 27615 0014 BD46     		mov	sp, r7
 27616              		.cfi_def_cfa_register 13
 27617              		@ sp needed
 27618 0016 80BC     		pop	{r7}
 27619              		.cfi_restore 7
 27620              		.cfi_def_cfa_offset 0
 27621 0018 7047     		bx	lr
 27622              		.cfi_endproc
 27623              	.LFE118:
 27624              		.size	drive_slave, .-drive_slave
 27625 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 27626              		.align	2
 27627              		.global	stop_master_device
 27628              		.thumb
 27629              		.thumb_func
 27630              		.type	stop_master_device, %function
 27631              	stop_master_device:
 27632              	.LFB119:
4346:..\src/command_processing.c **** 
4347:..\src/command_processing.c **** //==============================================================================
4348:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4349:..\src/command_processing.c **** //==============================================================================
4350:..\src/command_processing.c ****  
4351:..\src/command_processing.c **** void stop_master_device() {
 27633              		.loc 1 4351 0
 27634              		.cfi_startproc
 27635              		@ args = 0, pretend = 0, frame = 0
 27636              		@ frame_needed = 1, uses_anonymous_args = 0
 27637              		@ link register save eliminated.
 27638 0000 80B4     		push	{r7}
 27639              		.cfi_def_cfa_offset 4
 27640              		.cfi_offset 7, -4
 27641 0002 00AF     		add	r7, sp, #0
 27642              		.cfi_def_cfa_register 7
4352:..\src/command_processing.c ****     
4353:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4354:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4355:..\src/command_processing.c ****         // Stop pump and open valve
4356:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4357:..\src/command_processing.c ****         VALVE_Write(0);
4358:..\src/command_processing.c ****     }
4359:..\src/command_processing.c **** #endif
4360:..\src/command_processing.c **** 
4361:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 607


4362:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4363:..\src/command_processing.c ****         //Stop wrist motor
4364:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4365:..\src/command_processing.c ****     }
4366:..\src/command_processing.c **** #endif    
4367:..\src/command_processing.c **** }
 27643              		.loc 1 4367 0
 27644 0004 00BF     		nop
 27645 0006 BD46     		mov	sp, r7
 27646              		.cfi_def_cfa_register 13
 27647              		@ sp needed
 27648 0008 80BC     		pop	{r7}
 27649              		.cfi_restore 7
 27650              		.cfi_def_cfa_offset 0
 27651 000a 7047     		bx	lr
 27652              		.cfi_endproc
 27653              	.LFE119:
 27654              		.size	stop_master_device, .-stop_master_device
 27655              		.section	.text.deactivate_slaves,"ax",%progbits
 27656              		.align	2
 27657              		.global	deactivate_slaves
 27658              		.thumb
 27659              		.thumb_func
 27660              		.type	deactivate_slaves, %function
 27661              	deactivate_slaves:
 27662              	.LFB120:
4368:..\src/command_processing.c **** 
4369:..\src/command_processing.c **** //==============================================================================
4370:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4371:..\src/command_processing.c **** //==============================================================================
4372:..\src/command_processing.c ****  
4373:..\src/command_processing.c **** void deactivate_slaves() {
 27663              		.loc 1 4373 0
 27664              		.cfi_startproc
 27665              		@ args = 0, pretend = 0, frame = 0
 27666              		@ frame_needed = 1, uses_anonymous_args = 0
 27667              		@ link register save eliminated.
 27668 0000 80B4     		push	{r7}
 27669              		.cfi_def_cfa_offset 4
 27670              		.cfi_offset 7, -4
 27671 0002 00AF     		add	r7, sp, #0
 27672              		.cfi_def_cfa_register 7
4374:..\src/command_processing.c ****     
4375:..\src/command_processing.c **** #ifdef MASTER_FW
4376:..\src/command_processing.c ****     
4377:..\src/command_processing.c ****     uint8 packet_data[10];
4378:..\src/command_processing.c ****     uint8 packet_lenght;
4379:..\src/command_processing.c ****     
4380:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4381:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4382:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4383:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4384:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4385:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4386:..\src/command_processing.c ****         master_mode = 0;
4387:..\src/command_processing.c ****         return;
4388:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 608


4389:..\src/command_processing.c ****    
4390:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4391:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4392:..\src/command_processing.c **** 
4393:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4394:..\src/command_processing.c ****     packet_lenght = 3;
4395:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4396:..\src/command_processing.c ****     
4397:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4398:..\src/command_processing.c ****     
4399:..\src/command_processing.c **** #endif    
4400:..\src/command_processing.c **** }
 27673              		.loc 1 4400 0
 27674 0004 00BF     		nop
 27675 0006 BD46     		mov	sp, r7
 27676              		.cfi_def_cfa_register 13
 27677              		@ sp needed
 27678 0008 80BC     		pop	{r7}
 27679              		.cfi_restore 7
 27680              		.cfi_def_cfa_offset 0
 27681 000a 7047     		bx	lr
 27682              		.cfi_endproc
 27683              	.LFE120:
 27684              		.size	deactivate_slaves, .-deactivate_slaves
 27685              		.bss
 27686              		.align	2
 27687              	h_time.11215:
 27688 0000 00000000 		.space	4
 27689              		.align	1
 27690              	i.11256:
 27691 0004 0000     		.space	2
 27692 0006 0000     		.align	2
 27693              	last_aux_int16.11387:
 27694 0008 00000000 		.space	4
 27695              	fsm_state.11534:
 27696 000c 00       		.space	1
 27697 000d 000000   		.align	2
 27698              	cnt.11535:
 27699 0010 00000000 		.space	4
 27700              		.text
 27701              	.Letext0:
 27702              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27703              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27704              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 27705              		.file 6 "..\\src\\commands.h"
 27706              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 27707              		.file 8 "..\\src\\globals.h"
 27708              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 27709              		.section	.debug_info,"",%progbits
 27710              	.Ldebug_info0:
 27711 0000 03260000 		.4byte	0x2603
 27712 0004 0400     		.2byte	0x4
 27713 0006 00000000 		.4byte	.Ldebug_abbrev0
 27714 000a 04       		.byte	0x4
 27715 000b 01       		.uleb128 0x1
 27716 000c 7E090000 		.4byte	.LASF401
 27717 0010 0C       		.byte	0xc
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 609


 27718 0011 D8140000 		.4byte	.LASF402
 27719 0015 42150000 		.4byte	.LASF403
 27720 0019 00000000 		.4byte	.Ldebug_ranges0+0
 27721 001d 00000000 		.4byte	0
 27722 0021 00000000 		.4byte	.Ldebug_line0
 27723 0025 02       		.uleb128 0x2
 27724 0026 01       		.byte	0x1
 27725 0027 06       		.byte	0x6
 27726 0028 42040000 		.4byte	.LASF0
 27727 002c 02       		.uleb128 0x2
 27728 002d 01       		.byte	0x1
 27729 002e 08       		.byte	0x8
 27730 002f BC040000 		.4byte	.LASF1
 27731 0033 02       		.uleb128 0x2
 27732 0034 02       		.byte	0x2
 27733 0035 05       		.byte	0x5
 27734 0036 4B110000 		.4byte	.LASF2
 27735 003a 02       		.uleb128 0x2
 27736 003b 02       		.byte	0x2
 27737 003c 07       		.byte	0x7
 27738 003d CA130000 		.4byte	.LASF3
 27739 0041 03       		.uleb128 0x3
 27740 0042 96140000 		.4byte	.LASF5
 27741 0046 03       		.byte	0x3
 27742 0047 3F       		.byte	0x3f
 27743 0048 4C000000 		.4byte	0x4c
 27744 004c 02       		.uleb128 0x2
 27745 004d 04       		.byte	0x4
 27746 004e 05       		.byte	0x5
 27747 004f 08030000 		.4byte	.LASF4
 27748 0053 03       		.uleb128 0x3
 27749 0054 490A0000 		.4byte	.LASF6
 27750 0058 03       		.byte	0x3
 27751 0059 41       		.byte	0x41
 27752 005a 5E000000 		.4byte	0x5e
 27753 005e 02       		.uleb128 0x2
 27754 005f 04       		.byte	0x4
 27755 0060 07       		.byte	0x7
 27756 0061 2A080000 		.4byte	.LASF7
 27757 0065 02       		.uleb128 0x2
 27758 0066 08       		.byte	0x8
 27759 0067 05       		.byte	0x5
 27760 0068 540A0000 		.4byte	.LASF8
 27761 006c 02       		.uleb128 0x2
 27762 006d 08       		.byte	0x8
 27763 006e 07       		.byte	0x7
 27764 006f 450E0000 		.4byte	.LASF9
 27765 0073 04       		.uleb128 0x4
 27766 0074 04       		.byte	0x4
 27767 0075 05       		.byte	0x5
 27768 0076 696E7400 		.ascii	"int\000"
 27769 007a 02       		.uleb128 0x2
 27770 007b 04       		.byte	0x4
 27771 007c 07       		.byte	0x7
 27772 007d 770B0000 		.4byte	.LASF10
 27773 0081 03       		.uleb128 0x3
 27774 0082 B5000000 		.4byte	.LASF11
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 610


 27775 0086 04       		.byte	0x4
 27776 0087 2C       		.byte	0x2c
 27777 0088 41000000 		.4byte	0x41
 27778 008c 03       		.uleb128 0x3
 27779 008d 42130000 		.4byte	.LASF12
 27780 0091 04       		.byte	0x4
 27781 0092 30       		.byte	0x30
 27782 0093 53000000 		.4byte	0x53
 27783 0097 05       		.uleb128 0x5
 27784 0098 2D110000 		.4byte	.LASF13
 27785 009c 05       		.byte	0x5
 27786 009d E401     		.2byte	0x1e4
 27787 009f 2C000000 		.4byte	0x2c
 27788 00a3 05       		.uleb128 0x5
 27789 00a4 3B150000 		.4byte	.LASF14
 27790 00a8 05       		.byte	0x5
 27791 00a9 E501     		.2byte	0x1e5
 27792 00ab 3A000000 		.4byte	0x3a
 27793 00af 05       		.uleb128 0x5
 27794 00b0 DD000000 		.4byte	.LASF15
 27795 00b4 05       		.byte	0x5
 27796 00b5 E601     		.2byte	0x1e6
 27797 00b7 5E000000 		.4byte	0x5e
 27798 00bb 05       		.uleb128 0x5
 27799 00bc EB010000 		.4byte	.LASF16
 27800 00c0 05       		.byte	0x5
 27801 00c1 E701     		.2byte	0x1e7
 27802 00c3 25000000 		.4byte	0x25
 27803 00c7 05       		.uleb128 0x5
 27804 00c8 A2120000 		.4byte	.LASF17
 27805 00cc 05       		.byte	0x5
 27806 00cd E801     		.2byte	0x1e8
 27807 00cf 33000000 		.4byte	0x33
 27808 00d3 05       		.uleb128 0x5
 27809 00d4 24140000 		.4byte	.LASF18
 27810 00d8 05       		.byte	0x5
 27811 00d9 E901     		.2byte	0x1e9
 27812 00db 4C000000 		.4byte	0x4c
 27813 00df 05       		.uleb128 0x5
 27814 00e0 8F030000 		.4byte	.LASF19
 27815 00e4 05       		.byte	0x5
 27816 00e5 EA01     		.2byte	0x1ea
 27817 00e7 EB000000 		.4byte	0xeb
 27818 00eb 02       		.uleb128 0x2
 27819 00ec 04       		.byte	0x4
 27820 00ed 04       		.byte	0x4
 27821 00ee 3A0B0000 		.4byte	.LASF20
 27822 00f2 02       		.uleb128 0x2
 27823 00f3 08       		.byte	0x8
 27824 00f4 04       		.byte	0x4
 27825 00f5 AC0A0000 		.4byte	.LASF21
 27826 00f9 02       		.uleb128 0x2
 27827 00fa 01       		.byte	0x1
 27828 00fb 08       		.byte	0x8
 27829 00fc 60050000 		.4byte	.LASF22
 27830 0100 05       		.uleb128 0x5
 27831 0101 3A0F0000 		.4byte	.LASF23
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 611


 27832 0105 05       		.byte	0x5
 27833 0106 8E02     		.2byte	0x28e
 27834 0108 0C010000 		.4byte	0x10c
 27835 010c 06       		.uleb128 0x6
 27836 010d 97000000 		.4byte	0x97
 27837 0111 02       		.uleb128 0x2
 27838 0112 08       		.byte	0x8
 27839 0113 04       		.byte	0x4
 27840 0114 2D0D0000 		.4byte	.LASF24
 27841 0118 02       		.uleb128 0x2
 27842 0119 04       		.byte	0x4
 27843 011a 07       		.byte	0x7
 27844 011b 29000000 		.4byte	.LASF25
 27845 011f 07       		.uleb128 0x7
 27846 0120 04       		.byte	0x4
 27847 0121 F9000000 		.4byte	0xf9
 27848 0125 07       		.uleb128 0x7
 27849 0126 04       		.byte	0x4
 27850 0127 2B010000 		.4byte	0x12b
 27851 012b 08       		.uleb128 0x8
 27852 012c F9000000 		.4byte	0xf9
 27853 0130 09       		.uleb128 0x9
 27854 0131 F9000000 		.4byte	0xf9
 27855 0135 40010000 		.4byte	0x140
 27856 0139 0A       		.uleb128 0xa
 27857 013a 18010000 		.4byte	0x118
 27858 013e 19       		.byte	0x19
 27859 013f 00       		.byte	0
 27860 0140 09       		.uleb128 0x9
 27861 0141 F9000000 		.4byte	0xf9
 27862 0145 50010000 		.4byte	0x150
 27863 0149 0A       		.uleb128 0xa
 27864 014a 18010000 		.4byte	0x118
 27865 014e 07       		.byte	0x7
 27866 014f 00       		.byte	0
 27867 0150 0B       		.uleb128 0xb
 27868 0151 D70B0000 		.4byte	.LASF57
 27869 0155 01       		.byte	0x1
 27870 0156 2C000000 		.4byte	0x2c
 27871 015a 06       		.byte	0x6
 27872 015b 42       		.byte	0x42
 27873 015c 1B020000 		.4byte	0x21b
 27874 0160 0C       		.uleb128 0xc
 27875 0161 AD150000 		.4byte	.LASF26
 27876 0165 00       		.byte	0
 27877 0166 0C       		.uleb128 0xc
 27878 0167 DC110000 		.4byte	.LASF27
 27879 016b 01       		.byte	0x1
 27880 016c 0C       		.uleb128 0xc
 27881 016d 06080000 		.4byte	.LASF28
 27882 0171 03       		.byte	0x3
 27883 0172 0C       		.uleb128 0xc
 27884 0173 F4040000 		.4byte	.LASF29
 27885 0177 04       		.byte	0x4
 27886 0178 0C       		.uleb128 0xc
 27887 0179 730F0000 		.4byte	.LASF30
 27888 017d 05       		.byte	0x5
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 612


 27889 017e 0C       		.uleb128 0xc
 27890 017f 26090000 		.4byte	.LASF31
 27891 0183 06       		.byte	0x6
 27892 0184 0C       		.uleb128 0xc
 27893 0185 4A080000 		.4byte	.LASF32
 27894 0189 09       		.byte	0x9
 27895 018a 0C       		.uleb128 0xc
 27896 018b 32000000 		.4byte	.LASF33
 27897 018f 0A       		.byte	0xa
 27898 0190 0C       		.uleb128 0xc
 27899 0191 84120000 		.4byte	.LASF34
 27900 0195 0C       		.byte	0xc
 27901 0196 0C       		.uleb128 0xc
 27902 0197 910D0000 		.4byte	.LASF35
 27903 019b 0D       		.byte	0xd
 27904 019c 0C       		.uleb128 0xc
 27905 019d 78000000 		.4byte	.LASF36
 27906 01a1 80       		.byte	0x80
 27907 01a2 0C       		.uleb128 0xc
 27908 01a3 4F050000 		.4byte	.LASF37
 27909 01a7 81       		.byte	0x81
 27910 01a8 0C       		.uleb128 0xc
 27911 01a9 72060000 		.4byte	.LASF38
 27912 01ad 82       		.byte	0x82
 27913 01ae 0C       		.uleb128 0xc
 27914 01af A6110000 		.4byte	.LASF39
 27915 01b3 83       		.byte	0x83
 27916 01b4 0C       		.uleb128 0xc
 27917 01b5 F6100000 		.4byte	.LASF40
 27918 01b9 84       		.byte	0x84
 27919 01ba 0C       		.uleb128 0xc
 27920 01bb A7030000 		.4byte	.LASF41
 27921 01bf 85       		.byte	0x85
 27922 01c0 0C       		.uleb128 0xc
 27923 01c1 68090000 		.4byte	.LASF42
 27924 01c5 86       		.byte	0x86
 27925 01c6 0C       		.uleb128 0xc
 27926 01c7 06090000 		.4byte	.LASF43
 27927 01cb 88       		.byte	0x88
 27928 01cc 0C       		.uleb128 0xc
 27929 01cd 65120000 		.4byte	.LASF44
 27930 01d1 89       		.byte	0x89
 27931 01d2 0C       		.uleb128 0xc
 27932 01d3 A30E0000 		.4byte	.LASF45
 27933 01d7 8B       		.byte	0x8b
 27934 01d8 0C       		.uleb128 0xc
 27935 01d9 FE0C0000 		.4byte	.LASF46
 27936 01dd 8C       		.byte	0x8c
 27937 01de 0C       		.uleb128 0xc
 27938 01df 240A0000 		.4byte	.LASF47
 27939 01e3 8E       		.byte	0x8e
 27940 01e4 0C       		.uleb128 0xc
 27941 01e5 DB0E0000 		.4byte	.LASF48
 27942 01e9 90       		.byte	0x90
 27943 01ea 0C       		.uleb128 0xc
 27944 01eb 8D020000 		.4byte	.LASF49
 27945 01ef 92       		.byte	0x92
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 613


 27946 01f0 0C       		.uleb128 0xc
 27947 01f1 A3130000 		.4byte	.LASF50
 27948 01f5 A1       		.byte	0xa1
 27949 01f6 0C       		.uleb128 0xc
 27950 01f7 AF100000 		.4byte	.LASF51
 27951 01fb A2       		.byte	0xa2
 27952 01fc 0C       		.uleb128 0xc
 27953 01fd 350C0000 		.4byte	.LASF52
 27954 0201 A3       		.byte	0xa3
 27955 0202 0C       		.uleb128 0xc
 27956 0203 CB100000 		.4byte	.LASF53
 27957 0207 A4       		.byte	0xa4
 27958 0208 0C       		.uleb128 0xc
 27959 0209 CB110000 		.4byte	.LASF54
 27960 020d A5       		.byte	0xa5
 27961 020e 0C       		.uleb128 0xc
 27962 020f 63100000 		.4byte	.LASF55
 27963 0213 A6       		.byte	0xa6
 27964 0214 0C       		.uleb128 0xc
 27965 0215 B30A0000 		.4byte	.LASF56
 27966 0219 A7       		.byte	0xa7
 27967 021a 00       		.byte	0
 27968 021b 0B       		.uleb128 0xb
 27969 021c 02150000 		.4byte	.LASF58
 27970 0220 01       		.byte	0x1
 27971 0221 2C000000 		.4byte	0x2c
 27972 0225 06       		.byte	0x6
 27973 0226 8E       		.byte	0x8e
 27974 0227 5C020000 		.4byte	0x25c
 27975 022b 0C       		.uleb128 0xc
 27976 022c 0E070000 		.4byte	.LASF59
 27977 0230 00       		.byte	0
 27978 0231 0C       		.uleb128 0xc
 27979 0232 150C0000 		.4byte	.LASF60
 27980 0236 01       		.byte	0x1
 27981 0237 0C       		.uleb128 0xc
 27982 0238 9E020000 		.4byte	.LASF61
 27983 023c 02       		.byte	0x2
 27984 023d 0C       		.uleb128 0xc
 27985 023e C7010000 		.4byte	.LASF62
 27986 0242 03       		.byte	0x3
 27987 0243 0C       		.uleb128 0xc
 27988 0244 6B010000 		.4byte	.LASF63
 27989 0248 04       		.byte	0x4
 27990 0249 0C       		.uleb128 0xc
 27991 024a 60000000 		.4byte	.LASF64
 27992 024e 05       		.byte	0x5
 27993 024f 0C       		.uleb128 0xc
 27994 0250 72080000 		.4byte	.LASF65
 27995 0254 06       		.byte	0x6
 27996 0255 0C       		.uleb128 0xc
 27997 0256 90100000 		.4byte	.LASF66
 27998 025a 07       		.byte	0x7
 27999 025b 00       		.byte	0
 28000 025c 0B       		.uleb128 0xb
 28001 025d 620A0000 		.4byte	.LASF67
 28002 0261 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 614


 28003 0262 2C000000 		.4byte	0x2c
 28004 0266 06       		.byte	0x6
 28005 0267 A2       		.byte	0xa2
 28006 0268 85020000 		.4byte	0x285
 28007 026c 0C       		.uleb128 0xc
 28008 026d 7B140000 		.4byte	.LASF68
 28009 0271 00       		.byte	0
 28010 0272 0C       		.uleb128 0xc
 28011 0273 FA080000 		.4byte	.LASF69
 28012 0277 01       		.byte	0x1
 28013 0278 0C       		.uleb128 0xc
 28014 0279 1D0D0000 		.4byte	.LASF70
 28015 027d 02       		.byte	0x2
 28016 027e 0C       		.uleb128 0xc
 28017 027f F1070000 		.4byte	.LASF71
 28018 0283 03       		.byte	0x3
 28019 0284 00       		.byte	0
 28020 0285 0B       		.uleb128 0xb
 28021 0286 84040000 		.4byte	.LASF72
 28022 028a 01       		.byte	0x1
 28023 028b 2C000000 		.4byte	0x2c
 28024 028f 06       		.byte	0x6
 28025 0290 AC       		.byte	0xac
 28026 0291 A2020000 		.4byte	0x2a2
 28027 0295 0C       		.uleb128 0xc
 28028 0296 86100000 		.4byte	.LASF73
 28029 029a 00       		.byte	0
 28030 029b 0C       		.uleb128 0xc
 28031 029c 8E0A0000 		.4byte	.LASF74
 28032 02a0 01       		.byte	0x1
 28033 02a1 00       		.byte	0
 28034 02a2 0B       		.uleb128 0xb
 28035 02a3 EA0D0000 		.4byte	.LASF75
 28036 02a7 01       		.byte	0x1
 28037 02a8 2C000000 		.4byte	0x2c
 28038 02ac 06       		.byte	0x6
 28039 02ad B1       		.byte	0xb1
 28040 02ae BF020000 		.4byte	0x2bf
 28041 02b2 0C       		.uleb128 0xc
 28042 02b3 F3060000 		.4byte	.LASF76
 28043 02b7 00       		.byte	0
 28044 02b8 0C       		.uleb128 0xc
 28045 02b9 B7080000 		.4byte	.LASF77
 28046 02bd 01       		.byte	0x1
 28047 02be 00       		.byte	0
 28048 02bf 0B       		.uleb128 0xb
 28049 02c0 97120000 		.4byte	.LASF78
 28050 02c4 01       		.byte	0x1
 28051 02c5 2C000000 		.4byte	0x2c
 28052 02c9 06       		.byte	0x6
 28053 02ca B9       		.byte	0xb9
 28054 02cb 0C030000 		.4byte	0x30c
 28055 02cf 0C       		.uleb128 0xc
 28056 02d0 BE080000 		.4byte	.LASF79
 28057 02d4 00       		.byte	0
 28058 02d5 0C       		.uleb128 0xc
 28059 02d6 10150000 		.4byte	.LASF80
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 615


 28060 02da 01       		.byte	0x1
 28061 02db 0C       		.uleb128 0xc
 28062 02dc 720A0000 		.4byte	.LASF81
 28063 02e0 02       		.byte	0x2
 28064 02e1 0C       		.uleb128 0xc
 28065 02e2 DA0C0000 		.4byte	.LASF82
 28066 02e6 03       		.byte	0x3
 28067 02e7 0C       		.uleb128 0xc
 28068 02e8 E20B0000 		.4byte	.LASF83
 28069 02ec 04       		.byte	0x4
 28070 02ed 0C       		.uleb128 0xc
 28071 02ee 5C0E0000 		.4byte	.LASF84
 28072 02f2 05       		.byte	0x5
 28073 02f3 0C       		.uleb128 0xc
 28074 02f4 390D0000 		.4byte	.LASF85
 28075 02f8 06       		.byte	0x6
 28076 02f9 0C       		.uleb128 0xc
 28077 02fa 8C0C0000 		.4byte	.LASF86
 28078 02fe 07       		.byte	0x7
 28079 02ff 0C       		.uleb128 0xc
 28080 0300 B3060000 		.4byte	.LASF87
 28081 0304 08       		.byte	0x8
 28082 0305 0C       		.uleb128 0xc
 28083 0306 E5070000 		.4byte	.LASF88
 28084 030a 09       		.byte	0x9
 28085 030b 00       		.byte	0
 28086 030c 03       		.uleb128 0x3
 28087 030d 5C140000 		.4byte	.LASF89
 28088 0311 07       		.byte	0x7
 28089 0312 7E       		.byte	0x7e
 28090 0313 17030000 		.4byte	0x317
 28091 0317 0D       		.uleb128 0xd
 28092 0318 5C140000 		.4byte	.LASF89
 28093 031c 07       		.uleb128 0x7
 28094 031d 04       		.byte	0x4
 28095 031e 0C030000 		.4byte	0x30c
 28096 0322 0E       		.uleb128 0xe
 28097 0323 0C0A0000 		.4byte	.LASF92
 28098 0327 10       		.byte	0x10
 28099 0328 08       		.byte	0x8
 28100 0329 E2       		.byte	0xe2
 28101 032a 5F030000 		.4byte	0x35f
 28102 032e 0F       		.uleb128 0xf
 28103 032f 706F7300 		.ascii	"pos\000"
 28104 0333 08       		.byte	0x8
 28105 0334 E3       		.byte	0xe3
 28106 0335 D3000000 		.4byte	0xd3
 28107 0339 00       		.byte	0
 28108 033a 10       		.uleb128 0x10
 28109 033b EA080000 		.4byte	.LASF90
 28110 033f 08       		.byte	0x8
 28111 0340 E4       		.byte	0xe4
 28112 0341 D3000000 		.4byte	0xd3
 28113 0345 04       		.byte	0x4
 28114 0346 0F       		.uleb128 0xf
 28115 0347 70776D00 		.ascii	"pwm\000"
 28116 034b 08       		.byte	0x8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 616


 28117 034c E5       		.byte	0xe5
 28118 034d D3000000 		.4byte	0xd3
 28119 0351 08       		.byte	0x8
 28120 0352 10       		.uleb128 0x10
 28121 0353 9D0E0000 		.4byte	.LASF91
 28122 0357 08       		.byte	0x8
 28123 0358 E6       		.byte	0xe6
 28124 0359 97000000 		.4byte	0x97
 28125 035d 0C       		.byte	0xc
 28126 035e 00       		.byte	0
 28127 035f 0E       		.uleb128 0xe
 28128 0360 5B100000 		.4byte	.LASF93
 28129 0364 34       		.byte	0x34
 28130 0365 08       		.byte	0x8
 28131 0366 ED       		.byte	0xed
 28132 0367 C0030000 		.4byte	0x3c0
 28133 036b 0F       		.uleb128 0xf
 28134 036c 706F7300 		.ascii	"pos\000"
 28135 0370 08       		.byte	0x8
 28136 0371 EE       		.byte	0xee
 28137 0372 C0030000 		.4byte	0x3c0
 28138 0376 00       		.byte	0
 28139 0377 10       		.uleb128 0x10
 28140 0378 EA080000 		.4byte	.LASF90
 28141 037c 08       		.byte	0x8
 28142 037d EF       		.byte	0xef
 28143 037e D3000000 		.4byte	0xd3
 28144 0382 0C       		.byte	0xc
 28145 0383 10       		.uleb128 0x10
 28146 0384 E4120000 		.4byte	.LASF94
 28147 0388 08       		.byte	0x8
 28148 0389 F0       		.byte	0xf0
 28149 038a D3000000 		.4byte	0xd3
 28150 038e 10       		.byte	0x10
 28151 038f 10       		.uleb128 0x10
 28152 0390 68080000 		.4byte	.LASF95
 28153 0394 08       		.byte	0x8
 28154 0395 F1       		.byte	0xf1
 28155 0396 D3000000 		.4byte	0xd3
 28156 039a 14       		.byte	0x14
 28157 039b 0F       		.uleb128 0xf
 28158 039c 726F7400 		.ascii	"rot\000"
 28159 03a0 08       		.byte	0x8
 28160 03a1 F2       		.byte	0xf2
 28161 03a2 D0030000 		.4byte	0x3d0
 28162 03a6 18       		.byte	0x18
 28163 03a7 0F       		.uleb128 0xf
 28164 03a8 76656C00 		.ascii	"vel\000"
 28165 03ac 08       		.byte	0x8
 28166 03ad F3       		.byte	0xf3
 28167 03ae C0030000 		.4byte	0x3c0
 28168 03b2 1C       		.byte	0x1c
 28169 03b3 0F       		.uleb128 0xf
 28170 03b4 61636300 		.ascii	"acc\000"
 28171 03b8 08       		.byte	0x8
 28172 03b9 F4       		.byte	0xf4
 28173 03ba C0030000 		.4byte	0x3c0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 617


 28174 03be 28       		.byte	0x28
 28175 03bf 00       		.byte	0
 28176 03c0 09       		.uleb128 0x9
 28177 03c1 D3000000 		.4byte	0xd3
 28178 03c5 D0030000 		.4byte	0x3d0
 28179 03c9 0A       		.uleb128 0xa
 28180 03ca 18010000 		.4byte	0x118
 28181 03ce 02       		.byte	0x2
 28182 03cf 00       		.byte	0
 28183 03d0 09       		.uleb128 0x9
 28184 03d1 BB000000 		.4byte	0xbb
 28185 03d5 E0030000 		.4byte	0x3e0
 28186 03d9 0A       		.uleb128 0xa
 28187 03da 18010000 		.4byte	0x118
 28188 03de 02       		.byte	0x2
 28189 03df 00       		.byte	0
 28190 03e0 0E       		.uleb128 0xe
 28191 03e1 530B0000 		.4byte	.LASF96
 28192 03e5 28       		.byte	0x28
 28193 03e6 08       		.byte	0x8
 28194 03e7 F7       		.byte	0xf7
 28195 03e8 11040000 		.4byte	0x411
 28196 03ec 0F       		.uleb128 0xf
 28197 03ed 656D6700 		.ascii	"emg\000"
 28198 03f1 08       		.byte	0x8
 28199 03f2 F8       		.byte	0xf8
 28200 03f3 11040000 		.4byte	0x411
 28201 03f7 00       		.byte	0
 28202 03f8 10       		.uleb128 0x10
 28203 03f9 D20C0000 		.4byte	.LASF97
 28204 03fd 08       		.byte	0x8
 28205 03fe F9       		.byte	0xf9
 28206 03ff 21040000 		.4byte	0x421
 28207 0403 08       		.byte	0x8
 28208 0404 10       		.uleb128 0x10
 28209 0405 87110000 		.4byte	.LASF98
 28210 0409 08       		.byte	0x8
 28211 040a FA       		.byte	0xfa
 28212 040b 11040000 		.4byte	0x411
 28213 040f 20       		.byte	0x20
 28214 0410 00       		.byte	0
 28215 0411 09       		.uleb128 0x9
 28216 0412 D3000000 		.4byte	0xd3
 28217 0416 21040000 		.4byte	0x421
 28218 041a 0A       		.uleb128 0xa
 28219 041b 18010000 		.4byte	0x118
 28220 041f 01       		.byte	0x1
 28221 0420 00       		.byte	0
 28222 0421 09       		.uleb128 0x9
 28223 0422 D3000000 		.4byte	0xd3
 28224 0426 31040000 		.4byte	0x431
 28225 042a 0A       		.uleb128 0xa
 28226 042b 18010000 		.4byte	0x118
 28227 042f 05       		.byte	0x5
 28228 0430 00       		.byte	0
 28229 0431 0E       		.uleb128 0xe
 28230 0432 BE050000 		.4byte	.LASF99
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 618


 28231 0436 04       		.byte	0x4
 28232 0437 08       		.byte	0x8
 28233 0438 FD       		.byte	0xfd
 28234 0439 4A040000 		.4byte	0x44a
 28235 043d 10       		.uleb128 0x10
 28236 043e 46050000 		.4byte	.LASF100
 28237 0442 08       		.byte	0x8
 28238 0443 FE       		.byte	0xfe
 28239 0444 EB000000 		.4byte	0xeb
 28240 0448 00       		.byte	0
 28241 0449 00       		.byte	0
 28242 044a 11       		.uleb128 0x11
 28243 044b C2000000 		.4byte	.LASF101
 28244 044f 86       		.byte	0x86
 28245 0450 08       		.byte	0x8
 28246 0451 0501     		.2byte	0x105
 28247 0453 8C040000 		.4byte	0x48c
 28248 0457 12       		.uleb128 0x12
 28249 0458 81060000 		.4byte	.LASF102
 28250 045c 08       		.byte	0x8
 28251 045d 0601     		.2byte	0x106
 28252 045f 8C040000 		.4byte	0x48c
 28253 0463 00       		.byte	0
 28254 0464 12       		.uleb128 0x12
 28255 0465 720E0000 		.4byte	.LASF103
 28256 0469 08       		.byte	0x8
 28257 046a 0701     		.2byte	0x107
 28258 046c C7000000 		.4byte	0xc7
 28259 0470 80       		.byte	0x80
 28260 0471 13       		.uleb128 0x13
 28261 0472 696E6400 		.ascii	"ind\000"
 28262 0476 08       		.byte	0x8
 28263 0477 0801     		.2byte	0x108
 28264 0479 C7000000 		.4byte	0xc7
 28265 047d 82       		.byte	0x82
 28266 047e 12       		.uleb128 0x12
 28267 047f 6F020000 		.4byte	.LASF104
 28268 0483 08       		.byte	0x8
 28269 0484 0901     		.2byte	0x109
 28270 0486 97000000 		.4byte	0x97
 28271 048a 84       		.byte	0x84
 28272 048b 00       		.byte	0
 28273 048c 09       		.uleb128 0x9
 28274 048d 97000000 		.4byte	0x97
 28275 0491 9C040000 		.4byte	0x49c
 28276 0495 0A       		.uleb128 0xa
 28277 0496 18010000 		.4byte	0x118
 28278 049a 7F       		.byte	0x7f
 28279 049b 00       		.byte	0
 28280 049c 11       		.uleb128 0x11
 28281 049d 7D030000 		.4byte	.LASF105
 28282 04a1 50       		.byte	0x50
 28283 04a2 08       		.byte	0x8
 28284 04a3 1201     		.2byte	0x112
 28285 04a5 05050000 		.4byte	0x505
 28286 04a9 12       		.uleb128 0x12
 28287 04aa CF030000 		.4byte	.LASF106
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 619


 28288 04ae 08       		.byte	0x8
 28289 04af 1301     		.2byte	0x113
 28290 04b1 05050000 		.4byte	0x505
 28291 04b5 00       		.byte	0
 28292 04b6 12       		.uleb128 0x12
 28293 04b7 28020000 		.4byte	.LASF107
 28294 04bb 08       		.byte	0x8
 28295 04bc 1401     		.2byte	0x114
 28296 04be 15050000 		.4byte	0x515
 28297 04c2 08       		.byte	0x8
 28298 04c3 12       		.uleb128 0x12
 28299 04c4 100D0000 		.4byte	.LASF108
 28300 04c8 08       		.byte	0x8
 28301 04c9 1501     		.2byte	0x115
 28302 04cb 25050000 		.4byte	0x525
 28303 04cf 30       		.byte	0x30
 28304 04d0 12       		.uleb128 0x12
 28305 04d1 8B010000 		.4byte	.LASF109
 28306 04d5 08       		.byte	0x8
 28307 04d6 1601     		.2byte	0x116
 28308 04d8 AF000000 		.4byte	0xaf
 28309 04dc 40       		.byte	0x40
 28310 04dd 12       		.uleb128 0x12
 28311 04de AF140000 		.4byte	.LASF110
 28312 04e2 08       		.byte	0x8
 28313 04e3 1701     		.2byte	0x117
 28314 04e5 AF000000 		.4byte	0xaf
 28315 04e9 44       		.byte	0x44
 28316 04ea 12       		.uleb128 0x12
 28317 04eb 3C080000 		.4byte	.LASF111
 28318 04ef 08       		.byte	0x8
 28319 04f0 1801     		.2byte	0x118
 28320 04f2 AF000000 		.4byte	0xaf
 28321 04f6 48       		.byte	0x48
 28322 04f7 12       		.uleb128 0x12
 28323 04f8 86080000 		.4byte	.LASF112
 28324 04fc 08       		.byte	0x8
 28325 04fd 1901     		.2byte	0x119
 28326 04ff AF000000 		.4byte	0xaf
 28327 0503 4C       		.byte	0x4c
 28328 0504 00       		.byte	0
 28329 0505 09       		.uleb128 0x9
 28330 0506 AF000000 		.4byte	0xaf
 28331 050a 15050000 		.4byte	0x515
 28332 050e 0A       		.uleb128 0xa
 28333 050f 18010000 		.4byte	0x118
 28334 0513 01       		.byte	0x1
 28335 0514 00       		.byte	0
 28336 0515 09       		.uleb128 0x9
 28337 0516 AF000000 		.4byte	0xaf
 28338 051a 25050000 		.4byte	0x525
 28339 051e 0A       		.uleb128 0xa
 28340 051f 18010000 		.4byte	0x118
 28341 0523 09       		.byte	0x9
 28342 0524 00       		.byte	0
 28343 0525 09       		.uleb128 0x9
 28344 0526 AF000000 		.4byte	0xaf
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 620


 28345 052a 35050000 		.4byte	0x535
 28346 052e 0A       		.uleb128 0xa
 28347 052f 18010000 		.4byte	0x118
 28348 0533 03       		.byte	0x3
 28349 0534 00       		.byte	0
 28350 0535 11       		.uleb128 0x11
 28351 0536 28060000 		.4byte	.LASF113
 28352 053a 10       		.byte	0x10
 28353 053b 08       		.byte	0x8
 28354 053c 2001     		.2byte	0x120
 28355 053e C4050000 		.4byte	0x5c4
 28356 0542 13       		.uleb128 0x13
 28357 0543 696400   		.ascii	"id\000"
 28358 0546 08       		.byte	0x8
 28359 0547 2101     		.2byte	0x121
 28360 0549 97000000 		.4byte	0x97
 28361 054d 00       		.byte	0
 28362 054e 12       		.uleb128 0x12
 28363 054f B5110000 		.4byte	.LASF114
 28364 0553 08       		.byte	0x8
 28365 0554 2201     		.2byte	0x122
 28366 0556 C4050000 		.4byte	0x5c4
 28367 055a 01       		.byte	0x1
 28368 055b 12       		.uleb128 0x12
 28369 055c 31120000 		.4byte	.LASF115
 28370 0560 08       		.byte	0x8
 28371 0561 2301     		.2byte	0x123
 28372 0563 C4050000 		.4byte	0x5c4
 28373 0567 04       		.byte	0x4
 28374 0568 12       		.uleb128 0x12
 28375 0569 E9040000 		.4byte	.LASF116
 28376 056d 08       		.byte	0x8
 28377 056e 2401     		.2byte	0x124
 28378 0570 97000000 		.4byte	0x97
 28379 0574 07       		.byte	0x7
 28380 0575 12       		.uleb128 0x12
 28381 0576 29030000 		.4byte	.LASF117
 28382 057a 08       		.byte	0x8
 28383 057b 2501     		.2byte	0x125
 28384 057d 97000000 		.4byte	0x97
 28385 0581 08       		.byte	0x8
 28386 0582 12       		.uleb128 0x12
 28387 0583 BA020000 		.4byte	.LASF118
 28388 0587 08       		.byte	0x8
 28389 0588 2601     		.2byte	0x126
 28390 058a 97000000 		.4byte	0x97
 28391 058e 09       		.byte	0x9
 28392 058f 12       		.uleb128 0x12
 28393 0590 76130000 		.4byte	.LASF119
 28394 0594 08       		.byte	0x8
 28395 0595 2701     		.2byte	0x127
 28396 0597 97000000 		.4byte	0x97
 28397 059b 0A       		.byte	0xa
 28398 059c 12       		.uleb128 0x12
 28399 059d 3A130000 		.4byte	.LASF120
 28400 05a1 08       		.byte	0x8
 28401 05a2 2801     		.2byte	0x128
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 621


 28402 05a4 97000000 		.4byte	0x97
 28403 05a8 0B       		.byte	0xb
 28404 05a9 12       		.uleb128 0x12
 28405 05aa 05100000 		.4byte	.LASF121
 28406 05ae 08       		.byte	0x8
 28407 05af 2901     		.2byte	0x129
 28408 05b1 97000000 		.4byte	0x97
 28409 05b5 0C       		.byte	0xc
 28410 05b6 12       		.uleb128 0x12
 28411 05b7 5A030000 		.4byte	.LASF122
 28412 05bb 08       		.byte	0x8
 28413 05bc 2A01     		.2byte	0x12a
 28414 05be C4050000 		.4byte	0x5c4
 28415 05c2 0D       		.byte	0xd
 28416 05c3 00       		.byte	0
 28417 05c4 09       		.uleb128 0x9
 28418 05c5 97000000 		.4byte	0x97
 28419 05c9 D4050000 		.4byte	0x5d4
 28420 05cd 0A       		.uleb128 0xa
 28421 05ce 18010000 		.4byte	0x118
 28422 05d2 02       		.byte	0x2
 28423 05d3 00       		.byte	0
 28424 05d4 11       		.uleb128 0x11
 28425 05d5 47140000 		.4byte	.LASF123
 28426 05d9 70       		.byte	0x70
 28427 05da 08       		.byte	0x8
 28428 05db 3101     		.2byte	0x131
 28429 05dd 4E070000 		.4byte	0x74e
 28430 05e1 13       		.uleb128 0x13
 28431 05e2 6B5F7000 		.ascii	"k_p\000"
 28432 05e6 08       		.byte	0x8
 28433 05e7 3201     		.2byte	0x132
 28434 05e9 D3000000 		.4byte	0xd3
 28435 05ed 00       		.byte	0
 28436 05ee 13       		.uleb128 0x13
 28437 05ef 6B5F6900 		.ascii	"k_i\000"
 28438 05f3 08       		.byte	0x8
 28439 05f4 3301     		.2byte	0x133
 28440 05f6 D3000000 		.4byte	0xd3
 28441 05fa 04       		.byte	0x4
 28442 05fb 13       		.uleb128 0x13
 28443 05fc 6B5F6400 		.ascii	"k_d\000"
 28444 0600 08       		.byte	0x8
 28445 0601 3401     		.2byte	0x134
 28446 0603 D3000000 		.4byte	0xd3
 28447 0607 08       		.byte	0x8
 28448 0608 12       		.uleb128 0x12
 28449 0609 EC0E0000 		.4byte	.LASF124
 28450 060d 08       		.byte	0x8
 28451 060e 3501     		.2byte	0x135
 28452 0610 D3000000 		.4byte	0xd3
 28453 0614 0C       		.byte	0xc
 28454 0615 12       		.uleb128 0x12
 28455 0616 DE050000 		.4byte	.LASF125
 28456 061a 08       		.byte	0x8
 28457 061b 3601     		.2byte	0x136
 28458 061d D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 622


 28459 0621 10       		.byte	0x10
 28460 0622 12       		.uleb128 0x12
 28461 0623 B8050000 		.4byte	.LASF126
 28462 0627 08       		.byte	0x8
 28463 0628 3701     		.2byte	0x137
 28464 062a D3000000 		.4byte	0xd3
 28465 062e 14       		.byte	0x14
 28466 062f 12       		.uleb128 0x12
 28467 0630 DD120000 		.4byte	.LASF127
 28468 0634 08       		.byte	0x8
 28469 0635 3801     		.2byte	0x138
 28470 0637 D3000000 		.4byte	0xd3
 28471 063b 18       		.byte	0x18
 28472 063c 12       		.uleb128 0x12
 28473 063d 6B060000 		.4byte	.LASF128
 28474 0641 08       		.byte	0x8
 28475 0642 3901     		.2byte	0x139
 28476 0644 D3000000 		.4byte	0xd3
 28477 0648 1C       		.byte	0x1c
 28478 0649 12       		.uleb128 0x12
 28479 064a 77110000 		.4byte	.LASF129
 28480 064e 08       		.byte	0x8
 28481 064f 3A01     		.2byte	0x13a
 28482 0651 D3000000 		.4byte	0xd3
 28483 0655 20       		.byte	0x20
 28484 0656 12       		.uleb128 0x12
 28485 0657 88060000 		.4byte	.LASF130
 28486 065b 08       		.byte	0x8
 28487 065c 3B01     		.2byte	0x13b
 28488 065e D3000000 		.4byte	0xd3
 28489 0662 24       		.byte	0x24
 28490 0663 12       		.uleb128 0x12
 28491 0664 77070000 		.4byte	.LASF131
 28492 0668 08       		.byte	0x8
 28493 0669 3C01     		.2byte	0x13c
 28494 066b D3000000 		.4byte	0xd3
 28495 066f 28       		.byte	0x28
 28496 0670 12       		.uleb128 0x12
 28497 0671 B6150000 		.4byte	.LASF132
 28498 0675 08       		.byte	0x8
 28499 0676 3D01     		.2byte	0x13d
 28500 0678 D3000000 		.4byte	0xd3
 28501 067c 2C       		.byte	0x2c
 28502 067d 12       		.uleb128 0x12
 28503 067e A2080000 		.4byte	.LASF133
 28504 0682 08       		.byte	0x8
 28505 0683 3E01     		.2byte	0x13e
 28506 0685 97000000 		.4byte	0x97
 28507 0689 30       		.byte	0x30
 28508 068a 12       		.uleb128 0x12
 28509 068b C6120000 		.4byte	.LASF134
 28510 068f 08       		.byte	0x8
 28511 0690 3F01     		.2byte	0x13f
 28512 0692 97000000 		.4byte	0x97
 28513 0696 31       		.byte	0x31
 28514 0697 12       		.uleb128 0x12
 28515 0698 0C0F0000 		.4byte	.LASF135
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 623


 28516 069c 08       		.byte	0x8
 28517 069d 4001     		.2byte	0x140
 28518 069f 97000000 		.4byte	0x97
 28519 06a3 32       		.byte	0x32
 28520 06a4 12       		.uleb128 0x12
 28521 06a5 64140000 		.4byte	.LASF136
 28522 06a9 08       		.byte	0x8
 28523 06aa 4101     		.2byte	0x141
 28524 06ac 97000000 		.4byte	0x97
 28525 06b0 33       		.byte	0x33
 28526 06b1 12       		.uleb128 0x12
 28527 06b2 3F010000 		.4byte	.LASF137
 28528 06b6 08       		.byte	0x8
 28529 06b7 4201     		.2byte	0x142
 28530 06b9 D3000000 		.4byte	0xd3
 28531 06bd 34       		.byte	0x34
 28532 06be 12       		.uleb128 0x12
 28533 06bf FD050000 		.4byte	.LASF138
 28534 06c3 08       		.byte	0x8
 28535 06c4 4301     		.2byte	0x143
 28536 06c6 D3000000 		.4byte	0xd3
 28537 06ca 38       		.byte	0x38
 28538 06cb 12       		.uleb128 0x12
 28539 06cc E80A0000 		.4byte	.LASF139
 28540 06d0 08       		.byte	0x8
 28541 06d1 4401     		.2byte	0x144
 28542 06d3 D3000000 		.4byte	0xd3
 28543 06d7 3C       		.byte	0x3c
 28544 06d8 12       		.uleb128 0x12
 28545 06d9 65050000 		.4byte	.LASF140
 28546 06dd 08       		.byte	0x8
 28547 06de 4501     		.2byte	0x145
 28548 06e0 D3000000 		.4byte	0xd3
 28549 06e4 40       		.byte	0x40
 28550 06e5 12       		.uleb128 0x12
 28551 06e6 7F010000 		.4byte	.LASF141
 28552 06ea 08       		.byte	0x8
 28553 06eb 4601     		.2byte	0x146
 28554 06ed 4E070000 		.4byte	0x74e
 28555 06f1 44       		.byte	0x44
 28556 06f2 12       		.uleb128 0x12
 28557 06f3 F4140000 		.4byte	.LASF142
 28558 06f7 08       		.byte	0x8
 28559 06f8 4701     		.2byte	0x147
 28560 06fa C7000000 		.4byte	0xc7
 28561 06fe 5C       		.byte	0x5c
 28562 06ff 12       		.uleb128 0x12
 28563 0700 EF080000 		.4byte	.LASF143
 28564 0704 08       		.byte	0x8
 28565 0705 4801     		.2byte	0x148
 28566 0707 97000000 		.4byte	0x97
 28567 070b 5E       		.byte	0x5e
 28568 070c 12       		.uleb128 0x12
 28569 070d 020C0000 		.4byte	.LASF144
 28570 0711 08       		.byte	0x8
 28571 0712 4901     		.2byte	0x149
 28572 0714 97000000 		.4byte	0x97
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 624


 28573 0718 5F       		.byte	0x5f
 28574 0719 12       		.uleb128 0x12
 28575 071a 0D050000 		.4byte	.LASF145
 28576 071e 08       		.byte	0x8
 28577 071f 4A01     		.2byte	0x14a
 28578 0721 97000000 		.4byte	0x97
 28579 0725 60       		.byte	0x60
 28580 0726 12       		.uleb128 0x12
 28581 0727 A7050000 		.4byte	.LASF146
 28582 072b 08       		.byte	0x8
 28583 072c 4B01     		.2byte	0x14b
 28584 072e 97000000 		.4byte	0x97
 28585 0732 61       		.byte	0x61
 28586 0733 12       		.uleb128 0x12
 28587 0734 CA040000 		.4byte	.LASF147
 28588 0738 08       		.byte	0x8
 28589 0739 4C01     		.2byte	0x14c
 28590 073b 97000000 		.4byte	0x97
 28591 073f 62       		.byte	0x62
 28592 0740 12       		.uleb128 0x12
 28593 0741 5A030000 		.4byte	.LASF122
 28594 0745 08       		.byte	0x8
 28595 0746 4D01     		.2byte	0x14d
 28596 0748 5E070000 		.4byte	0x75e
 28597 074c 63       		.byte	0x63
 28598 074d 00       		.byte	0
 28599 074e 09       		.uleb128 0x9
 28600 074f EB000000 		.4byte	0xeb
 28601 0753 5E070000 		.4byte	0x75e
 28602 0757 0A       		.uleb128 0xa
 28603 0758 18010000 		.4byte	0x118
 28604 075c 05       		.byte	0x5
 28605 075d 00       		.byte	0
 28606 075e 09       		.uleb128 0x9
 28607 075f 97000000 		.4byte	0x97
 28608 0763 6E070000 		.4byte	0x76e
 28609 0767 0A       		.uleb128 0xa
 28610 0768 18010000 		.4byte	0x118
 28611 076c 0C       		.byte	0xc
 28612 076d 00       		.byte	0
 28613 076e 11       		.uleb128 0x11
 28614 076f DD130000 		.4byte	.LASF148
 28615 0773 30       		.byte	0x30
 28616 0774 08       		.byte	0x8
 28617 0775 5401     		.2byte	0x154
 28618 0777 F1070000 		.4byte	0x7f1
 28619 077b 12       		.uleb128 0x12
 28620 077c CA0A0000 		.4byte	.LASF149
 28621 0780 08       		.byte	0x8
 28622 0781 5501     		.2byte	0x155
 28623 0783 F1070000 		.4byte	0x7f1
 28624 0787 00       		.byte	0
 28625 0788 13       		.uleb128 0x13
 28626 0789 72657300 		.ascii	"res\000"
 28627 078d 08       		.byte	0x8
 28628 078e 5601     		.2byte	0x156
 28629 0790 C4050000 		.4byte	0x5c4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 625


 28630 0794 05       		.byte	0x5
 28631 0795 12       		.uleb128 0x12
 28632 0796 B1080000 		.4byte	.LASF150
 28633 079a 08       		.byte	0x8
 28634 079b 5701     		.2byte	0x157
 28635 079d C0030000 		.4byte	0x3c0
 28636 07a1 08       		.byte	0x8
 28637 07a2 12       		.uleb128 0x12
 28638 07a3 D7050000 		.4byte	.LASF151
 28639 07a7 08       		.byte	0x8
 28640 07a8 5801     		.2byte	0x158
 28641 07aa 01080000 		.4byte	0x801
 28642 07ae 14       		.byte	0x14
 28643 07af 12       		.uleb128 0x12
 28644 07b0 B90D0000 		.4byte	.LASF152
 28645 07b4 08       		.byte	0x8
 28646 07b5 5901     		.2byte	0x159
 28647 07b7 97000000 		.4byte	0x97
 28648 07bb 20       		.byte	0x20
 28649 07bc 12       		.uleb128 0x12
 28650 07bd 75020000 		.4byte	.LASF153
 28651 07c1 08       		.byte	0x8
 28652 07c2 5A01     		.2byte	0x15a
 28653 07c4 C4050000 		.4byte	0x5c4
 28654 07c8 21       		.byte	0x21
 28655 07c9 12       		.uleb128 0x12
 28656 07ca 6C0D0000 		.4byte	.LASF154
 28657 07ce 08       		.byte	0x8
 28658 07cf 5B01     		.2byte	0x15b
 28659 07d1 BB000000 		.4byte	0xbb
 28660 07d5 24       		.byte	0x24
 28661 07d6 12       		.uleb128 0x12
 28662 07d7 2C100000 		.4byte	.LASF155
 28663 07db 08       		.byte	0x8
 28664 07dc 5C01     		.2byte	0x15c
 28665 07de D0030000 		.4byte	0x3d0
 28666 07e2 25       		.byte	0x25
 28667 07e3 12       		.uleb128 0x12
 28668 07e4 5A030000 		.4byte	.LASF122
 28669 07e8 08       		.byte	0x8
 28670 07e9 5D01     		.2byte	0x15d
 28671 07eb 11080000 		.4byte	0x811
 28672 07ef 28       		.byte	0x28
 28673 07f0 00       		.byte	0
 28674 07f1 09       		.uleb128 0x9
 28675 07f2 97000000 		.4byte	0x97
 28676 07f6 01080000 		.4byte	0x801
 28677 07fa 0A       		.uleb128 0xa
 28678 07fb 18010000 		.4byte	0x118
 28679 07ff 04       		.byte	0x4
 28680 0800 00       		.byte	0
 28681 0801 09       		.uleb128 0x9
 28682 0802 DF000000 		.4byte	0xdf
 28683 0806 11080000 		.4byte	0x811
 28684 080a 0A       		.uleb128 0xa
 28685 080b 18010000 		.4byte	0x118
 28686 080f 02       		.byte	0x2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 626


 28687 0810 00       		.byte	0
 28688 0811 09       		.uleb128 0x9
 28689 0812 97000000 		.4byte	0x97
 28690 0816 21080000 		.4byte	0x821
 28691 081a 0A       		.uleb128 0xa
 28692 081b 18010000 		.4byte	0x118
 28693 081f 07       		.byte	0x7
 28694 0820 00       		.byte	0
 28695 0821 11       		.uleb128 0x11
 28696 0822 21020000 		.4byte	.LASF156
 28697 0826 10       		.byte	0x10
 28698 0827 08       		.byte	0x8
 28699 0828 6401     		.2byte	0x164
 28700 082a 70080000 		.4byte	0x870
 28701 082e 12       		.uleb128 0x12
 28702 082f F00C0000 		.4byte	.LASF157
 28703 0833 08       		.byte	0x8
 28704 0834 6501     		.2byte	0x165
 28705 0836 70080000 		.4byte	0x870
 28706 083a 00       		.byte	0
 28707 083b 12       		.uleb128 0x12
 28708 083c B9140000 		.4byte	.LASF158
 28709 0840 08       		.byte	0x8
 28710 0841 6601     		.2byte	0x166
 28711 0843 05050000 		.4byte	0x505
 28712 0847 04       		.byte	0x4
 28713 0848 12       		.uleb128 0x12
 28714 0849 09060000 		.4byte	.LASF159
 28715 084d 08       		.byte	0x8
 28716 084e 6701     		.2byte	0x167
 28717 0850 80080000 		.4byte	0x880
 28718 0854 0C       		.byte	0xc
 28719 0855 12       		.uleb128 0x12
 28720 0856 46100000 		.4byte	.LASF160
 28721 085a 08       		.byte	0x8
 28722 085b 6801     		.2byte	0x168
 28723 085d 97000000 		.4byte	0x97
 28724 0861 0E       		.byte	0xe
 28725 0862 12       		.uleb128 0x12
 28726 0863 BB120000 		.4byte	.LASF161
 28727 0867 08       		.byte	0x8
 28728 0868 6901     		.2byte	0x169
 28729 086a 97000000 		.4byte	0x97
 28730 086e 0F       		.byte	0xf
 28731 086f 00       		.byte	0
 28732 0870 09       		.uleb128 0x9
 28733 0871 A3000000 		.4byte	0xa3
 28734 0875 80080000 		.4byte	0x880
 28735 0879 0A       		.uleb128 0xa
 28736 087a 18010000 		.4byte	0x118
 28737 087e 01       		.byte	0x1
 28738 087f 00       		.byte	0
 28739 0880 09       		.uleb128 0x9
 28740 0881 97000000 		.4byte	0x97
 28741 0885 90080000 		.4byte	0x890
 28742 0889 0A       		.uleb128 0xa
 28743 088a 18010000 		.4byte	0x118
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 627


 28744 088e 01       		.byte	0x1
 28745 088f 00       		.byte	0
 28746 0890 11       		.uleb128 0x11
 28747 0891 4A0C0000 		.4byte	.LASF162
 28748 0895 20       		.byte	0x20
 28749 0896 08       		.byte	0x8
 28750 0897 7001     		.2byte	0x170
 28751 0899 D2080000 		.4byte	0x8d2
 28752 089d 12       		.uleb128 0x12
 28753 089e D5020000 		.4byte	.LASF163
 28754 08a2 08       		.byte	0x8
 28755 08a3 7101     		.2byte	0x171
 28756 08a5 97000000 		.4byte	0x97
 28757 08a9 00       		.byte	0
 28758 08aa 12       		.uleb128 0x12
 28759 08ab DB0D0000 		.4byte	.LASF164
 28760 08af 08       		.byte	0x8
 28761 08b0 7201     		.2byte	0x172
 28762 08b2 97000000 		.4byte	0x97
 28763 08b6 01       		.byte	0x1
 28764 08b7 12       		.uleb128 0x12
 28765 08b8 400B0000 		.4byte	.LASF165
 28766 08bc 08       		.byte	0x8
 28767 08bd 7301     		.2byte	0x173
 28768 08bf D2080000 		.4byte	0x8d2
 28769 08c3 02       		.byte	0x2
 28770 08c4 12       		.uleb128 0x12
 28771 08c5 5A030000 		.4byte	.LASF122
 28772 08c9 08       		.byte	0x8
 28773 08ca 7401     		.2byte	0x174
 28774 08cc F1070000 		.4byte	0x7f1
 28775 08d0 1B       		.byte	0x1b
 28776 08d1 00       		.byte	0
 28777 08d2 09       		.uleb128 0x9
 28778 08d3 97000000 		.4byte	0x97
 28779 08d7 E8080000 		.4byte	0x8e8
 28780 08db 0A       		.uleb128 0xa
 28781 08dc 18010000 		.4byte	0x118
 28782 08e0 04       		.byte	0x4
 28783 08e1 0A       		.uleb128 0xa
 28784 08e2 18010000 		.4byte	0x118
 28785 08e6 04       		.byte	0x4
 28786 08e7 00       		.byte	0
 28787 08e8 11       		.uleb128 0x11
 28788 08e9 39100000 		.4byte	.LASF166
 28789 08ed 20       		.byte	0x20
 28790 08ee 08       		.byte	0x8
 28791 08ef 7B01     		.2byte	0x17b
 28792 08f1 44090000 		.4byte	0x944
 28793 08f5 12       		.uleb128 0x12
 28794 08f6 AF0D0000 		.4byte	.LASF167
 28795 08fa 08       		.byte	0x8
 28796 08fb 7C01     		.2byte	0x17c
 28797 08fd 44090000 		.4byte	0x944
 28798 0901 00       		.byte	0
 28799 0902 12       		.uleb128 0x12
 28800 0903 A8120000 		.4byte	.LASF168
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 628


 28801 0907 08       		.byte	0x8
 28802 0908 7D01     		.2byte	0x17d
 28803 090a 97000000 		.4byte	0x97
 28804 090e 06       		.byte	0x6
 28805 090f 12       		.uleb128 0x12
 28806 0910 FD120000 		.4byte	.LASF169
 28807 0914 08       		.byte	0x8
 28808 0915 7E01     		.2byte	0x17e
 28809 0917 97000000 		.4byte	0x97
 28810 091b 07       		.byte	0x7
 28811 091c 12       		.uleb128 0x12
 28812 091d 38060000 		.4byte	.LASF170
 28813 0921 08       		.byte	0x8
 28814 0922 7F01     		.2byte	0x17f
 28815 0924 54090000 		.4byte	0x954
 28816 0928 08       		.byte	0x8
 28817 0929 12       		.uleb128 0x12
 28818 092a E3020000 		.4byte	.LASF171
 28819 092e 08       		.byte	0x8
 28820 092f 8001     		.2byte	0x180
 28821 0931 97000000 		.4byte	0x97
 28822 0935 14       		.byte	0x14
 28823 0936 12       		.uleb128 0x12
 28824 0937 5A030000 		.4byte	.LASF122
 28825 093b 08       		.byte	0x8
 28826 093c 8101     		.2byte	0x181
 28827 093e 64090000 		.4byte	0x964
 28828 0942 15       		.byte	0x15
 28829 0943 00       		.byte	0
 28830 0944 09       		.uleb128 0x9
 28831 0945 97000000 		.4byte	0x97
 28832 0949 54090000 		.4byte	0x954
 28833 094d 0A       		.uleb128 0xa
 28834 094e 18010000 		.4byte	0x118
 28835 0952 05       		.byte	0x5
 28836 0953 00       		.byte	0
 28837 0954 09       		.uleb128 0x9
 28838 0955 97000000 		.4byte	0x97
 28839 0959 64090000 		.4byte	0x964
 28840 095d 0A       		.uleb128 0xa
 28841 095e 18010000 		.4byte	0x118
 28842 0962 0B       		.byte	0xb
 28843 0963 00       		.byte	0
 28844 0964 09       		.uleb128 0x9
 28845 0965 97000000 		.4byte	0x97
 28846 0969 74090000 		.4byte	0x974
 28847 096d 0A       		.uleb128 0xa
 28848 096e 18010000 		.4byte	0x118
 28849 0972 0A       		.byte	0xa
 28850 0973 00       		.byte	0
 28851 0974 11       		.uleb128 0x11
 28852 0975 0E100000 		.4byte	.LASF172
 28853 0979 20       		.byte	0x20
 28854 097a 08       		.byte	0x8
 28855 097b 8801     		.2byte	0x188
 28856 097d A9090000 		.4byte	0x9a9
 28857 0981 12       		.uleb128 0x12
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 629


 28858 0982 4E040000 		.4byte	.LASF173
 28859 0986 08       		.byte	0x8
 28860 0987 8901     		.2byte	0x189
 28861 0989 40010000 		.4byte	0x140
 28862 098d 00       		.byte	0
 28863 098e 12       		.uleb128 0x12
 28864 098f 38030000 		.4byte	.LASF174
 28865 0993 08       		.byte	0x8
 28866 0994 8A01     		.2byte	0x18a
 28867 0996 21080000 		.4byte	0x821
 28868 099a 08       		.byte	0x8
 28869 099b 12       		.uleb128 0x12
 28870 099c 5A030000 		.4byte	.LASF122
 28871 09a0 08       		.byte	0x8
 28872 09a1 8B01     		.2byte	0x18b
 28873 09a3 11080000 		.4byte	0x811
 28874 09a7 18       		.byte	0x18
 28875 09a8 00       		.byte	0
 28876 09a9 11       		.uleb128 0x11
 28877 09aa 380A0000 		.4byte	.LASF175
 28878 09ae 10       		.byte	0x10
 28879 09af 08       		.byte	0x8
 28880 09b0 9201     		.2byte	0x192
 28881 09b2 F8090000 		.4byte	0x9f8
 28882 09b6 12       		.uleb128 0x12
 28883 09b7 E1080000 		.4byte	.LASF176
 28884 09bb 08       		.byte	0x8
 28885 09bc 9301     		.2byte	0x193
 28886 09be D3000000 		.4byte	0xd3
 28887 09c2 00       		.byte	0
 28888 09c3 12       		.uleb128 0x12
 28889 09c4 9A150000 		.4byte	.LASF177
 28890 09c8 08       		.byte	0x8
 28891 09c9 9401     		.2byte	0x194
 28892 09cb D3000000 		.4byte	0xd3
 28893 09cf 04       		.byte	0x4
 28894 09d0 12       		.uleb128 0x12
 28895 09d1 13060000 		.4byte	.LASF178
 28896 09d5 08       		.byte	0x8
 28897 09d6 9501     		.2byte	0x195
 28898 09d8 D3000000 		.4byte	0xd3
 28899 09dc 08       		.byte	0x8
 28900 09dd 12       		.uleb128 0x12
 28901 09de 3D070000 		.4byte	.LASF179
 28902 09e2 08       		.byte	0x8
 28903 09e3 9601     		.2byte	0x196
 28904 09e5 97000000 		.4byte	0x97
 28905 09e9 0C       		.byte	0xc
 28906 09ea 12       		.uleb128 0x12
 28907 09eb 5A030000 		.4byte	.LASF122
 28908 09ef 08       		.byte	0x8
 28909 09f0 9701     		.2byte	0x197
 28910 09f2 C4050000 		.4byte	0x5c4
 28911 09f6 0D       		.byte	0xd
 28912 09f7 00       		.byte	0
 28913 09f8 11       		.uleb128 0x11
 28914 09f9 3F110000 		.4byte	.LASF180
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 630


 28915 09fd 10       		.byte	0x10
 28916 09fe 08       		.byte	0x8
 28917 09ff 9E01     		.2byte	0x19e
 28918 0a01 3A0A0000 		.4byte	0xa3a
 28919 0a05 12       		.uleb128 0x12
 28920 0a06 50070000 		.4byte	.LASF181
 28921 0a0a 08       		.byte	0x8
 28922 0a0b 9F01     		.2byte	0x19f
 28923 0a0d A3000000 		.4byte	0xa3
 28924 0a11 00       		.byte	0
 28925 0a12 12       		.uleb128 0x12
 28926 0a13 73100000 		.4byte	.LASF182
 28927 0a17 08       		.byte	0x8
 28928 0a18 A001     		.2byte	0x1a0
 28929 0a1a C7000000 		.4byte	0xc7
 28930 0a1e 02       		.byte	0x2
 28931 0a1f 12       		.uleb128 0x12
 28932 0a20 59080000 		.4byte	.LASF183
 28933 0a24 08       		.byte	0x8
 28934 0a25 A101     		.2byte	0x1a1
 28935 0a27 70080000 		.4byte	0x870
 28936 0a2b 04       		.byte	0x4
 28937 0a2c 12       		.uleb128 0x12
 28938 0a2d 5A030000 		.4byte	.LASF122
 28939 0a31 08       		.byte	0x8
 28940 0a32 A201     		.2byte	0x1a2
 28941 0a34 11080000 		.4byte	0x811
 28942 0a38 08       		.byte	0x8
 28943 0a39 00       		.byte	0
 28944 0a3a 11       		.uleb128 0x11
 28945 0a3b AD010000 		.4byte	.LASF184
 28946 0a3f 10       		.byte	0x10
 28947 0a40 08       		.byte	0x8
 28948 0a41 A901     		.2byte	0x1a9
 28949 0a43 6F0A0000 		.4byte	0xa6f
 28950 0a47 12       		.uleb128 0x12
 28951 0a48 AD0F0000 		.4byte	.LASF185
 28952 0a4c 08       		.byte	0x8
 28953 0a4d AA01     		.2byte	0x1aa
 28954 0a4f 97000000 		.4byte	0x97
 28955 0a53 00       		.byte	0
 28956 0a54 12       		.uleb128 0x12
 28957 0a55 0A0B0000 		.4byte	.LASF186
 28958 0a59 08       		.byte	0x8
 28959 0a5a AB01     		.2byte	0x1ab
 28960 0a5c 97000000 		.4byte	0x97
 28961 0a60 01       		.byte	0x1
 28962 0a61 12       		.uleb128 0x12
 28963 0a62 5A030000 		.4byte	.LASF122
 28964 0a66 08       		.byte	0x8
 28965 0a67 AC01     		.2byte	0x1ac
 28966 0a69 6F0A0000 		.4byte	0xa6f
 28967 0a6d 02       		.byte	0x2
 28968 0a6e 00       		.byte	0
 28969 0a6f 09       		.uleb128 0x9
 28970 0a70 97000000 		.4byte	0x97
 28971 0a74 7F0A0000 		.4byte	0xa7f
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 631


 28972 0a78 0A       		.uleb128 0xa
 28973 0a79 18010000 		.4byte	0x118
 28974 0a7d 0D       		.byte	0xd
 28975 0a7e 00       		.byte	0
 28976 0a7f 11       		.uleb128 0x11
 28977 0a80 450D0000 		.4byte	.LASF187
 28978 0a84 10       		.byte	0x10
 28979 0a85 08       		.byte	0x8
 28980 0a86 B301     		.2byte	0x1b3
 28981 0a88 C10A0000 		.4byte	0xac1
 28982 0a8c 12       		.uleb128 0x12
 28983 0a8d F3130000 		.4byte	.LASF188
 28984 0a91 08       		.byte	0x8
 28985 0a92 B401     		.2byte	0x1b4
 28986 0a94 D3000000 		.4byte	0xd3
 28987 0a98 00       		.byte	0
 28988 0a99 12       		.uleb128 0x12
 28989 0a9a 28070000 		.4byte	.LASF189
 28990 0a9e 08       		.byte	0x8
 28991 0a9f B501     		.2byte	0x1b5
 28992 0aa1 EB000000 		.4byte	0xeb
 28993 0aa5 04       		.byte	0x4
 28994 0aa6 12       		.uleb128 0x12
 28995 0aa7 3F0F0000 		.4byte	.LASF190
 28996 0aab 08       		.byte	0x8
 28997 0aac B601     		.2byte	0x1b6
 28998 0aae EB000000 		.4byte	0xeb
 28999 0ab2 08       		.byte	0x8
 29000 0ab3 12       		.uleb128 0x12
 29001 0ab4 5A030000 		.4byte	.LASF122
 29002 0ab8 08       		.byte	0x8
 29003 0ab9 B701     		.2byte	0x1b7
 29004 0abb C10A0000 		.4byte	0xac1
 29005 0abf 0C       		.byte	0xc
 29006 0ac0 00       		.byte	0
 29007 0ac1 09       		.uleb128 0x9
 29008 0ac2 97000000 		.4byte	0x97
 29009 0ac6 D10A0000 		.4byte	0xad1
 29010 0aca 0A       		.uleb128 0xa
 29011 0acb 18010000 		.4byte	0x118
 29012 0acf 03       		.byte	0x3
 29013 0ad0 00       		.byte	0
 29014 0ad1 11       		.uleb128 0x11
 29015 0ad2 64020000 		.4byte	.LASF191
 29016 0ad6 12       		.byte	0x12
 29017 0ad7 08       		.byte	0x8
 29018 0ad8 BE01     		.2byte	0x1be
 29019 0ada 130B0000 		.4byte	0xb13
 29020 0ade 12       		.uleb128 0x12
 29021 0adf 1A150000 		.4byte	.LASF192
 29022 0ae3 08       		.byte	0x8
 29023 0ae4 BF01     		.2byte	0x1bf
 29024 0ae6 97000000 		.4byte	0x97
 29025 0aea 00       		.byte	0
 29026 0aeb 12       		.uleb128 0x12
 29027 0aec 86130000 		.4byte	.LASF193
 29028 0af0 08       		.byte	0x8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 632


 29029 0af1 C001     		.2byte	0x1c0
 29030 0af3 70080000 		.4byte	0x870
 29031 0af7 02       		.byte	0x2
 29032 0af8 12       		.uleb128 0x12
 29033 0af9 44000000 		.4byte	.LASF194
 29034 0afd 08       		.byte	0x8
 29035 0afe C101     		.2byte	0x1c1
 29036 0b00 97000000 		.4byte	0x97
 29037 0b04 06       		.byte	0x6
 29038 0b05 12       		.uleb128 0x12
 29039 0b06 5A030000 		.4byte	.LASF122
 29040 0b0a 08       		.byte	0x8
 29041 0b0b C201     		.2byte	0x1c2
 29042 0b0d 130B0000 		.4byte	0xb13
 29043 0b11 07       		.byte	0x7
 29044 0b12 00       		.byte	0
 29045 0b13 09       		.uleb128 0x9
 29046 0b14 97000000 		.4byte	0x97
 29047 0b18 230B0000 		.4byte	0xb23
 29048 0b1c 0A       		.uleb128 0xa
 29049 0b1d 18010000 		.4byte	0x118
 29050 0b21 09       		.byte	0x9
 29051 0b22 00       		.byte	0
 29052 0b23 14       		.uleb128 0x14
 29053 0b24 0E140000 		.4byte	.LASF195
 29054 0b28 F402     		.2byte	0x2f4
 29055 0b2a 08       		.byte	0x8
 29056 0b2b CB01     		.2byte	0x1cb
 29057 0b2d 080C0000 		.4byte	0xc08
 29058 0b31 12       		.uleb128 0x12
 29059 0b32 EE0B0000 		.4byte	.LASF196
 29060 0b36 08       		.byte	0x8
 29061 0b37 CD01     		.2byte	0x1cd
 29062 0b39 97000000 		.4byte	0x97
 29063 0b3d 00       		.byte	0
 29064 0b3e 12       		.uleb128 0x12
 29065 0b3f 5A030000 		.4byte	.LASF122
 29066 0b43 08       		.byte	0x8
 29067 0b44 CE01     		.2byte	0x1ce
 29068 0b46 080C0000 		.4byte	0xc08
 29069 0b4a 01       		.byte	0x1
 29070 0b4b 13       		.uleb128 0x13
 29071 0b4c 636E7400 		.ascii	"cnt\000"
 29072 0b50 08       		.byte	0x8
 29073 0b51 CF01     		.2byte	0x1cf
 29074 0b53 9C040000 		.4byte	0x49c
 29075 0b57 10       		.byte	0x10
 29076 0b58 12       		.uleb128 0x12
 29077 0b59 11030000 		.4byte	.LASF197
 29078 0b5d 08       		.byte	0x8
 29079 0b5e D001     		.2byte	0x1d0
 29080 0b60 180C0000 		.4byte	0xc18
 29081 0b64 60       		.byte	0x60
 29082 0b65 13       		.uleb128 0x13
 29083 0b66 64657600 		.ascii	"dev\000"
 29084 0b6a 08       		.byte	0x8
 29085 0b6b D101     		.2byte	0x1d1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 633


 29086 0b6d 35050000 		.4byte	0x535
 29087 0b71 A0       		.byte	0xa0
 29088 0b72 12       		.uleb128 0x12
 29089 0b73 90110000 		.4byte	.LASF198
 29090 0b77 08       		.byte	0x8
 29091 0b78 D201     		.2byte	0x1d2
 29092 0b7a 280C0000 		.4byte	0xc28
 29093 0b7e B0       		.byte	0xb0
 29094 0b7f 15       		.uleb128 0x15
 29095 0b80 656E6300 		.ascii	"enc\000"
 29096 0b84 08       		.byte	0x8
 29097 0b85 D301     		.2byte	0x1d3
 29098 0b87 380C0000 		.4byte	0xc38
 29099 0b8b 9001     		.2byte	0x190
 29100 0b8d 15       		.uleb128 0x15
 29101 0b8e 656D6700 		.ascii	"emg\000"
 29102 0b92 08       		.byte	0x8
 29103 0b93 D401     		.2byte	0x1d4
 29104 0b95 21080000 		.4byte	0x821
 29105 0b99 F001     		.2byte	0x1f0
 29106 0b9b 15       		.uleb128 0x15
 29107 0b9c 696D7500 		.ascii	"imu\000"
 29108 0ba0 08       		.byte	0x8
 29109 0ba1 D501     		.2byte	0x1d5
 29110 0ba3 90080000 		.4byte	0x890
 29111 0ba7 0002     		.2byte	0x200
 29112 0ba9 15       		.uleb128 0x15
 29113 0baa 65787000 		.ascii	"exp\000"
 29114 0bae 08       		.byte	0x8
 29115 0baf D601     		.2byte	0x1d6
 29116 0bb1 E8080000 		.4byte	0x8e8
 29117 0bb5 2002     		.2byte	0x220
 29118 0bb7 16       		.uleb128 0x16
 29119 0bb8 85000000 		.4byte	.LASF199
 29120 0bbc 08       		.byte	0x8
 29121 0bbd D701     		.2byte	0x1d7
 29122 0bbf 480C0000 		.4byte	0xc48
 29123 0bc3 4002     		.2byte	0x240
 29124 0bc5 15       		.uleb128 0x15
 29125 0bc6 534800   		.ascii	"SH\000"
 29126 0bc9 08       		.byte	0x8
 29127 0bca D901     		.2byte	0x1d9
 29128 0bcc A9090000 		.4byte	0x9a9
 29129 0bd0 A002     		.2byte	0x2a0
 29130 0bd2 16       		.uleb128 0x16
 29131 0bd3 21010000 		.4byte	.LASF200
 29132 0bd7 08       		.byte	0x8
 29133 0bd8 DA01     		.2byte	0x1da
 29134 0bda F8090000 		.4byte	0x9f8
 29135 0bde B002     		.2byte	0x2b0
 29136 0be0 15       		.uleb128 0x15
 29137 0be1 4D5300   		.ascii	"MS\000"
 29138 0be4 08       		.byte	0x8
 29139 0be5 DB01     		.2byte	0x1db
 29140 0be7 3A0A0000 		.4byte	0xa3a
 29141 0beb C002     		.2byte	0x2c0
 29142 0bed 15       		.uleb128 0x15
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 634


 29143 0bee 464200   		.ascii	"FB\000"
 29144 0bf1 08       		.byte	0x8
 29145 0bf2 DC01     		.2byte	0x1dc
 29146 0bf4 7F0A0000 		.4byte	0xa7f
 29147 0bf8 D002     		.2byte	0x2d0
 29148 0bfa 15       		.uleb128 0x15
 29149 0bfb 575200   		.ascii	"WR\000"
 29150 0bfe 08       		.byte	0x8
 29151 0bff DD01     		.2byte	0x1dd
 29152 0c01 D10A0000 		.4byte	0xad1
 29153 0c05 E002     		.2byte	0x2e0
 29154 0c07 00       		.byte	0
 29155 0c08 09       		.uleb128 0x9
 29156 0c09 97000000 		.4byte	0x97
 29157 0c0d 180C0000 		.4byte	0xc18
 29158 0c11 0A       		.uleb128 0xa
 29159 0c12 18010000 		.4byte	0x118
 29160 0c16 0E       		.byte	0xe
 29161 0c17 00       		.byte	0
 29162 0c18 09       		.uleb128 0x9
 29163 0c19 97000000 		.4byte	0x97
 29164 0c1d 280C0000 		.4byte	0xc28
 29165 0c21 0A       		.uleb128 0xa
 29166 0c22 18010000 		.4byte	0x118
 29167 0c26 3F       		.byte	0x3f
 29168 0c27 00       		.byte	0
 29169 0c28 09       		.uleb128 0x9
 29170 0c29 D4050000 		.4byte	0x5d4
 29171 0c2d 380C0000 		.4byte	0xc38
 29172 0c31 0A       		.uleb128 0xa
 29173 0c32 18010000 		.4byte	0x118
 29174 0c36 01       		.byte	0x1
 29175 0c37 00       		.byte	0
 29176 0c38 09       		.uleb128 0x9
 29177 0c39 6E070000 		.4byte	0x76e
 29178 0c3d 480C0000 		.4byte	0xc48
 29179 0c41 0A       		.uleb128 0xa
 29180 0c42 18010000 		.4byte	0x118
 29181 0c46 01       		.byte	0x1
 29182 0c47 00       		.byte	0
 29183 0c48 09       		.uleb128 0x9
 29184 0c49 74090000 		.4byte	0x974
 29185 0c4d 580C0000 		.4byte	0xc58
 29186 0c51 0A       		.uleb128 0xa
 29187 0c52 18010000 		.4byte	0x118
 29188 0c56 02       		.byte	0x2
 29189 0c57 00       		.byte	0
 29190 0c58 11       		.uleb128 0x11
 29191 0c59 870E0000 		.4byte	.LASF201
 29192 0c5d 28       		.byte	0x28
 29193 0c5e 08       		.byte	0x8
 29194 0c5f E801     		.2byte	0x1e8
 29195 0c61 B40C0000 		.4byte	0xcb4
 29196 0c65 12       		.uleb128 0x12
 29197 0c66 40050000 		.4byte	.LASF202
 29198 0c6a 08       		.byte	0x8
 29199 0c6b E901     		.2byte	0x1e9
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 635


 29200 0c6d 97000000 		.4byte	0x97
 29201 0c71 00       		.byte	0
 29202 0c72 12       		.uleb128 0x12
 29203 0c73 67030000 		.4byte	.LASF203
 29204 0c77 08       		.byte	0x8
 29205 0c78 EA01     		.2byte	0x1ea
 29206 0c7a B40C0000 		.4byte	0xcb4
 29207 0c7e 02       		.byte	0x2
 29208 0c7f 12       		.uleb128 0x12
 29209 0c80 A40D0000 		.4byte	.LASF204
 29210 0c84 08       		.byte	0x8
 29211 0c85 EB01     		.2byte	0x1eb
 29212 0c87 B40C0000 		.4byte	0xcb4
 29213 0c8b 08       		.byte	0x8
 29214 0c8c 12       		.uleb128 0x12
 29215 0c8d 930E0000 		.4byte	.LASF205
 29216 0c91 08       		.byte	0x8
 29217 0c92 EC01     		.2byte	0x1ec
 29218 0c94 B40C0000 		.4byte	0xcb4
 29219 0c98 0E       		.byte	0xe
 29220 0c99 12       		.uleb128 0x12
 29221 0c9a C8080000 		.4byte	.LASF206
 29222 0c9e 08       		.byte	0x8
 29223 0c9f ED01     		.2byte	0x1ed
 29224 0ca1 C40C0000 		.4byte	0xcc4
 29225 0ca5 14       		.byte	0x14
 29226 0ca6 12       		.uleb128 0x12
 29227 0ca7 36020000 		.4byte	.LASF207
 29228 0cab 08       		.byte	0x8
 29229 0cac EE01     		.2byte	0x1ee
 29230 0cae C7000000 		.4byte	0xc7
 29231 0cb2 24       		.byte	0x24
 29232 0cb3 00       		.byte	0
 29233 0cb4 09       		.uleb128 0x9
 29234 0cb5 C7000000 		.4byte	0xc7
 29235 0cb9 C40C0000 		.4byte	0xcc4
 29236 0cbd 0A       		.uleb128 0xa
 29237 0cbe 18010000 		.4byte	0x118
 29238 0cc2 02       		.byte	0x2
 29239 0cc3 00       		.byte	0
 29240 0cc4 09       		.uleb128 0x9
 29241 0cc5 EB000000 		.4byte	0xeb
 29242 0cc9 D40C0000 		.4byte	0xcd4
 29243 0ccd 0A       		.uleb128 0xa
 29244 0cce 18010000 		.4byte	0x118
 29245 0cd2 03       		.byte	0x3
 29246 0cd3 00       		.byte	0
 29247 0cd4 11       		.uleb128 0x11
 29248 0cd5 5F040000 		.4byte	.LASF208
 29249 0cd9 06       		.byte	0x6
 29250 0cda 08       		.byte	0x8
 29251 0cdb FE01     		.2byte	0x1fe
 29252 0cdd 160D0000 		.4byte	0xd16
 29253 0ce1 12       		.uleb128 0x12
 29254 0ce2 22080000 		.4byte	.LASF209
 29255 0ce6 08       		.byte	0x8
 29256 0ce7 FF01     		.2byte	0x1ff
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 636


 29257 0ce9 97000000 		.4byte	0x97
 29258 0ced 00       		.byte	0
 29259 0cee 12       		.uleb128 0x12
 29260 0cef BF150000 		.4byte	.LASF210
 29261 0cf3 08       		.byte	0x8
 29262 0cf4 0002     		.2byte	0x200
 29263 0cf6 97000000 		.4byte	0x97
 29264 0cfa 01       		.byte	0x1
 29265 0cfb 12       		.uleb128 0x12
 29266 0cfc A6060000 		.4byte	.LASF211
 29267 0d00 08       		.byte	0x8
 29268 0d01 0102     		.2byte	0x201
 29269 0d03 C7000000 		.4byte	0xc7
 29270 0d07 02       		.byte	0x2
 29271 0d08 12       		.uleb128 0x12
 29272 0d09 DC0A0000 		.4byte	.LASF212
 29273 0d0d 08       		.byte	0x8
 29274 0d0e 0202     		.2byte	0x202
 29275 0d10 C7000000 		.4byte	0xc7
 29276 0d14 04       		.byte	0x4
 29277 0d15 00       		.byte	0
 29278 0d16 17       		.uleb128 0x17
 29279 0d17 E40F0000 		.4byte	.LASF404
 29280 0d1b 02       		.byte	0x2
 29281 0d1c 1403     		.2byte	0x314
 29282 0d1e 8C000000 		.4byte	0x8c
 29283 0d22 03       		.byte	0x3
 29284 0d23 400D0000 		.4byte	0xd40
 29285 0d27 18       		.uleb128 0x18
 29286 0d28 3A050000 		.4byte	.LASF298
 29287 0d2c 02       		.byte	0x2
 29288 0d2d 1403     		.2byte	0x314
 29289 0d2f 8C000000 		.4byte	0x8c
 29290 0d33 19       		.uleb128 0x19
 29291 0d34 4A020000 		.4byte	.LASF405
 29292 0d38 02       		.byte	0x2
 29293 0d39 1603     		.2byte	0x316
 29294 0d3b 8C000000 		.4byte	0x8c
 29295 0d3f 00       		.byte	0
 29296 0d40 1A       		.uleb128 0x1a
 29297 0d41 33110000 		.4byte	.LASF213
 29298 0d45 01       		.byte	0x1
 29299 0d46 3D       		.byte	0x3d
 29300 0d47 00000000 		.4byte	.LFB64
 29301 0d4b 00050000 		.4byte	.LFE64-.LFB64
 29302 0d4f 01       		.uleb128 0x1
 29303 0d50 9C       		.byte	0x9c
 29304 0d51 1A0E0000 		.4byte	0xe1a
 29305 0d55 1B       		.uleb128 0x1b
 29306 0d56 AC060000 		.4byte	.LASF215
 29307 0d5a 01       		.byte	0x1
 29308 0d5b 3F       		.byte	0x3f
 29309 0d5c 97000000 		.4byte	0x97
 29310 0d60 02       		.uleb128 0x2
 29311 0d61 91       		.byte	0x91
 29312 0d62 77       		.sleb128 -9
 29313 0d63 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 637


 29314 0d64 160D0000 		.4byte	0xd16
 29315 0d68 44030000 		.4byte	.LBB10
 29316 0d6c 08000000 		.4byte	.LBE10-.LBB10
 29317 0d70 01       		.byte	0x1
 29318 0d71 9C       		.byte	0x9c
 29319 0d72 910D0000 		.4byte	0xd91
 29320 0d76 1D       		.uleb128 0x1d
 29321 0d77 270D0000 		.4byte	0xd27
 29322 0d7b 02       		.uleb128 0x2
 29323 0d7c 91       		.byte	0x91
 29324 0d7d 64       		.sleb128 -28
 29325 0d7e 1E       		.uleb128 0x1e
 29326 0d7f 44030000 		.4byte	.LBB11
 29327 0d83 08000000 		.4byte	.LBE11-.LBB11
 29328 0d87 1F       		.uleb128 0x1f
 29329 0d88 330D0000 		.4byte	0xd33
 29330 0d8c 02       		.uleb128 0x2
 29331 0d8d 91       		.byte	0x91
 29332 0d8e 60       		.sleb128 -32
 29333 0d8f 00       		.byte	0
 29334 0d90 00       		.byte	0
 29335 0d91 1C       		.uleb128 0x1c
 29336 0d92 160D0000 		.4byte	0xd16
 29337 0d96 62030000 		.4byte	.LBB12
 29338 0d9a 08000000 		.4byte	.LBE12-.LBB12
 29339 0d9e 01       		.byte	0x1
 29340 0d9f A8       		.byte	0xa8
 29341 0da0 BF0D0000 		.4byte	0xdbf
 29342 0da4 1D       		.uleb128 0x1d
 29343 0da5 270D0000 		.4byte	0xd27
 29344 0da9 02       		.uleb128 0x2
 29345 0daa 91       		.byte	0x91
 29346 0dab 70       		.sleb128 -16
 29347 0dac 1E       		.uleb128 0x1e
 29348 0dad 62030000 		.4byte	.LBB13
 29349 0db1 08000000 		.4byte	.LBE13-.LBB13
 29350 0db5 1F       		.uleb128 0x1f
 29351 0db6 330D0000 		.4byte	0xd33
 29352 0dba 02       		.uleb128 0x2
 29353 0dbb 91       		.byte	0x91
 29354 0dbc 5C       		.sleb128 -36
 29355 0dbd 00       		.byte	0
 29356 0dbe 00       		.byte	0
 29357 0dbf 20       		.uleb128 0x20
 29358 0dc0 160D0000 		.4byte	0xd16
 29359 0dc4 A4040000 		.4byte	.LBB14
 29360 0dc8 08000000 		.4byte	.LBE14-.LBB14
 29361 0dcc 01       		.byte	0x1
 29362 0dcd 0401     		.2byte	0x104
 29363 0dcf EE0D0000 		.4byte	0xdee
 29364 0dd3 1D       		.uleb128 0x1d
 29365 0dd4 270D0000 		.4byte	0xd27
 29366 0dd8 02       		.uleb128 0x2
 29367 0dd9 91       		.byte	0x91
 29368 0dda 6C       		.sleb128 -20
 29369 0ddb 1E       		.uleb128 0x1e
 29370 0ddc A4040000 		.4byte	.LBB15
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 638


 29371 0de0 08000000 		.4byte	.LBE15-.LBB15
 29372 0de4 1F       		.uleb128 0x1f
 29373 0de5 330D0000 		.4byte	0xd33
 29374 0de9 02       		.uleb128 0x2
 29375 0dea 91       		.byte	0x91
 29376 0deb 58       		.sleb128 -40
 29377 0dec 00       		.byte	0
 29378 0ded 00       		.byte	0
 29379 0dee 21       		.uleb128 0x21
 29380 0def 160D0000 		.4byte	0xd16
 29381 0df3 D4040000 		.4byte	.LBB16
 29382 0df7 08000000 		.4byte	.LBE16-.LBB16
 29383 0dfb 01       		.byte	0x1
 29384 0dfc 2201     		.2byte	0x122
 29385 0dfe 1D       		.uleb128 0x1d
 29386 0dff 270D0000 		.4byte	0xd27
 29387 0e03 02       		.uleb128 0x2
 29388 0e04 91       		.byte	0x91
 29389 0e05 68       		.sleb128 -24
 29390 0e06 1E       		.uleb128 0x1e
 29391 0e07 D4040000 		.4byte	.LBB17
 29392 0e0b 08000000 		.4byte	.LBE17-.LBB17
 29393 0e0f 1F       		.uleb128 0x1f
 29394 0e10 330D0000 		.4byte	0xd33
 29395 0e14 02       		.uleb128 0x2
 29396 0e15 91       		.byte	0x91
 29397 0e16 54       		.sleb128 -44
 29398 0e17 00       		.byte	0
 29399 0e18 00       		.byte	0
 29400 0e19 00       		.byte	0
 29401 0e1a 22       		.uleb128 0x22
 29402 0e1b 00000000 		.4byte	.LASF214
 29403 0e1f 01       		.byte	0x1
 29404 0e20 3101     		.2byte	0x131
 29405 0e22 00000000 		.4byte	.LFB65
 29406 0e26 22000000 		.4byte	.LFE65-.LFB65
 29407 0e2a 01       		.uleb128 0x1
 29408 0e2b 9C       		.byte	0x9c
 29409 0e2c 410E0000 		.4byte	0xe41
 29410 0e30 23       		.uleb128 0x23
 29411 0e31 C9050000 		.4byte	.LASF216
 29412 0e35 01       		.byte	0x1
 29413 0e36 3201     		.2byte	0x132
 29414 0e38 410E0000 		.4byte	0xe41
 29415 0e3c 03       		.uleb128 0x3
 29416 0e3d 91       		.byte	0x91
 29417 0e3e 9C74     		.sleb128 -1508
 29418 0e40 00       		.byte	0
 29419 0e41 09       		.uleb128 0x9
 29420 0e42 F9000000 		.4byte	0xf9
 29421 0e46 520E0000 		.4byte	0xe52
 29422 0e4a 24       		.uleb128 0x24
 29423 0e4b 18010000 		.4byte	0x118
 29424 0e4f DB05     		.2byte	0x5db
 29425 0e51 00       		.byte	0
 29426 0e52 22       		.uleb128 0x22
 29427 0e53 3F140000 		.4byte	.LASF217
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 639


 29428 0e57 01       		.byte	0x1
 29429 0e58 3D01     		.2byte	0x13d
 29430 0e5a 00000000 		.4byte	.LFB66
 29431 0e5e 34010000 		.4byte	.LFE66-.LFB66
 29432 0e62 01       		.uleb128 0x1
 29433 0e63 9C       		.byte	0x9c
 29434 0e64 9B0E0000 		.4byte	0xe9b
 29435 0e68 25       		.uleb128 0x25
 29436 0e69 99130000 		.4byte	.LASF220
 29437 0e6d 01       		.byte	0x1
 29438 0e6e 3D01     		.2byte	0x13d
 29439 0e70 A3000000 		.4byte	0xa3
 29440 0e74 04       		.uleb128 0x4
 29441 0e75 91       		.byte	0x91
 29442 0e76 B6C47E   		.sleb128 -24010
 29443 0e79 23       		.uleb128 0x23
 29444 0e7a C9050000 		.4byte	.LASF216
 29445 0e7e 01       		.byte	0x1
 29446 0e7f 3E01     		.2byte	0x13e
 29447 0e81 9B0E0000 		.4byte	0xe9b
 29448 0e85 03       		.uleb128 0x3
 29449 0e86 91       		.byte	0x91
 29450 0e87 D860     		.sleb128 -4008
 29451 0e89 23       		.uleb128 0x23
 29452 0e8a 96080000 		.4byte	.LASF218
 29453 0e8e 01       		.byte	0x1
 29454 0e8f 3F01     		.2byte	0x13f
 29455 0e91 AC0E0000 		.4byte	0xeac
 29456 0e95 04       		.uleb128 0x4
 29457 0e96 91       		.byte	0x91
 29458 0e97 B8C47E   		.sleb128 -24008
 29459 0e9a 00       		.byte	0
 29460 0e9b 09       		.uleb128 0x9
 29461 0e9c F9000000 		.4byte	0xf9
 29462 0ea0 AC0E0000 		.4byte	0xeac
 29463 0ea4 24       		.uleb128 0x24
 29464 0ea5 18010000 		.4byte	0x118
 29465 0ea9 9F0F     		.2byte	0xf9f
 29466 0eab 00       		.byte	0
 29467 0eac 09       		.uleb128 0x9
 29468 0ead F9000000 		.4byte	0xf9
 29469 0eb1 BD0E0000 		.4byte	0xebd
 29470 0eb5 24       		.uleb128 0x24
 29471 0eb6 18010000 		.4byte	0x118
 29472 0eba 1F4E     		.2byte	0x4e1f
 29473 0ebc 00       		.byte	0
 29474 0ebd 22       		.uleb128 0x22
 29475 0ebe F0010000 		.4byte	.LASF219
 29476 0ec2 01       		.byte	0x1
 29477 0ec3 6901     		.2byte	0x169
 29478 0ec5 00000000 		.4byte	.LFB67
 29479 0ec9 2C320000 		.4byte	.LFE67-.LFB67
 29480 0ecd 01       		.uleb128 0x1
 29481 0ece 9C       		.byte	0x9c
 29482 0ecf 61100000 		.4byte	0x1061
 29483 0ed3 25       		.uleb128 0x25
 29484 0ed4 500D0000 		.4byte	.LASF221
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 640


 29485 0ed8 01       		.byte	0x1
 29486 0ed9 6901     		.2byte	0x169
 29487 0edb 61100000 		.4byte	0x1061
 29488 0edf 03       		.uleb128 0x3
 29489 0ee0 91       		.byte	0x91
 29490 0ee1 DC53     		.sleb128 -5668
 29491 0ee3 25       		.uleb128 0x25
 29492 0ee4 18140000 		.4byte	.LASF222
 29493 0ee8 01       		.byte	0x1
 29494 0ee9 6901     		.2byte	0x169
 29495 0eeb 67100000 		.4byte	0x1067
 29496 0eef 03       		.uleb128 0x3
 29497 0ef0 91       		.byte	0x91
 29498 0ef1 D853     		.sleb128 -5672
 29499 0ef3 25       		.uleb128 0x25
 29500 0ef4 73030000 		.4byte	.LASF223
 29501 0ef8 01       		.byte	0x1
 29502 0ef9 6A01     		.2byte	0x16a
 29503 0efb 67100000 		.4byte	0x1067
 29504 0eff 03       		.uleb128 0x3
 29505 0f00 91       		.byte	0x91
 29506 0f01 D453     		.sleb128 -5676
 29507 0f03 25       		.uleb128 0x25
 29508 0f04 AD0C0000 		.4byte	.LASF224
 29509 0f08 01       		.byte	0x1
 29510 0f09 6A01     		.2byte	0x16a
 29511 0f0b 67100000 		.4byte	0x1067
 29512 0f0f 03       		.uleb128 0x3
 29513 0f10 91       		.byte	0x91
 29514 0f11 D053     		.sleb128 -5680
 29515 0f13 25       		.uleb128 0x25
 29516 0f14 63130000 		.4byte	.LASF225
 29517 0f18 01       		.byte	0x1
 29518 0f19 6B01     		.2byte	0x16b
 29519 0f1b 67100000 		.4byte	0x1067
 29520 0f1f 02       		.uleb128 0x2
 29521 0f20 91       		.byte	0x91
 29522 0f21 00       		.sleb128 0
 29523 0f22 25       		.uleb128 0x25
 29524 0f23 17080000 		.4byte	.LASF226
 29525 0f27 01       		.byte	0x1
 29526 0f28 6B01     		.2byte	0x16b
 29527 0f2a 6D100000 		.4byte	0x106d
 29528 0f2e 02       		.uleb128 0x2
 29529 0f2f 91       		.byte	0x91
 29530 0f30 04       		.sleb128 4
 29531 0f31 25       		.uleb128 0x25
 29532 0f32 290B0000 		.4byte	.LASF227
 29533 0f36 01       		.byte	0x1
 29534 0f37 6C01     		.2byte	0x16c
 29535 0f39 67100000 		.4byte	0x1067
 29536 0f3d 02       		.uleb128 0x2
 29537 0f3e 91       		.byte	0x91
 29538 0f3f 08       		.sleb128 8
 29539 0f40 25       		.uleb128 0x25
 29540 0f41 A8080000 		.4byte	.LASF228
 29541 0f45 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 641


 29542 0f46 6C01     		.2byte	0x16c
 29543 0f48 6D100000 		.4byte	0x106d
 29544 0f4c 02       		.uleb128 0x2
 29545 0f4d 91       		.byte	0x91
 29546 0f4e 0C       		.sleb128 12
 29547 0f4f 23       		.uleb128 0x23
 29548 0f50 1C060000 		.4byte	.LASF229
 29549 0f54 01       		.byte	0x1
 29550 0f55 6F01     		.2byte	0x16f
 29551 0f57 73100000 		.4byte	0x1073
 29552 0f5b 03       		.uleb128 0x3
 29553 0f5c 91       		.byte	0x91
 29554 0f5d A454     		.sleb128 -5596
 29555 0f5f 23       		.uleb128 0x23
 29556 0f60 9D0B0000 		.4byte	.LASF230
 29557 0f64 01       		.byte	0x1
 29558 0f65 7001     		.2byte	0x170
 29559 0f67 A3000000 		.4byte	0xa3
 29560 0f6b 02       		.uleb128 0x2
 29561 0f6c 91       		.byte	0x91
 29562 0f6d 60       		.sleb128 -32
 29563 0f6e 26       		.uleb128 0x26
 29564 0f6f 6900     		.ascii	"i\000"
 29565 0f71 01       		.byte	0x1
 29566 0f72 7301     		.2byte	0x173
 29567 0f74 97000000 		.4byte	0x97
 29568 0f78 02       		.uleb128 0x2
 29569 0f79 91       		.byte	0x91
 29570 0f7a 67       		.sleb128 -25
 29571 0f7b 26       		.uleb128 0x26
 29572 0f7c 6A00     		.ascii	"j\000"
 29573 0f7e 01       		.byte	0x1
 29574 0f7f 7301     		.2byte	0x173
 29575 0f81 97000000 		.4byte	0x97
 29576 0f85 02       		.uleb128 0x2
 29577 0f86 91       		.byte	0x91
 29578 0f87 66       		.sleb128 -26
 29579 0f88 26       		.uleb128 0x26
 29580 0f89 69647800 		.ascii	"idx\000"
 29581 0f8d 01       		.byte	0x1
 29582 0f8e 7401     		.2byte	0x174
 29583 0f90 97000000 		.4byte	0x97
 29584 0f94 02       		.uleb128 0x2
 29585 0f95 91       		.byte	0x91
 29586 0f96 65       		.sleb128 -27
 29587 0f97 23       		.uleb128 0x23
 29588 0f98 7E110000 		.4byte	.LASF231
 29589 0f9c 01       		.byte	0x1
 29590 0f9d 7501     		.2byte	0x175
 29591 0f9f 97000000 		.4byte	0x97
 29592 0fa3 02       		.uleb128 0x2
 29593 0fa4 91       		.byte	0x91
 29594 0fa5 64       		.sleb128 -28
 29595 0fa6 26       		.uleb128 0x26
 29596 0fa7 736F6400 		.ascii	"sod\000"
 29597 0fab 01       		.byte	0x1
 29598 0fac 7601     		.2byte	0x176
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 642


 29599 0fae 97000000 		.4byte	0x97
 29600 0fb2 02       		.uleb128 0x2
 29601 0fb3 91       		.byte	0x91
 29602 0fb4 63       		.sleb128 -29
 29603 0fb5 23       		.uleb128 0x23
 29604 0fb6 7E0C0000 		.4byte	.LASF232
 29605 0fba 01       		.byte	0x1
 29606 0fbb 7701     		.2byte	0x177
 29607 0fbd 97000000 		.4byte	0x97
 29608 0fc1 02       		.uleb128 0x2
 29609 0fc2 91       		.byte	0x91
 29610 0fc3 62       		.sleb128 -30
 29611 0fc4 23       		.uleb128 0x23
 29612 0fc5 A5150000 		.4byte	.LASF233
 29613 0fc9 01       		.byte	0x1
 29614 0fca 7801     		.2byte	0x178
 29615 0fcc 84100000 		.4byte	0x1084
 29616 0fd0 03       		.uleb128 0x3
 29617 0fd1 91       		.byte	0x91
 29618 0fd2 F053     		.sleb128 -5648
 29619 0fd4 23       		.uleb128 0x23
 29620 0fd5 4B130000 		.4byte	.LASF234
 29621 0fd9 01       		.byte	0x1
 29622 0fda 7901     		.2byte	0x179
 29623 0fdc EB000000 		.4byte	0xeb
 29624 0fe0 03       		.uleb128 0x3
 29625 0fe1 91       		.byte	0x91
 29626 0fe2 EC53     		.sleb128 -5652
 29627 0fe4 23       		.uleb128 0x23
 29628 0fe5 0F120000 		.4byte	.LASF235
 29629 0fe9 01       		.byte	0x1
 29630 0fea 7A01     		.2byte	0x17a
 29631 0fec C7000000 		.4byte	0xc7
 29632 0ff0 03       		.uleb128 0x3
 29633 0ff1 91       		.byte	0x91
 29634 0ff2 EA53     		.sleb128 -5654
 29635 0ff4 23       		.uleb128 0x23
 29636 0ff5 E50C0000 		.4byte	.LASF236
 29637 0ff9 01       		.byte	0x1
 29638 0ffa 7B01     		.2byte	0x17b
 29639 0ffc A3000000 		.4byte	0xa3
 29640 1000 03       		.uleb128 0x3
 29641 1001 91       		.byte	0x91
 29642 1002 E853     		.sleb128 -5656
 29643 1004 23       		.uleb128 0x23
 29644 1005 6C130000 		.4byte	.LASF237
 29645 1009 01       		.byte	0x1
 29646 100a 7C01     		.2byte	0x17c
 29647 100c D3000000 		.4byte	0xd3
 29648 1010 03       		.uleb128 0x3
 29649 1011 91       		.byte	0x91
 29650 1012 E453     		.sleb128 -5660
 29651 1014 23       		.uleb128 0x23
 29652 1015 670E0000 		.4byte	.LASF238
 29653 1019 01       		.byte	0x1
 29654 101a 7D01     		.2byte	0x17d
 29655 101c AF000000 		.4byte	0xaf
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 643


 29656 1020 03       		.uleb128 0x3
 29657 1021 91       		.byte	0x91
 29658 1022 E053     		.sleb128 -5664
 29659 1024 23       		.uleb128 0x23
 29660 1025 000E0000 		.4byte	.LASF239
 29661 1029 01       		.byte	0x1
 29662 102a 7F01     		.2byte	0x17f
 29663 102c 97000000 		.4byte	0x97
 29664 1030 02       		.uleb128 0x2
 29665 1031 91       		.byte	0x91
 29666 1032 5F       		.sleb128 -33
 29667 1033 23       		.uleb128 0x23
 29668 1034 4B010000 		.4byte	.LASF240
 29669 1038 01       		.byte	0x1
 29670 1039 8001     		.2byte	0x180
 29671 103b 97000000 		.4byte	0x97
 29672 103f 02       		.uleb128 0x2
 29673 1040 91       		.byte	0x91
 29674 1041 5E       		.sleb128 -34
 29675 1042 23       		.uleb128 0x23
 29676 1043 5F0B0000 		.4byte	.LASF241
 29677 1047 01       		.byte	0x1
 29678 1048 8201     		.2byte	0x182
 29679 104a 67100000 		.4byte	0x1067
 29680 104e 02       		.uleb128 0x2
 29681 104f 91       		.byte	0x91
 29682 1050 58       		.sleb128 -40
 29683 1051 23       		.uleb128 0x23
 29684 1052 DF010000 		.4byte	.LASF242
 29685 1056 01       		.byte	0x1
 29686 1057 8301     		.2byte	0x183
 29687 1059 67100000 		.4byte	0x1067
 29688 105d 02       		.uleb128 0x2
 29689 105e 91       		.byte	0x91
 29690 105f 54       		.sleb128 -44
 29691 1060 00       		.byte	0
 29692 1061 07       		.uleb128 0x7
 29693 1062 04       		.byte	0x4
 29694 1063 67100000 		.4byte	0x1067
 29695 1067 07       		.uleb128 0x7
 29696 1068 04       		.byte	0x4
 29697 1069 97000000 		.4byte	0x97
 29698 106d 07       		.uleb128 0x7
 29699 106e 04       		.byte	0x4
 29700 106f 25010000 		.4byte	0x125
 29701 1073 09       		.uleb128 0x9
 29702 1074 97000000 		.4byte	0x97
 29703 1078 84100000 		.4byte	0x1084
 29704 107c 24       		.uleb128 0x24
 29705 107d 18010000 		.4byte	0x118
 29706 1081 AD15     		.2byte	0x15ad
 29707 1083 00       		.byte	0
 29708 1084 09       		.uleb128 0x9
 29709 1085 F9000000 		.4byte	0xf9
 29710 1089 94100000 		.4byte	0x1094
 29711 108d 0A       		.uleb128 0xa
 29712 108e 18010000 		.4byte	0x118
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 644


 29713 1092 31       		.byte	0x31
 29714 1093 00       		.byte	0
 29715 1094 22       		.uleb128 0x22
 29716 1095 610F0000 		.4byte	.LASF243
 29717 1099 01       		.byte	0x1
 29718 109a 6C03     		.2byte	0x36c
 29719 109c 00000000 		.4byte	.LFB68
 29720 10a0 40190000 		.4byte	.LFE68-.LFB68
 29721 10a4 01       		.uleb128 0x1
 29722 10a5 9C       		.byte	0x9c
 29723 10a6 72120000 		.4byte	0x1272
 29724 10aa 25       		.uleb128 0x25
 29725 10ab 22070000 		.4byte	.LASF244
 29726 10af 01       		.byte	0x1
 29727 10b0 6C03     		.2byte	0x36c
 29728 10b2 A3000000 		.4byte	0xa3
 29729 10b6 03       		.uleb128 0x3
 29730 10b7 91       		.byte	0x91
 29731 10b8 EE74     		.sleb128 -1426
 29732 10ba 26       		.uleb128 0x26
 29733 10bb 6900     		.ascii	"i\000"
 29734 10bd 01       		.byte	0x1
 29735 10be 6D03     		.2byte	0x36d
 29736 10c0 97000000 		.4byte	0x97
 29737 10c4 02       		.uleb128 0x2
 29738 10c5 91       		.byte	0x91
 29739 10c6 6F       		.sleb128 -17
 29740 10c7 26       		.uleb128 0x26
 29741 10c8 6A00     		.ascii	"j\000"
 29742 10ca 01       		.byte	0x1
 29743 10cb 6D03     		.2byte	0x36d
 29744 10cd 97000000 		.4byte	0x97
 29745 10d1 02       		.uleb128 0x2
 29746 10d2 91       		.byte	0x91
 29747 10d3 6E       		.sleb128 -18
 29748 10d4 26       		.uleb128 0x26
 29749 10d5 736F6400 		.ascii	"sod\000"
 29750 10d9 01       		.byte	0x1
 29751 10da 6E03     		.2byte	0x36e
 29752 10dc 97000000 		.4byte	0x97
 29753 10e0 02       		.uleb128 0x2
 29754 10e1 91       		.byte	0x91
 29755 10e2 6D       		.sleb128 -19
 29756 10e3 23       		.uleb128 0x23
 29757 10e4 490B0000 		.4byte	.LASF245
 29758 10e8 01       		.byte	0x1
 29759 10e9 6F03     		.2byte	0x36f
 29760 10eb 97000000 		.4byte	0x97
 29761 10ef 02       		.uleb128 0x2
 29762 10f0 91       		.byte	0x91
 29763 10f1 62       		.sleb128 -30
 29764 10f2 23       		.uleb128 0x23
 29765 10f3 0F120000 		.4byte	.LASF235
 29766 10f7 01       		.byte	0x1
 29767 10f8 7003     		.2byte	0x370
 29768 10fa C7000000 		.4byte	0xc7
 29769 10fe 02       		.uleb128 0x2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 645


 29770 10ff 91       		.byte	0x91
 29771 1100 60       		.sleb128 -32
 29772 1101 23       		.uleb128 0x23
 29773 1102 E50C0000 		.4byte	.LASF236
 29774 1106 01       		.byte	0x1
 29775 1107 7103     		.2byte	0x371
 29776 1109 A3000000 		.4byte	0xa3
 29777 110d 02       		.uleb128 0x2
 29778 110e 91       		.byte	0x91
 29779 110f 5E       		.sleb128 -34
 29780 1110 23       		.uleb128 0x23
 29781 1111 6C130000 		.4byte	.LASF237
 29782 1115 01       		.byte	0x1
 29783 1116 7203     		.2byte	0x372
 29784 1118 D3000000 		.4byte	0xd3
 29785 111c 02       		.uleb128 0x2
 29786 111d 91       		.byte	0x91
 29787 111e 58       		.sleb128 -40
 29788 111f 23       		.uleb128 0x23
 29789 1120 670E0000 		.4byte	.LASF238
 29790 1124 01       		.byte	0x1
 29791 1125 7303     		.2byte	0x373
 29792 1127 AF000000 		.4byte	0xaf
 29793 112b 02       		.uleb128 0x2
 29794 112c 91       		.byte	0x91
 29795 112d 54       		.sleb128 -44
 29796 112e 23       		.uleb128 0x23
 29797 112f 4B130000 		.4byte	.LASF234
 29798 1133 01       		.byte	0x1
 29799 1134 7403     		.2byte	0x374
 29800 1136 EB000000 		.4byte	0xeb
 29801 113a 02       		.uleb128 0x2
 29802 113b 91       		.byte	0x91
 29803 113c 50       		.sleb128 -48
 29804 113d 23       		.uleb128 0x23
 29805 113e 000E0000 		.4byte	.LASF239
 29806 1142 01       		.byte	0x1
 29807 1143 7603     		.2byte	0x376
 29808 1145 97000000 		.4byte	0x97
 29809 1149 02       		.uleb128 0x2
 29810 114a 91       		.byte	0x91
 29811 114b 65       		.sleb128 -27
 29812 114c 23       		.uleb128 0x23
 29813 114d 4B010000 		.4byte	.LASF240
 29814 1151 01       		.byte	0x1
 29815 1152 7703     		.2byte	0x377
 29816 1154 97000000 		.4byte	0x97
 29817 1158 02       		.uleb128 0x2
 29818 1159 91       		.byte	0x91
 29819 115a 64       		.sleb128 -28
 29820 115b 23       		.uleb128 0x23
 29821 115c 89030000 		.4byte	.LASF246
 29822 1160 01       		.byte	0x1
 29823 1161 7A03     		.2byte	0x37a
 29824 1163 72120000 		.4byte	0x1272
 29825 1167 02       		.uleb128 0x2
 29826 1168 91       		.byte	0x91
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 646


 29827 1169 68       		.sleb128 -24
 29828 116a 23       		.uleb128 0x23
 29829 116b 500D0000 		.4byte	.LASF221
 29830 116f 01       		.byte	0x1
 29831 1170 8203     		.2byte	0x382
 29832 1172 78120000 		.4byte	0x1278
 29833 1176 03       		.uleb128 0x3
 29834 1177 91       		.byte	0x91
 29835 1178 847D     		.sleb128 -380
 29836 117a 23       		.uleb128 0x23
 29837 117b 18140000 		.4byte	.LASF222
 29838 117f 01       		.byte	0x1
 29839 1180 E003     		.2byte	0x3e0
 29840 1182 88120000 		.4byte	0x1288
 29841 1186 03       		.uleb128 0x3
 29842 1187 91       		.byte	0x91
 29843 1188 B07C     		.sleb128 -464
 29844 118a 23       		.uleb128 0x23
 29845 118b 73030000 		.4byte	.LASF223
 29846 118f 01       		.byte	0x1
 29847 1190 FC03     		.2byte	0x3fc
 29848 1192 88120000 		.4byte	0x1288
 29849 1196 03       		.uleb128 0x3
 29850 1197 91       		.byte	0x91
 29851 1198 DC7B     		.sleb128 -548
 29852 119a 23       		.uleb128 0x23
 29853 119b AD0C0000 		.4byte	.LASF224
 29854 119f 01       		.byte	0x1
 29855 11a0 1804     		.2byte	0x418
 29856 11a2 88120000 		.4byte	0x1288
 29857 11a6 03       		.uleb128 0x3
 29858 11a7 91       		.byte	0x91
 29859 11a8 887B     		.sleb128 -632
 29860 11aa 23       		.uleb128 0x23
 29861 11ab 17080000 		.4byte	.LASF226
 29862 11af 01       		.byte	0x1
 29863 11b0 3504     		.2byte	0x435
 29864 11b2 98120000 		.4byte	0x1298
 29865 11b6 03       		.uleb128 0x3
 29866 11b7 91       		.byte	0x91
 29867 11b8 BC78     		.sleb128 -964
 29868 11ba 23       		.uleb128 0x23
 29869 11bb A0140000 		.4byte	.LASF247
 29870 11bf 01       		.byte	0x1
 29871 11c0 5204     		.2byte	0x452
 29872 11c2 A8120000 		.4byte	0x12a8
 29873 11c6 03       		.uleb128 0x3
 29874 11c7 91       		.byte	0x91
 29875 11c8 C477     		.sleb128 -1084
 29876 11ca 23       		.uleb128 0x23
 29877 11cb 10000000 		.4byte	.LASF248
 29878 11cf 01       		.byte	0x1
 29879 11d0 5504     		.2byte	0x455
 29880 11d2 B8120000 		.4byte	0x12b8
 29881 11d6 03       		.uleb128 0x3
 29882 11d7 91       		.byte	0x91
 29883 11d8 8C77     		.sleb128 -1140
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 647


 29884 11da 23       		.uleb128 0x23
 29885 11db A8080000 		.4byte	.LASF228
 29886 11df 01       		.byte	0x1
 29887 11e0 5D04     		.2byte	0x45d
 29888 11e2 C8120000 		.4byte	0x12c8
 29889 11e6 03       		.uleb128 0x3
 29890 11e7 91       		.byte	0x91
 29891 11e8 DC76     		.sleb128 -1188
 29892 11ea 23       		.uleb128 0x23
 29893 11eb 63130000 		.4byte	.LASF225
 29894 11ef 01       		.byte	0x1
 29895 11f0 6C04     		.2byte	0x46c
 29896 11f2 D8120000 		.4byte	0x12d8
 29897 11f6 03       		.uleb128 0x3
 29898 11f7 91       		.byte	0x91
 29899 11f8 BC76     		.sleb128 -1220
 29900 11fa 23       		.uleb128 0x23
 29901 11fb 560D0000 		.4byte	.LASF249
 29902 11ff 01       		.byte	0x1
 29903 1200 6D04     		.2byte	0x46d
 29904 1202 E8120000 		.4byte	0x12e8
 29905 1206 03       		.uleb128 0x3
 29906 1207 91       		.byte	0x91
 29907 1208 B076     		.sleb128 -1232
 29908 120a 23       		.uleb128 0x23
 29909 120b 970C0000 		.4byte	.LASF250
 29910 120f 01       		.byte	0x1
 29911 1210 6E04     		.2byte	0x46e
 29912 1212 F8120000 		.4byte	0x12f8
 29913 1216 03       		.uleb128 0x3
 29914 1217 91       		.byte	0x91
 29915 1218 9C76     		.sleb128 -1252
 29916 121a 23       		.uleb128 0x23
 29917 121b 790E0000 		.4byte	.LASF251
 29918 121f 01       		.byte	0x1
 29919 1220 6F04     		.2byte	0x46f
 29920 1222 97000000 		.4byte	0x97
 29921 1226 02       		.uleb128 0x2
 29922 1227 91       		.byte	0x91
 29923 1228 63       		.sleb128 -29
 29924 1229 23       		.uleb128 0x23
 29925 122a 290B0000 		.4byte	.LASF227
 29926 122e 01       		.byte	0x1
 29927 122f 7804     		.2byte	0x478
 29928 1231 88120000 		.4byte	0x1288
 29929 1235 03       		.uleb128 0x3
 29930 1236 91       		.byte	0x91
 29931 1237 C875     		.sleb128 -1336
 29932 1239 23       		.uleb128 0x23
 29933 123a C7140000 		.4byte	.LASF252
 29934 123e 01       		.byte	0x1
 29935 123f 8304     		.2byte	0x483
 29936 1241 88120000 		.4byte	0x1288
 29937 1245 03       		.uleb128 0x3
 29938 1246 91       		.byte	0x91
 29939 1247 F474     		.sleb128 -1420
 29940 1249 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 648


 29941 124a AA180000 		.4byte	.LBB18
 29942 124e 86000000 		.4byte	.LBE18-.LBB18
 29943 1252 26       		.uleb128 0x26
 29944 1253 69647800 		.ascii	"idx\000"
 29945 1257 01       		.byte	0x1
 29946 1258 EC04     		.2byte	0x4ec
 29947 125a 97000000 		.4byte	0x97
 29948 125e 02       		.uleb128 0x2
 29949 125f 91       		.byte	0x91
 29950 1260 67       		.sleb128 -25
 29951 1261 23       		.uleb128 0x23
 29952 1262 80050000 		.4byte	.LASF253
 29953 1266 01       		.byte	0x1
 29954 1267 EC04     		.2byte	0x4ec
 29955 1269 97000000 		.4byte	0x97
 29956 126d 02       		.uleb128 0x2
 29957 126e 91       		.byte	0x91
 29958 126f 66       		.sleb128 -26
 29959 1270 00       		.byte	0
 29960 1271 00       		.byte	0
 29961 1272 07       		.uleb128 0x7
 29962 1273 04       		.byte	0x4
 29963 1274 230B0000 		.4byte	0xb23
 29964 1278 09       		.uleb128 0x9
 29965 1279 67100000 		.4byte	0x1067
 29966 127d 88120000 		.4byte	0x1288
 29967 1281 0A       		.uleb128 0xa
 29968 1282 18010000 		.4byte	0x118
 29969 1286 52       		.byte	0x52
 29970 1287 00       		.byte	0
 29971 1288 09       		.uleb128 0x9
 29972 1289 97000000 		.4byte	0x97
 29973 128d 98120000 		.4byte	0x1298
 29974 1291 0A       		.uleb128 0xa
 29975 1292 18010000 		.4byte	0x118
 29976 1296 52       		.byte	0x52
 29977 1297 00       		.byte	0
 29978 1298 09       		.uleb128 0x9
 29979 1299 25010000 		.4byte	0x125
 29980 129d A8120000 		.4byte	0x12a8
 29981 12a1 0A       		.uleb128 0xa
 29982 12a2 18010000 		.4byte	0x118
 29983 12a6 52       		.byte	0x52
 29984 12a7 00       		.byte	0
 29985 12a8 09       		.uleb128 0x9
 29986 12a9 F9000000 		.4byte	0xf9
 29987 12ad B8120000 		.4byte	0x12b8
 29988 12b1 0A       		.uleb128 0xa
 29989 12b2 18010000 		.4byte	0x118
 29990 12b6 75       		.byte	0x75
 29991 12b7 00       		.byte	0
 29992 12b8 09       		.uleb128 0x9
 29993 12b9 F9000000 		.4byte	0xf9
 29994 12bd C8120000 		.4byte	0x12c8
 29995 12c1 0A       		.uleb128 0xa
 29996 12c2 18010000 		.4byte	0x118
 29997 12c6 37       		.byte	0x37
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 649


 29998 12c7 00       		.byte	0
 29999 12c8 09       		.uleb128 0x9
 30000 12c9 25010000 		.4byte	0x125
 30001 12cd D8120000 		.4byte	0x12d8
 30002 12d1 0A       		.uleb128 0xa
 30003 12d2 18010000 		.4byte	0x118
 30004 12d6 0B       		.byte	0xb
 30005 12d7 00       		.byte	0
 30006 12d8 09       		.uleb128 0x9
 30007 12d9 97000000 		.4byte	0x97
 30008 12dd E8120000 		.4byte	0x12e8
 30009 12e1 0A       		.uleb128 0xa
 30010 12e2 18010000 		.4byte	0x118
 30011 12e6 1F       		.byte	0x1f
 30012 12e7 00       		.byte	0
 30013 12e8 09       		.uleb128 0x9
 30014 12e9 97000000 		.4byte	0x97
 30015 12ed F8120000 		.4byte	0x12f8
 30016 12f1 0A       		.uleb128 0xa
 30017 12f2 18010000 		.4byte	0x118
 30018 12f6 08       		.byte	0x8
 30019 12f7 00       		.byte	0
 30020 12f8 09       		.uleb128 0x9
 30021 12f9 97000000 		.4byte	0x97
 30022 12fd 08130000 		.4byte	0x1308
 30023 1301 0A       		.uleb128 0xa
 30024 1302 18010000 		.4byte	0x118
 30025 1306 11       		.byte	0x11
 30026 1307 00       		.byte	0
 30027 1308 22       		.uleb128 0x22
 30028 1309 1A040000 		.4byte	.LASF254
 30029 130d 01       		.byte	0x1
 30030 130e FD04     		.2byte	0x4fd
 30031 1310 00000000 		.4byte	.LFB69
 30032 1314 C0150000 		.4byte	.LFE69-.LFB69
 30033 1318 01       		.uleb128 0x1
 30034 1319 9C       		.byte	0x9c
 30035 131a AA130000 		.4byte	0x13aa
 30036 131e 25       		.uleb128 0x25
 30037 131f 22070000 		.4byte	.LASF244
 30038 1323 01       		.byte	0x1
 30039 1324 FD04     		.2byte	0x4fd
 30040 1326 A3000000 		.4byte	0xa3
 30041 132a 02       		.uleb128 0x2
 30042 132b 91       		.byte	0x91
 30043 132c 56       		.sleb128 -42
 30044 132d 26       		.uleb128 0x26
 30045 132e 6900     		.ascii	"i\000"
 30046 1330 01       		.byte	0x1
 30047 1331 FF04     		.2byte	0x4ff
 30048 1333 97000000 		.4byte	0x97
 30049 1337 02       		.uleb128 0x2
 30050 1338 91       		.byte	0x91
 30051 1339 67       		.sleb128 -25
 30052 133a 26       		.uleb128 0x26
 30053 133b 6A00     		.ascii	"j\000"
 30054 133d 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 650


 30055 133e FF04     		.2byte	0x4ff
 30056 1340 97000000 		.4byte	0x97
 30057 1344 02       		.uleb128 0x2
 30058 1345 91       		.byte	0x91
 30059 1346 66       		.sleb128 -26
 30060 1347 23       		.uleb128 0x23
 30061 1348 C80C0000 		.4byte	.LASF255
 30062 134c 01       		.byte	0x1
 30063 134d 0005     		.2byte	0x500
 30064 134f 97000000 		.4byte	0x97
 30065 1353 02       		.uleb128 0x2
 30066 1354 91       		.byte	0x91
 30067 1355 62       		.sleb128 -30
 30068 1356 23       		.uleb128 0x23
 30069 1357 4B130000 		.4byte	.LASF234
 30070 135b 01       		.byte	0x1
 30071 135c 0105     		.2byte	0x501
 30072 135e EB000000 		.4byte	0xeb
 30073 1362 02       		.uleb128 0x2
 30074 1363 91       		.byte	0x91
 30075 1364 5C       		.sleb128 -36
 30076 1365 23       		.uleb128 0x23
 30077 1366 F3030000 		.4byte	.LASF256
 30078 136a 01       		.byte	0x1
 30079 136b 0105     		.2byte	0x501
 30080 136d EB000000 		.4byte	0xeb
 30081 1371 02       		.uleb128 0x2
 30082 1372 91       		.byte	0x91
 30083 1373 58       		.sleb128 -40
 30084 1374 23       		.uleb128 0x23
 30085 1375 000E0000 		.4byte	.LASF239
 30086 1379 01       		.byte	0x1
 30087 137a 0305     		.2byte	0x503
 30088 137c 97000000 		.4byte	0x97
 30089 1380 02       		.uleb128 0x2
 30090 1381 91       		.byte	0x91
 30091 1382 64       		.sleb128 -28
 30092 1383 23       		.uleb128 0x23
 30093 1384 4B010000 		.4byte	.LASF240
 30094 1388 01       		.byte	0x1
 30095 1389 0405     		.2byte	0x504
 30096 138b 97000000 		.4byte	0x97
 30097 138f 02       		.uleb128 0x2
 30098 1390 91       		.byte	0x91
 30099 1391 63       		.sleb128 -29
 30100 1392 1E       		.uleb128 0x1e
 30101 1393 040B0000 		.4byte	.LBB19
 30102 1397 26000000 		.4byte	.LBE19-.LBB19
 30103 139b 26       		.uleb128 0x26
 30104 139c 6900     		.ascii	"i\000"
 30105 139e 01       		.byte	0x1
 30106 139f AB05     		.2byte	0x5ab
 30107 13a1 97000000 		.4byte	0x97
 30108 13a5 02       		.uleb128 0x2
 30109 13a6 91       		.byte	0x91
 30110 13a7 65       		.sleb128 -27
 30111 13a8 00       		.byte	0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 651


 30112 13a9 00       		.byte	0
 30113 13aa 22       		.uleb128 0x22
 30114 13ab 33090000 		.4byte	.LASF257
 30115 13af 01       		.byte	0x1
 30116 13b0 5706     		.2byte	0x657
 30117 13b2 00000000 		.4byte	.LFB70
 30118 13b6 F40D0000 		.4byte	.LFE70-.LFB70
 30119 13ba 01       		.uleb128 0x1
 30120 13bb 9C       		.byte	0x9c
 30121 13bc 39150000 		.4byte	0x1539
 30122 13c0 25       		.uleb128 0x25
 30123 13c1 22070000 		.4byte	.LASF244
 30124 13c5 01       		.byte	0x1
 30125 13c6 5706     		.2byte	0x657
 30126 13c8 A3000000 		.4byte	0xa3
 30127 13cc 03       		.uleb128 0x3
 30128 13cd 91       		.byte	0x91
 30129 13ce CE72     		.sleb128 -1714
 30130 13d0 23       		.uleb128 0x23
 30131 13d1 1C060000 		.4byte	.LASF229
 30132 13d5 01       		.byte	0x1
 30133 13d6 5A06     		.2byte	0x65a
 30134 13d8 39150000 		.4byte	0x1539
 30135 13dc 03       		.uleb128 0x3
 30136 13dd 91       		.byte	0x91
 30137 13de DC74     		.sleb128 -1444
 30138 13e0 23       		.uleb128 0x23
 30139 13e1 FC110000 		.4byte	.LASF258
 30140 13e5 01       		.byte	0x1
 30141 13e6 6106     		.2byte	0x661
 30142 13e8 A3000000 		.4byte	0xa3
 30143 13ec 02       		.uleb128 0x2
 30144 13ed 91       		.byte	0x91
 30145 13ee 62       		.sleb128 -30
 30146 13ef 23       		.uleb128 0x23
 30147 13f0 94050000 		.4byte	.LASF259
 30148 13f4 01       		.byte	0x1
 30149 13f5 6206     		.2byte	0x662
 30150 13f7 A3000000 		.4byte	0xa3
 30151 13fb 02       		.uleb128 0x2
 30152 13fc 91       		.byte	0x91
 30153 13fd 6E       		.sleb128 -18
 30154 13fe 23       		.uleb128 0x23
 30155 13ff 54090000 		.4byte	.LASF260
 30156 1403 01       		.byte	0x1
 30157 1404 6306     		.2byte	0x663
 30158 1406 A3000000 		.4byte	0xa3
 30159 140a 02       		.uleb128 0x2
 30160 140b 91       		.byte	0x91
 30161 140c 60       		.sleb128 -32
 30162 140d 23       		.uleb128 0x23
 30163 140e D3080000 		.4byte	.LASF261
 30164 1412 01       		.byte	0x1
 30165 1413 6406     		.2byte	0x664
 30166 1415 A3000000 		.4byte	0xa3
 30167 1419 02       		.uleb128 0x2
 30168 141a 91       		.byte	0x91
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 652


 30169 141b 5E       		.sleb128 -34
 30170 141c 26       		.uleb128 0x26
 30171 141d 6900     		.ascii	"i\000"
 30172 141f 01       		.byte	0x1
 30173 1420 6C06     		.2byte	0x66c
 30174 1422 A3000000 		.4byte	0xa3
 30175 1426 02       		.uleb128 0x2
 30176 1427 91       		.byte	0x91
 30177 1428 6C       		.sleb128 -20
 30178 1429 26       		.uleb128 0x26
 30179 142a 6A00     		.ascii	"j\000"
 30180 142c 01       		.byte	0x1
 30181 142d 6C06     		.2byte	0x66c
 30182 142f A3000000 		.4byte	0xa3
 30183 1433 02       		.uleb128 0x2
 30184 1434 91       		.byte	0x91
 30185 1435 6A       		.sleb128 -22
 30186 1436 26       		.uleb128 0x26
 30187 1437 6B00     		.ascii	"k\000"
 30188 1439 01       		.byte	0x1
 30189 143a 6C06     		.2byte	0x66c
 30190 143c A3000000 		.4byte	0xa3
 30191 1440 02       		.uleb128 0x2
 30192 1441 91       		.byte	0x91
 30193 1442 68       		.sleb128 -24
 30194 1443 26       		.uleb128 0x26
 30195 1444 6800     		.ascii	"h\000"
 30196 1446 01       		.byte	0x1
 30197 1447 6C06     		.2byte	0x66c
 30198 1449 A3000000 		.4byte	0xa3
 30199 144d 02       		.uleb128 0x2
 30200 144e 91       		.byte	0x91
 30201 144f 66       		.sleb128 -26
 30202 1450 23       		.uleb128 0x23
 30203 1451 89050000 		.4byte	.LASF262
 30204 1455 01       		.byte	0x1
 30205 1456 6D06     		.2byte	0x66d
 30206 1458 A3000000 		.4byte	0xa3
 30207 145c 02       		.uleb128 0x2
 30208 145d 91       		.byte	0x91
 30209 145e 5C       		.sleb128 -36
 30210 145f 23       		.uleb128 0x23
 30211 1460 150E0000 		.4byte	.LASF263
 30212 1464 01       		.byte	0x1
 30213 1465 7006     		.2byte	0x670
 30214 1467 30010000 		.4byte	0x130
 30215 146b 03       		.uleb128 0x3
 30216 146c 91       		.byte	0x91
 30217 146d C074     		.sleb128 -1472
 30218 146f 23       		.uleb128 0x23
 30219 1470 C3110000 		.4byte	.LASF264
 30220 1474 01       		.byte	0x1
 30221 1475 7106     		.2byte	0x671
 30222 1477 4A150000 		.4byte	0x154a
 30223 147b 03       		.uleb128 0x3
 30224 147c 91       		.byte	0x91
 30225 147d B474     		.sleb128 -1484
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 653


 30226 147f 23       		.uleb128 0x23
 30227 1480 B0070000 		.4byte	.LASF265
 30228 1484 01       		.byte	0x1
 30229 1485 7206     		.2byte	0x672
 30230 1487 5A150000 		.4byte	0x155a
 30231 148b 03       		.uleb128 0x3
 30232 148c 91       		.byte	0x91
 30233 148d A074     		.sleb128 -1504
 30234 148f 23       		.uleb128 0x23
 30235 1490 09000000 		.4byte	.LASF266
 30236 1494 01       		.byte	0x1
 30237 1495 7306     		.2byte	0x673
 30238 1497 6A150000 		.4byte	0x156a
 30239 149b 03       		.uleb128 0x3
 30240 149c 91       		.byte	0x91
 30241 149d 9074     		.sleb128 -1520
 30242 149f 23       		.uleb128 0x23
 30243 14a0 F20E0000 		.4byte	.LASF267
 30244 14a4 01       		.byte	0x1
 30245 14a5 7406     		.2byte	0x674
 30246 14a7 7A150000 		.4byte	0x157a
 30247 14ab 03       		.uleb128 0x3
 30248 14ac 91       		.byte	0x91
 30249 14ad E473     		.sleb128 -1564
 30250 14af 23       		.uleb128 0x23
 30251 14b0 51020000 		.4byte	.LASF268
 30252 14b4 01       		.byte	0x1
 30253 14b5 7506     		.2byte	0x675
 30254 14b7 30010000 		.4byte	0x130
 30255 14bb 03       		.uleb128 0x3
 30256 14bc 91       		.byte	0x91
 30257 14bd C873     		.sleb128 -1592
 30258 14bf 23       		.uleb128 0x23
 30259 14c0 BC010000 		.4byte	.LASF269
 30260 14c4 01       		.byte	0x1
 30261 14c5 7806     		.2byte	0x678
 30262 14c7 97000000 		.4byte	0x97
 30263 14cb 02       		.uleb128 0x2
 30264 14cc 91       		.byte	0x91
 30265 14cd 5B       		.sleb128 -37
 30266 14ce 23       		.uleb128 0x23
 30267 14cf 1A050000 		.4byte	.LASF270
 30268 14d3 01       		.byte	0x1
 30269 14d4 7906     		.2byte	0x679
 30270 14d6 97000000 		.4byte	0x97
 30271 14da 02       		.uleb128 0x2
 30272 14db 91       		.byte	0x91
 30273 14dc 5A       		.sleb128 -38
 30274 14dd 23       		.uleb128 0x23
 30275 14de 6B110000 		.4byte	.LASF271
 30276 14e2 01       		.byte	0x1
 30277 14e3 7A06     		.2byte	0x67a
 30278 14e5 97000000 		.4byte	0x97
 30279 14e9 02       		.uleb128 0x2
 30280 14ea 91       		.byte	0x91
 30281 14eb 59       		.sleb128 -39
 30282 14ec 23       		.uleb128 0x23
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 654


 30283 14ed EA110000 		.4byte	.LASF272
 30284 14f1 01       		.byte	0x1
 30285 14f2 7B06     		.2byte	0x67b
 30286 14f4 97000000 		.4byte	0x97
 30287 14f8 02       		.uleb128 0x2
 30288 14f9 91       		.byte	0x91
 30289 14fa 58       		.sleb128 -40
 30290 14fb 23       		.uleb128 0x23
 30291 14fc 28050000 		.4byte	.LASF273
 30292 1500 01       		.byte	0x1
 30293 1501 7C06     		.2byte	0x67c
 30294 1503 97000000 		.4byte	0x97
 30295 1507 02       		.uleb128 0x2
 30296 1508 91       		.byte	0x91
 30297 1509 57       		.sleb128 -41
 30298 150a 23       		.uleb128 0x23
 30299 150b 0A010000 		.4byte	.LASF274
 30300 150f 01       		.byte	0x1
 30301 1510 7D06     		.2byte	0x67d
 30302 1512 97000000 		.4byte	0x97
 30303 1516 02       		.uleb128 0x2
 30304 1517 91       		.byte	0x91
 30305 1518 65       		.sleb128 -27
 30306 1519 23       		.uleb128 0x23
 30307 151a A0140000 		.4byte	.LASF247
 30308 151e 01       		.byte	0x1
 30309 151f 7F06     		.2byte	0x67f
 30310 1521 A8120000 		.4byte	0x12a8
 30311 1525 03       		.uleb128 0x3
 30312 1526 91       		.byte	0x91
 30313 1527 D072     		.sleb128 -1712
 30314 1529 23       		.uleb128 0x23
 30315 152a 07040000 		.4byte	.LASF275
 30316 152e 01       		.byte	0x1
 30317 152f 8006     		.2byte	0x680
 30318 1531 97000000 		.4byte	0x97
 30319 1535 02       		.uleb128 0x2
 30320 1536 91       		.byte	0x91
 30321 1537 56       		.sleb128 -42
 30322 1538 00       		.byte	0
 30323 1539 09       		.uleb128 0x9
 30324 153a 97000000 		.4byte	0x97
 30325 153e 4A150000 		.4byte	0x154a
 30326 1542 24       		.uleb128 0x24
 30327 1543 18010000 		.4byte	0x118
 30328 1547 7805     		.2byte	0x578
 30329 1549 00       		.byte	0
 30330 154a 09       		.uleb128 0x9
 30331 154b F9000000 		.4byte	0xf9
 30332 154f 5A150000 		.4byte	0x155a
 30333 1553 0A       		.uleb128 0xa
 30334 1554 18010000 		.4byte	0x118
 30335 1558 0A       		.byte	0xa
 30336 1559 00       		.byte	0
 30337 155a 09       		.uleb128 0x9
 30338 155b F9000000 		.4byte	0xf9
 30339 155f 6A150000 		.4byte	0x156a
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 655


 30340 1563 0A       		.uleb128 0xa
 30341 1564 18010000 		.4byte	0x118
 30342 1568 13       		.byte	0x13
 30343 1569 00       		.byte	0
 30344 156a 09       		.uleb128 0x9
 30345 156b F9000000 		.4byte	0xf9
 30346 156f 7A150000 		.4byte	0x157a
 30347 1573 0A       		.uleb128 0xa
 30348 1574 18010000 		.4byte	0x118
 30349 1578 0F       		.byte	0xf
 30350 1579 00       		.byte	0
 30351 157a 09       		.uleb128 0x9
 30352 157b F9000000 		.4byte	0xf9
 30353 157f 8A150000 		.4byte	0x158a
 30354 1583 0A       		.uleb128 0xa
 30355 1584 18010000 		.4byte	0x118
 30356 1588 29       		.byte	0x29
 30357 1589 00       		.byte	0
 30358 158a 27       		.uleb128 0x27
 30359 158b 51030000 		.4byte	.LASF312
 30360 158f 01       		.byte	0x1
 30361 1590 4607     		.2byte	0x746
 30362 1592 00000000 		.4byte	.LFB71
 30363 1596 90000000 		.4byte	.LFE71-.LFB71
 30364 159a 01       		.uleb128 0x1
 30365 159b 9C       		.byte	0x9c
 30366 159c BB150000 		.4byte	0x15bb
 30367 15a0 26       		.uleb128 0x26
 30368 15a1 6900     		.ascii	"i\000"
 30369 15a3 01       		.byte	0x1
 30370 15a4 4807     		.2byte	0x748
 30371 15a6 97000000 		.4byte	0x97
 30372 15aa 02       		.uleb128 0x2
 30373 15ab 91       		.byte	0x91
 30374 15ac 6F       		.sleb128 -17
 30375 15ad 26       		.uleb128 0x26
 30376 15ae 6A00     		.ascii	"j\000"
 30377 15b0 01       		.byte	0x1
 30378 15b1 4807     		.2byte	0x748
 30379 15b3 97000000 		.4byte	0x97
 30380 15b7 02       		.uleb128 0x2
 30381 15b8 91       		.byte	0x91
 30382 15b9 6E       		.sleb128 -18
 30383 15ba 00       		.byte	0
 30384 15bb 22       		.uleb128 0x22
 30385 15bc 2A010000 		.4byte	.LASF276
 30386 15c0 01       		.byte	0x1
 30387 15c1 5907     		.2byte	0x759
 30388 15c3 00000000 		.4byte	.LFB72
 30389 15c7 60210000 		.4byte	.LFE72-.LFB72
 30390 15cb 01       		.uleb128 0x1
 30391 15cc 9C       		.byte	0x9c
 30392 15cd 74160000 		.4byte	0x1674
 30393 15d1 25       		.uleb128 0x25
 30394 15d2 1F0E0000 		.4byte	.LASF277
 30395 15d6 01       		.byte	0x1
 30396 15d7 5907     		.2byte	0x759
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 656


 30397 15d9 1F010000 		.4byte	0x11f
 30398 15dd 03       		.uleb128 0x3
 30399 15de 91       		.byte	0x91
 30400 15df D47E     		.sleb128 -172
 30401 15e1 26       		.uleb128 0x26
 30402 15e2 6900     		.ascii	"i\000"
 30403 15e4 01       		.byte	0x1
 30404 15e5 5B07     		.2byte	0x75b
 30405 15e7 73000000 		.4byte	0x73
 30406 15eb 02       		.uleb128 0x2
 30407 15ec 91       		.byte	0x91
 30408 15ed 54       		.sleb128 -44
 30409 15ee 23       		.uleb128 0x23
 30410 15ef 89030000 		.4byte	.LASF246
 30411 15f3 01       		.byte	0x1
 30412 15f4 5D07     		.2byte	0x75d
 30413 15f6 72120000 		.4byte	0x1272
 30414 15fa 02       		.uleb128 0x2
 30415 15fb 91       		.byte	0x91
 30416 15fc 48       		.sleb128 -56
 30417 15fd 1E       		.uleb128 0x1e
 30418 15fe 1C000000 		.4byte	.LBB20
 30419 1602 00210000 		.4byte	.LBE20-.LBB20
 30420 1606 26       		.uleb128 0x26
 30421 1607 73747200 		.ascii	"str\000"
 30422 160b 01       		.byte	0x1
 30423 160c 6007     		.2byte	0x760
 30424 160e 74160000 		.4byte	0x1674
 30425 1612 03       		.uleb128 0x3
 30426 1613 91       		.byte	0x91
 30427 1614 D87E     		.sleb128 -168
 30428 1616 26       		.uleb128 0x26
 30429 1617 6A00     		.ascii	"j\000"
 30430 1619 01       		.byte	0x1
 30431 161a 1909     		.2byte	0x919
 30432 161c 73000000 		.4byte	0x73
 30433 1620 02       		.uleb128 0x2
 30434 1621 91       		.byte	0x91
 30435 1622 4C       		.sleb128 -52
 30436 1623 1E       		.uleb128 0x1e
 30437 1624 1C030000 		.4byte	.LBB21
 30438 1628 CE130000 		.4byte	.LBE21-.LBB21
 30439 162c 26       		.uleb128 0x26
 30440 162d 6B00     		.ascii	"k\000"
 30441 162f 01       		.byte	0x1
 30442 1630 9407     		.2byte	0x794
 30443 1632 97000000 		.4byte	0x97
 30444 1636 02       		.uleb128 0x2
 30445 1637 91       		.byte	0x91
 30446 1638 53       		.sleb128 -45
 30447 1639 1E       		.uleb128 0x1e
 30448 163a 6C030000 		.4byte	.LBB22
 30449 163e 62130000 		.4byte	.LBE22-.LBB22
 30450 1642 23       		.uleb128 0x23
 30451 1643 000E0000 		.4byte	.LASF239
 30452 1647 01       		.byte	0x1
 30453 1648 9607     		.2byte	0x796
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 657


 30454 164a 97000000 		.4byte	0x97
 30455 164e 02       		.uleb128 0x2
 30456 164f 91       		.byte	0x91
 30457 1650 47       		.sleb128 -57
 30458 1651 26       		.uleb128 0x26
 30459 1652 4D4F5400 		.ascii	"MOT\000"
 30460 1656 01       		.byte	0x1
 30461 1657 9707     		.2byte	0x797
 30462 1659 84160000 		.4byte	0x1684
 30463 165d 02       		.uleb128 0x2
 30464 165e 91       		.byte	0x91
 30465 165f 40       		.sleb128 -64
 30466 1660 23       		.uleb128 0x23
 30467 1661 08140000 		.4byte	.LASF278
 30468 1665 01       		.byte	0x1
 30469 1666 9807     		.2byte	0x798
 30470 1668 97000000 		.4byte	0x97
 30471 166c 03       		.uleb128 0x3
 30472 166d 91       		.byte	0x91
 30473 166e BF7F     		.sleb128 -65
 30474 1670 00       		.byte	0
 30475 1671 00       		.byte	0
 30476 1672 00       		.byte	0
 30477 1673 00       		.byte	0
 30478 1674 09       		.uleb128 0x9
 30479 1675 F9000000 		.4byte	0xf9
 30480 1679 84160000 		.4byte	0x1684
 30481 167d 0A       		.uleb128 0xa
 30482 167e 18010000 		.4byte	0x118
 30483 1682 63       		.byte	0x63
 30484 1683 00       		.byte	0
 30485 1684 07       		.uleb128 0x7
 30486 1685 04       		.byte	0x4
 30487 1686 D4050000 		.4byte	0x5d4
 30488 168a 22       		.uleb128 0x22
 30489 168b 250F0000 		.4byte	.LASF279
 30490 168f 01       		.byte	0x1
 30491 1690 4309     		.2byte	0x943
 30492 1692 00000000 		.4byte	.LFB73
 30493 1696 BC030000 		.4byte	.LFE73-.LFB73
 30494 169a 01       		.uleb128 0x1
 30495 169b 9C       		.byte	0x9c
 30496 169c 0A170000 		.4byte	0x170a
 30497 16a0 25       		.uleb128 0x25
 30498 16a1 1F0E0000 		.4byte	.LASF277
 30499 16a5 01       		.byte	0x1
 30500 16a6 4309     		.2byte	0x943
 30501 16a8 1F010000 		.4byte	0x11f
 30502 16ac 03       		.uleb128 0x3
 30503 16ad 91       		.byte	0x91
 30504 16ae EC7E     		.sleb128 -148
 30505 16b0 26       		.uleb128 0x26
 30506 16b1 73747200 		.ascii	"str\000"
 30507 16b5 01       		.byte	0x1
 30508 16b6 4509     		.2byte	0x945
 30509 16b8 74160000 		.4byte	0x1674
 30510 16bc 03       		.uleb128 0x3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 658


 30511 16bd 91       		.byte	0x91
 30512 16be F07E     		.sleb128 -144
 30513 16c0 26       		.uleb128 0x26
 30514 16c1 6900     		.ascii	"i\000"
 30515 16c3 01       		.byte	0x1
 30516 16c4 4609     		.2byte	0x946
 30517 16c6 73000000 		.4byte	0x73
 30518 16ca 02       		.uleb128 0x2
 30519 16cb 91       		.byte	0x91
 30520 16cc 64       		.sleb128 -28
 30521 16cd 23       		.uleb128 0x23
 30522 16ce B7040000 		.4byte	.LASF280
 30523 16d2 01       		.byte	0x1
 30524 16d3 4709     		.2byte	0x947
 30525 16d5 73000000 		.4byte	0x73
 30526 16d9 02       		.uleb128 0x2
 30527 16da 91       		.byte	0x91
 30528 16db 54       		.sleb128 -44
 30529 16dc 23       		.uleb128 0x23
 30530 16dd 89030000 		.4byte	.LASF246
 30531 16e1 01       		.byte	0x1
 30532 16e2 4909     		.2byte	0x949
 30533 16e4 72120000 		.4byte	0x1272
 30534 16e8 02       		.uleb128 0x2
 30535 16e9 91       		.byte	0x91
 30536 16ea 60       		.sleb128 -32
 30537 16eb 26       		.uleb128 0x26
 30538 16ec 4D4F5400 		.ascii	"MOT\000"
 30539 16f0 01       		.byte	0x1
 30540 16f1 4A09     		.2byte	0x94a
 30541 16f3 84160000 		.4byte	0x1684
 30542 16f7 02       		.uleb128 0x2
 30543 16f8 91       		.byte	0x91
 30544 16f9 5C       		.sleb128 -36
 30545 16fa 23       		.uleb128 0x23
 30546 16fb 08140000 		.4byte	.LASF278
 30547 16ff 01       		.byte	0x1
 30548 1700 4B09     		.2byte	0x94b
 30549 1702 97000000 		.4byte	0x97
 30550 1706 02       		.uleb128 0x2
 30551 1707 91       		.byte	0x91
 30552 1708 5B       		.sleb128 -37
 30553 1709 00       		.byte	0
 30554 170a 22       		.uleb128 0x22
 30555 170b 8D0F0000 		.4byte	.LASF281
 30556 170f 01       		.byte	0x1
 30557 1710 8709     		.2byte	0x987
 30558 1712 00000000 		.4byte	.LFB74
 30559 1716 7C120000 		.4byte	.LFE74-.LFB74
 30560 171a 01       		.uleb128 0x1
 30561 171b 9C       		.byte	0x9c
 30562 171c AB170000 		.4byte	0x17ab
 30563 1720 25       		.uleb128 0x25
 30564 1721 1F0E0000 		.4byte	.LASF277
 30565 1725 01       		.byte	0x1
 30566 1726 8709     		.2byte	0x987
 30567 1728 1F010000 		.4byte	0x11f
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 659


 30568 172c 03       		.uleb128 0x3
 30569 172d 91       		.byte	0x91
 30570 172e D47E     		.sleb128 -172
 30571 1730 26       		.uleb128 0x26
 30572 1731 73747200 		.ascii	"str\000"
 30573 1735 01       		.byte	0x1
 30574 1736 8909     		.2byte	0x989
 30575 1738 74160000 		.4byte	0x1674
 30576 173c 03       		.uleb128 0x3
 30577 173d 91       		.byte	0x91
 30578 173e DC7E     		.sleb128 -164
 30579 1740 26       		.uleb128 0x26
 30580 1741 6900     		.ascii	"i\000"
 30581 1743 01       		.byte	0x1
 30582 1744 8A09     		.2byte	0x98a
 30583 1746 73000000 		.4byte	0x73
 30584 174a 02       		.uleb128 0x2
 30585 174b 91       		.byte	0x91
 30586 174c 54       		.sleb128 -44
 30587 174d 23       		.uleb128 0x23
 30588 174e 89030000 		.4byte	.LASF246
 30589 1752 01       		.byte	0x1
 30590 1753 8E09     		.2byte	0x98e
 30591 1755 72120000 		.4byte	0x1272
 30592 1759 02       		.uleb128 0x2
 30593 175a 91       		.byte	0x91
 30594 175b 4C       		.sleb128 -52
 30595 175c 1E       		.uleb128 0x1e
 30596 175d 08010000 		.4byte	.LBB23
 30597 1761 D40C0000 		.4byte	.LBE23-.LBB23
 30598 1765 26       		.uleb128 0x26
 30599 1766 6B00     		.ascii	"k\000"
 30600 1768 01       		.byte	0x1
 30601 1769 A309     		.2byte	0x9a3
 30602 176b 97000000 		.4byte	0x97
 30603 176f 02       		.uleb128 0x2
 30604 1770 91       		.byte	0x91
 30605 1771 53       		.sleb128 -45
 30606 1772 1E       		.uleb128 0x1e
 30607 1773 12010000 		.4byte	.LBB24
 30608 1777 AE0C0000 		.4byte	.LBE24-.LBB24
 30609 177b 23       		.uleb128 0x23
 30610 177c 000E0000 		.4byte	.LASF239
 30611 1780 01       		.byte	0x1
 30612 1781 A509     		.2byte	0x9a5
 30613 1783 97000000 		.4byte	0x97
 30614 1787 02       		.uleb128 0x2
 30615 1788 91       		.byte	0x91
 30616 1789 4B       		.sleb128 -53
 30617 178a 26       		.uleb128 0x26
 30618 178b 4D4F5400 		.ascii	"MOT\000"
 30619 178f 01       		.byte	0x1
 30620 1790 A609     		.2byte	0x9a6
 30621 1792 84160000 		.4byte	0x1684
 30622 1796 02       		.uleb128 0x2
 30623 1797 91       		.byte	0x91
 30624 1798 44       		.sleb128 -60
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 660


 30625 1799 23       		.uleb128 0x23
 30626 179a 08140000 		.4byte	.LASF278
 30627 179e 01       		.byte	0x1
 30628 179f A709     		.2byte	0x9a7
 30629 17a1 97000000 		.4byte	0x97
 30630 17a5 02       		.uleb128 0x2
 30631 17a6 91       		.byte	0x91
 30632 17a7 43       		.sleb128 -61
 30633 17a8 00       		.byte	0
 30634 17a9 00       		.byte	0
 30635 17aa 00       		.byte	0
 30636 17ab 22       		.uleb128 0x22
 30637 17ac BE0B0000 		.4byte	.LASF282
 30638 17b0 01       		.byte	0x1
 30639 17b1 8F0A     		.2byte	0xa8f
 30640 17b3 00000000 		.4byte	.LFB75
 30641 17b7 C8000000 		.4byte	.LFE75-.LFB75
 30642 17bb 01       		.uleb128 0x1
 30643 17bc 9C       		.byte	0x9c
 30644 17bd EF170000 		.4byte	0x17ef
 30645 17c1 25       		.uleb128 0x25
 30646 17c2 1F0E0000 		.4byte	.LASF277
 30647 17c6 01       		.byte	0x1
 30648 17c7 8F0A     		.2byte	0xa8f
 30649 17c9 1F010000 		.4byte	0x11f
 30650 17cd 03       		.uleb128 0x3
 30651 17ce 91       		.byte	0x91
 30652 17cf 847F     		.sleb128 -124
 30653 17d1 26       		.uleb128 0x26
 30654 17d2 73747200 		.ascii	"str\000"
 30655 17d6 01       		.byte	0x1
 30656 17d7 910A     		.2byte	0xa91
 30657 17d9 74160000 		.4byte	0x1674
 30658 17dd 03       		.uleb128 0x3
 30659 17de 91       		.byte	0x91
 30660 17df 887F     		.sleb128 -120
 30661 17e1 26       		.uleb128 0x26
 30662 17e2 6900     		.ascii	"i\000"
 30663 17e4 01       		.byte	0x1
 30664 17e5 920A     		.2byte	0xa92
 30665 17e7 73000000 		.4byte	0x73
 30666 17eb 02       		.uleb128 0x2
 30667 17ec 91       		.byte	0x91
 30668 17ed 6C       		.sleb128 -20
 30669 17ee 00       		.byte	0
 30670 17ef 22       		.uleb128 0x22
 30671 17f0 2B0E0000 		.4byte	.LASF283
 30672 17f4 01       		.byte	0x1
 30673 17f5 A70A     		.2byte	0xaa7
 30674 17f7 00000000 		.4byte	.LFB76
 30675 17fb 30010000 		.4byte	.LFE76-.LFB76
 30676 17ff 01       		.uleb128 0x1
 30677 1800 9C       		.byte	0x9c
 30678 1801 33180000 		.4byte	0x1833
 30679 1805 25       		.uleb128 0x25
 30680 1806 1F0E0000 		.4byte	.LASF277
 30681 180a 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 661


 30682 180b A70A     		.2byte	0xaa7
 30683 180d 1F010000 		.4byte	0x11f
 30684 1811 03       		.uleb128 0x3
 30685 1812 91       		.byte	0x91
 30686 1813 847F     		.sleb128 -124
 30687 1815 26       		.uleb128 0x26
 30688 1816 73747200 		.ascii	"str\000"
 30689 181a 01       		.byte	0x1
 30690 181b A90A     		.2byte	0xaa9
 30691 181d 74160000 		.4byte	0x1674
 30692 1821 03       		.uleb128 0x3
 30693 1822 91       		.byte	0x91
 30694 1823 887F     		.sleb128 -120
 30695 1825 26       		.uleb128 0x26
 30696 1826 6900     		.ascii	"i\000"
 30697 1828 01       		.byte	0x1
 30698 1829 AA0A     		.2byte	0xaaa
 30699 182b 73000000 		.4byte	0x73
 30700 182f 02       		.uleb128 0x2
 30701 1830 91       		.byte	0x91
 30702 1831 6C       		.sleb128 -20
 30703 1832 00       		.byte	0
 30704 1833 28       		.uleb128 0x28
 30705 1834 BF0F0000 		.4byte	.LASF284
 30706 1838 01       		.byte	0x1
 30707 1839 CD0A     		.2byte	0xacd
 30708 183b 00000000 		.4byte	.LFB77
 30709 183f 28000000 		.4byte	.LFE77-.LFB77
 30710 1843 01       		.uleb128 0x1
 30711 1844 9C       		.byte	0x9c
 30712 1845 59180000 		.4byte	0x1859
 30713 1849 25       		.uleb128 0x25
 30714 184a 1F0E0000 		.4byte	.LASF277
 30715 184e 01       		.byte	0x1
 30716 184f CD0A     		.2byte	0xacd
 30717 1851 1F010000 		.4byte	0x11f
 30718 1855 02       		.uleb128 0x2
 30719 1856 91       		.byte	0x91
 30720 1857 6C       		.sleb128 -20
 30721 1858 00       		.byte	0
 30722 1859 22       		.uleb128 0x22
 30723 185a B8030000 		.4byte	.LASF285
 30724 185e 01       		.byte	0x1
 30725 185f D80A     		.2byte	0xad8
 30726 1861 00000000 		.4byte	.LFB78
 30727 1865 F0000000 		.4byte	.LFE78-.LFB78
 30728 1869 01       		.uleb128 0x1
 30729 186a 9C       		.byte	0x9c
 30730 186b C8180000 		.4byte	0x18c8
 30731 186f 25       		.uleb128 0x25
 30732 1870 1F0E0000 		.4byte	.LASF277
 30733 1874 01       		.byte	0x1
 30734 1875 D80A     		.2byte	0xad8
 30735 1877 1F010000 		.4byte	0x11f
 30736 187b 03       		.uleb128 0x3
 30737 187c 91       		.byte	0x91
 30738 187d FC7E     		.sleb128 -132
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 662


 30739 187f 23       		.uleb128 0x23
 30740 1880 41020000 		.4byte	.LASF286
 30741 1884 01       		.byte	0x1
 30742 1885 DA0A     		.2byte	0xada
 30743 1887 74160000 		.4byte	0x1674
 30744 188b 03       		.uleb128 0x3
 30745 188c 91       		.byte	0x91
 30746 188d 847F     		.sleb128 -124
 30747 188f 23       		.uleb128 0x23
 30748 1890 E5010000 		.4byte	.LASF287
 30749 1894 01       		.byte	0x1
 30750 1895 DB0A     		.2byte	0xadb
 30751 1897 A3000000 		.4byte	0xa3
 30752 189b 02       		.uleb128 0x2
 30753 189c 91       		.byte	0x91
 30754 189d 6E       		.sleb128 -18
 30755 189e 23       		.uleb128 0x23
 30756 189f CA000000 		.4byte	.LASF288
 30757 18a3 01       		.byte	0x1
 30758 18a4 DC0A     		.2byte	0xadc
 30759 18a6 EB000000 		.4byte	0xeb
 30760 18aa 05       		.uleb128 0x5
 30761 18ab 03       		.byte	0x3
 30762 18ac 00000000 		.4byte	h_time.11215
 30763 18b0 1E       		.uleb128 0x1e
 30764 18b1 26000000 		.4byte	.LBB25
 30765 18b5 A4000000 		.4byte	.LBE25-.LBB25
 30766 18b9 26       		.uleb128 0x26
 30767 18ba 6900     		.ascii	"i\000"
 30768 18bc 01       		.byte	0x1
 30769 18bd E10A     		.2byte	0xae1
 30770 18bf 73000000 		.4byte	0x73
 30771 18c3 02       		.uleb128 0x2
 30772 18c4 91       		.byte	0x91
 30773 18c5 68       		.sleb128 -24
 30774 18c6 00       		.byte	0
 30775 18c7 00       		.byte	0
 30776 18c8 22       		.uleb128 0x22
 30777 18c9 2A150000 		.4byte	.LASF289
 30778 18cd 01       		.byte	0x1
 30779 18ce F90A     		.2byte	0xaf9
 30780 18d0 00000000 		.4byte	.LFB79
 30781 18d4 74030000 		.4byte	.LFE79-.LFB79
 30782 18d8 01       		.uleb128 0x1
 30783 18d9 9C       		.byte	0x9c
 30784 18da 0C190000 		.4byte	0x190c
 30785 18de 25       		.uleb128 0x25
 30786 18df 1F0E0000 		.4byte	.LASF277
 30787 18e3 01       		.byte	0x1
 30788 18e4 F90A     		.2byte	0xaf9
 30789 18e6 1F010000 		.4byte	0x11f
 30790 18ea 03       		.uleb128 0x3
 30791 18eb 91       		.byte	0x91
 30792 18ec AC7D     		.sleb128 -340
 30793 18ee 26       		.uleb128 0x26
 30794 18ef 73747200 		.ascii	"str\000"
 30795 18f3 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 663


 30796 18f4 FB0A     		.2byte	0xafb
 30797 18f6 0C190000 		.4byte	0x190c
 30798 18fa 03       		.uleb128 0x3
 30799 18fb 91       		.byte	0x91
 30800 18fc B07D     		.sleb128 -336
 30801 18fe 26       		.uleb128 0x26
 30802 18ff 6900     		.ascii	"i\000"
 30803 1901 01       		.byte	0x1
 30804 1902 FC0A     		.2byte	0xafc
 30805 1904 73000000 		.4byte	0x73
 30806 1908 02       		.uleb128 0x2
 30807 1909 91       		.byte	0x91
 30808 190a 5C       		.sleb128 -36
 30809 190b 00       		.byte	0
 30810 190c 09       		.uleb128 0x9
 30811 190d F9000000 		.4byte	0xf9
 30812 1911 1D190000 		.4byte	0x191d
 30813 1915 24       		.uleb128 0x24
 30814 1916 18010000 		.4byte	0x118
 30815 191a 2B01     		.2byte	0x12b
 30816 191c 00       		.byte	0
 30817 191d 22       		.uleb128 0x22
 30818 191e 500F0000 		.4byte	.LASF290
 30819 1922 01       		.byte	0x1
 30820 1923 240B     		.2byte	0xb24
 30821 1925 00000000 		.4byte	.LFB80
 30822 1929 84000000 		.4byte	.LFE80-.LFB80
 30823 192d 01       		.uleb128 0x1
 30824 192e 9C       		.byte	0x9c
 30825 192f 70190000 		.4byte	0x1970
 30826 1933 25       		.uleb128 0x25
 30827 1934 1C060000 		.4byte	.LASF229
 30828 1938 01       		.byte	0x1
 30829 1939 240B     		.2byte	0xb24
 30830 193b 67100000 		.4byte	0x1067
 30831 193f 02       		.uleb128 0x2
 30832 1940 91       		.byte	0x91
 30833 1941 6C       		.sleb128 -20
 30834 1942 25       		.uleb128 0x25
 30835 1943 9D0B0000 		.4byte	.LASF230
 30836 1947 01       		.byte	0x1
 30837 1948 240B     		.2byte	0xb24
 30838 194a A3000000 		.4byte	0xa3
 30839 194e 02       		.uleb128 0x2
 30840 194f 91       		.byte	0x91
 30841 1950 6A       		.sleb128 -22
 30842 1951 25       		.uleb128 0x25
 30843 1952 DD0F0000 		.4byte	.LASF291
 30844 1956 01       		.byte	0x1
 30845 1957 240B     		.2byte	0xb24
 30846 1959 97000000 		.4byte	0x97
 30847 195d 02       		.uleb128 0x2
 30848 195e 91       		.byte	0x91
 30849 195f 69       		.sleb128 -23
 30850 1960 23       		.uleb128 0x23
 30851 1961 22070000 		.4byte	.LASF244
 30852 1965 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 664


 30853 1966 260B     		.2byte	0xb26
 30854 1968 A3000000 		.4byte	0xa3
 30855 196c 02       		.uleb128 0x2
 30856 196d 91       		.byte	0x91
 30857 196e 76       		.sleb128 -10
 30858 196f 00       		.byte	0
 30859 1970 22       		.uleb128 0x22
 30860 1971 41060000 		.4byte	.LASF292
 30861 1975 01       		.byte	0x1
 30862 1976 400B     		.2byte	0xb40
 30863 1978 00000000 		.4byte	.LFB81
 30864 197c 88000000 		.4byte	.LFE81-.LFB81
 30865 1980 01       		.uleb128 0x1
 30866 1981 9C       		.byte	0x9c
 30867 1982 B4190000 		.4byte	0x19b4
 30868 1986 25       		.uleb128 0x25
 30869 1987 1C060000 		.4byte	.LASF229
 30870 198b 01       		.byte	0x1
 30871 198c 400B     		.2byte	0xb40
 30872 198e 67100000 		.4byte	0x1067
 30873 1992 02       		.uleb128 0x2
 30874 1993 91       		.byte	0x91
 30875 1994 6C       		.sleb128 -20
 30876 1995 25       		.uleb128 0x25
 30877 1996 9D0B0000 		.4byte	.LASF230
 30878 199a 01       		.byte	0x1
 30879 199b 400B     		.2byte	0xb40
 30880 199d A3000000 		.4byte	0xa3
 30881 19a1 02       		.uleb128 0x2
 30882 19a2 91       		.byte	0x91
 30883 19a3 6A       		.sleb128 -22
 30884 19a4 23       		.uleb128 0x23
 30885 19a5 22070000 		.4byte	.LASF244
 30886 19a9 01       		.byte	0x1
 30887 19aa 420B     		.2byte	0xb42
 30888 19ac A3000000 		.4byte	0xa3
 30889 19b0 02       		.uleb128 0x2
 30890 19b1 91       		.byte	0x91
 30891 19b2 76       		.sleb128 -10
 30892 19b3 00       		.byte	0
 30893 19b4 22       		.uleb128 0x22
 30894 19b5 290C0000 		.4byte	.LASF293
 30895 19b9 01       		.byte	0x1
 30896 19ba 5C0B     		.2byte	0xb5c
 30897 19bc 00000000 		.4byte	.LFB82
 30898 19c0 A0000000 		.4byte	.LFE82-.LFB82
 30899 19c4 01       		.uleb128 0x1
 30900 19c5 9C       		.byte	0x9c
 30901 19c6 071A0000 		.4byte	0x1a07
 30902 19ca 25       		.uleb128 0x25
 30903 19cb 1C060000 		.4byte	.LASF229
 30904 19cf 01       		.byte	0x1
 30905 19d0 5C0B     		.2byte	0xb5c
 30906 19d2 67100000 		.4byte	0x1067
 30907 19d6 02       		.uleb128 0x2
 30908 19d7 91       		.byte	0x91
 30909 19d8 74       		.sleb128 -12
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 665


 30910 19d9 25       		.uleb128 0x25
 30911 19da 9D0B0000 		.4byte	.LASF230
 30912 19de 01       		.byte	0x1
 30913 19df 5C0B     		.2byte	0xb5c
 30914 19e1 A3000000 		.4byte	0xa3
 30915 19e5 02       		.uleb128 0x2
 30916 19e6 91       		.byte	0x91
 30917 19e7 72       		.sleb128 -14
 30918 19e8 29       		.uleb128 0x29
 30919 19e9 696400   		.ascii	"id\000"
 30920 19ec 01       		.byte	0x1
 30921 19ed 5C0B     		.2byte	0xb5c
 30922 19ef 97000000 		.4byte	0x97
 30923 19f3 02       		.uleb128 0x2
 30924 19f4 91       		.byte	0x91
 30925 19f5 71       		.sleb128 -15
 30926 19f6 26       		.uleb128 0x26
 30927 19f7 6900     		.ascii	"i\000"
 30928 19f9 01       		.byte	0x1
 30929 19fa 5E0B     		.2byte	0xb5e
 30930 19fc A3000000 		.4byte	0xa3
 30931 1a00 05       		.uleb128 0x5
 30932 1a01 03       		.byte	0x3
 30933 1a02 04000000 		.4byte	i.11256
 30934 1a06 00       		.byte	0
 30935 1a07 2A       		.uleb128 0x2a
 30936 1a08 B8130000 		.4byte	.LASF299
 30937 1a0c 01       		.byte	0x1
 30938 1a0d 7A0B     		.2byte	0xb7a
 30939 1a0f 97000000 		.4byte	0x97
 30940 1a13 00000000 		.4byte	.LFB83
 30941 1a17 3E000000 		.4byte	.LFE83-.LFB83
 30942 1a1b 01       		.uleb128 0x1
 30943 1a1c 9C       		.byte	0x9c
 30944 1a1d 5C1A0000 		.4byte	0x1a5c
 30945 1a21 25       		.uleb128 0x25
 30946 1a22 6C0B0000 		.4byte	.LASF294
 30947 1a26 01       		.byte	0x1
 30948 1a27 7A0B     		.2byte	0xb7a
 30949 1a29 67100000 		.4byte	0x1067
 30950 1a2d 02       		.uleb128 0x2
 30951 1a2e 91       		.byte	0x91
 30952 1a2f 6C       		.sleb128 -20
 30953 1a30 25       		.uleb128 0x25
 30954 1a31 F1050000 		.4byte	.LASF295
 30955 1a35 01       		.byte	0x1
 30956 1a36 7A0B     		.2byte	0xb7a
 30957 1a38 97000000 		.4byte	0x97
 30958 1a3c 02       		.uleb128 0x2
 30959 1a3d 91       		.byte	0x91
 30960 1a3e 6B       		.sleb128 -21
 30961 1a3f 26       		.uleb128 0x26
 30962 1a40 6900     		.ascii	"i\000"
 30963 1a42 01       		.byte	0x1
 30964 1a43 7C0B     		.2byte	0xb7c
 30965 1a45 97000000 		.4byte	0x97
 30966 1a49 02       		.uleb128 0x2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 666


 30967 1a4a 91       		.byte	0x91
 30968 1a4b 77       		.sleb128 -9
 30969 1a4c 23       		.uleb128 0x23
 30970 1a4d 7F0D0000 		.4byte	.LASF296
 30971 1a51 01       		.byte	0x1
 30972 1a52 7D0B     		.2byte	0xb7d
 30973 1a54 97000000 		.4byte	0x97
 30974 1a58 02       		.uleb128 0x2
 30975 1a59 91       		.byte	0x91
 30976 1a5a 76       		.sleb128 -10
 30977 1a5b 00       		.byte	0
 30978 1a5c 22       		.uleb128 0x22
 30979 1a5d AB0B0000 		.4byte	.LASF297
 30980 1a61 01       		.byte	0x1
 30981 1a62 8A0B     		.2byte	0xb8a
 30982 1a64 00000000 		.4byte	.LFB84
 30983 1a68 2E000000 		.4byte	.LFE84-.LFB84
 30984 1a6c 01       		.uleb128 0x1
 30985 1a6d 9C       		.byte	0x9c
 30986 1a6e A01A0000 		.4byte	0x1aa0
 30987 1a72 25       		.uleb128 0x25
 30988 1a73 3A050000 		.4byte	.LASF298
 30989 1a77 01       		.byte	0x1
 30990 1a78 8A0B     		.2byte	0xb8a
 30991 1a7a 97000000 		.4byte	0x97
 30992 1a7e 02       		.uleb128 0x2
 30993 1a7f 91       		.byte	0x91
 30994 1a80 6F       		.sleb128 -17
 30995 1a81 23       		.uleb128 0x23
 30996 1a82 9D0B0000 		.4byte	.LASF230
 30997 1a86 01       		.byte	0x1
 30998 1a87 8B0B     		.2byte	0xb8b
 30999 1a89 73000000 		.4byte	0x73
 31000 1a8d 02       		.uleb128 0x2
 31001 1a8e 91       		.byte	0x91
 31002 1a8f 74       		.sleb128 -12
 31003 1a90 23       		.uleb128 0x23
 31004 1a91 1C060000 		.4byte	.LASF229
 31005 1a95 01       		.byte	0x1
 31006 1a96 8C0B     		.2byte	0xb8c
 31007 1a98 80080000 		.4byte	0x880
 31008 1a9c 02       		.uleb128 0x2
 31009 1a9d 91       		.byte	0x91
 31010 1a9e 70       		.sleb128 -16
 31011 1a9f 00       		.byte	0
 31012 1aa0 2B       		.uleb128 0x2b
 31013 1aa1 72040000 		.4byte	.LASF300
 31014 1aa5 01       		.byte	0x1
 31015 1aa6 990B     		.2byte	0xb99
 31016 1aa8 97000000 		.4byte	0x97
 31017 1aac 00000000 		.4byte	.LFB85
 31018 1ab0 98000000 		.4byte	.LFE85-.LFB85
 31019 1ab4 01       		.uleb128 0x1
 31020 1ab5 9C       		.byte	0x9c
 31021 1ab6 041B0000 		.4byte	0x1b04
 31022 1aba 25       		.uleb128 0x25
 31023 1abb E4050000 		.4byte	.LASF301
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 667


 31024 1abf 01       		.byte	0x1
 31025 1ac0 990B     		.2byte	0xb99
 31026 1ac2 73000000 		.4byte	0x73
 31027 1ac6 02       		.uleb128 0x2
 31028 1ac7 91       		.byte	0x91
 31029 1ac8 64       		.sleb128 -28
 31030 1ac9 26       		.uleb128 0x26
 31031 1aca 6900     		.ascii	"i\000"
 31032 1acc 01       		.byte	0x1
 31033 1acd 9B0B     		.2byte	0xb9b
 31034 1acf 73000000 		.4byte	0x73
 31035 1ad3 02       		.uleb128 0x2
 31036 1ad4 91       		.byte	0x91
 31037 1ad5 74       		.sleb128 -12
 31038 1ad6 23       		.uleb128 0x23
 31039 1ad7 D1000000 		.4byte	.LASF302
 31040 1adb 01       		.byte	0x1
 31041 1adc 9C0B     		.2byte	0xb9c
 31042 1ade 97000000 		.4byte	0x97
 31043 1ae2 02       		.uleb128 0x2
 31044 1ae3 91       		.byte	0x91
 31045 1ae4 6B       		.sleb128 -21
 31046 1ae5 23       		.uleb128 0x23
 31047 1ae6 5D060000 		.4byte	.LASF303
 31048 1aea 01       		.byte	0x1
 31049 1aeb 9D0B     		.2byte	0xb9d
 31050 1aed 73000000 		.4byte	0x73
 31051 1af1 02       		.uleb128 0x2
 31052 1af2 91       		.byte	0x91
 31053 1af3 6C       		.sleb128 -20
 31054 1af4 23       		.uleb128 0x23
 31055 1af5 78050000 		.4byte	.LASF304
 31056 1af9 01       		.byte	0x1
 31057 1afa 9E0B     		.2byte	0xb9e
 31058 1afc 97000000 		.4byte	0x97
 31059 1b00 02       		.uleb128 0x2
 31060 1b01 91       		.byte	0x91
 31061 1b02 73       		.sleb128 -13
 31062 1b03 00       		.byte	0
 31063 1b04 22       		.uleb128 0x22
 31064 1b05 C40E0000 		.4byte	.LASF305
 31065 1b09 01       		.byte	0x1
 31066 1b0a C30B     		.2byte	0xbc3
 31067 1b0c 00000000 		.4byte	.LFB86
 31068 1b10 80000000 		.4byte	.LFE86-.LFB86
 31069 1b14 01       		.uleb128 0x1
 31070 1b15 9C       		.byte	0x9c
 31071 1b16 281B0000 		.4byte	0x1b28
 31072 1b1a 26       		.uleb128 0x26
 31073 1b1b 6900     		.ascii	"i\000"
 31074 1b1d 01       		.byte	0x1
 31075 1b1e C50B     		.2byte	0xbc5
 31076 1b20 A3000000 		.4byte	0xa3
 31077 1b24 02       		.uleb128 0x2
 31078 1b25 91       		.byte	0x91
 31079 1b26 76       		.sleb128 -10
 31080 1b27 00       		.byte	0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 668


 31081 1b28 2B       		.uleb128 0x2b
 31082 1b29 0A0E0000 		.4byte	.LASF306
 31083 1b2d 01       		.byte	0x1
 31084 1b2e DC0B     		.2byte	0xbdc
 31085 1b30 97000000 		.4byte	0x97
 31086 1b34 00000000 		.4byte	.LFB87
 31087 1b38 5C000000 		.4byte	.LFE87-.LFB87
 31088 1b3c 01       		.uleb128 0x1
 31089 1b3d 9C       		.byte	0x9c
 31090 1b3e 501B0000 		.4byte	0x1b50
 31091 1b42 26       		.uleb128 0x26
 31092 1b43 6900     		.ascii	"i\000"
 31093 1b45 01       		.byte	0x1
 31094 1b46 DD0B     		.2byte	0xbdd
 31095 1b48 A3000000 		.4byte	0xa3
 31096 1b4c 02       		.uleb128 0x2
 31097 1b4d 91       		.byte	0x91
 31098 1b4e 76       		.sleb128 -10
 31099 1b4f 00       		.byte	0
 31100 1b50 2B       		.uleb128 0x2b
 31101 1b51 63060000 		.4byte	.LASF307
 31102 1b55 01       		.byte	0x1
 31103 1b56 EF0B     		.2byte	0xbef
 31104 1b58 97000000 		.4byte	0x97
 31105 1b5c 00000000 		.4byte	.LFB88
 31106 1b60 10060000 		.4byte	.LFE88-.LFB88
 31107 1b64 01       		.uleb128 0x1
 31108 1b65 9C       		.byte	0x9c
 31109 1b66 851B0000 		.4byte	0x1b85
 31110 1b6a 26       		.uleb128 0x26
 31111 1b6b 6900     		.ascii	"i\000"
 31112 1b6d 01       		.byte	0x1
 31113 1b6e F10B     		.2byte	0xbf1
 31114 1b70 97000000 		.4byte	0x97
 31115 1b74 02       		.uleb128 0x2
 31116 1b75 91       		.byte	0x91
 31117 1b76 77       		.sleb128 -9
 31118 1b77 26       		.uleb128 0x26
 31119 1b78 6A00     		.ascii	"j\000"
 31120 1b7a 01       		.byte	0x1
 31121 1b7b F10B     		.2byte	0xbf1
 31122 1b7d 97000000 		.4byte	0x97
 31123 1b81 02       		.uleb128 0x2
 31124 1b82 91       		.byte	0x91
 31125 1b83 76       		.sleb128 -10
 31126 1b84 00       		.byte	0
 31127 1b85 28       		.uleb128 0x28
 31128 1b86 12090000 		.4byte	.LASF308
 31129 1b8a 01       		.byte	0x1
 31130 1b8b 8E0C     		.2byte	0xc8e
 31131 1b8d 00000000 		.4byte	.LFB89
 31132 1b91 38020000 		.4byte	.LFE89-.LFB89
 31133 1b95 01       		.uleb128 0x1
 31134 1b96 9C       		.byte	0x9c
 31135 1b97 C21B0000 		.4byte	0x1bc2
 31136 1b9b 23       		.uleb128 0x23
 31137 1b9c 000E0000 		.4byte	.LASF239
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 669


 31138 1ba0 01       		.byte	0x1
 31139 1ba1 900C     		.2byte	0xc90
 31140 1ba3 97000000 		.4byte	0x97
 31141 1ba7 02       		.uleb128 0x2
 31142 1ba8 91       		.byte	0x91
 31143 1ba9 73       		.sleb128 -13
 31144 1baa 1E       		.uleb128 0x1e
 31145 1bab FA000000 		.4byte	.LBB26
 31146 1baf 6A000000 		.4byte	.LBE26-.LBB26
 31147 1bb3 26       		.uleb128 0x26
 31148 1bb4 6900     		.ascii	"i\000"
 31149 1bb6 01       		.byte	0x1
 31150 1bb7 A10C     		.2byte	0xca1
 31151 1bb9 73000000 		.4byte	0x73
 31152 1bbd 02       		.uleb128 0x2
 31153 1bbe 91       		.byte	0x91
 31154 1bbf 74       		.sleb128 -12
 31155 1bc0 00       		.byte	0
 31156 1bc1 00       		.byte	0
 31157 1bc2 2C       		.uleb128 0x2c
 31158 1bc3 8E0B0000 		.4byte	.LASF309
 31159 1bc7 01       		.byte	0x1
 31160 1bc8 C00C     		.2byte	0xcc0
 31161 1bca 00000000 		.4byte	.LFB90
 31162 1bce 28000000 		.4byte	.LFE90-.LFB90
 31163 1bd2 01       		.uleb128 0x1
 31164 1bd3 9C       		.byte	0x9c
 31165 1bd4 2C       		.uleb128 0x2c
 31166 1bd5 55110000 		.4byte	.LASF310
 31167 1bd9 01       		.byte	0x1
 31168 1bda CC0C     		.2byte	0xccc
 31169 1bdc 00000000 		.4byte	.LFB91
 31170 1be0 78000000 		.4byte	.LFE91-.LFB91
 31171 1be4 01       		.uleb128 0x1
 31172 1be5 9C       		.byte	0x9c
 31173 1be6 2C       		.uleb128 0x2c
 31174 1be7 2B040000 		.4byte	.LASF311
 31175 1beb 01       		.byte	0x1
 31176 1bec E20C     		.2byte	0xce2
 31177 1bee 00000000 		.4byte	.LFB92
 31178 1bf2 B0000000 		.4byte	.LFE92-.LFB92
 31179 1bf6 01       		.uleb128 0x1
 31180 1bf7 9C       		.byte	0x9c
 31181 1bf8 27       		.uleb128 0x27
 31182 1bf9 91060000 		.4byte	.LASF313
 31183 1bfd 01       		.byte	0x1
 31184 1bfe 030D     		.2byte	0xd03
 31185 1c00 00000000 		.4byte	.LFB93
 31186 1c04 28010000 		.4byte	.LFE93-.LFB93
 31187 1c08 01       		.uleb128 0x1
 31188 1c09 9C       		.byte	0x9c
 31189 1c0a 3C1C0000 		.4byte	0x1c3c
 31190 1c0e 23       		.uleb128 0x23
 31191 1c0f 22070000 		.4byte	.LASF244
 31192 1c13 01       		.byte	0x1
 31193 1c14 050D     		.2byte	0xd05
 31194 1c16 97000000 		.4byte	0x97
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 670


 31195 1c1a 02       		.uleb128 0x2
 31196 1c1b 91       		.byte	0x91
 31197 1c1c 6F       		.sleb128 -17
 31198 1c1d 23       		.uleb128 0x23
 31199 1c1e 0F120000 		.4byte	.LASF235
 31200 1c22 01       		.byte	0x1
 31201 1c23 060D     		.2byte	0xd06
 31202 1c25 C7000000 		.4byte	0xc7
 31203 1c29 02       		.uleb128 0x2
 31204 1c2a 91       		.byte	0x91
 31205 1c2b 6C       		.sleb128 -20
 31206 1c2c 23       		.uleb128 0x23
 31207 1c2d 1C060000 		.4byte	.LASF229
 31208 1c31 01       		.byte	0x1
 31209 1c32 090D     		.2byte	0xd09
 31210 1c34 11080000 		.4byte	0x811
 31211 1c38 02       		.uleb128 0x2
 31212 1c39 91       		.byte	0x91
 31213 1c3a 64       		.sleb128 -28
 31214 1c3b 00       		.byte	0
 31215 1c3c 27       		.uleb128 0x27
 31216 1c3d B10E0000 		.4byte	.LASF314
 31217 1c41 01       		.byte	0x1
 31218 1c42 240D     		.2byte	0xd24
 31219 1c44 00000000 		.4byte	.LFB94
 31220 1c48 B8000000 		.4byte	.LFE94-.LFB94
 31221 1c4c 01       		.uleb128 0x1
 31222 1c4d 9C       		.byte	0x9c
 31223 1c4e 801C0000 		.4byte	0x1c80
 31224 1c52 23       		.uleb128 0x23
 31225 1c53 22070000 		.4byte	.LASF244
 31226 1c57 01       		.byte	0x1
 31227 1c58 260D     		.2byte	0xd26
 31228 1c5a 97000000 		.4byte	0x97
 31229 1c5e 02       		.uleb128 0x2
 31230 1c5f 91       		.byte	0x91
 31231 1c60 6F       		.sleb128 -17
 31232 1c61 23       		.uleb128 0x23
 31233 1c62 0F120000 		.4byte	.LASF235
 31234 1c66 01       		.byte	0x1
 31235 1c67 270D     		.2byte	0xd27
 31236 1c69 C7000000 		.4byte	0xc7
 31237 1c6d 02       		.uleb128 0x2
 31238 1c6e 91       		.byte	0x91
 31239 1c6f 6C       		.sleb128 -20
 31240 1c70 23       		.uleb128 0x23
 31241 1c71 1C060000 		.4byte	.LASF229
 31242 1c75 01       		.byte	0x1
 31243 1c76 2B0D     		.2byte	0xd2b
 31244 1c78 11080000 		.4byte	0x811
 31245 1c7c 02       		.uleb128 0x2
 31246 1c7d 91       		.byte	0x91
 31247 1c7e 64       		.sleb128 -28
 31248 1c7f 00       		.byte	0
 31249 1c80 27       		.uleb128 0x27
 31250 1c81 FF010000 		.4byte	.LASF315
 31251 1c85 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 671


 31252 1c86 3D0D     		.2byte	0xd3d
 31253 1c88 00000000 		.4byte	.LFB95
 31254 1c8c B8000000 		.4byte	.LFE95-.LFB95
 31255 1c90 01       		.uleb128 0x1
 31256 1c91 9C       		.byte	0x9c
 31257 1c92 C41C0000 		.4byte	0x1cc4
 31258 1c96 23       		.uleb128 0x23
 31259 1c97 22070000 		.4byte	.LASF244
 31260 1c9b 01       		.byte	0x1
 31261 1c9c 3F0D     		.2byte	0xd3f
 31262 1c9e 97000000 		.4byte	0x97
 31263 1ca2 02       		.uleb128 0x2
 31264 1ca3 91       		.byte	0x91
 31265 1ca4 6F       		.sleb128 -17
 31266 1ca5 23       		.uleb128 0x23
 31267 1ca6 0F120000 		.4byte	.LASF235
 31268 1caa 01       		.byte	0x1
 31269 1cab 400D     		.2byte	0xd40
 31270 1cad C7000000 		.4byte	0xc7
 31271 1cb1 02       		.uleb128 0x2
 31272 1cb2 91       		.byte	0x91
 31273 1cb3 6C       		.sleb128 -20
 31274 1cb4 23       		.uleb128 0x23
 31275 1cb5 1C060000 		.4byte	.LASF229
 31276 1cb9 01       		.byte	0x1
 31277 1cba 440D     		.2byte	0xd44
 31278 1cbc 11080000 		.4byte	0x811
 31279 1cc0 02       		.uleb128 0x2
 31280 1cc1 91       		.byte	0x91
 31281 1cc2 64       		.sleb128 -28
 31282 1cc3 00       		.byte	0
 31283 1cc4 27       		.uleb128 0x27
 31284 1cc5 130A0000 		.4byte	.LASF316
 31285 1cc9 01       		.byte	0x1
 31286 1cca 560D     		.2byte	0xd56
 31287 1ccc 00000000 		.4byte	.LFB96
 31288 1cd0 5C000000 		.4byte	.LFE96-.LFB96
 31289 1cd4 01       		.uleb128 0x1
 31290 1cd5 9C       		.byte	0x9c
 31291 1cd6 F91C0000 		.4byte	0x1cf9
 31292 1cda 23       		.uleb128 0x23
 31293 1cdb 0F120000 		.4byte	.LASF235
 31294 1cdf 01       		.byte	0x1
 31295 1ce0 580D     		.2byte	0xd58
 31296 1ce2 C7000000 		.4byte	0xc7
 31297 1ce6 02       		.uleb128 0x2
 31298 1ce7 91       		.byte	0x91
 31299 1ce8 76       		.sleb128 -10
 31300 1ce9 23       		.uleb128 0x23
 31301 1cea 1C060000 		.4byte	.LASF229
 31302 1cee 01       		.byte	0x1
 31303 1cef 5C0D     		.2byte	0xd5c
 31304 1cf1 44090000 		.4byte	0x944
 31305 1cf5 02       		.uleb128 0x2
 31306 1cf6 91       		.byte	0x91
 31307 1cf7 70       		.sleb128 -16
 31308 1cf8 00       		.byte	0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 672


 31309 1cf9 2D       		.uleb128 0x2d
 31310 1cfa F30B0000 		.4byte	.LASF317
 31311 1cfe 01       		.byte	0x1
 31312 1cff 6E0D     		.2byte	0xd6e
 31313 1d01 00000000 		.4byte	.LFB97
 31314 1d05 44020000 		.4byte	.LFE97-.LFB97
 31315 1d09 01       		.uleb128 0x1
 31316 1d0a 9C       		.byte	0x9c
 31317 1d0b 631D0000 		.4byte	0x1d63
 31318 1d0f 23       		.uleb128 0x23
 31319 1d10 0F120000 		.4byte	.LASF235
 31320 1d14 01       		.byte	0x1
 31321 1d15 710D     		.2byte	0xd71
 31322 1d17 631D0000 		.4byte	0x1d63
 31323 1d1b 02       		.uleb128 0x2
 31324 1d1c 91       		.byte	0x91
 31325 1d1d 70       		.sleb128 -16
 31326 1d1e 23       		.uleb128 0x23
 31327 1d1f E4060000 		.4byte	.LASF318
 31328 1d23 01       		.byte	0x1
 31329 1d24 720D     		.2byte	0xd72
 31330 1d26 631D0000 		.4byte	0x1d63
 31331 1d2a 05       		.uleb128 0x5
 31332 1d2b 03       		.byte	0x3
 31333 1d2c 08000000 		.4byte	last_aux_int16.11387
 31334 1d30 2E       		.uleb128 0x2e
 31335 1d31 2E000000 		.4byte	.LBB27
 31336 1d35 50000000 		.4byte	.LBE27-.LBB27
 31337 1d39 4B1D0000 		.4byte	0x1d4b
 31338 1d3d 26       		.uleb128 0x26
 31339 1d3e 6900     		.ascii	"i\000"
 31340 1d40 01       		.byte	0x1
 31341 1d41 790D     		.2byte	0xd79
 31342 1d43 97000000 		.4byte	0x97
 31343 1d47 02       		.uleb128 0x2
 31344 1d48 91       		.byte	0x91
 31345 1d49 77       		.sleb128 -9
 31346 1d4a 00       		.byte	0
 31347 1d4b 1E       		.uleb128 0x1e
 31348 1d4c 88000000 		.4byte	.LBB28
 31349 1d50 98010000 		.4byte	.LBE28-.LBB28
 31350 1d54 26       		.uleb128 0x26
 31351 1d55 6900     		.ascii	"i\000"
 31352 1d57 01       		.byte	0x1
 31353 1d58 830D     		.2byte	0xd83
 31354 1d5a 97000000 		.4byte	0x97
 31355 1d5e 02       		.uleb128 0x2
 31356 1d5f 91       		.byte	0x91
 31357 1d60 76       		.sleb128 -10
 31358 1d61 00       		.byte	0
 31359 1d62 00       		.byte	0
 31360 1d63 09       		.uleb128 0x9
 31361 1d64 C7000000 		.4byte	0xc7
 31362 1d68 731D0000 		.4byte	0x1d73
 31363 1d6c 0A       		.uleb128 0xa
 31364 1d6d 18010000 		.4byte	0x118
 31365 1d71 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 673


 31366 1d72 00       		.byte	0
 31367 1d73 27       		.uleb128 0x27
 31368 1d74 89140000 		.4byte	.LASF319
 31369 1d78 01       		.byte	0x1
 31370 1d79 9E0D     		.2byte	0xd9e
 31371 1d7b 00000000 		.4byte	.LFB98
 31372 1d7f BC000000 		.4byte	.LFE98-.LFB98
 31373 1d83 01       		.uleb128 0x1
 31374 1d84 9C       		.byte	0x9c
 31375 1d85 991D0000 		.4byte	0x1d99
 31376 1d89 26       		.uleb128 0x26
 31377 1d8a 61757800 		.ascii	"aux\000"
 31378 1d8e 01       		.byte	0x1
 31379 1d8f A10D     		.2byte	0xda1
 31380 1d91 97000000 		.4byte	0x97
 31381 1d95 02       		.uleb128 0x2
 31382 1d96 91       		.byte	0x91
 31383 1d97 77       		.sleb128 -9
 31384 1d98 00       		.byte	0
 31385 1d99 27       		.uleb128 0x27
 31386 1d9a 510C0000 		.4byte	.LASF320
 31387 1d9e 01       		.byte	0x1
 31388 1d9f C30D     		.2byte	0xdc3
 31389 1da1 00000000 		.4byte	.LFB99
 31390 1da5 5C000000 		.4byte	.LFE99-.LFB99
 31391 1da9 01       		.uleb128 0x1
 31392 1daa 9C       		.byte	0x9c
 31393 1dab BF1D0000 		.4byte	0x1dbf
 31394 1daf 23       		.uleb128 0x23
 31395 1db0 1C060000 		.4byte	.LASF229
 31396 1db4 01       		.byte	0x1
 31397 1db5 C50D     		.2byte	0xdc5
 31398 1db7 C4050000 		.4byte	0x5c4
 31399 1dbb 02       		.uleb128 0x2
 31400 1dbc 91       		.byte	0x91
 31401 1dbd 74       		.sleb128 -12
 31402 1dbe 00       		.byte	0
 31403 1dbf 27       		.uleb128 0x27
 31404 1dc0 16100000 		.4byte	.LASF321
 31405 1dc4 01       		.byte	0x1
 31406 1dc5 DA0D     		.2byte	0xdda
 31407 1dc7 00000000 		.4byte	.LFB100
 31408 1dcb 38010000 		.4byte	.LFE100-.LFB100
 31409 1dcf 01       		.uleb128 0x1
 31410 1dd0 9C       		.byte	0x9c
 31411 1dd1 031E0000 		.4byte	0x1e03
 31412 1dd5 23       		.uleb128 0x23
 31413 1dd6 22070000 		.4byte	.LASF244
 31414 1dda 01       		.byte	0x1
 31415 1ddb DC0D     		.2byte	0xddc
 31416 1ddd 97000000 		.4byte	0x97
 31417 1de1 02       		.uleb128 0x2
 31418 1de2 91       		.byte	0x91
 31419 1de3 6F       		.sleb128 -17
 31420 1de4 23       		.uleb128 0x23
 31421 1de5 0F120000 		.4byte	.LASF235
 31422 1de9 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 674


 31423 1dea DD0D     		.2byte	0xddd
 31424 1dec C7000000 		.4byte	0xc7
 31425 1df0 02       		.uleb128 0x2
 31426 1df1 91       		.byte	0x91
 31427 1df2 6C       		.sleb128 -20
 31428 1df3 23       		.uleb128 0x23
 31429 1df4 1C060000 		.4byte	.LASF229
 31430 1df8 01       		.byte	0x1
 31431 1df9 E10D     		.2byte	0xde1
 31432 1dfb 54090000 		.4byte	0x954
 31433 1dff 02       		.uleb128 0x2
 31434 1e00 91       		.byte	0x91
 31435 1e01 60       		.sleb128 -32
 31436 1e02 00       		.byte	0
 31437 1e03 27       		.uleb128 0x27
 31438 1e04 7D0A0000 		.4byte	.LASF322
 31439 1e08 01       		.byte	0x1
 31440 1e09 010E     		.2byte	0xe01
 31441 1e0b 00000000 		.4byte	.LFB101
 31442 1e0f EC000000 		.4byte	.LFE101-.LFB101
 31443 1e13 01       		.uleb128 0x1
 31444 1e14 9C       		.byte	0x9c
 31445 1e15 381E0000 		.4byte	0x1e38
 31446 1e19 23       		.uleb128 0x23
 31447 1e1a 1C060000 		.4byte	.LASF229
 31448 1e1e 01       		.byte	0x1
 31449 1e1f 050E     		.2byte	0xe05
 31450 1e21 44090000 		.4byte	0x944
 31451 1e25 02       		.uleb128 0x2
 31452 1e26 91       		.byte	0x91
 31453 1e27 68       		.sleb128 -24
 31454 1e28 23       		.uleb128 0x23
 31455 1e29 0F120000 		.4byte	.LASF235
 31456 1e2d 01       		.byte	0x1
 31457 1e2e 060E     		.2byte	0xe06
 31458 1e30 C7000000 		.4byte	0xc7
 31459 1e34 02       		.uleb128 0x2
 31460 1e35 91       		.byte	0x91
 31461 1e36 66       		.sleb128 -26
 31462 1e37 00       		.byte	0
 31463 1e38 27       		.uleb128 0x27
 31464 1e39 96070000 		.4byte	.LASF323
 31465 1e3d 01       		.byte	0x1
 31466 1e3e 270E     		.2byte	0xe27
 31467 1e40 00000000 		.4byte	.LFB102
 31468 1e44 64000000 		.4byte	.LFE102-.LFB102
 31469 1e48 01       		.uleb128 0x1
 31470 1e49 9C       		.byte	0x9c
 31471 1e4a 6D1E0000 		.4byte	0x1e6d
 31472 1e4e 23       		.uleb128 0x23
 31473 1e4f 1C060000 		.4byte	.LASF229
 31474 1e53 01       		.byte	0x1
 31475 1e54 2B0E     		.2byte	0xe2b
 31476 1e56 C10A0000 		.4byte	0xac1
 31477 1e5a 02       		.uleb128 0x2
 31478 1e5b 91       		.byte	0x91
 31479 1e5c 74       		.sleb128 -12
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 675


 31480 1e5d 23       		.uleb128 0x23
 31481 1e5e 0F120000 		.4byte	.LASF235
 31482 1e62 01       		.byte	0x1
 31483 1e63 2C0E     		.2byte	0xe2c
 31484 1e65 C7000000 		.4byte	0xc7
 31485 1e69 02       		.uleb128 0x2
 31486 1e6a 91       		.byte	0x91
 31487 1e6b 72       		.sleb128 -14
 31488 1e6c 00       		.byte	0
 31489 1e6d 2F       		.uleb128 0x2f
 31490 1e6e 80070000 		.4byte	.LASF324
 31491 1e72 01       		.byte	0x1
 31492 1e73 410E     		.2byte	0xe41
 31493 1e75 C7000000 		.4byte	0xc7
 31494 1e79 00000000 		.4byte	.LFB103
 31495 1e7d A8000000 		.4byte	.LFE103-.LFB103
 31496 1e81 01       		.uleb128 0x1
 31497 1e82 9C       		.byte	0x9c
 31498 1e83 E21E0000 		.4byte	0x1ee2
 31499 1e87 23       		.uleb128 0x23
 31500 1e88 1C060000 		.4byte	.LASF229
 31501 1e8c 01       		.byte	0x1
 31502 1e8d 430E     		.2byte	0xe43
 31503 1e8f E21E0000 		.4byte	0x1ee2
 31504 1e93 02       		.uleb128 0x2
 31505 1e94 91       		.byte	0x91
 31506 1e95 5C       		.sleb128 -36
 31507 1e96 23       		.uleb128 0x23
 31508 1e97 9D0B0000 		.4byte	.LASF230
 31509 1e9b 01       		.byte	0x1
 31510 1e9c 440E     		.2byte	0xe44
 31511 1e9e 97000000 		.4byte	0x97
 31512 1ea2 02       		.uleb128 0x2
 31513 1ea3 91       		.byte	0x91
 31514 1ea4 74       		.sleb128 -12
 31515 1ea5 23       		.uleb128 0x23
 31516 1ea6 A30F0000 		.4byte	.LASF325
 31517 1eaa 01       		.byte	0x1
 31518 1eab 450E     		.2byte	0xe45
 31519 1ead C7000000 		.4byte	0xc7
 31520 1eb1 02       		.uleb128 0x2
 31521 1eb2 91       		.byte	0x91
 31522 1eb3 76       		.sleb128 -10
 31523 1eb4 23       		.uleb128 0x23
 31524 1eb5 CD020000 		.4byte	.LASF326
 31525 1eb9 01       		.byte	0x1
 31526 1eba 460E     		.2byte	0xe46
 31527 1ebc AF000000 		.4byte	0xaf
 31528 1ec0 02       		.uleb128 0x2
 31529 1ec1 91       		.byte	0x91
 31530 1ec2 70       		.sleb128 -16
 31531 1ec3 23       		.uleb128 0x23
 31532 1ec4 80130000 		.4byte	.LASF327
 31533 1ec8 01       		.byte	0x1
 31534 1ec9 460E     		.2byte	0xe46
 31535 1ecb AF000000 		.4byte	0xaf
 31536 1ecf 02       		.uleb128 0x2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 676


 31537 1ed0 91       		.byte	0x91
 31538 1ed1 6C       		.sleb128 -20
 31539 1ed2 23       		.uleb128 0x23
 31540 1ed3 96040000 		.4byte	.LASF328
 31541 1ed7 01       		.byte	0x1
 31542 1ed8 470E     		.2byte	0xe47
 31543 1eda 97000000 		.4byte	0x97
 31544 1ede 02       		.uleb128 0x2
 31545 1edf 91       		.byte	0x91
 31546 1ee0 75       		.sleb128 -11
 31547 1ee1 00       		.byte	0
 31548 1ee2 09       		.uleb128 0x9
 31549 1ee3 97000000 		.4byte	0x97
 31550 1ee7 F21E0000 		.4byte	0x1ef2
 31551 1eeb 0A       		.uleb128 0xa
 31552 1eec 18010000 		.4byte	0x118
 31553 1ef0 0F       		.byte	0xf
 31554 1ef1 00       		.byte	0
 31555 1ef2 30       		.uleb128 0x30
 31556 1ef3 E4000000 		.4byte	.LASF357
 31557 1ef7 01       		.byte	0x1
 31558 1ef8 640E     		.2byte	0xe64
 31559 1efa 00000000 		.4byte	.LFB104
 31560 1efe 34000000 		.4byte	.LFE104-.LFB104
 31561 1f02 01       		.uleb128 0x1
 31562 1f03 9C       		.byte	0x9c
 31563 1f04 27       		.uleb128 0x27
 31564 1f05 FE030000 		.4byte	.LASF329
 31565 1f09 01       		.byte	0x1
 31566 1f0a 720E     		.2byte	0xe72
 31567 1f0c 00000000 		.4byte	.LFB105
 31568 1f10 20000000 		.4byte	.LFE105-.LFB105
 31569 1f14 01       		.uleb128 0x1
 31570 1f15 9C       		.byte	0x9c
 31571 1f16 2A1F0000 		.4byte	0x1f2a
 31572 1f1a 23       		.uleb128 0x23
 31573 1f1b 1C060000 		.4byte	.LASF229
 31574 1f1f 01       		.byte	0x1
 31575 1f20 740E     		.2byte	0xe74
 31576 1f22 80080000 		.4byte	0x880
 31577 1f26 02       		.uleb128 0x2
 31578 1f27 91       		.byte	0x91
 31579 1f28 74       		.sleb128 -12
 31580 1f29 00       		.byte	0
 31581 1f2a 27       		.uleb128 0x27
 31582 1f2b 5C010000 		.4byte	.LASF330
 31583 1f2f 01       		.byte	0x1
 31584 1f30 800E     		.2byte	0xe80
 31585 1f32 00000000 		.4byte	.LFB106
 31586 1f36 A0000000 		.4byte	.LFE106-.LFB106
 31587 1f3a 01       		.uleb128 0x1
 31588 1f3b 9C       		.byte	0x9c
 31589 1f3c 5F1F0000 		.4byte	0x1f5f
 31590 1f40 23       		.uleb128 0x23
 31591 1f41 1C060000 		.4byte	.LASF229
 31592 1f45 01       		.byte	0x1
 31593 1f46 840E     		.2byte	0xe84
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 677


 31594 1f48 44090000 		.4byte	0x944
 31595 1f4c 02       		.uleb128 0x2
 31596 1f4d 91       		.byte	0x91
 31597 1f4e 70       		.sleb128 -16
 31598 1f4f 23       		.uleb128 0x23
 31599 1f50 0F120000 		.4byte	.LASF235
 31600 1f54 01       		.byte	0x1
 31601 1f55 850E     		.2byte	0xe85
 31602 1f57 C7000000 		.4byte	0xc7
 31603 1f5b 02       		.uleb128 0x2
 31604 1f5c 91       		.byte	0x91
 31605 1f5d 6E       		.sleb128 -18
 31606 1f5e 00       		.byte	0
 31607 1f5f 27       		.uleb128 0x27
 31608 1f60 DF100000 		.4byte	.LASF331
 31609 1f64 01       		.byte	0x1
 31610 1f65 990E     		.2byte	0xe99
 31611 1f67 00000000 		.4byte	.LFB107
 31612 1f6b BC010000 		.4byte	.LFE107-.LFB107
 31613 1f6f 01       		.uleb128 0x1
 31614 1f70 9C       		.byte	0x9c
 31615 1f71 C11F0000 		.4byte	0x1fc1
 31616 1f75 23       		.uleb128 0x23
 31617 1f76 0F0C0000 		.4byte	.LASF332
 31618 1f7a 01       		.byte	0x1
 31619 1f7b 9C0E     		.2byte	0xe9c
 31620 1f7d AF000000 		.4byte	0xaf
 31621 1f81 02       		.uleb128 0x2
 31622 1f82 91       		.byte	0x91
 31623 1f83 70       		.sleb128 -16
 31624 1f84 23       		.uleb128 0x23
 31625 1f85 1E0F0000 		.4byte	.LASF333
 31626 1f89 01       		.byte	0x1
 31627 1f8a 9D0E     		.2byte	0xe9d
 31628 1f8c EB000000 		.4byte	0xeb
 31629 1f90 02       		.uleb128 0x2
 31630 1f91 91       		.byte	0x91
 31631 1f92 6C       		.sleb128 -20
 31632 1f93 23       		.uleb128 0x23
 31633 1f94 9D0B0000 		.4byte	.LASF230
 31634 1f98 01       		.byte	0x1
 31635 1f99 9E0E     		.2byte	0xe9e
 31636 1f9b 97000000 		.4byte	0x97
 31637 1f9f 02       		.uleb128 0x2
 31638 1fa0 91       		.byte	0x91
 31639 1fa1 77       		.sleb128 -9
 31640 1fa2 23       		.uleb128 0x23
 31641 1fa3 1C060000 		.4byte	.LASF229
 31642 1fa7 01       		.byte	0x1
 31643 1fa8 9F0E     		.2byte	0xe9f
 31644 1faa 80080000 		.4byte	0x880
 31645 1fae 02       		.uleb128 0x2
 31646 1faf 91       		.byte	0x91
 31647 1fb0 68       		.sleb128 -24
 31648 1fb1 23       		.uleb128 0x23
 31649 1fb2 DD0F0000 		.4byte	.LASF291
 31650 1fb6 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 678


 31651 1fb7 A00E     		.2byte	0xea0
 31652 1fb9 97000000 		.4byte	0x97
 31653 1fbd 02       		.uleb128 0x2
 31654 1fbe 91       		.byte	0x91
 31655 1fbf 6B       		.sleb128 -21
 31656 1fc0 00       		.byte	0
 31657 1fc1 27       		.uleb128 0x27
 31658 1fc2 15020000 		.4byte	.LASF334
 31659 1fc6 01       		.byte	0x1
 31660 1fc7 DA0E     		.2byte	0xeda
 31661 1fc9 00000000 		.4byte	.LFB108
 31662 1fcd 60000000 		.4byte	.LFE108-.LFB108
 31663 1fd1 01       		.uleb128 0x1
 31664 1fd2 9C       		.byte	0x9c
 31665 1fd3 F61F0000 		.4byte	0x1ff6
 31666 1fd7 23       		.uleb128 0x23
 31667 1fd8 1C060000 		.4byte	.LASF229
 31668 1fdc 01       		.byte	0x1
 31669 1fdd DC0E     		.2byte	0xedc
 31670 1fdf 44090000 		.4byte	0x944
 31671 1fe3 02       		.uleb128 0x2
 31672 1fe4 91       		.byte	0x91
 31673 1fe5 70       		.sleb128 -16
 31674 1fe6 23       		.uleb128 0x23
 31675 1fe7 0F120000 		.4byte	.LASF235
 31676 1feb 01       		.byte	0x1
 31677 1fec DD0E     		.2byte	0xedd
 31678 1fee C7000000 		.4byte	0xc7
 31679 1ff2 02       		.uleb128 0x2
 31680 1ff3 91       		.byte	0x91
 31681 1ff4 6E       		.sleb128 -18
 31682 1ff5 00       		.byte	0
 31683 1ff6 27       		.uleb128 0x27
 31684 1ff7 98010000 		.4byte	.LASF335
 31685 1ffb 01       		.byte	0x1
 31686 1ffc F00E     		.2byte	0xef0
 31687 1ffe 00000000 		.4byte	.LFB109
 31688 2002 98050000 		.4byte	.LFE109-.LFB109
 31689 2006 01       		.uleb128 0x1
 31690 2007 9C       		.byte	0x9c
 31691 2008 83200000 		.4byte	0x2083
 31692 200c 23       		.uleb128 0x23
 31693 200d C4130000 		.4byte	.LASF336
 31694 2011 01       		.byte	0x1
 31695 2012 F30E     		.2byte	0xef3
 31696 2014 97000000 		.4byte	0x97
 31697 2018 02       		.uleb128 0x2
 31698 2019 91       		.byte	0x91
 31699 201a 6F       		.sleb128 -17
 31700 201b 26       		.uleb128 0x26
 31701 201c 6300     		.ascii	"c\000"
 31702 201e 01       		.byte	0x1
 31703 201f F40E     		.2byte	0xef4
 31704 2021 A3000000 		.4byte	0xa3
 31705 2025 02       		.uleb128 0x2
 31706 2026 91       		.byte	0x91
 31707 2027 6C       		.sleb128 -20
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 679


 31708 2028 26       		.uleb128 0x26
 31709 2029 6B00     		.ascii	"k\000"
 31710 202b 01       		.byte	0x1
 31711 202c F50E     		.2byte	0xef5
 31712 202e 97000000 		.4byte	0x97
 31713 2032 02       		.uleb128 0x2
 31714 2033 91       		.byte	0x91
 31715 2034 6B       		.sleb128 -21
 31716 2035 23       		.uleb128 0x23
 31717 2036 3F000000 		.4byte	.LASF337
 31718 203a 01       		.byte	0x1
 31719 203b F60E     		.2byte	0xef6
 31720 203d A3000000 		.4byte	0xa3
 31721 2041 02       		.uleb128 0x2
 31722 2042 91       		.byte	0x91
 31723 2043 68       		.sleb128 -24
 31724 2044 23       		.uleb128 0x23
 31725 2045 0F120000 		.4byte	.LASF235
 31726 2049 01       		.byte	0x1
 31727 204a F70E     		.2byte	0xef7
 31728 204c C7000000 		.4byte	0xc7
 31729 2050 02       		.uleb128 0x2
 31730 2051 91       		.byte	0x91
 31731 2052 66       		.sleb128 -26
 31732 2053 23       		.uleb128 0x23
 31733 2054 4B130000 		.4byte	.LASF234
 31734 2058 01       		.byte	0x1
 31735 2059 F80E     		.2byte	0xef8
 31736 205b EB000000 		.4byte	0xeb
 31737 205f 02       		.uleb128 0x2
 31738 2060 91       		.byte	0x91
 31739 2061 60       		.sleb128 -32
 31740 2062 23       		.uleb128 0x23
 31741 2063 1C060000 		.4byte	.LASF229
 31742 2067 01       		.byte	0x1
 31743 2068 FB0E     		.2byte	0xefb
 31744 206a 83200000 		.4byte	0x2083
 31745 206e 03       		.uleb128 0x3
 31746 206f 91       		.byte	0x91
 31747 2070 807D     		.sleb128 -384
 31748 2072 23       		.uleb128 0x23
 31749 2073 46090000 		.4byte	.LASF338
 31750 2077 01       		.byte	0x1
 31751 2078 FC0E     		.2byte	0xefc
 31752 207a D8120000 		.4byte	0x12d8
 31753 207e 03       		.uleb128 0x3
 31754 207f 91       		.byte	0x91
 31755 2080 E07C     		.sleb128 -416
 31756 2082 00       		.byte	0
 31757 2083 09       		.uleb128 0x9
 31758 2084 97000000 		.4byte	0x97
 31759 2088 94200000 		.4byte	0x2094
 31760 208c 24       		.uleb128 0x24
 31761 208d 18010000 		.4byte	0x118
 31762 2091 5D01     		.2byte	0x15d
 31763 2093 00       		.byte	0
 31764 2094 27       		.uleb128 0x27
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 680


 31765 2095 26130000 		.4byte	.LASF339
 31766 2099 01       		.byte	0x1
 31767 209a 5F0F     		.2byte	0xf5f
 31768 209c 00000000 		.4byte	.LFB110
 31769 20a0 8C000000 		.4byte	.LFE110-.LFB110
 31770 20a4 01       		.uleb128 0x1
 31771 20a5 9C       		.byte	0x9c
 31772 20a6 D4200000 		.4byte	0x20d4
 31773 20aa 23       		.uleb128 0x23
 31774 20ab 1C060000 		.4byte	.LASF229
 31775 20af 01       		.byte	0x1
 31776 20b0 620F     		.2byte	0xf62
 31777 20b2 6F0A0000 		.4byte	0xa6f
 31778 20b6 02       		.uleb128 0x2
 31779 20b7 91       		.byte	0x91
 31780 20b8 60       		.sleb128 -32
 31781 20b9 26       		.uleb128 0x26
 31782 20ba 6900     		.ascii	"i\000"
 31783 20bc 01       		.byte	0x1
 31784 20bd 630F     		.2byte	0xf63
 31785 20bf 97000000 		.4byte	0x97
 31786 20c3 02       		.uleb128 0x2
 31787 20c4 91       		.byte	0x91
 31788 20c5 6F       		.sleb128 -17
 31789 20c6 26       		.uleb128 0x26
 31790 20c7 6A00     		.ascii	"j\000"
 31791 20c9 01       		.byte	0x1
 31792 20ca 630F     		.2byte	0xf63
 31793 20cc 97000000 		.4byte	0x97
 31794 20d0 02       		.uleb128 0x2
 31795 20d1 91       		.byte	0x91
 31796 20d2 6E       		.sleb128 -18
 31797 20d3 00       		.byte	0
 31798 20d4 27       		.uleb128 0x27
 31799 20d5 19110000 		.4byte	.LASF340
 31800 20d9 01       		.byte	0x1
 31801 20da 780F     		.2byte	0xf78
 31802 20dc 00000000 		.4byte	.LFB111
 31803 20e0 EC000000 		.4byte	.LFE111-.LFB111
 31804 20e4 01       		.uleb128 0x1
 31805 20e5 9C       		.byte	0x9c
 31806 20e6 32210000 		.4byte	0x2132
 31807 20ea 23       		.uleb128 0x23
 31808 20eb 1C060000 		.4byte	.LASF229
 31809 20ef 01       		.byte	0x1
 31810 20f0 7B0F     		.2byte	0xf7b
 31811 20f2 32210000 		.4byte	0x2132
 31812 20f6 02       		.uleb128 0x2
 31813 20f7 91       		.byte	0x91
 31814 20f8 54       		.sleb128 -44
 31815 20f9 26       		.uleb128 0x26
 31816 20fa 6900     		.ascii	"i\000"
 31817 20fc 01       		.byte	0x1
 31818 20fd 7C0F     		.2byte	0xf7c
 31819 20ff 97000000 		.4byte	0x97
 31820 2103 02       		.uleb128 0x2
 31821 2104 91       		.byte	0x91
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 681


 31822 2105 6F       		.sleb128 -17
 31823 2106 26       		.uleb128 0x26
 31824 2107 6A00     		.ascii	"j\000"
 31825 2109 01       		.byte	0x1
 31826 210a 7C0F     		.2byte	0xf7c
 31827 210c 97000000 		.4byte	0x97
 31828 2110 02       		.uleb128 0x2
 31829 2111 91       		.byte	0x91
 31830 2112 6E       		.sleb128 -18
 31831 2113 26       		.uleb128 0x26
 31832 2114 69647800 		.ascii	"idx\000"
 31833 2118 01       		.byte	0x1
 31834 2119 7C0F     		.2byte	0xf7c
 31835 211b 97000000 		.4byte	0x97
 31836 211f 02       		.uleb128 0x2
 31837 2120 91       		.byte	0x91
 31838 2121 6D       		.sleb128 -19
 31839 2122 23       		.uleb128 0x23
 31840 2123 E50C0000 		.4byte	.LASF236
 31841 2127 01       		.byte	0x1
 31842 2128 7D0F     		.2byte	0xf7d
 31843 212a A3000000 		.4byte	0xa3
 31844 212e 02       		.uleb128 0x2
 31845 212f 91       		.byte	0x91
 31846 2130 52       		.sleb128 -46
 31847 2131 00       		.byte	0
 31848 2132 09       		.uleb128 0x9
 31849 2133 97000000 		.4byte	0x97
 31850 2137 42210000 		.4byte	0x2142
 31851 213b 0A       		.uleb128 0xa
 31852 213c 18010000 		.4byte	0x118
 31853 2140 15       		.byte	0x15
 31854 2141 00       		.byte	0
 31855 2142 27       		.uleb128 0x27
 31856 2143 97030000 		.4byte	.LASF341
 31857 2147 01       		.byte	0x1
 31858 2148 960F     		.2byte	0xf96
 31859 214a 00000000 		.4byte	.LFB112
 31860 214e 5C000000 		.4byte	.LFE112-.LFB112
 31861 2152 01       		.uleb128 0x1
 31862 2153 9C       		.byte	0x9c
 31863 2154 75210000 		.4byte	0x2175
 31864 2158 23       		.uleb128 0x23
 31865 2159 1C060000 		.4byte	.LASF229
 31866 215d 01       		.byte	0x1
 31867 215e 990F     		.2byte	0xf99
 31868 2160 080C0000 		.4byte	0xc08
 31869 2164 02       		.uleb128 0x2
 31870 2165 91       		.byte	0x91
 31871 2166 68       		.sleb128 -24
 31872 2167 26       		.uleb128 0x26
 31873 2168 6900     		.ascii	"i\000"
 31874 216a 01       		.byte	0x1
 31875 216b 9A0F     		.2byte	0xf9a
 31876 216d 97000000 		.4byte	0x97
 31877 2171 02       		.uleb128 0x2
 31878 2172 91       		.byte	0x91
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 682


 31879 2173 77       		.sleb128 -9
 31880 2174 00       		.byte	0
 31881 2175 27       		.uleb128 0x27
 31882 2176 DB030000 		.4byte	.LASF342
 31883 217a 01       		.byte	0x1
 31884 217b AD0F     		.2byte	0xfad
 31885 217d 00000000 		.4byte	.LFB113
 31886 2181 C0000000 		.4byte	.LFE113-.LFB113
 31887 2185 01       		.uleb128 0x1
 31888 2186 9C       		.byte	0x9c
 31889 2187 C6210000 		.4byte	0x21c6
 31890 218b 23       		.uleb128 0x23
 31891 218c 1C060000 		.4byte	.LASF229
 31892 2190 01       		.byte	0x1
 31893 2191 B00F     		.2byte	0xfb0
 31894 2193 C6210000 		.4byte	0x21c6
 31895 2197 02       		.uleb128 0x2
 31896 2198 91       		.byte	0x91
 31897 2199 54       		.sleb128 -44
 31898 219a 26       		.uleb128 0x26
 31899 219b 6900     		.ascii	"i\000"
 31900 219d 01       		.byte	0x1
 31901 219e B10F     		.2byte	0xfb1
 31902 21a0 97000000 		.4byte	0x97
 31903 21a4 02       		.uleb128 0x2
 31904 21a5 91       		.byte	0x91
 31905 21a6 6F       		.sleb128 -17
 31906 21a7 26       		.uleb128 0x26
 31907 21a8 69647800 		.ascii	"idx\000"
 31908 21ac 01       		.byte	0x1
 31909 21ad B10F     		.2byte	0xfb1
 31910 21af 97000000 		.4byte	0x97
 31911 21b3 02       		.uleb128 0x2
 31912 21b4 91       		.byte	0x91
 31913 21b5 6E       		.sleb128 -18
 31914 21b6 23       		.uleb128 0x23
 31915 21b7 0F120000 		.4byte	.LASF235
 31916 21bb 01       		.byte	0x1
 31917 21bc B20F     		.2byte	0xfb2
 31918 21be C7000000 		.4byte	0xc7
 31919 21c2 02       		.uleb128 0x2
 31920 21c3 91       		.byte	0x91
 31921 21c4 52       		.sleb128 -46
 31922 21c5 00       		.byte	0
 31923 21c6 09       		.uleb128 0x9
 31924 21c7 97000000 		.4byte	0x97
 31925 21cb D6210000 		.4byte	0x21d6
 31926 21cf 0A       		.uleb128 0xa
 31927 21d0 18010000 		.4byte	0x118
 31928 21d4 19       		.byte	0x19
 31929 21d5 00       		.byte	0
 31930 21d6 22       		.uleb128 0x22
 31931 21d7 41030000 		.4byte	.LASF343
 31932 21db 01       		.byte	0x1
 31933 21dc C80F     		.2byte	0xfc8
 31934 21de 00000000 		.4byte	.LFB114
 31935 21e2 54010000 		.4byte	.LFE114-.LFB114
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 683


 31936 21e6 01       		.uleb128 0x1
 31937 21e7 9C       		.byte	0x9c
 31938 21e8 2B220000 		.4byte	0x222b
 31939 21ec 25       		.uleb128 0x25
 31940 21ed 67070000 		.4byte	.LASF344
 31941 21f1 01       		.byte	0x1
 31942 21f2 C80F     		.2byte	0xfc8
 31943 21f4 A3000000 		.4byte	0xa3
 31944 21f8 04       		.uleb128 0x4
 31945 21f9 91       		.byte	0x91
 31946 21fa 9EE37E   		.sleb128 -20066
 31947 21fd 26       		.uleb128 0x26
 31948 21fe 6900     		.ascii	"i\000"
 31949 2200 01       		.byte	0x1
 31950 2201 CA0F     		.2byte	0xfca
 31951 2203 97000000 		.4byte	0x97
 31952 2207 02       		.uleb128 0x2
 31953 2208 91       		.byte	0x91
 31954 2209 77       		.sleb128 -9
 31955 220a 23       		.uleb128 0x23
 31956 220b 7B040000 		.4byte	.LASF345
 31957 220f 01       		.byte	0x1
 31958 2210 CB0F     		.2byte	0xfcb
 31959 2212 84100000 		.4byte	0x1084
 31960 2216 02       		.uleb128 0x2
 31961 2217 91       		.byte	0x91
 31962 2218 44       		.sleb128 -60
 31963 2219 23       		.uleb128 0x23
 31964 221a 96080000 		.4byte	.LASF218
 31965 221e 01       		.byte	0x1
 31966 221f CC0F     		.2byte	0xfcc
 31967 2221 AC0E0000 		.4byte	0xeac
 31968 2225 04       		.uleb128 0x4
 31969 2226 91       		.byte	0x91
 31970 2227 A4E37E   		.sleb128 -20060
 31971 222a 00       		.byte	0
 31972 222b 28       		.uleb128 0x28
 31973 222c F5000000 		.4byte	.LASF346
 31974 2230 01       		.byte	0x1
 31975 2231 E90F     		.2byte	0xfe9
 31976 2233 00000000 		.4byte	.LFB115
 31977 2237 12000000 		.4byte	.LFE115-.LFB115
 31978 223b 01       		.uleb128 0x1
 31979 223c 9C       		.byte	0x9c
 31980 223d 51220000 		.4byte	0x2251
 31981 2241 25       		.uleb128 0x25
 31982 2242 BF060000 		.4byte	.LASF347
 31983 2246 01       		.byte	0x1
 31984 2247 E90F     		.2byte	0xfe9
 31985 2249 73000000 		.4byte	0x73
 31986 224d 02       		.uleb128 0x2
 31987 224e 91       		.byte	0x91
 31988 224f 74       		.sleb128 -12
 31989 2250 00       		.byte	0
 31990 2251 31       		.uleb128 0x31
 31991 2252 620C0000 		.4byte	.LASF348
 31992 2256 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 684


 31993 2257 3710     		.2byte	0x1037
 31994 2259 97000000 		.4byte	0x97
 31995 225d 00000000 		.4byte	.LFB116
 31996 2261 64010000 		.4byte	.LFE116-.LFB116
 31997 2265 01       		.uleb128 0x1
 31998 2266 9C       		.byte	0x9c
 31999 2267 CC220000 		.4byte	0x22cc
 32000 226b 23       		.uleb128 0x23
 32001 226c 3B0E0000 		.4byte	.LASF349
 32002 2270 01       		.byte	0x1
 32003 2271 3910     		.2byte	0x1039
 32004 2273 97000000 		.4byte	0x97
 32005 2277 05       		.uleb128 0x5
 32006 2278 03       		.byte	0x3
 32007 2279 0C000000 		.4byte	fsm_state.11534
 32008 227d 26       		.uleb128 0x26
 32009 227e 636E7400 		.ascii	"cnt\000"
 32010 2282 01       		.byte	0x1
 32011 2283 3A10     		.2byte	0x103a
 32012 2285 D3000000 		.4byte	0xd3
 32013 2289 05       		.uleb128 0x5
 32014 228a 03       		.byte	0x3
 32015 228b 10000000 		.4byte	cnt.11535
 32016 228f 23       		.uleb128 0x23
 32017 2290 68040000 		.4byte	.LASF350
 32018 2294 01       		.byte	0x1
 32019 2295 3B10     		.2byte	0x103b
 32020 2297 D3000000 		.4byte	0xd3
 32021 229b 02       		.uleb128 0x2
 32022 229c 91       		.byte	0x91
 32023 229d 74       		.sleb128 -12
 32024 229e 23       		.uleb128 0x23
 32025 229f 840B0000 		.4byte	.LASF351
 32026 22a3 01       		.byte	0x1
 32027 22a4 3B10     		.2byte	0x103b
 32028 22a6 D3000000 		.4byte	0xd3
 32029 22aa 02       		.uleb128 0x2
 32030 22ab 91       		.byte	0x91
 32031 22ac 70       		.sleb128 -16
 32032 22ad 23       		.uleb128 0x23
 32033 22ae 8A000000 		.4byte	.LASF352
 32034 22b2 01       		.byte	0x1
 32035 22b3 3C10     		.2byte	0x103c
 32036 22b5 D3000000 		.4byte	0xd3
 32037 22b9 02       		.uleb128 0x2
 32038 22ba 91       		.byte	0x91
 32039 22bb 6C       		.sleb128 -20
 32040 22bc 23       		.uleb128 0x23
 32041 22bd 96000000 		.4byte	.LASF353
 32042 22c1 01       		.byte	0x1
 32043 22c2 3C10     		.2byte	0x103c
 32044 22c4 D3000000 		.4byte	0xd3
 32045 22c8 02       		.uleb128 0x2
 32046 22c9 91       		.byte	0x91
 32047 22ca 68       		.sleb128 -24
 32048 22cb 00       		.byte	0
 32049 22cc 28       		.uleb128 0x28
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 685


 32050 22cd CE070000 		.4byte	.LASF354
 32051 22d1 01       		.byte	0x1
 32052 22d2 8910     		.2byte	0x1089
 32053 22d4 00000000 		.4byte	.LFB117
 32054 22d8 12000000 		.4byte	.LFE117-.LFB117
 32055 22dc 01       		.uleb128 0x1
 32056 22dd 9C       		.byte	0x9c
 32057 22de F2220000 		.4byte	0x22f2
 32058 22e2 25       		.uleb128 0x25
 32059 22e3 BF060000 		.4byte	.LASF347
 32060 22e7 01       		.byte	0x1
 32061 22e8 8910     		.2byte	0x1089
 32062 22ea 73000000 		.4byte	0x73
 32063 22ee 02       		.uleb128 0x2
 32064 22ef 91       		.byte	0x91
 32065 22f0 74       		.sleb128 -12
 32066 22f1 00       		.byte	0
 32067 22f2 28       		.uleb128 0x28
 32068 22f3 CF0D0000 		.4byte	.LASF355
 32069 22f7 01       		.byte	0x1
 32070 22f8 D510     		.2byte	0x10d5
 32071 22fa 00000000 		.4byte	.LFB118
 32072 22fe 1A000000 		.4byte	.LFE118-.LFB118
 32073 2302 01       		.uleb128 0x1
 32074 2303 9C       		.byte	0x9c
 32075 2304 27230000 		.4byte	0x2327
 32076 2308 25       		.uleb128 0x25
 32077 2309 1F030000 		.4byte	.LASF356
 32078 230d 01       		.byte	0x1
 32079 230e D510     		.2byte	0x10d5
 32080 2310 97000000 		.4byte	0x97
 32081 2314 02       		.uleb128 0x2
 32082 2315 91       		.byte	0x91
 32083 2316 77       		.sleb128 -9
 32084 2317 25       		.uleb128 0x25
 32085 2318 0A0B0000 		.4byte	.LASF186
 32086 231c 01       		.byte	0x1
 32087 231d D510     		.2byte	0x10d5
 32088 231f 97000000 		.4byte	0x97
 32089 2323 02       		.uleb128 0x2
 32090 2324 91       		.byte	0x91
 32091 2325 76       		.sleb128 -10
 32092 2326 00       		.byte	0
 32093 2327 32       		.uleb128 0x32
 32094 2328 A2000000 		.4byte	.LASF358
 32095 232c 01       		.byte	0x1
 32096 232d FF10     		.2byte	0x10ff
 32097 232f 00000000 		.4byte	.LFB119
 32098 2333 0C000000 		.4byte	.LFE119-.LFB119
 32099 2337 01       		.uleb128 0x1
 32100 2338 9C       		.byte	0x9c
 32101 2339 32       		.uleb128 0x32
 32102 233a 4B060000 		.4byte	.LASF359
 32103 233e 01       		.byte	0x1
 32104 233f 1511     		.2byte	0x1115
 32105 2341 00000000 		.4byte	.LFB120
 32106 2345 0C000000 		.4byte	.LFE120-.LFB120
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 686


 32107 2349 01       		.uleb128 0x1
 32108 234a 9C       		.byte	0x9c
 32109 234b 33       		.uleb128 0x33
 32110 234c 58120000 		.4byte	.LASF360
 32111 2350 09       		.byte	0x9
 32112 2351 1207     		.2byte	0x712
 32113 2353 57230000 		.4byte	0x2357
 32114 2357 06       		.uleb128 0x6
 32115 2358 81000000 		.4byte	0x81
 32116 235c 09       		.uleb128 0x9
 32117 235d 22030000 		.4byte	0x322
 32118 2361 6C230000 		.4byte	0x236c
 32119 2365 0A       		.uleb128 0xa
 32120 2366 18010000 		.4byte	0x118
 32121 236a 01       		.byte	0x1
 32122 236b 00       		.byte	0
 32123 236c 33       		.uleb128 0x33
 32124 236d 1E140000 		.4byte	.LASF361
 32125 2371 08       		.byte	0x8
 32126 2372 1B02     		.2byte	0x21b
 32127 2374 5C230000 		.4byte	0x235c
 32128 2378 33       		.uleb128 0x33
 32129 2379 E0040000 		.4byte	.LASF362
 32130 237d 08       		.byte	0x8
 32131 237e 1B02     		.2byte	0x21b
 32132 2380 5C230000 		.4byte	0x235c
 32133 2384 33       		.uleb128 0x33
 32134 2385 880D0000 		.4byte	.LASF363
 32135 2389 08       		.byte	0x8
 32136 238a 1B02     		.2byte	0x21b
 32137 238c 5C230000 		.4byte	0x235c
 32138 2390 09       		.uleb128 0x9
 32139 2391 5F030000 		.4byte	0x35f
 32140 2395 A0230000 		.4byte	0x23a0
 32141 2399 0A       		.uleb128 0xa
 32142 239a 18010000 		.4byte	0x118
 32143 239e 01       		.byte	0x1
 32144 239f 00       		.byte	0
 32145 23a0 33       		.uleb128 0x33
 32146 23a1 CF060000 		.4byte	.LASF364
 32147 23a5 08       		.byte	0x8
 32148 23a6 1C02     		.2byte	0x21c
 32149 23a8 90230000 		.4byte	0x2390
 32150 23ac 33       		.uleb128 0x33
 32151 23ad 71140000 		.4byte	.LASF365
 32152 23b1 08       		.byte	0x8
 32153 23b2 1C02     		.2byte	0x21c
 32154 23b4 90230000 		.4byte	0x2390
 32155 23b8 33       		.uleb128 0x33
 32156 23b9 E8130000 		.4byte	.LASF366
 32157 23bd 08       		.byte	0x8
 32158 23be 1D02     		.2byte	0x21d
 32159 23c0 E0030000 		.4byte	0x3e0
 32160 23c4 33       		.uleb128 0x33
 32161 23c5 0B110000 		.4byte	.LASF367
 32162 23c9 08       		.byte	0x8
 32163 23ca 1D02     		.2byte	0x21d
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 687


 32164 23cc E0030000 		.4byte	0x3e0
 32165 23d0 33       		.uleb128 0x33
 32166 23d1 C1100000 		.4byte	.LASF368
 32167 23d5 08       		.byte	0x8
 32168 23d6 1E02     		.2byte	0x21e
 32169 23d8 31040000 		.4byte	0x431
 32170 23dc 33       		.uleb128 0x33
 32171 23dd BD000000 		.4byte	.LASF369
 32172 23e1 08       		.byte	0x8
 32173 23e2 1F02     		.2byte	0x21f
 32174 23e4 4A040000 		.4byte	0x44a
 32175 23e8 33       		.uleb128 0x33
 32176 23e9 F0100000 		.4byte	.LASF370
 32177 23ed 08       		.byte	0x8
 32178 23ee 2002     		.2byte	0x220
 32179 23f0 230B0000 		.4byte	0xb23
 32180 23f4 33       		.uleb128 0x33
 32181 23f5 660B0000 		.4byte	.LASF371
 32182 23f9 08       		.byte	0x8
 32183 23fa 2002     		.2byte	0x220
 32184 23fc 230B0000 		.4byte	0xb23
 32185 2400 33       		.uleb128 0x33
 32186 2401 430A0000 		.4byte	.LASF372
 32187 2405 08       		.byte	0x8
 32188 2406 2102     		.2byte	0x221
 32189 2408 D40C0000 		.4byte	0xcd4
 32190 240c 33       		.uleb128 0x33
 32191 240d FC020000 		.4byte	.LASF373
 32192 2411 08       		.byte	0x8
 32193 2412 2602     		.2byte	0x226
 32194 2414 A3000000 		.4byte	0xa3
 32195 2418 33       		.uleb128 0x33
 32196 2419 CE0E0000 		.4byte	.LASF374
 32197 241d 08       		.byte	0x8
 32198 241e 2702     		.2byte	0x227
 32199 2420 A3000000 		.4byte	0xa3
 32200 2424 33       		.uleb128 0x33
 32201 2425 000F0000 		.4byte	.LASF375
 32202 2429 08       		.byte	0x8
 32203 242a 2A02     		.2byte	0x22a
 32204 242c 11040000 		.4byte	0x411
 32205 2430 33       		.uleb128 0x33
 32206 2431 EF120000 		.4byte	.LASF376
 32207 2435 08       		.byte	0x8
 32208 2436 2B02     		.2byte	0x22b
 32209 2438 80080000 		.4byte	0x880
 32210 243c 33       		.uleb128 0x33
 32211 243d 78120000 		.4byte	.LASF377
 32212 2441 08       		.byte	0x8
 32213 2442 2E02     		.2byte	0x22e
 32214 2444 11040000 		.4byte	0x411
 32215 2448 33       		.uleb128 0x33
 32216 2449 130B0000 		.4byte	.LASF378
 32217 244d 08       		.byte	0x8
 32218 244e 3702     		.2byte	0x237
 32219 2450 97000000 		.4byte	0x97
 32220 2454 33       		.uleb128 0x33
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 688


 32221 2455 A8040000 		.4byte	.LASF379
 32222 2459 08       		.byte	0x8
 32223 245a 3902     		.2byte	0x239
 32224 245c 97000000 		.4byte	0x97
 32225 2460 33       		.uleb128 0x33
 32226 2461 980A0000 		.4byte	.LASF380
 32227 2465 08       		.byte	0x8
 32228 2466 4002     		.2byte	0x240
 32229 2468 97000000 		.4byte	0x97
 32230 246c 33       		.uleb128 0x33
 32231 246d BE070000 		.4byte	.LASF381
 32232 2471 08       		.byte	0x8
 32233 2472 4102     		.2byte	0x241
 32234 2474 97000000 		.4byte	0x97
 32235 2478 09       		.uleb128 0x9
 32236 2479 C7000000 		.4byte	0xc7
 32237 247d 88240000 		.4byte	0x2488
 32238 2481 0A       		.uleb128 0xa
 32239 2482 18010000 		.4byte	0x118
 32240 2486 0B       		.byte	0xb
 32241 2487 00       		.byte	0
 32242 2488 33       		.uleb128 0x33
 32243 2489 A0040000 		.4byte	.LASF382
 32244 248d 08       		.byte	0x8
 32245 248e 4402     		.2byte	0x244
 32246 2490 78240000 		.4byte	0x2478
 32247 2494 33       		.uleb128 0x33
 32248 2495 2A140000 		.4byte	.LASF383
 32249 2499 08       		.byte	0x8
 32250 249a 4502     		.2byte	0x245
 32251 249c 97000000 		.4byte	0x97
 32252 24a0 09       		.uleb128 0x9
 32253 24a1 AF000000 		.4byte	0xaf
 32254 24a5 B6240000 		.4byte	0x24b6
 32255 24a9 0A       		.uleb128 0xa
 32256 24aa 18010000 		.4byte	0x118
 32257 24ae 01       		.byte	0x1
 32258 24af 0A       		.uleb128 0xa
 32259 24b0 18010000 		.4byte	0x118
 32260 24b4 04       		.byte	0x4
 32261 24b5 00       		.byte	0
 32262 24b6 33       		.uleb128 0x33
 32263 24b7 FD060000 		.4byte	.LASF384
 32264 24bb 08       		.byte	0x8
 32265 24bc 4B02     		.2byte	0x24b
 32266 24be A0240000 		.4byte	0x24a0
 32267 24c2 33       		.uleb128 0x33
 32268 24c3 EC0F0000 		.4byte	.LASF385
 32269 24c7 08       		.byte	0x8
 32270 24c8 4C02     		.2byte	0x24c
 32271 24ca 80080000 		.4byte	0x880
 32272 24ce 09       		.uleb128 0x9
 32273 24cf A3000000 		.4byte	0xa3
 32274 24d3 E4240000 		.4byte	0x24e4
 32275 24d7 0A       		.uleb128 0xa
 32276 24d8 18010000 		.4byte	0x118
 32277 24dc 01       		.byte	0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 689


 32278 24dd 0A       		.uleb128 0xa
 32279 24de 18010000 		.4byte	0x118
 32280 24e2 04       		.byte	0x4
 32281 24e3 00       		.byte	0
 32282 24e4 33       		.uleb128 0x33
 32283 24e5 18130000 		.4byte	.LASF386
 32284 24e9 08       		.byte	0x8
 32285 24ea 4D02     		.2byte	0x24d
 32286 24ec CE240000 		.4byte	0x24ce
 32287 24f0 09       		.uleb128 0x9
 32288 24f1 97000000 		.4byte	0x97
 32289 24f5 06250000 		.4byte	0x2506
 32290 24f9 0A       		.uleb128 0xa
 32291 24fa 18010000 		.4byte	0x118
 32292 24fe 01       		.byte	0x1
 32293 24ff 0A       		.uleb128 0xa
 32294 2500 18010000 		.4byte	0x118
 32295 2504 04       		.byte	0x4
 32296 2505 00       		.byte	0
 32297 2506 33       		.uleb128 0x33
 32298 2507 D6060000 		.4byte	.LASF387
 32299 250b 08       		.byte	0x8
 32300 250c 4E02     		.2byte	0x24e
 32301 250e F0240000 		.4byte	0x24f0
 32302 2512 33       		.uleb128 0x33
 32303 2513 32060000 		.4byte	.LASF388
 32304 2517 08       		.byte	0x8
 32305 2518 5402     		.2byte	0x254
 32306 251a 1C030000 		.4byte	0x31c
 32307 251e 33       		.uleb128 0x33
 32308 251f 860F0000 		.4byte	.LASF389
 32309 2523 08       		.byte	0x8
 32310 2524 5502     		.2byte	0x255
 32311 2526 74160000 		.4byte	0x1674
 32312 252a 33       		.uleb128 0x33
 32313 252b EB030000 		.4byte	.LASF390
 32314 252f 08       		.byte	0x8
 32315 2530 5602     		.2byte	0x256
 32316 2532 74160000 		.4byte	0x1674
 32317 2536 33       		.uleb128 0x33
 32318 2537 96110000 		.4byte	.LASF391
 32319 253b 08       		.byte	0x8
 32320 253c 5B02     		.2byte	0x25b
 32321 253e 97000000 		.4byte	0x97
 32322 2542 33       		.uleb128 0x33
 32323 2543 55130000 		.4byte	.LASF392
 32324 2547 08       		.byte	0x8
 32325 2548 5C02     		.2byte	0x25c
 32326 254a F1070000 		.4byte	0x7f1
 32327 254e 33       		.uleb128 0x33
 32328 254f 49120000 		.4byte	.LASF393
 32329 2553 08       		.byte	0x8
 32330 2554 5D02     		.2byte	0x25d
 32331 2556 73000000 		.4byte	0x73
 32332 255a 09       		.uleb128 0x9
 32333 255b 73000000 		.4byte	0x73
 32334 255f 6A250000 		.4byte	0x256a
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 690


 32335 2563 0A       		.uleb128 0xa
 32336 2564 18010000 		.4byte	0x118
 32337 2568 04       		.byte	0x4
 32338 2569 00       		.byte	0
 32339 256a 33       		.uleb128 0x33
 32340 256b B80C0000 		.4byte	.LASF394
 32341 256f 08       		.byte	0x8
 32342 2570 5E02     		.2byte	0x25e
 32343 2572 5A250000 		.4byte	0x255a
 32344 2576 09       		.uleb128 0x9
 32345 2577 580C0000 		.4byte	0xc58
 32346 257b 86250000 		.4byte	0x2586
 32347 257f 0A       		.uleb128 0xa
 32348 2580 18010000 		.4byte	0x118
 32349 2584 04       		.byte	0x4
 32350 2585 00       		.byte	0
 32351 2586 33       		.uleb128 0x33
 32352 2587 72050000 		.4byte	.LASF395
 32353 258b 08       		.byte	0x8
 32354 258c 5F02     		.2byte	0x25f
 32355 258e 76250000 		.4byte	0x2576
 32356 2592 09       		.uleb128 0x9
 32357 2593 97000000 		.4byte	0x97
 32358 2597 A8250000 		.4byte	0x25a8
 32359 259b 0A       		.uleb128 0xa
 32360 259c 18010000 		.4byte	0x118
 32361 25a0 04       		.byte	0x4
 32362 25a1 0A       		.uleb128 0xa
 32363 25a2 18010000 		.4byte	0x118
 32364 25a6 02       		.byte	0x2
 32365 25a7 00       		.byte	0
 32366 25a8 33       		.uleb128 0x33
 32367 25a9 D00B0000 		.4byte	.LASF396
 32368 25ad 08       		.byte	0x8
 32369 25ae 6302     		.2byte	0x263
 32370 25b0 92250000 		.4byte	0x2592
 32371 25b4 33       		.uleb128 0x33
 32372 25b5 50140000 		.4byte	.LASF397
 32373 25b9 08       		.byte	0x8
 32374 25ba 6802     		.2byte	0x268
 32375 25bc 97000000 		.4byte	0x97
 32376 25c0 09       		.uleb128 0x9
 32377 25c1 A3000000 		.4byte	0xa3
 32378 25c5 D7250000 		.4byte	0x25d7
 32379 25c9 24       		.uleb128 0x24
 32380 25ca 18010000 		.4byte	0x118
 32381 25ce 5702     		.2byte	0x257
 32382 25d0 0A       		.uleb128 0xa
 32383 25d1 18010000 		.4byte	0x118
 32384 25d5 01       		.byte	0x1
 32385 25d6 00       		.byte	0
 32386 25d7 33       		.uleb128 0x33
 32387 25d8 19120000 		.4byte	.LASF398
 32388 25dc 08       		.byte	0x8
 32389 25dd 6B02     		.2byte	0x26b
 32390 25df C0250000 		.4byte	0x25c0
 32391 25e3 33       		.uleb128 0x33
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 691


 32392 25e4 F50A0000 		.4byte	.LASF399
 32393 25e8 08       		.byte	0x8
 32394 25e9 6C02     		.2byte	0x26c
 32395 25eb AF000000 		.4byte	0xaf
 32396 25ef 34       		.uleb128 0x34
 32397 25f0 25120000 		.4byte	.LASF400
 32398 25f4 01       		.byte	0x1
 32399 25f5 33       		.byte	0x33
 32400 25f6 00260000 		.4byte	0x2600
 32401 25fa 05       		.uleb128 0x5
 32402 25fb 03       		.byte	0x3
 32403 25fc 00000000 		.4byte	EEPROM_ADDR
 32404 2600 07       		.uleb128 0x7
 32405 2601 04       		.byte	0x4
 32406 2602 00010000 		.4byte	0x100
 32407 2606 00       		.byte	0
 32408              		.section	.debug_abbrev,"",%progbits
 32409              	.Ldebug_abbrev0:
 32410 0000 01       		.uleb128 0x1
 32411 0001 11       		.uleb128 0x11
 32412 0002 01       		.byte	0x1
 32413 0003 25       		.uleb128 0x25
 32414 0004 0E       		.uleb128 0xe
 32415 0005 13       		.uleb128 0x13
 32416 0006 0B       		.uleb128 0xb
 32417 0007 03       		.uleb128 0x3
 32418 0008 0E       		.uleb128 0xe
 32419 0009 1B       		.uleb128 0x1b
 32420 000a 0E       		.uleb128 0xe
 32421 000b 55       		.uleb128 0x55
 32422 000c 17       		.uleb128 0x17
 32423 000d 11       		.uleb128 0x11
 32424 000e 01       		.uleb128 0x1
 32425 000f 10       		.uleb128 0x10
 32426 0010 17       		.uleb128 0x17
 32427 0011 00       		.byte	0
 32428 0012 00       		.byte	0
 32429 0013 02       		.uleb128 0x2
 32430 0014 24       		.uleb128 0x24
 32431 0015 00       		.byte	0
 32432 0016 0B       		.uleb128 0xb
 32433 0017 0B       		.uleb128 0xb
 32434 0018 3E       		.uleb128 0x3e
 32435 0019 0B       		.uleb128 0xb
 32436 001a 03       		.uleb128 0x3
 32437 001b 0E       		.uleb128 0xe
 32438 001c 00       		.byte	0
 32439 001d 00       		.byte	0
 32440 001e 03       		.uleb128 0x3
 32441 001f 16       		.uleb128 0x16
 32442 0020 00       		.byte	0
 32443 0021 03       		.uleb128 0x3
 32444 0022 0E       		.uleb128 0xe
 32445 0023 3A       		.uleb128 0x3a
 32446 0024 0B       		.uleb128 0xb
 32447 0025 3B       		.uleb128 0x3b
 32448 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 692


 32449 0027 49       		.uleb128 0x49
 32450 0028 13       		.uleb128 0x13
 32451 0029 00       		.byte	0
 32452 002a 00       		.byte	0
 32453 002b 04       		.uleb128 0x4
 32454 002c 24       		.uleb128 0x24
 32455 002d 00       		.byte	0
 32456 002e 0B       		.uleb128 0xb
 32457 002f 0B       		.uleb128 0xb
 32458 0030 3E       		.uleb128 0x3e
 32459 0031 0B       		.uleb128 0xb
 32460 0032 03       		.uleb128 0x3
 32461 0033 08       		.uleb128 0x8
 32462 0034 00       		.byte	0
 32463 0035 00       		.byte	0
 32464 0036 05       		.uleb128 0x5
 32465 0037 16       		.uleb128 0x16
 32466 0038 00       		.byte	0
 32467 0039 03       		.uleb128 0x3
 32468 003a 0E       		.uleb128 0xe
 32469 003b 3A       		.uleb128 0x3a
 32470 003c 0B       		.uleb128 0xb
 32471 003d 3B       		.uleb128 0x3b
 32472 003e 05       		.uleb128 0x5
 32473 003f 49       		.uleb128 0x49
 32474 0040 13       		.uleb128 0x13
 32475 0041 00       		.byte	0
 32476 0042 00       		.byte	0
 32477 0043 06       		.uleb128 0x6
 32478 0044 35       		.uleb128 0x35
 32479 0045 00       		.byte	0
 32480 0046 49       		.uleb128 0x49
 32481 0047 13       		.uleb128 0x13
 32482 0048 00       		.byte	0
 32483 0049 00       		.byte	0
 32484 004a 07       		.uleb128 0x7
 32485 004b 0F       		.uleb128 0xf
 32486 004c 00       		.byte	0
 32487 004d 0B       		.uleb128 0xb
 32488 004e 0B       		.uleb128 0xb
 32489 004f 49       		.uleb128 0x49
 32490 0050 13       		.uleb128 0x13
 32491 0051 00       		.byte	0
 32492 0052 00       		.byte	0
 32493 0053 08       		.uleb128 0x8
 32494 0054 26       		.uleb128 0x26
 32495 0055 00       		.byte	0
 32496 0056 49       		.uleb128 0x49
 32497 0057 13       		.uleb128 0x13
 32498 0058 00       		.byte	0
 32499 0059 00       		.byte	0
 32500 005a 09       		.uleb128 0x9
 32501 005b 01       		.uleb128 0x1
 32502 005c 01       		.byte	0x1
 32503 005d 49       		.uleb128 0x49
 32504 005e 13       		.uleb128 0x13
 32505 005f 01       		.uleb128 0x1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 693


 32506 0060 13       		.uleb128 0x13
 32507 0061 00       		.byte	0
 32508 0062 00       		.byte	0
 32509 0063 0A       		.uleb128 0xa
 32510 0064 21       		.uleb128 0x21
 32511 0065 00       		.byte	0
 32512 0066 49       		.uleb128 0x49
 32513 0067 13       		.uleb128 0x13
 32514 0068 2F       		.uleb128 0x2f
 32515 0069 0B       		.uleb128 0xb
 32516 006a 00       		.byte	0
 32517 006b 00       		.byte	0
 32518 006c 0B       		.uleb128 0xb
 32519 006d 04       		.uleb128 0x4
 32520 006e 01       		.byte	0x1
 32521 006f 03       		.uleb128 0x3
 32522 0070 0E       		.uleb128 0xe
 32523 0071 0B       		.uleb128 0xb
 32524 0072 0B       		.uleb128 0xb
 32525 0073 49       		.uleb128 0x49
 32526 0074 13       		.uleb128 0x13
 32527 0075 3A       		.uleb128 0x3a
 32528 0076 0B       		.uleb128 0xb
 32529 0077 3B       		.uleb128 0x3b
 32530 0078 0B       		.uleb128 0xb
 32531 0079 01       		.uleb128 0x1
 32532 007a 13       		.uleb128 0x13
 32533 007b 00       		.byte	0
 32534 007c 00       		.byte	0
 32535 007d 0C       		.uleb128 0xc
 32536 007e 28       		.uleb128 0x28
 32537 007f 00       		.byte	0
 32538 0080 03       		.uleb128 0x3
 32539 0081 0E       		.uleb128 0xe
 32540 0082 1C       		.uleb128 0x1c
 32541 0083 0B       		.uleb128 0xb
 32542 0084 00       		.byte	0
 32543 0085 00       		.byte	0
 32544 0086 0D       		.uleb128 0xd
 32545 0087 13       		.uleb128 0x13
 32546 0088 00       		.byte	0
 32547 0089 03       		.uleb128 0x3
 32548 008a 0E       		.uleb128 0xe
 32549 008b 3C       		.uleb128 0x3c
 32550 008c 19       		.uleb128 0x19
 32551 008d 00       		.byte	0
 32552 008e 00       		.byte	0
 32553 008f 0E       		.uleb128 0xe
 32554 0090 13       		.uleb128 0x13
 32555 0091 01       		.byte	0x1
 32556 0092 03       		.uleb128 0x3
 32557 0093 0E       		.uleb128 0xe
 32558 0094 0B       		.uleb128 0xb
 32559 0095 0B       		.uleb128 0xb
 32560 0096 3A       		.uleb128 0x3a
 32561 0097 0B       		.uleb128 0xb
 32562 0098 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 694


 32563 0099 0B       		.uleb128 0xb
 32564 009a 01       		.uleb128 0x1
 32565 009b 13       		.uleb128 0x13
 32566 009c 00       		.byte	0
 32567 009d 00       		.byte	0
 32568 009e 0F       		.uleb128 0xf
 32569 009f 0D       		.uleb128 0xd
 32570 00a0 00       		.byte	0
 32571 00a1 03       		.uleb128 0x3
 32572 00a2 08       		.uleb128 0x8
 32573 00a3 3A       		.uleb128 0x3a
 32574 00a4 0B       		.uleb128 0xb
 32575 00a5 3B       		.uleb128 0x3b
 32576 00a6 0B       		.uleb128 0xb
 32577 00a7 49       		.uleb128 0x49
 32578 00a8 13       		.uleb128 0x13
 32579 00a9 38       		.uleb128 0x38
 32580 00aa 0B       		.uleb128 0xb
 32581 00ab 00       		.byte	0
 32582 00ac 00       		.byte	0
 32583 00ad 10       		.uleb128 0x10
 32584 00ae 0D       		.uleb128 0xd
 32585 00af 00       		.byte	0
 32586 00b0 03       		.uleb128 0x3
 32587 00b1 0E       		.uleb128 0xe
 32588 00b2 3A       		.uleb128 0x3a
 32589 00b3 0B       		.uleb128 0xb
 32590 00b4 3B       		.uleb128 0x3b
 32591 00b5 0B       		.uleb128 0xb
 32592 00b6 49       		.uleb128 0x49
 32593 00b7 13       		.uleb128 0x13
 32594 00b8 38       		.uleb128 0x38
 32595 00b9 0B       		.uleb128 0xb
 32596 00ba 00       		.byte	0
 32597 00bb 00       		.byte	0
 32598 00bc 11       		.uleb128 0x11
 32599 00bd 13       		.uleb128 0x13
 32600 00be 01       		.byte	0x1
 32601 00bf 03       		.uleb128 0x3
 32602 00c0 0E       		.uleb128 0xe
 32603 00c1 0B       		.uleb128 0xb
 32604 00c2 0B       		.uleb128 0xb
 32605 00c3 3A       		.uleb128 0x3a
 32606 00c4 0B       		.uleb128 0xb
 32607 00c5 3B       		.uleb128 0x3b
 32608 00c6 05       		.uleb128 0x5
 32609 00c7 01       		.uleb128 0x1
 32610 00c8 13       		.uleb128 0x13
 32611 00c9 00       		.byte	0
 32612 00ca 00       		.byte	0
 32613 00cb 12       		.uleb128 0x12
 32614 00cc 0D       		.uleb128 0xd
 32615 00cd 00       		.byte	0
 32616 00ce 03       		.uleb128 0x3
 32617 00cf 0E       		.uleb128 0xe
 32618 00d0 3A       		.uleb128 0x3a
 32619 00d1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 695


 32620 00d2 3B       		.uleb128 0x3b
 32621 00d3 05       		.uleb128 0x5
 32622 00d4 49       		.uleb128 0x49
 32623 00d5 13       		.uleb128 0x13
 32624 00d6 38       		.uleb128 0x38
 32625 00d7 0B       		.uleb128 0xb
 32626 00d8 00       		.byte	0
 32627 00d9 00       		.byte	0
 32628 00da 13       		.uleb128 0x13
 32629 00db 0D       		.uleb128 0xd
 32630 00dc 00       		.byte	0
 32631 00dd 03       		.uleb128 0x3
 32632 00de 08       		.uleb128 0x8
 32633 00df 3A       		.uleb128 0x3a
 32634 00e0 0B       		.uleb128 0xb
 32635 00e1 3B       		.uleb128 0x3b
 32636 00e2 05       		.uleb128 0x5
 32637 00e3 49       		.uleb128 0x49
 32638 00e4 13       		.uleb128 0x13
 32639 00e5 38       		.uleb128 0x38
 32640 00e6 0B       		.uleb128 0xb
 32641 00e7 00       		.byte	0
 32642 00e8 00       		.byte	0
 32643 00e9 14       		.uleb128 0x14
 32644 00ea 13       		.uleb128 0x13
 32645 00eb 01       		.byte	0x1
 32646 00ec 03       		.uleb128 0x3
 32647 00ed 0E       		.uleb128 0xe
 32648 00ee 0B       		.uleb128 0xb
 32649 00ef 05       		.uleb128 0x5
 32650 00f0 3A       		.uleb128 0x3a
 32651 00f1 0B       		.uleb128 0xb
 32652 00f2 3B       		.uleb128 0x3b
 32653 00f3 05       		.uleb128 0x5
 32654 00f4 01       		.uleb128 0x1
 32655 00f5 13       		.uleb128 0x13
 32656 00f6 00       		.byte	0
 32657 00f7 00       		.byte	0
 32658 00f8 15       		.uleb128 0x15
 32659 00f9 0D       		.uleb128 0xd
 32660 00fa 00       		.byte	0
 32661 00fb 03       		.uleb128 0x3
 32662 00fc 08       		.uleb128 0x8
 32663 00fd 3A       		.uleb128 0x3a
 32664 00fe 0B       		.uleb128 0xb
 32665 00ff 3B       		.uleb128 0x3b
 32666 0100 05       		.uleb128 0x5
 32667 0101 49       		.uleb128 0x49
 32668 0102 13       		.uleb128 0x13
 32669 0103 38       		.uleb128 0x38
 32670 0104 05       		.uleb128 0x5
 32671 0105 00       		.byte	0
 32672 0106 00       		.byte	0
 32673 0107 16       		.uleb128 0x16
 32674 0108 0D       		.uleb128 0xd
 32675 0109 00       		.byte	0
 32676 010a 03       		.uleb128 0x3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 696


 32677 010b 0E       		.uleb128 0xe
 32678 010c 3A       		.uleb128 0x3a
 32679 010d 0B       		.uleb128 0xb
 32680 010e 3B       		.uleb128 0x3b
 32681 010f 05       		.uleb128 0x5
 32682 0110 49       		.uleb128 0x49
 32683 0111 13       		.uleb128 0x13
 32684 0112 38       		.uleb128 0x38
 32685 0113 05       		.uleb128 0x5
 32686 0114 00       		.byte	0
 32687 0115 00       		.byte	0
 32688 0116 17       		.uleb128 0x17
 32689 0117 2E       		.uleb128 0x2e
 32690 0118 01       		.byte	0x1
 32691 0119 03       		.uleb128 0x3
 32692 011a 0E       		.uleb128 0xe
 32693 011b 3A       		.uleb128 0x3a
 32694 011c 0B       		.uleb128 0xb
 32695 011d 3B       		.uleb128 0x3b
 32696 011e 05       		.uleb128 0x5
 32697 011f 27       		.uleb128 0x27
 32698 0120 19       		.uleb128 0x19
 32699 0121 49       		.uleb128 0x49
 32700 0122 13       		.uleb128 0x13
 32701 0123 20       		.uleb128 0x20
 32702 0124 0B       		.uleb128 0xb
 32703 0125 01       		.uleb128 0x1
 32704 0126 13       		.uleb128 0x13
 32705 0127 00       		.byte	0
 32706 0128 00       		.byte	0
 32707 0129 18       		.uleb128 0x18
 32708 012a 05       		.uleb128 0x5
 32709 012b 00       		.byte	0
 32710 012c 03       		.uleb128 0x3
 32711 012d 0E       		.uleb128 0xe
 32712 012e 3A       		.uleb128 0x3a
 32713 012f 0B       		.uleb128 0xb
 32714 0130 3B       		.uleb128 0x3b
 32715 0131 05       		.uleb128 0x5
 32716 0132 49       		.uleb128 0x49
 32717 0133 13       		.uleb128 0x13
 32718 0134 00       		.byte	0
 32719 0135 00       		.byte	0
 32720 0136 19       		.uleb128 0x19
 32721 0137 34       		.uleb128 0x34
 32722 0138 00       		.byte	0
 32723 0139 03       		.uleb128 0x3
 32724 013a 0E       		.uleb128 0xe
 32725 013b 3A       		.uleb128 0x3a
 32726 013c 0B       		.uleb128 0xb
 32727 013d 3B       		.uleb128 0x3b
 32728 013e 05       		.uleb128 0x5
 32729 013f 49       		.uleb128 0x49
 32730 0140 13       		.uleb128 0x13
 32731 0141 00       		.byte	0
 32732 0142 00       		.byte	0
 32733 0143 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 697


 32734 0144 2E       		.uleb128 0x2e
 32735 0145 01       		.byte	0x1
 32736 0146 3F       		.uleb128 0x3f
 32737 0147 19       		.uleb128 0x19
 32738 0148 03       		.uleb128 0x3
 32739 0149 0E       		.uleb128 0xe
 32740 014a 3A       		.uleb128 0x3a
 32741 014b 0B       		.uleb128 0xb
 32742 014c 3B       		.uleb128 0x3b
 32743 014d 0B       		.uleb128 0xb
 32744 014e 27       		.uleb128 0x27
 32745 014f 19       		.uleb128 0x19
 32746 0150 11       		.uleb128 0x11
 32747 0151 01       		.uleb128 0x1
 32748 0152 12       		.uleb128 0x12
 32749 0153 06       		.uleb128 0x6
 32750 0154 40       		.uleb128 0x40
 32751 0155 18       		.uleb128 0x18
 32752 0156 9642     		.uleb128 0x2116
 32753 0158 19       		.uleb128 0x19
 32754 0159 01       		.uleb128 0x1
 32755 015a 13       		.uleb128 0x13
 32756 015b 00       		.byte	0
 32757 015c 00       		.byte	0
 32758 015d 1B       		.uleb128 0x1b
 32759 015e 34       		.uleb128 0x34
 32760 015f 00       		.byte	0
 32761 0160 03       		.uleb128 0x3
 32762 0161 0E       		.uleb128 0xe
 32763 0162 3A       		.uleb128 0x3a
 32764 0163 0B       		.uleb128 0xb
 32765 0164 3B       		.uleb128 0x3b
 32766 0165 0B       		.uleb128 0xb
 32767 0166 49       		.uleb128 0x49
 32768 0167 13       		.uleb128 0x13
 32769 0168 02       		.uleb128 0x2
 32770 0169 18       		.uleb128 0x18
 32771 016a 00       		.byte	0
 32772 016b 00       		.byte	0
 32773 016c 1C       		.uleb128 0x1c
 32774 016d 1D       		.uleb128 0x1d
 32775 016e 01       		.byte	0x1
 32776 016f 31       		.uleb128 0x31
 32777 0170 13       		.uleb128 0x13
 32778 0171 11       		.uleb128 0x11
 32779 0172 01       		.uleb128 0x1
 32780 0173 12       		.uleb128 0x12
 32781 0174 06       		.uleb128 0x6
 32782 0175 58       		.uleb128 0x58
 32783 0176 0B       		.uleb128 0xb
 32784 0177 59       		.uleb128 0x59
 32785 0178 0B       		.uleb128 0xb
 32786 0179 01       		.uleb128 0x1
 32787 017a 13       		.uleb128 0x13
 32788 017b 00       		.byte	0
 32789 017c 00       		.byte	0
 32790 017d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 698


 32791 017e 05       		.uleb128 0x5
 32792 017f 00       		.byte	0
 32793 0180 31       		.uleb128 0x31
 32794 0181 13       		.uleb128 0x13
 32795 0182 02       		.uleb128 0x2
 32796 0183 18       		.uleb128 0x18
 32797 0184 00       		.byte	0
 32798 0185 00       		.byte	0
 32799 0186 1E       		.uleb128 0x1e
 32800 0187 0B       		.uleb128 0xb
 32801 0188 01       		.byte	0x1
 32802 0189 11       		.uleb128 0x11
 32803 018a 01       		.uleb128 0x1
 32804 018b 12       		.uleb128 0x12
 32805 018c 06       		.uleb128 0x6
 32806 018d 00       		.byte	0
 32807 018e 00       		.byte	0
 32808 018f 1F       		.uleb128 0x1f
 32809 0190 34       		.uleb128 0x34
 32810 0191 00       		.byte	0
 32811 0192 31       		.uleb128 0x31
 32812 0193 13       		.uleb128 0x13
 32813 0194 02       		.uleb128 0x2
 32814 0195 18       		.uleb128 0x18
 32815 0196 00       		.byte	0
 32816 0197 00       		.byte	0
 32817 0198 20       		.uleb128 0x20
 32818 0199 1D       		.uleb128 0x1d
 32819 019a 01       		.byte	0x1
 32820 019b 31       		.uleb128 0x31
 32821 019c 13       		.uleb128 0x13
 32822 019d 11       		.uleb128 0x11
 32823 019e 01       		.uleb128 0x1
 32824 019f 12       		.uleb128 0x12
 32825 01a0 06       		.uleb128 0x6
 32826 01a1 58       		.uleb128 0x58
 32827 01a2 0B       		.uleb128 0xb
 32828 01a3 59       		.uleb128 0x59
 32829 01a4 05       		.uleb128 0x5
 32830 01a5 01       		.uleb128 0x1
 32831 01a6 13       		.uleb128 0x13
 32832 01a7 00       		.byte	0
 32833 01a8 00       		.byte	0
 32834 01a9 21       		.uleb128 0x21
 32835 01aa 1D       		.uleb128 0x1d
 32836 01ab 01       		.byte	0x1
 32837 01ac 31       		.uleb128 0x31
 32838 01ad 13       		.uleb128 0x13
 32839 01ae 11       		.uleb128 0x11
 32840 01af 01       		.uleb128 0x1
 32841 01b0 12       		.uleb128 0x12
 32842 01b1 06       		.uleb128 0x6
 32843 01b2 58       		.uleb128 0x58
 32844 01b3 0B       		.uleb128 0xb
 32845 01b4 59       		.uleb128 0x59
 32846 01b5 05       		.uleb128 0x5
 32847 01b6 00       		.byte	0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 699


 32848 01b7 00       		.byte	0
 32849 01b8 22       		.uleb128 0x22
 32850 01b9 2E       		.uleb128 0x2e
 32851 01ba 01       		.byte	0x1
 32852 01bb 3F       		.uleb128 0x3f
 32853 01bc 19       		.uleb128 0x19
 32854 01bd 03       		.uleb128 0x3
 32855 01be 0E       		.uleb128 0xe
 32856 01bf 3A       		.uleb128 0x3a
 32857 01c0 0B       		.uleb128 0xb
 32858 01c1 3B       		.uleb128 0x3b
 32859 01c2 05       		.uleb128 0x5
 32860 01c3 27       		.uleb128 0x27
 32861 01c4 19       		.uleb128 0x19
 32862 01c5 11       		.uleb128 0x11
 32863 01c6 01       		.uleb128 0x1
 32864 01c7 12       		.uleb128 0x12
 32865 01c8 06       		.uleb128 0x6
 32866 01c9 40       		.uleb128 0x40
 32867 01ca 18       		.uleb128 0x18
 32868 01cb 9642     		.uleb128 0x2116
 32869 01cd 19       		.uleb128 0x19
 32870 01ce 01       		.uleb128 0x1
 32871 01cf 13       		.uleb128 0x13
 32872 01d0 00       		.byte	0
 32873 01d1 00       		.byte	0
 32874 01d2 23       		.uleb128 0x23
 32875 01d3 34       		.uleb128 0x34
 32876 01d4 00       		.byte	0
 32877 01d5 03       		.uleb128 0x3
 32878 01d6 0E       		.uleb128 0xe
 32879 01d7 3A       		.uleb128 0x3a
 32880 01d8 0B       		.uleb128 0xb
 32881 01d9 3B       		.uleb128 0x3b
 32882 01da 05       		.uleb128 0x5
 32883 01db 49       		.uleb128 0x49
 32884 01dc 13       		.uleb128 0x13
 32885 01dd 02       		.uleb128 0x2
 32886 01de 18       		.uleb128 0x18
 32887 01df 00       		.byte	0
 32888 01e0 00       		.byte	0
 32889 01e1 24       		.uleb128 0x24
 32890 01e2 21       		.uleb128 0x21
 32891 01e3 00       		.byte	0
 32892 01e4 49       		.uleb128 0x49
 32893 01e5 13       		.uleb128 0x13
 32894 01e6 2F       		.uleb128 0x2f
 32895 01e7 05       		.uleb128 0x5
 32896 01e8 00       		.byte	0
 32897 01e9 00       		.byte	0
 32898 01ea 25       		.uleb128 0x25
 32899 01eb 05       		.uleb128 0x5
 32900 01ec 00       		.byte	0
 32901 01ed 03       		.uleb128 0x3
 32902 01ee 0E       		.uleb128 0xe
 32903 01ef 3A       		.uleb128 0x3a
 32904 01f0 0B       		.uleb128 0xb
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 700


 32905 01f1 3B       		.uleb128 0x3b
 32906 01f2 05       		.uleb128 0x5
 32907 01f3 49       		.uleb128 0x49
 32908 01f4 13       		.uleb128 0x13
 32909 01f5 02       		.uleb128 0x2
 32910 01f6 18       		.uleb128 0x18
 32911 01f7 00       		.byte	0
 32912 01f8 00       		.byte	0
 32913 01f9 26       		.uleb128 0x26
 32914 01fa 34       		.uleb128 0x34
 32915 01fb 00       		.byte	0
 32916 01fc 03       		.uleb128 0x3
 32917 01fd 08       		.uleb128 0x8
 32918 01fe 3A       		.uleb128 0x3a
 32919 01ff 0B       		.uleb128 0xb
 32920 0200 3B       		.uleb128 0x3b
 32921 0201 05       		.uleb128 0x5
 32922 0202 49       		.uleb128 0x49
 32923 0203 13       		.uleb128 0x13
 32924 0204 02       		.uleb128 0x2
 32925 0205 18       		.uleb128 0x18
 32926 0206 00       		.byte	0
 32927 0207 00       		.byte	0
 32928 0208 27       		.uleb128 0x27
 32929 0209 2E       		.uleb128 0x2e
 32930 020a 01       		.byte	0x1
 32931 020b 3F       		.uleb128 0x3f
 32932 020c 19       		.uleb128 0x19
 32933 020d 03       		.uleb128 0x3
 32934 020e 0E       		.uleb128 0xe
 32935 020f 3A       		.uleb128 0x3a
 32936 0210 0B       		.uleb128 0xb
 32937 0211 3B       		.uleb128 0x3b
 32938 0212 05       		.uleb128 0x5
 32939 0213 11       		.uleb128 0x11
 32940 0214 01       		.uleb128 0x1
 32941 0215 12       		.uleb128 0x12
 32942 0216 06       		.uleb128 0x6
 32943 0217 40       		.uleb128 0x40
 32944 0218 18       		.uleb128 0x18
 32945 0219 9642     		.uleb128 0x2116
 32946 021b 19       		.uleb128 0x19
 32947 021c 01       		.uleb128 0x1
 32948 021d 13       		.uleb128 0x13
 32949 021e 00       		.byte	0
 32950 021f 00       		.byte	0
 32951 0220 28       		.uleb128 0x28
 32952 0221 2E       		.uleb128 0x2e
 32953 0222 01       		.byte	0x1
 32954 0223 3F       		.uleb128 0x3f
 32955 0224 19       		.uleb128 0x19
 32956 0225 03       		.uleb128 0x3
 32957 0226 0E       		.uleb128 0xe
 32958 0227 3A       		.uleb128 0x3a
 32959 0228 0B       		.uleb128 0xb
 32960 0229 3B       		.uleb128 0x3b
 32961 022a 05       		.uleb128 0x5
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 701


 32962 022b 27       		.uleb128 0x27
 32963 022c 19       		.uleb128 0x19
 32964 022d 11       		.uleb128 0x11
 32965 022e 01       		.uleb128 0x1
 32966 022f 12       		.uleb128 0x12
 32967 0230 06       		.uleb128 0x6
 32968 0231 40       		.uleb128 0x40
 32969 0232 18       		.uleb128 0x18
 32970 0233 9742     		.uleb128 0x2117
 32971 0235 19       		.uleb128 0x19
 32972 0236 01       		.uleb128 0x1
 32973 0237 13       		.uleb128 0x13
 32974 0238 00       		.byte	0
 32975 0239 00       		.byte	0
 32976 023a 29       		.uleb128 0x29
 32977 023b 05       		.uleb128 0x5
 32978 023c 00       		.byte	0
 32979 023d 03       		.uleb128 0x3
 32980 023e 08       		.uleb128 0x8
 32981 023f 3A       		.uleb128 0x3a
 32982 0240 0B       		.uleb128 0xb
 32983 0241 3B       		.uleb128 0x3b
 32984 0242 05       		.uleb128 0x5
 32985 0243 49       		.uleb128 0x49
 32986 0244 13       		.uleb128 0x13
 32987 0245 02       		.uleb128 0x2
 32988 0246 18       		.uleb128 0x18
 32989 0247 00       		.byte	0
 32990 0248 00       		.byte	0
 32991 0249 2A       		.uleb128 0x2a
 32992 024a 2E       		.uleb128 0x2e
 32993 024b 01       		.byte	0x1
 32994 024c 3F       		.uleb128 0x3f
 32995 024d 19       		.uleb128 0x19
 32996 024e 03       		.uleb128 0x3
 32997 024f 0E       		.uleb128 0xe
 32998 0250 3A       		.uleb128 0x3a
 32999 0251 0B       		.uleb128 0xb
 33000 0252 3B       		.uleb128 0x3b
 33001 0253 05       		.uleb128 0x5
 33002 0254 27       		.uleb128 0x27
 33003 0255 19       		.uleb128 0x19
 33004 0256 49       		.uleb128 0x49
 33005 0257 13       		.uleb128 0x13
 33006 0258 11       		.uleb128 0x11
 33007 0259 01       		.uleb128 0x1
 33008 025a 12       		.uleb128 0x12
 33009 025b 06       		.uleb128 0x6
 33010 025c 40       		.uleb128 0x40
 33011 025d 18       		.uleb128 0x18
 33012 025e 9742     		.uleb128 0x2117
 33013 0260 19       		.uleb128 0x19
 33014 0261 01       		.uleb128 0x1
 33015 0262 13       		.uleb128 0x13
 33016 0263 00       		.byte	0
 33017 0264 00       		.byte	0
 33018 0265 2B       		.uleb128 0x2b
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 702


 33019 0266 2E       		.uleb128 0x2e
 33020 0267 01       		.byte	0x1
 33021 0268 3F       		.uleb128 0x3f
 33022 0269 19       		.uleb128 0x19
 33023 026a 03       		.uleb128 0x3
 33024 026b 0E       		.uleb128 0xe
 33025 026c 3A       		.uleb128 0x3a
 33026 026d 0B       		.uleb128 0xb
 33027 026e 3B       		.uleb128 0x3b
 33028 026f 05       		.uleb128 0x5
 33029 0270 27       		.uleb128 0x27
 33030 0271 19       		.uleb128 0x19
 33031 0272 49       		.uleb128 0x49
 33032 0273 13       		.uleb128 0x13
 33033 0274 11       		.uleb128 0x11
 33034 0275 01       		.uleb128 0x1
 33035 0276 12       		.uleb128 0x12
 33036 0277 06       		.uleb128 0x6
 33037 0278 40       		.uleb128 0x40
 33038 0279 18       		.uleb128 0x18
 33039 027a 9642     		.uleb128 0x2116
 33040 027c 19       		.uleb128 0x19
 33041 027d 01       		.uleb128 0x1
 33042 027e 13       		.uleb128 0x13
 33043 027f 00       		.byte	0
 33044 0280 00       		.byte	0
 33045 0281 2C       		.uleb128 0x2c
 33046 0282 2E       		.uleb128 0x2e
 33047 0283 00       		.byte	0
 33048 0284 3F       		.uleb128 0x3f
 33049 0285 19       		.uleb128 0x19
 33050 0286 03       		.uleb128 0x3
 33051 0287 0E       		.uleb128 0xe
 33052 0288 3A       		.uleb128 0x3a
 33053 0289 0B       		.uleb128 0xb
 33054 028a 3B       		.uleb128 0x3b
 33055 028b 05       		.uleb128 0x5
 33056 028c 27       		.uleb128 0x27
 33057 028d 19       		.uleb128 0x19
 33058 028e 11       		.uleb128 0x11
 33059 028f 01       		.uleb128 0x1
 33060 0290 12       		.uleb128 0x12
 33061 0291 06       		.uleb128 0x6
 33062 0292 40       		.uleb128 0x40
 33063 0293 18       		.uleb128 0x18
 33064 0294 9742     		.uleb128 0x2117
 33065 0296 19       		.uleb128 0x19
 33066 0297 00       		.byte	0
 33067 0298 00       		.byte	0
 33068 0299 2D       		.uleb128 0x2d
 33069 029a 2E       		.uleb128 0x2e
 33070 029b 01       		.byte	0x1
 33071 029c 3F       		.uleb128 0x3f
 33072 029d 19       		.uleb128 0x19
 33073 029e 03       		.uleb128 0x3
 33074 029f 0E       		.uleb128 0xe
 33075 02a0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 703


 33076 02a1 0B       		.uleb128 0xb
 33077 02a2 3B       		.uleb128 0x3b
 33078 02a3 05       		.uleb128 0x5
 33079 02a4 11       		.uleb128 0x11
 33080 02a5 01       		.uleb128 0x1
 33081 02a6 12       		.uleb128 0x12
 33082 02a7 06       		.uleb128 0x6
 33083 02a8 40       		.uleb128 0x40
 33084 02a9 18       		.uleb128 0x18
 33085 02aa 9742     		.uleb128 0x2117
 33086 02ac 19       		.uleb128 0x19
 33087 02ad 01       		.uleb128 0x1
 33088 02ae 13       		.uleb128 0x13
 33089 02af 00       		.byte	0
 33090 02b0 00       		.byte	0
 33091 02b1 2E       		.uleb128 0x2e
 33092 02b2 0B       		.uleb128 0xb
 33093 02b3 01       		.byte	0x1
 33094 02b4 11       		.uleb128 0x11
 33095 02b5 01       		.uleb128 0x1
 33096 02b6 12       		.uleb128 0x12
 33097 02b7 06       		.uleb128 0x6
 33098 02b8 01       		.uleb128 0x1
 33099 02b9 13       		.uleb128 0x13
 33100 02ba 00       		.byte	0
 33101 02bb 00       		.byte	0
 33102 02bc 2F       		.uleb128 0x2f
 33103 02bd 2E       		.uleb128 0x2e
 33104 02be 01       		.byte	0x1
 33105 02bf 3F       		.uleb128 0x3f
 33106 02c0 19       		.uleb128 0x19
 33107 02c1 03       		.uleb128 0x3
 33108 02c2 0E       		.uleb128 0xe
 33109 02c3 3A       		.uleb128 0x3a
 33110 02c4 0B       		.uleb128 0xb
 33111 02c5 3B       		.uleb128 0x3b
 33112 02c6 05       		.uleb128 0x5
 33113 02c7 49       		.uleb128 0x49
 33114 02c8 13       		.uleb128 0x13
 33115 02c9 11       		.uleb128 0x11
 33116 02ca 01       		.uleb128 0x1
 33117 02cb 12       		.uleb128 0x12
 33118 02cc 06       		.uleb128 0x6
 33119 02cd 40       		.uleb128 0x40
 33120 02ce 18       		.uleb128 0x18
 33121 02cf 9642     		.uleb128 0x2116
 33122 02d1 19       		.uleb128 0x19
 33123 02d2 01       		.uleb128 0x1
 33124 02d3 13       		.uleb128 0x13
 33125 02d4 00       		.byte	0
 33126 02d5 00       		.byte	0
 33127 02d6 30       		.uleb128 0x30
 33128 02d7 2E       		.uleb128 0x2e
 33129 02d8 00       		.byte	0
 33130 02d9 3F       		.uleb128 0x3f
 33131 02da 19       		.uleb128 0x19
 33132 02db 03       		.uleb128 0x3
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 704


 33133 02dc 0E       		.uleb128 0xe
 33134 02dd 3A       		.uleb128 0x3a
 33135 02de 0B       		.uleb128 0xb
 33136 02df 3B       		.uleb128 0x3b
 33137 02e0 05       		.uleb128 0x5
 33138 02e1 11       		.uleb128 0x11
 33139 02e2 01       		.uleb128 0x1
 33140 02e3 12       		.uleb128 0x12
 33141 02e4 06       		.uleb128 0x6
 33142 02e5 40       		.uleb128 0x40
 33143 02e6 18       		.uleb128 0x18
 33144 02e7 9642     		.uleb128 0x2116
 33145 02e9 19       		.uleb128 0x19
 33146 02ea 00       		.byte	0
 33147 02eb 00       		.byte	0
 33148 02ec 31       		.uleb128 0x31
 33149 02ed 2E       		.uleb128 0x2e
 33150 02ee 01       		.byte	0x1
 33151 02ef 3F       		.uleb128 0x3f
 33152 02f0 19       		.uleb128 0x19
 33153 02f1 03       		.uleb128 0x3
 33154 02f2 0E       		.uleb128 0xe
 33155 02f3 3A       		.uleb128 0x3a
 33156 02f4 0B       		.uleb128 0xb
 33157 02f5 3B       		.uleb128 0x3b
 33158 02f6 05       		.uleb128 0x5
 33159 02f7 49       		.uleb128 0x49
 33160 02f8 13       		.uleb128 0x13
 33161 02f9 11       		.uleb128 0x11
 33162 02fa 01       		.uleb128 0x1
 33163 02fb 12       		.uleb128 0x12
 33164 02fc 06       		.uleb128 0x6
 33165 02fd 40       		.uleb128 0x40
 33166 02fe 18       		.uleb128 0x18
 33167 02ff 9742     		.uleb128 0x2117
 33168 0301 19       		.uleb128 0x19
 33169 0302 01       		.uleb128 0x1
 33170 0303 13       		.uleb128 0x13
 33171 0304 00       		.byte	0
 33172 0305 00       		.byte	0
 33173 0306 32       		.uleb128 0x32
 33174 0307 2E       		.uleb128 0x2e
 33175 0308 00       		.byte	0
 33176 0309 3F       		.uleb128 0x3f
 33177 030a 19       		.uleb128 0x19
 33178 030b 03       		.uleb128 0x3
 33179 030c 0E       		.uleb128 0xe
 33180 030d 3A       		.uleb128 0x3a
 33181 030e 0B       		.uleb128 0xb
 33182 030f 3B       		.uleb128 0x3b
 33183 0310 05       		.uleb128 0x5
 33184 0311 11       		.uleb128 0x11
 33185 0312 01       		.uleb128 0x1
 33186 0313 12       		.uleb128 0x12
 33187 0314 06       		.uleb128 0x6
 33188 0315 40       		.uleb128 0x40
 33189 0316 18       		.uleb128 0x18
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 705


 33190 0317 9742     		.uleb128 0x2117
 33191 0319 19       		.uleb128 0x19
 33192 031a 00       		.byte	0
 33193 031b 00       		.byte	0
 33194 031c 33       		.uleb128 0x33
 33195 031d 34       		.uleb128 0x34
 33196 031e 00       		.byte	0
 33197 031f 03       		.uleb128 0x3
 33198 0320 0E       		.uleb128 0xe
 33199 0321 3A       		.uleb128 0x3a
 33200 0322 0B       		.uleb128 0xb
 33201 0323 3B       		.uleb128 0x3b
 33202 0324 05       		.uleb128 0x5
 33203 0325 49       		.uleb128 0x49
 33204 0326 13       		.uleb128 0x13
 33205 0327 3F       		.uleb128 0x3f
 33206 0328 19       		.uleb128 0x19
 33207 0329 3C       		.uleb128 0x3c
 33208 032a 19       		.uleb128 0x19
 33209 032b 00       		.byte	0
 33210 032c 00       		.byte	0
 33211 032d 34       		.uleb128 0x34
 33212 032e 34       		.uleb128 0x34
 33213 032f 00       		.byte	0
 33214 0330 03       		.uleb128 0x3
 33215 0331 0E       		.uleb128 0xe
 33216 0332 3A       		.uleb128 0x3a
 33217 0333 0B       		.uleb128 0xb
 33218 0334 3B       		.uleb128 0x3b
 33219 0335 0B       		.uleb128 0xb
 33220 0336 49       		.uleb128 0x49
 33221 0337 13       		.uleb128 0x13
 33222 0338 3F       		.uleb128 0x3f
 33223 0339 19       		.uleb128 0x19
 33224 033a 02       		.uleb128 0x2
 33225 033b 18       		.uleb128 0x18
 33226 033c 00       		.byte	0
 33227 033d 00       		.byte	0
 33228 033e 00       		.byte	0
 33229              		.section	.debug_aranges,"",%progbits
 33230 0000 DC010000 		.4byte	0x1dc
 33231 0004 0200     		.2byte	0x2
 33232 0006 00000000 		.4byte	.Ldebug_info0
 33233 000a 04       		.byte	0x4
 33234 000b 00       		.byte	0
 33235 000c 0000     		.2byte	0
 33236 000e 0000     		.2byte	0
 33237 0010 00000000 		.4byte	.LFB64
 33238 0014 00050000 		.4byte	.LFE64-.LFB64
 33239 0018 00000000 		.4byte	.LFB65
 33240 001c 22000000 		.4byte	.LFE65-.LFB65
 33241 0020 00000000 		.4byte	.LFB66
 33242 0024 34010000 		.4byte	.LFE66-.LFB66
 33243 0028 00000000 		.4byte	.LFB67
 33244 002c 2C320000 		.4byte	.LFE67-.LFB67
 33245 0030 00000000 		.4byte	.LFB68
 33246 0034 40190000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 706


 33247 0038 00000000 		.4byte	.LFB69
 33248 003c C0150000 		.4byte	.LFE69-.LFB69
 33249 0040 00000000 		.4byte	.LFB70
 33250 0044 F40D0000 		.4byte	.LFE70-.LFB70
 33251 0048 00000000 		.4byte	.LFB71
 33252 004c 90000000 		.4byte	.LFE71-.LFB71
 33253 0050 00000000 		.4byte	.LFB72
 33254 0054 60210000 		.4byte	.LFE72-.LFB72
 33255 0058 00000000 		.4byte	.LFB73
 33256 005c BC030000 		.4byte	.LFE73-.LFB73
 33257 0060 00000000 		.4byte	.LFB74
 33258 0064 7C120000 		.4byte	.LFE74-.LFB74
 33259 0068 00000000 		.4byte	.LFB75
 33260 006c C8000000 		.4byte	.LFE75-.LFB75
 33261 0070 00000000 		.4byte	.LFB76
 33262 0074 30010000 		.4byte	.LFE76-.LFB76
 33263 0078 00000000 		.4byte	.LFB77
 33264 007c 28000000 		.4byte	.LFE77-.LFB77
 33265 0080 00000000 		.4byte	.LFB78
 33266 0084 F0000000 		.4byte	.LFE78-.LFB78
 33267 0088 00000000 		.4byte	.LFB79
 33268 008c 74030000 		.4byte	.LFE79-.LFB79
 33269 0090 00000000 		.4byte	.LFB80
 33270 0094 84000000 		.4byte	.LFE80-.LFB80
 33271 0098 00000000 		.4byte	.LFB81
 33272 009c 88000000 		.4byte	.LFE81-.LFB81
 33273 00a0 00000000 		.4byte	.LFB82
 33274 00a4 A0000000 		.4byte	.LFE82-.LFB82
 33275 00a8 00000000 		.4byte	.LFB83
 33276 00ac 3E000000 		.4byte	.LFE83-.LFB83
 33277 00b0 00000000 		.4byte	.LFB84
 33278 00b4 2E000000 		.4byte	.LFE84-.LFB84
 33279 00b8 00000000 		.4byte	.LFB85
 33280 00bc 98000000 		.4byte	.LFE85-.LFB85
 33281 00c0 00000000 		.4byte	.LFB86
 33282 00c4 80000000 		.4byte	.LFE86-.LFB86
 33283 00c8 00000000 		.4byte	.LFB87
 33284 00cc 5C000000 		.4byte	.LFE87-.LFB87
 33285 00d0 00000000 		.4byte	.LFB88
 33286 00d4 10060000 		.4byte	.LFE88-.LFB88
 33287 00d8 00000000 		.4byte	.LFB89
 33288 00dc 38020000 		.4byte	.LFE89-.LFB89
 33289 00e0 00000000 		.4byte	.LFB90
 33290 00e4 28000000 		.4byte	.LFE90-.LFB90
 33291 00e8 00000000 		.4byte	.LFB91
 33292 00ec 78000000 		.4byte	.LFE91-.LFB91
 33293 00f0 00000000 		.4byte	.LFB92
 33294 00f4 B0000000 		.4byte	.LFE92-.LFB92
 33295 00f8 00000000 		.4byte	.LFB93
 33296 00fc 28010000 		.4byte	.LFE93-.LFB93
 33297 0100 00000000 		.4byte	.LFB94
 33298 0104 B8000000 		.4byte	.LFE94-.LFB94
 33299 0108 00000000 		.4byte	.LFB95
 33300 010c B8000000 		.4byte	.LFE95-.LFB95
 33301 0110 00000000 		.4byte	.LFB96
 33302 0114 5C000000 		.4byte	.LFE96-.LFB96
 33303 0118 00000000 		.4byte	.LFB97
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 707


 33304 011c 44020000 		.4byte	.LFE97-.LFB97
 33305 0120 00000000 		.4byte	.LFB98
 33306 0124 BC000000 		.4byte	.LFE98-.LFB98
 33307 0128 00000000 		.4byte	.LFB99
 33308 012c 5C000000 		.4byte	.LFE99-.LFB99
 33309 0130 00000000 		.4byte	.LFB100
 33310 0134 38010000 		.4byte	.LFE100-.LFB100
 33311 0138 00000000 		.4byte	.LFB101
 33312 013c EC000000 		.4byte	.LFE101-.LFB101
 33313 0140 00000000 		.4byte	.LFB102
 33314 0144 64000000 		.4byte	.LFE102-.LFB102
 33315 0148 00000000 		.4byte	.LFB103
 33316 014c A8000000 		.4byte	.LFE103-.LFB103
 33317 0150 00000000 		.4byte	.LFB104
 33318 0154 34000000 		.4byte	.LFE104-.LFB104
 33319 0158 00000000 		.4byte	.LFB105
 33320 015c 20000000 		.4byte	.LFE105-.LFB105
 33321 0160 00000000 		.4byte	.LFB106
 33322 0164 A0000000 		.4byte	.LFE106-.LFB106
 33323 0168 00000000 		.4byte	.LFB107
 33324 016c BC010000 		.4byte	.LFE107-.LFB107
 33325 0170 00000000 		.4byte	.LFB108
 33326 0174 60000000 		.4byte	.LFE108-.LFB108
 33327 0178 00000000 		.4byte	.LFB109
 33328 017c 98050000 		.4byte	.LFE109-.LFB109
 33329 0180 00000000 		.4byte	.LFB110
 33330 0184 8C000000 		.4byte	.LFE110-.LFB110
 33331 0188 00000000 		.4byte	.LFB111
 33332 018c EC000000 		.4byte	.LFE111-.LFB111
 33333 0190 00000000 		.4byte	.LFB112
 33334 0194 5C000000 		.4byte	.LFE112-.LFB112
 33335 0198 00000000 		.4byte	.LFB113
 33336 019c C0000000 		.4byte	.LFE113-.LFB113
 33337 01a0 00000000 		.4byte	.LFB114
 33338 01a4 54010000 		.4byte	.LFE114-.LFB114
 33339 01a8 00000000 		.4byte	.LFB115
 33340 01ac 12000000 		.4byte	.LFE115-.LFB115
 33341 01b0 00000000 		.4byte	.LFB116
 33342 01b4 64010000 		.4byte	.LFE116-.LFB116
 33343 01b8 00000000 		.4byte	.LFB117
 33344 01bc 12000000 		.4byte	.LFE117-.LFB117
 33345 01c0 00000000 		.4byte	.LFB118
 33346 01c4 1A000000 		.4byte	.LFE118-.LFB118
 33347 01c8 00000000 		.4byte	.LFB119
 33348 01cc 0C000000 		.4byte	.LFE119-.LFB119
 33349 01d0 00000000 		.4byte	.LFB120
 33350 01d4 0C000000 		.4byte	.LFE120-.LFB120
 33351 01d8 00000000 		.4byte	0
 33352 01dc 00000000 		.4byte	0
 33353              		.section	.debug_ranges,"",%progbits
 33354              	.Ldebug_ranges0:
 33355 0000 00000000 		.4byte	.LFB64
 33356 0004 00050000 		.4byte	.LFE64
 33357 0008 00000000 		.4byte	.LFB65
 33358 000c 22000000 		.4byte	.LFE65
 33359 0010 00000000 		.4byte	.LFB66
 33360 0014 34010000 		.4byte	.LFE66
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 708


 33361 0018 00000000 		.4byte	.LFB67
 33362 001c 2C320000 		.4byte	.LFE67
 33363 0020 00000000 		.4byte	.LFB68
 33364 0024 40190000 		.4byte	.LFE68
 33365 0028 00000000 		.4byte	.LFB69
 33366 002c C0150000 		.4byte	.LFE69
 33367 0030 00000000 		.4byte	.LFB70
 33368 0034 F40D0000 		.4byte	.LFE70
 33369 0038 00000000 		.4byte	.LFB71
 33370 003c 90000000 		.4byte	.LFE71
 33371 0040 00000000 		.4byte	.LFB72
 33372 0044 60210000 		.4byte	.LFE72
 33373 0048 00000000 		.4byte	.LFB73
 33374 004c BC030000 		.4byte	.LFE73
 33375 0050 00000000 		.4byte	.LFB74
 33376 0054 7C120000 		.4byte	.LFE74
 33377 0058 00000000 		.4byte	.LFB75
 33378 005c C8000000 		.4byte	.LFE75
 33379 0060 00000000 		.4byte	.LFB76
 33380 0064 30010000 		.4byte	.LFE76
 33381 0068 00000000 		.4byte	.LFB77
 33382 006c 28000000 		.4byte	.LFE77
 33383 0070 00000000 		.4byte	.LFB78
 33384 0074 F0000000 		.4byte	.LFE78
 33385 0078 00000000 		.4byte	.LFB79
 33386 007c 74030000 		.4byte	.LFE79
 33387 0080 00000000 		.4byte	.LFB80
 33388 0084 84000000 		.4byte	.LFE80
 33389 0088 00000000 		.4byte	.LFB81
 33390 008c 88000000 		.4byte	.LFE81
 33391 0090 00000000 		.4byte	.LFB82
 33392 0094 A0000000 		.4byte	.LFE82
 33393 0098 00000000 		.4byte	.LFB83
 33394 009c 3E000000 		.4byte	.LFE83
 33395 00a0 00000000 		.4byte	.LFB84
 33396 00a4 2E000000 		.4byte	.LFE84
 33397 00a8 00000000 		.4byte	.LFB85
 33398 00ac 98000000 		.4byte	.LFE85
 33399 00b0 00000000 		.4byte	.LFB86
 33400 00b4 80000000 		.4byte	.LFE86
 33401 00b8 00000000 		.4byte	.LFB87
 33402 00bc 5C000000 		.4byte	.LFE87
 33403 00c0 00000000 		.4byte	.LFB88
 33404 00c4 10060000 		.4byte	.LFE88
 33405 00c8 00000000 		.4byte	.LFB89
 33406 00cc 38020000 		.4byte	.LFE89
 33407 00d0 00000000 		.4byte	.LFB90
 33408 00d4 28000000 		.4byte	.LFE90
 33409 00d8 00000000 		.4byte	.LFB91
 33410 00dc 78000000 		.4byte	.LFE91
 33411 00e0 00000000 		.4byte	.LFB92
 33412 00e4 B0000000 		.4byte	.LFE92
 33413 00e8 00000000 		.4byte	.LFB93
 33414 00ec 28010000 		.4byte	.LFE93
 33415 00f0 00000000 		.4byte	.LFB94
 33416 00f4 B8000000 		.4byte	.LFE94
 33417 00f8 00000000 		.4byte	.LFB95
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 709


 33418 00fc B8000000 		.4byte	.LFE95
 33419 0100 00000000 		.4byte	.LFB96
 33420 0104 5C000000 		.4byte	.LFE96
 33421 0108 00000000 		.4byte	.LFB97
 33422 010c 44020000 		.4byte	.LFE97
 33423 0110 00000000 		.4byte	.LFB98
 33424 0114 BC000000 		.4byte	.LFE98
 33425 0118 00000000 		.4byte	.LFB99
 33426 011c 5C000000 		.4byte	.LFE99
 33427 0120 00000000 		.4byte	.LFB100
 33428 0124 38010000 		.4byte	.LFE100
 33429 0128 00000000 		.4byte	.LFB101
 33430 012c EC000000 		.4byte	.LFE101
 33431 0130 00000000 		.4byte	.LFB102
 33432 0134 64000000 		.4byte	.LFE102
 33433 0138 00000000 		.4byte	.LFB103
 33434 013c A8000000 		.4byte	.LFE103
 33435 0140 00000000 		.4byte	.LFB104
 33436 0144 34000000 		.4byte	.LFE104
 33437 0148 00000000 		.4byte	.LFB105
 33438 014c 20000000 		.4byte	.LFE105
 33439 0150 00000000 		.4byte	.LFB106
 33440 0154 A0000000 		.4byte	.LFE106
 33441 0158 00000000 		.4byte	.LFB107
 33442 015c BC010000 		.4byte	.LFE107
 33443 0160 00000000 		.4byte	.LFB108
 33444 0164 60000000 		.4byte	.LFE108
 33445 0168 00000000 		.4byte	.LFB109
 33446 016c 98050000 		.4byte	.LFE109
 33447 0170 00000000 		.4byte	.LFB110
 33448 0174 8C000000 		.4byte	.LFE110
 33449 0178 00000000 		.4byte	.LFB111
 33450 017c EC000000 		.4byte	.LFE111
 33451 0180 00000000 		.4byte	.LFB112
 33452 0184 5C000000 		.4byte	.LFE112
 33453 0188 00000000 		.4byte	.LFB113
 33454 018c C0000000 		.4byte	.LFE113
 33455 0190 00000000 		.4byte	.LFB114
 33456 0194 54010000 		.4byte	.LFE114
 33457 0198 00000000 		.4byte	.LFB115
 33458 019c 12000000 		.4byte	.LFE115
 33459 01a0 00000000 		.4byte	.LFB116
 33460 01a4 64010000 		.4byte	.LFE116
 33461 01a8 00000000 		.4byte	.LFB117
 33462 01ac 12000000 		.4byte	.LFE117
 33463 01b0 00000000 		.4byte	.LFB118
 33464 01b4 1A000000 		.4byte	.LFE118
 33465 01b8 00000000 		.4byte	.LFB119
 33466 01bc 0C000000 		.4byte	.LFE119
 33467 01c0 00000000 		.4byte	.LFB120
 33468 01c4 0C000000 		.4byte	.LFE120
 33469 01c8 00000000 		.4byte	0
 33470 01cc 00000000 		.4byte	0
 33471              		.section	.debug_line,"",%progbits
 33472              	.Ldebug_line0:
 33473 0000 B41E0000 		.section	.debug_str,"MS",%progbits,1
 33473      0200C001 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 710


 33473      00000201 
 33473      FB0E0D00 
 33473      01010101 
 33474              	.LASF214:
 33475 0000 696E666F 		.ascii	"infoSend\000"
 33475      53656E64 
 33475      00
 33476              	.LASF266:
 33477 0009 69645F73 		.ascii	"id_str\000"
 33477      747200
 33478              	.LASF248:
 33479 0010 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 33479      61637469 
 33479      76617469 
 33479      6F6E5F6D 
 33479      6F64655F 
 33480              	.LASF25:
 33481 0029 73697A65 		.ascii	"sizetype\000"
 33481      74797065 
 33481      00
 33482              	.LASF33:
 33483 0032 434D445F 		.ascii	"CMD_INIT_MEM\000"
 33483      494E4954 
 33483      5F4D454D 
 33483      00
 33484              	.LASF337:
 33485 003f 676C5F63 		.ascii	"gl_c\000"
 33485      00
 33486              	.LASF194:
 33487 0044 77726973 		.ascii	"wrist_direction_association\000"
 33487      745F6469 
 33487      72656374 
 33487      696F6E5F 
 33487      6173736F 
 33488              	.LASF64:
 33489 0060 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 33489      545F4D4F 
 33489      44455F45 
 33489      4D475F46 
 33489      4346535F 
 33490              	.LASF36:
 33491 0078 434D445F 		.ascii	"CMD_ACTIVATE\000"
 33491      41435449 
 33491      56415445 
 33491      00
 33492              	.LASF199:
 33493 0085 75736572 		.ascii	"user\000"
 33493      00
 33494              	.LASF352:
 33495 008a 665F6572 		.ascii	"f_err_emg_1\000"
 33495      725F656D 
 33495      675F3100 
 33496              	.LASF353:
 33497 0096 665F6572 		.ascii	"f_err_emg_2\000"
 33497      725F656D 
 33497      675F3200 
 33498              	.LASF358:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 711


 33499 00a2 73746F70 		.ascii	"stop_master_device\000"
 33499      5F6D6173 
 33499      7465725F 
 33499      64657669 
 33499      636500
 33500              	.LASF11:
 33501 00b5 696E7433 		.ascii	"int32_t\000"
 33501      325F7400 
 33502              	.LASF369:
 33503 00bd 675F7278 		.ascii	"g_rx\000"
 33503      00
 33504              	.LASF101:
 33505 00c2 73745F64 		.ascii	"st_data\000"
 33505      61746100 
 33506              	.LASF288:
 33507 00ca 685F7469 		.ascii	"h_time\000"
 33507      6D6500
 33508              	.LASF302:
 33509 00d1 77726974 		.ascii	"writeStatus\000"
 33509      65537461 
 33509      74757300 
 33510              	.LASF15:
 33511 00dd 75696E74 		.ascii	"uint32\000"
 33511      333200
 33512              	.LASF357:
 33513 00e4 636D645F 		.ascii	"cmd_set_baudrate\000"
 33513      7365745F 
 33513      62617564 
 33513      72617465 
 33513      00
 33514              	.LASF346:
 33515 00f5 6169725F 		.ascii	"air_chambers_control\000"
 33515      6368616D 
 33515      62657273 
 33515      5F636F6E 
 33515      74726F6C 
 33516              	.LASF274:
 33517 010a 7370695F 		.ascii	"spi_read_delay_str_len\000"
 33517      72656164 
 33517      5F64656C 
 33517      61795F73 
 33517      74725F6C 
 33518              	.LASF200:
 33519 0121 4A4F595F 		.ascii	"JOY_spec\000"
 33519      73706563 
 33519      00
 33520              	.LASF276:
 33521 012a 70726570 		.ascii	"prepare_generic_info\000"
 33521      6172655F 
 33521      67656E65 
 33521      7269635F 
 33521      696E666F 
 33522              	.LASF137:
 33523 013f 706F735F 		.ascii	"pos_lim_inf\000"
 33523      6C696D5F 
 33523      696E6600 
 33524              	.LASF240:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 712


 33525 014b 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 33525      4E445F4D 
 33525      4F544F52 
 33525      5F494458 
 33525      00
 33526              	.LASF330:
 33527 015c 636D645F 		.ascii	"cmd_get_inputs\000"
 33527      6765745F 
 33527      696E7075 
 33527      747300
 33528              	.LASF63:
 33529 016b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 33529      545F4D4F 
 33529      44455F45 
 33529      4D475F46 
 33529      43465300 
 33530              	.LASF141:
 33531 017f 63757272 		.ascii	"curr_lookup\000"
 33531      5F6C6F6F 
 33531      6B757000 
 33532              	.LASF109:
 33533 018b 72657374 		.ascii	"rest_counter\000"
 33533      5F636F75 
 33533      6E746572 
 33533      00
 33534              	.LASF335:
 33535 0198 636D645F 		.ascii	"cmd_get_imu_readings\000"
 33535      6765745F 
 33535      696D755F 
 33535      72656164 
 33535      696E6773 
 33536              	.LASF184:
 33537 01ad 73745F4D 		.ascii	"st_MASTER_spec\000"
 33537      41535445 
 33537      525F7370 
 33537      656300
 33538              	.LASF269:
 33539 01bc 69645F73 		.ascii	"id_str_len\000"
 33539      74725F6C 
 33539      656E00
 33540              	.LASF62:
 33541 01c7 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 33541      545F4D4F 
 33541      44455F45 
 33541      4D475F49 
 33541      4E544547 
 33542              	.LASF242:
 33543 01df 6D5F746D 		.ascii	"m_tmp\000"
 33543      7000
 33544              	.LASF287:
 33545 01e5 765F6964 		.ascii	"v_idx\000"
 33545      7800
 33546              	.LASF16:
 33547 01eb 696E7438 		.ascii	"int8\000"
 33547      00
 33548              	.LASF219:
 33549 01f0 6765745F 		.ascii	"get_param_list\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 713


 33549      70617261 
 33549      6D5F6C69 
 33549      737400
 33550              	.LASF315:
 33551 01ff 636D645F 		.ascii	"cmd_get_accelerations\000"
 33551      6765745F 
 33551      61636365 
 33551      6C657261 
 33551      74696F6E 
 33552              	.LASF334:
 33553 0215 636D645F 		.ascii	"cmd_get_emg\000"
 33553      6765745F 
 33553      656D6700 
 33554              	.LASF156:
 33555 0221 73745F65 		.ascii	"st_emg\000"
 33555      6D6700
 33556              	.LASF107:
 33557 0228 706F7369 		.ascii	"position_hist\000"
 33557      74696F6E 
 33557      5F686973 
 33557      7400
 33558              	.LASF207:
 33559 0236 74656D70 		.ascii	"temp_value\000"
 33559      5F76616C 
 33559      756500
 33560              	.LASF286:
 33561 0241 7374725F 		.ascii	"str_data\000"
 33561      64617461 
 33561      00
 33562              	.LASF405:
 33563 024a 72657375 		.ascii	"result\000"
 33563      6C7400
 33564              	.LASF268:
 33565 0251 7370695F 		.ascii	"spi_read_delay_str\000"
 33565      72656164 
 33565      5F64656C 
 33565      61795F73 
 33565      747200
 33566              	.LASF191:
 33567 0264 73745F57 		.ascii	"st_WR_spec\000"
 33567      525F7370 
 33567      656300
 33568              	.LASF104:
 33569 026f 72656164 		.ascii	"ready\000"
 33569      7900
 33570              	.LASF153:
 33571 0275 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 33571      6964785F 
 33571      7573655F 
 33571      666F725F 
 33571      636F6E74 
 33572              	.LASF49:
 33573 028d 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 33573      4745545F 
 33573      4A4F5953 
 33573      5449434B 
 33573      00
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 714


 33574              	.LASF61:
 33575 029e 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 33575      545F4D4F 
 33575      44455F45 
 33575      4D475F50 
 33575      524F504F 
 33576              	.LASF118:
 33577 02ba 7573655F 		.ascii	"use_2nd_motor_flag\000"
 33577      326E645F 
 33577      6D6F746F 
 33577      725F666C 
 33577      616700
 33578              	.LASF326:
 33579 02cd 745F7374 		.ascii	"t_start\000"
 33579      61727400 
 33580              	.LASF163:
 33581 02d5 72656164 		.ascii	"read_imu_flag\000"
 33581      5F696D75 
 33581      5F666C61 
 33581      6700
 33582              	.LASF171:
 33583 02e3 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 33583      72645F45 
 33583      4D475F68 
 33583      6973746F 
 33583      72795F6F 
 33584              	.LASF373:
 33585 02fc 74696D65 		.ascii	"timer_value\000"
 33585      725F7661 
 33585      6C756500 
 33586              	.LASF4:
 33587 0308 6C6F6E67 		.ascii	"long int\000"
 33587      20696E74 
 33587      00
 33588              	.LASF197:
 33589 0311 756E7573 		.ascii	"unused_bytes1\000"
 33589      65645F62 
 33589      79746573 
 33589      3100
 33590              	.LASF356:
 33591 031f 6D6F746F 		.ascii	"motor_idx\000"
 33591      725F6964 
 33591      7800
 33592              	.LASF117:
 33593 0329 72657365 		.ascii	"reset_counters\000"
 33593      745F636F 
 33593      756E7465 
 33593      727300
 33594              	.LASF174:
 33595 0338 75736572 		.ascii	"user_emg\000"
 33595      5F656D67 
 33595      00
 33596              	.LASF343:
 33597 0341 636D645F 		.ascii	"cmd_get_SD_file\000"
 33597      6765745F 
 33597      53445F66 
 33597      696C6500 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 715


 33598              	.LASF312:
 33599 0351 7365745A 		.ascii	"setZeros\000"
 33599      65726F73 
 33599      00
 33600              	.LASF122:
 33601 035a 756E7573 		.ascii	"unused_bytes\000"
 33601      65645F62 
 33601      79746573 
 33601      00
 33602              	.LASF203:
 33603 0367 61636365 		.ascii	"accel_value\000"
 33603      6C5F7661 
 33603      6C756500 
 33604              	.LASF223:
 33605 0373 4E554D5F 		.ascii	"NUM_ITEMS\000"
 33605      4954454D 
 33605      5300
 33606              	.LASF105:
 33607 037d 73745F63 		.ascii	"st_counters\000"
 33607      6F756E74 
 33607      65727300 
 33608              	.LASF246:
 33609 0389 4D454D5F 		.ascii	"MEM_P\000"
 33609      5000
 33610              	.LASF19:
 33611 038f 666C6F61 		.ascii	"float32\000"
 33611      74333200 
 33612              	.LASF341:
 33613 0397 636D645F 		.ascii	"cmd_get_ADC_map\000"
 33613      6765745F 
 33613      4144435F 
 33613      6D617000 
 33614              	.LASF41:
 33615 03a7 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 33615      4745545F 
 33615      43555252 
 33615      454E5453 
 33615      00
 33616              	.LASF285:
 33617 03b8 70726570 		.ascii	"prepare_SD_EMG_history\000"
 33617      6172655F 
 33617      53445F45 
 33617      4D475F68 
 33617      6973746F 
 33618              	.LASF106:
 33619 03cf 656D675F 		.ascii	"emg_counter\000"
 33619      636F756E 
 33619      74657200 
 33620              	.LASF342:
 33621 03db 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 33621      6765745F 
 33621      4144435F 
 33621      72617700 
 33622              	.LASF390:
 33623 03eb 73645061 		.ascii	"sdParam\000"
 33623      72616D00 
 33624              	.LASF256:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 716


 33625 03f3 6175785F 		.ascii	"aux_float2\000"
 33625      666C6F61 
 33625      743200
 33626              	.LASF329:
 33627 03fe 636D645F 		.ascii	"cmd_ping\000"
 33627      70696E67 
 33627      00
 33628              	.LASF275:
 33629 0407 7370695F 		.ascii	"spi_delay_menu_len\000"
 33629      64656C61 
 33629      795F6D65 
 33629      6E755F6C 
 33629      656E00
 33630              	.LASF254:
 33631 041a 7365745F 		.ascii	"set_custom_param\000"
 33631      63757374 
 33631      6F6D5F70 
 33631      6172616D 
 33631      00
 33632              	.LASF311:
 33633 042b 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 33633      6E69745F 
 33633      4F74626B 
 33633      41637457 
 33633      72697374 
 33634              	.LASF0:
 33635 0442 7369676E 		.ascii	"signed char\000"
 33635      65642063 
 33635      68617200 
 33636              	.LASF173:
 33637 044e 75736572 		.ascii	"user_code_string\000"
 33637      5F636F64 
 33637      655F7374 
 33637      72696E67 
 33637      00
 33638              	.LASF208:
 33639 045f 73745F63 		.ascii	"st_calib\000"
 33639      616C6962 
 33639      00
 33640              	.LASF350:
 33641 0468 6572725F 		.ascii	"err_emg_1\000"
 33641      656D675F 
 33641      3100
 33642              	.LASF300:
 33643 0472 6D656D53 		.ascii	"memStore\000"
 33643      746F7265 
 33643      00
 33644              	.LASF345:
 33645 047b 66696C65 		.ascii	"filename\000"
 33645      6E616D65 
 33645      00
 33646              	.LASF72:
 33647 0484 6D6F746F 		.ascii	"motor_supply_type\000"
 33647      725F7375 
 33647      70706C79 
 33647      5F747970 
 33647      6500
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 717


 33648              	.LASF328:
 33649 0496 72656164 		.ascii	"read_flag\000"
 33649      5F666C61 
 33649      6700
 33650              	.LASF382:
 33651 04a0 4144435F 		.ascii	"ADC_buf\000"
 33651      62756600 
 33652              	.LASF379:
 33653 04a8 696E7465 		.ascii	"interrupt_flag\000"
 33653      72727570 
 33653      745F666C 
 33653      616700
 33654              	.LASF280:
 33655 04b7 73746570 		.ascii	"step\000"
 33655      00
 33656              	.LASF1:
 33657 04bc 756E7369 		.ascii	"unsigned char\000"
 33657      676E6564 
 33657      20636861 
 33657      7200
 33658              	.LASF147:
 33659 04ca 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 33659      72657665 
 33659      72735F6D 
 33659      6F746F72 
 33659      5F666C61 
 33660              	.LASF362:
 33661 04e0 675F7265 		.ascii	"g_refNew\000"
 33661      664E6577 
 33661      00
 33662              	.LASF116:
 33663 04e9 72696768 		.ascii	"right_left\000"
 33663      745F6C65 
 33663      667400
 33664              	.LASF29:
 33665 04f4 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 33665      53544F52 
 33665      455F4445 
 33665      4641554C 
 33665      545F5041 
 33666              	.LASF145:
 33667 050d 656E636F 		.ascii	"encoder_line\000"
 33667      6465725F 
 33667      6C696E65 
 33667      00
 33668              	.LASF270:
 33669 051a 6E5F696D 		.ascii	"n_imu_str_len\000"
 33669      755F7374 
 33669      725F6C65 
 33669      6E00
 33670              	.LASF273:
 33671 0528 696D755F 		.ascii	"imu_table_str_len\000"
 33671      7461626C 
 33671      655F7374 
 33671      725F6C65 
 33671      6E00
 33672              	.LASF298:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 718


 33673 053a 76616C75 		.ascii	"value\000"
 33673      6500
 33674              	.LASF202:
 33675 0540 666C6167 		.ascii	"flags\000"
 33675      7300
 33676              	.LASF100:
 33677 0546 70726573 		.ascii	"pressure\000"
 33677      73757265 
 33677      00
 33678              	.LASF37:
 33679 054f 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 33679      4745545F 
 33679      41435449 
 33679      56415445 
 33679      00
 33680              	.LASF22:
 33681 0560 63686172 		.ascii	"char\000"
 33681      00
 33682              	.LASF140:
 33683 0565 6D61785F 		.ascii	"max_step_pos\000"
 33683      73746570 
 33683      5F706F73 
 33683      00
 33684              	.LASF395:
 33685 0572 675F696D 		.ascii	"g_imu\000"
 33685      7500
 33686              	.LASF304:
 33687 0578 7265745F 		.ascii	"ret_val\000"
 33687      76616C00 
 33688              	.LASF253:
 33689 0580 6D656E75 		.ascii	"menu_idx\000"
 33689      5F696478 
 33689      00
 33690              	.LASF262:
 33691 0589 73746172 		.ascii	"start_byte\000"
 33691      745F6279 
 33691      746500
 33692              	.LASF259:
 33693 0594 6E756D5F 		.ascii	"num_mag_cal_params\000"
 33693      6D61675F 
 33693      63616C5F 
 33693      70617261 
 33693      6D7300
 33694              	.LASF146:
 33695 05a7 70776D5F 		.ascii	"pwm_rate_limiter\000"
 33695      72617465 
 33695      5F6C696D 
 33695      69746572 
 33695      00
 33696              	.LASF126:
 33697 05b8 6B5F645F 		.ascii	"k_d_c\000"
 33697      6300
 33698              	.LASF99:
 33699 05be 73745F66 		.ascii	"st_fb_meas\000"
 33699      625F6D65 
 33699      617300
 33700              	.LASF216:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 719


 33701 05c9 7061636B 		.ascii	"packet_string\000"
 33701      65745F73 
 33701      7472696E 
 33701      6700
 33702              	.LASF151:
 33703 05d7 6D5F6D75 		.ascii	"m_mult\000"
 33703      6C7400
 33704              	.LASF125:
 33705 05de 6B5F695F 		.ascii	"k_i_c\000"
 33705      6300
 33706              	.LASF301:
 33707 05e4 64697370 		.ascii	"displacement\000"
 33707      6C616365 
 33707      6D656E74 
 33707      00
 33708              	.LASF295:
 33709 05f1 64617461 		.ascii	"data_length\000"
 33709      5F6C656E 
 33709      67746800 
 33710              	.LASF138:
 33711 05fd 706F735F 		.ascii	"pos_lim_sup\000"
 33711      6C696D5F 
 33711      73757000 
 33712              	.LASF159:
 33713 0609 656D675F 		.ascii	"emg_speed\000"
 33713      73706565 
 33713      6400
 33714              	.LASF178:
 33715 0613 72657374 		.ascii	"rest_vel\000"
 33715      5F76656C 
 33715      00
 33716              	.LASF229:
 33717 061c 7061636B 		.ascii	"packet_data\000"
 33717      65745F64 
 33717      61746100 
 33718              	.LASF113:
 33719 0628 73745F64 		.ascii	"st_device\000"
 33719      65766963 
 33719      6500
 33720              	.LASF388:
 33721 0632 7046696C 		.ascii	"pFile\000"
 33721      6500
 33722              	.LASF170:
 33723 0638 4144435F 		.ascii	"ADC_conf\000"
 33723      636F6E66 
 33723      00
 33724              	.LASF292:
 33725 0641 636F6D6D 		.ascii	"commWrite\000"
 33725      57726974 
 33725      6500
 33726              	.LASF359:
 33727 064b 64656163 		.ascii	"deactivate_slaves\000"
 33727      74697661 
 33727      74655F73 
 33727      6C617665 
 33727      7300
 33728              	.LASF303:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 720


 33729 065d 70616765 		.ascii	"pages\000"
 33729      7300
 33730              	.LASF307:
 33731 0663 6D656D49 		.ascii	"memInit\000"
 33731      6E697400 
 33732              	.LASF128:
 33733 066b 6B5F695F 		.ascii	"k_i_dl\000"
 33733      646C00
 33734              	.LASF38:
 33735 0672 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 33735      5345545F 
 33735      494E5055 
 33735      545300
 33736              	.LASF102:
 33737 0681 62756666 		.ascii	"buffer\000"
 33737      657200
 33738              	.LASF130:
 33739 0688 6B5F705F 		.ascii	"k_p_c_dl\000"
 33739      635F646C 
 33739      00
 33740              	.LASF313:
 33741 0691 636D645F 		.ascii	"cmd_get_measurements\000"
 33741      6765745F 
 33741      6D656173 
 33741      7572656D 
 33741      656E7473 
 33742              	.LASF211:
 33743 06a6 73706565 		.ascii	"speed\000"
 33743      6400
 33744              	.LASF215:
 33745 06ac 72785F63 		.ascii	"rx_cmd\000"
 33745      6D6400
 33746              	.LASF87:
 33747 06b3 54595045 		.ascii	"TYPE_DOUBLE\000"
 33747      5F444F55 
 33747      424C4500 
 33748              	.LASF347:
 33749 06bf 736C6176 		.ascii	"slave_motor_idx\000"
 33749      655F6D6F 
 33749      746F725F 
 33749      69647800 
 33750              	.LASF364:
 33751 06cf 675F6D65 		.ascii	"g_meas\000"
 33751      617300
 33752              	.LASF387:
 33753 06d6 456E636F 		.ascii	"Encoder_Check\000"
 33753      6465725F 
 33753      43686563 
 33753      6B00
 33754              	.LASF318:
 33755 06e4 6C617374 		.ascii	"last_aux_int16\000"
 33755      5F617578 
 33755      5F696E74 
 33755      313600
 33756              	.LASF76:
 33757 06f3 41434B5F 		.ascii	"ACK_ERROR\000"
 33757      4552524F 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 721


 33757      5200
 33758              	.LASF384:
 33759 06fd 64617461 		.ascii	"data_encoder_raw\000"
 33759      5F656E63 
 33759      6F646572 
 33759      5F726177 
 33759      00
 33760              	.LASF59:
 33761 070e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 33761      545F4D4F 
 33761      44455F45 
 33761      58544552 
 33761      4E414C00 
 33762              	.LASF244:
 33763 0722 696E6465 		.ascii	"index\000"
 33763      7800
 33764              	.LASF189:
 33765 0728 6D617869 		.ascii	"maximum_pressure_kPa\000"
 33765      6D756D5F 
 33765      70726573 
 33765      73757265 
 33765      5F6B5061 
 33766              	.LASF179:
 33767 073d 72657374 		.ascii	"rest_position_flag\000"
 33767      5F706F73 
 33767      6974696F 
 33767      6E5F666C 
 33767      616700
 33768              	.LASF181:
 33769 0750 6A6F7973 		.ascii	"joystick_closure_speed\000"
 33769      7469636B 
 33769      5F636C6F 
 33769      73757265 
 33769      5F737065 
 33770              	.LASF344:
 33771 0767 66696C65 		.ascii	"filename_length\000"
 33771      6E616D65 
 33771      5F6C656E 
 33771      67746800 
 33772              	.LASF131:
 33773 0777 6B5F695F 		.ascii	"k_i_c_dl\000"
 33773      635F646C 
 33773      00
 33774              	.LASF324:
 33775 0780 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 33775      52656164 
 33775      52657343 
 33775      75727246 
 33775      726F6D53 
 33776              	.LASF323:
 33777 0796 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 33777      6765745F 
 33777      63757272 
 33777      656E7473 
 33777      5F666F72 
 33778              	.LASF265:
 33779 07b0 6D61675F 		.ascii	"mag_param_str\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 722


 33779      70617261 
 33779      6D5F7374 
 33779      7200
 33780              	.LASF381:
 33781 07be 72657365 		.ascii	"reset_PSoC_flag\000"
 33781      745F5053 
 33781      6F435F66 
 33781      6C616700 
 33782              	.LASF354:
 33783 07ce 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 33783      5F616374 
 33783      5F777269 
 33783      73745F63 
 33783      6F6E7472 
 33784              	.LASF88:
 33785 07e5 54595045 		.ascii	"TYPE_STRING\000"
 33785      5F535452 
 33785      494E4700 
 33786              	.LASF71:
 33787 07f1 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 33787      5F414E44 
 33787      5F504F53 
 33787      5F434F4E 
 33787      54524F4C 
 33788              	.LASF28:
 33789 0806 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 33789      53544F52 
 33789      455F5041 
 33789      52414D53 
 33789      00
 33790              	.LASF226:
 33791 0817 50415241 		.ascii	"PARAMS_STR\000"
 33791      4D535F53 
 33791      545200
 33792              	.LASF209:
 33793 0822 656E6162 		.ascii	"enabled\000"
 33793      6C656400 
 33794              	.LASF7:
 33795 082a 6C6F6E67 		.ascii	"long unsigned int\000"
 33795      20756E73 
 33795      69676E65 
 33795      6420696E 
 33795      7400
 33796              	.LASF111:
 33797 083c 746F7461 		.ascii	"total_time_on\000"
 33797      6C5F7469 
 33797      6D655F6F 
 33797      6E00
 33798              	.LASF32:
 33799 084a 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 33799      424F4F54 
 33799      4C4F4144 
 33799      455200
 33800              	.LASF183:
 33801 0859 6A6F7973 		.ascii	"joystick_gains\000"
 33801      7469636B 
 33801      5F676169 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 723


 33801      6E7300
 33802              	.LASF95:
 33803 0868 686F6C64 		.ascii	"hold_curr\000"
 33803      5F637572 
 33803      7200
 33804              	.LASF65:
 33805 0872 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 33805      545F4D4F 
 33805      44455F4A 
 33805      4F595354 
 33805      49434B00 
 33806              	.LASF112:
 33807 0886 746F7461 		.ascii	"total_time_rest\000"
 33807      6C5F7469 
 33807      6D655F72 
 33807      65737400 
 33808              	.LASF218:
 33809 0896 7374725F 		.ascii	"str_sd_data\000"
 33809      73645F64 
 33809      61746100 
 33810              	.LASF133:
 33811 08a2 61637469 		.ascii	"activ\000"
 33811      7600
 33812              	.LASF228:
 33813 08a8 4D454E55 		.ascii	"MENU_STR\000"
 33813      5F535452 
 33813      00
 33814              	.LASF150:
 33815 08b1 6D5F6F66 		.ascii	"m_off\000"
 33815      6600
 33816              	.LASF77:
 33817 08b7 41434B5F 		.ascii	"ACK_OK\000"
 33817      4F4B00
 33818              	.LASF79:
 33819 08be 54595045 		.ascii	"TYPE_FLAG\000"
 33819      5F464C41 
 33819      4700
 33820              	.LASF206:
 33821 08c8 71756174 		.ascii	"quat_value\000"
 33821      5F76616C 
 33821      756500
 33822              	.LASF261:
 33823 08d3 7061636B 		.ascii	"packet_length\000"
 33823      65745F6C 
 33823      656E6774 
 33823      6800
 33824              	.LASF176:
 33825 08e1 72657374 		.ascii	"rest_pos\000"
 33825      5F706F73 
 33825      00
 33826              	.LASF90:
 33827 08ea 63757272 		.ascii	"curr\000"
 33827      00
 33828              	.LASF143:
 33829 08ef 696E7075 		.ascii	"input_mode\000"
 33829      745F6D6F 
 33829      646500
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 724


 33830              	.LASF69:
 33831 08fa 434F4E54 		.ascii	"CONTROL_PWM\000"
 33831      524F4C5F 
 33831      50574D00 
 33832              	.LASF43:
 33833 0906 434D445F 		.ascii	"CMD_GET_EMG\000"
 33833      4745545F 
 33833      454D4700 
 33834              	.LASF308:
 33835 0912 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 33835      6E69745F 
 33835      536F6674 
 33835      48616E64 
 33835      50726F00 
 33836              	.LASF31:
 33837 0926 434D445F 		.ascii	"CMD_GET_INFO\000"
 33837      4745545F 
 33837      494E464F 
 33837      00
 33838              	.LASF257:
 33839 0933 6765745F 		.ascii	"get_IMU_param_list\000"
 33839      494D555F 
 33839      70617261 
 33839      6D5F6C69 
 33839      737400
 33840              	.LASF338:
 33841 0946 73696E67 		.ascii	"single_packet\000"
 33841      6C655F70 
 33841      61636B65 
 33841      7400
 33842              	.LASF260:
 33843 0954 66697273 		.ascii	"first_imu_parameter\000"
 33843      745F696D 
 33843      755F7061 
 33843      72616D65 
 33843      74657200 
 33844              	.LASF42:
 33845 0968 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 33845      4745545F 
 33845      43555252 
 33845      5F414E44 
 33845      5F4D4541 
 33846              	.LASF401:
 33847 097e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 33847      43313120 
 33847      352E342E 
 33847      31203230 
 33847      31363036 
 33848 09b1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 33848      20726576 
 33848      6973696F 
 33848      6E203233 
 33848      37373135 
 33849 09e4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 33849      66756E63 
 33849      74696F6E 
 33849      2D736563 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 725


 33849      74696F6E 
 33850              	.LASF92:
 33851 0a0c 73745F72 		.ascii	"st_ref\000"
 33851      656600
 33852              	.LASF316:
 33853 0a13 636D645F 		.ascii	"cmd_get_joystick\000"
 33853      6765745F 
 33853      6A6F7973 
 33853      7469636B 
 33853      00
 33854              	.LASF47:
 33855 0a24 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 33855      5345545F 
 33855      43554646 
 33855      5F494E50 
 33855      55545300 
 33856              	.LASF175:
 33857 0a38 73745F53 		.ascii	"st_SH_spec\000"
 33857      485F7370 
 33857      656300
 33858              	.LASF372:
 33859 0a43 63616C69 		.ascii	"calib\000"
 33859      6200
 33860              	.LASF6:
 33861 0a49 5F5F7569 		.ascii	"__uint32_t\000"
 33861      6E743332 
 33861      5F7400
 33862              	.LASF8:
 33863 0a54 6C6F6E67 		.ascii	"long long int\000"
 33863      206C6F6E 
 33863      6720696E 
 33863      7400
 33864              	.LASF67:
 33865 0a62 53485F63 		.ascii	"SH_control_mode\000"
 33865      6F6E7472 
 33865      6F6C5F6D 
 33865      6F646500 
 33866              	.LASF81:
 33867 0a72 54595045 		.ascii	"TYPE_UINT8\000"
 33867      5F55494E 
 33867      543800
 33868              	.LASF322:
 33869 0a7d 636D645F 		.ascii	"cmd_get_currents\000"
 33869      6765745F 
 33869      63757272 
 33869      656E7473 
 33869      00
 33870              	.LASF74:
 33871 0a8e 4D41584F 		.ascii	"MAXON_12V\000"
 33871      4E5F3132 
 33871      5600
 33872              	.LASF380:
 33873 0a98 6368616E 		.ascii	"change_ext_ref_flag\000"
 33873      67655F65 
 33873      78745F72 
 33873      65665F66 
 33873      6C616700 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 726


 33874              	.LASF21:
 33875 0aac 646F7562 		.ascii	"double\000"
 33875      6C6500
 33876              	.LASF56:
 33877 0ab3 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 33877      4745545F 
 33877      53445F53 
 33877      494E474C 
 33877      455F4649 
 33878              	.LASF149:
 33879 0aca 456E635F 		.ascii	"Enc_raw_read_conf\000"
 33879      7261775F 
 33879      72656164 
 33879      5F636F6E 
 33879      6600
 33880              	.LASF212:
 33881 0adc 72657065 		.ascii	"repetitions\000"
 33881      74697469 
 33881      6F6E7300 
 33882              	.LASF139:
 33883 0ae8 6D61785F 		.ascii	"max_step_neg\000"
 33883      73746570 
 33883      5F6E6567 
 33883      00
 33884              	.LASF399:
 33885 0af5 656D675F 		.ascii	"emg_history_next_idx\000"
 33885      68697374 
 33885      6F72795F 
 33885      6E657874 
 33885      5F696478 
 33886              	.LASF186:
 33887 0b0a 736C6176 		.ascii	"slave_ID\000"
 33887      655F4944 
 33887      00
 33888              	.LASF378:
 33889 0b13 72657365 		.ascii	"reset_last_value_flag\000"
 33889      745F6C61 
 33889      73745F76 
 33889      616C7565 
 33889      5F666C61 
 33890              	.LASF227:
 33891 0b29 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 33891      4F4D5F50 
 33891      4152414D 
 33891      5F474554 
 33891      00
 33892              	.LASF20:
 33893 0b3a 666C6F61 		.ascii	"float\000"
 33893      7400
 33894              	.LASF165:
 33895 0b40 494D555F 		.ascii	"IMU_conf\000"
 33895      636F6E66 
 33895      00
 33896              	.LASF245:
 33897 0b49 50415241 		.ascii	"PARAM_IDX\000"
 33897      4D5F4944 
 33897      5800
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 727


 33898              	.LASF96:
 33899 0b53 73745F61 		.ascii	"st_adc_meas\000"
 33899      64635F6D 
 33899      65617300 
 33900              	.LASF241:
 33901 0b5f 6D5F6164 		.ascii	"m_addr\000"
 33901      647200
 33902              	.LASF371:
 33903 0b66 635F6D65 		.ascii	"c_mem\000"
 33903      6D00
 33904              	.LASF294:
 33905 0b6c 64617461 		.ascii	"data_array\000"
 33905      5F617272 
 33905      617900
 33906              	.LASF10:
 33907 0b77 756E7369 		.ascii	"unsigned int\000"
 33907      676E6564 
 33907      20696E74 
 33907      00
 33908              	.LASF351:
 33909 0b84 6572725F 		.ascii	"err_emg_2\000"
 33909      656D675F 
 33909      3200
 33910              	.LASF309:
 33911 0b8e 6D656D49 		.ascii	"memInit_Master\000"
 33911      6E69745F 
 33911      4D617374 
 33911      657200
 33912              	.LASF230:
 33913 0b9d 7061636B 		.ascii	"packet_lenght\000"
 33913      65745F6C 
 33913      656E6768 
 33913      7400
 33914              	.LASF297:
 33915 0bab 73656E64 		.ascii	"sendAcknowledgment\000"
 33915      41636B6E 
 33915      6F776C65 
 33915      64676D65 
 33915      6E7400
 33916              	.LASF282:
 33917 0bbe 70726570 		.ascii	"prepare_SD_legend\000"
 33917      6172655F 
 33917      53445F6C 
 33917      6567656E 
 33917      6400
 33918              	.LASF396:
 33919 0bd0 4D616743 		.ascii	"MagCal\000"
 33919      616C00
 33920              	.LASF57:
 33921 0bd7 53485F63 		.ascii	"SH_command\000"
 33921      6F6D6D61 
 33921      6E6400
 33922              	.LASF83:
 33923 0be2 54595045 		.ascii	"TYPE_UINT16\000"
 33923      5F55494E 
 33923      54313600 
 33924              	.LASF196:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 728


 33925 0bee 666C6167 		.ascii	"flag\000"
 33925      00
 33926              	.LASF317:
 33927 0bf3 636D645F 		.ascii	"cmd_set_inputs\000"
 33927      7365745F 
 33927      696E7075 
 33927      747300
 33928              	.LASF144:
 33929 0c02 636F6E74 		.ascii	"control_mode\000"
 33929      726F6C5F 
 33929      6D6F6465 
 33929      00
 33930              	.LASF332:
 33931 0c0f 6F66665F 		.ascii	"off_1\000"
 33931      3100
 33932              	.LASF60:
 33933 0c15 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 33933      545F4D4F 
 33933      44455F45 
 33933      4E434F44 
 33933      45523300 
 33934              	.LASF293:
 33935 0c29 636F6D6D 		.ascii	"commWriteID\000"
 33935      57726974 
 33935      65494400 
 33936              	.LASF52:
 33937 0c35 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 33937      4745545F 
 33937      454E434F 
 33937      4445525F 
 33937      434F4E46 
 33938              	.LASF162:
 33939 0c4a 73745F69 		.ascii	"st_imu\000"
 33939      6D7500
 33940              	.LASF320:
 33941 0c51 636D645F 		.ascii	"cmd_get_activate\000"
 33941      6765745F 
 33941      61637469 
 33941      76617465 
 33941      00
 33942              	.LASF348:
 33943 0c62 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 33943      61637469 
 33943      76617469 
 33943      6F6E5F76 
 33943      656C6F63 
 33944              	.LASF232:
 33945 0c7e 73747269 		.ascii	"string_lenght\000"
 33945      6E675F6C 
 33945      656E6768 
 33945      7400
 33946              	.LASF86:
 33947 0c8c 54595045 		.ascii	"TYPE_FLOAT\000"
 33947      5F464C4F 
 33947      415400
 33948              	.LASF250:
 33949 0c97 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 729


 33949      4F4D5F50 
 33949      4152414D 
 33949      5F534554 
 33949      5F4C4953 
 33950              	.LASF224:
 33951 0cad 4E554D5F 		.ascii	"NUM_STRUCT\000"
 33951      53545255 
 33951      435400
 33952              	.LASF394:
 33953 0cb8 73696E67 		.ascii	"single_imu_size\000"
 33953      6C655F69 
 33953      6D755F73 
 33953      697A6500 
 33954              	.LASF255:
 33955 0cc8 6175785F 		.ascii	"aux_uchar\000"
 33955      75636861 
 33955      7200
 33956              	.LASF97:
 33957 0cd2 6164645F 		.ascii	"add_emg\000"
 33957      656D6700 
 33958              	.LASF82:
 33959 0cda 54595045 		.ascii	"TYPE_INT16\000"
 33959      5F494E54 
 33959      313600
 33960              	.LASF236:
 33961 0ce5 6175785F 		.ascii	"aux_uint16\000"
 33961      75696E74 
 33961      313600
 33962              	.LASF157:
 33963 0cf0 656D675F 		.ascii	"emg_threshold\000"
 33963      74687265 
 33963      73686F6C 
 33963      6400
 33964              	.LASF46:
 33965 0cfe 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 33965      4745545F 
 33965      43555252 
 33965      5F444946 
 33965      4600
 33966              	.LASF108:
 33967 0d10 63757272 		.ascii	"current_hist\000"
 33967      656E745F 
 33967      68697374 
 33967      00
 33968              	.LASF70:
 33969 0d1d 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 33969      524F4C5F 
 33969      43555252 
 33969      454E5400 
 33970              	.LASF24:
 33971 0d2d 6C6F6E67 		.ascii	"long double\000"
 33971      20646F75 
 33971      626C6500 
 33972              	.LASF85:
 33973 0d39 54595045 		.ascii	"TYPE_UINT32\000"
 33973      5F55494E 
 33973      54333200 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 730


 33974              	.LASF187:
 33975 0d45 73745F46 		.ascii	"st_FB_spec\000"
 33975      425F7370 
 33975      656300
 33976              	.LASF221:
 33977 0d50 5641525F 		.ascii	"VAR_P\000"
 33977      5000
 33978              	.LASF249:
 33979 0d56 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 33979      4F4D5F50 
 33979      4152414D 
 33979      5F474554 
 33979      5F4C4953 
 33980              	.LASF154:
 33981 0d6c 6D6F746F 		.ascii	"motor_handle_ratio\000"
 33981      725F6861 
 33981      6E646C65 
 33981      5F726174 
 33981      696F00
 33982              	.LASF296:
 33983 0d7f 63686563 		.ascii	"checksum\000"
 33983      6B73756D 
 33983      00
 33984              	.LASF363:
 33985 0d88 675F7265 		.ascii	"g_refOld\000"
 33985      664F6C64 
 33985      00
 33986              	.LASF35:
 33987 0d91 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 33987      48414E44 
 33987      5F43414C 
 33987      49425241 
 33987      544500
 33988              	.LASF204:
 33989 0da4 6779726F 		.ascii	"gyro_value\000"
 33989      5F76616C 
 33989      756500
 33990              	.LASF167:
 33991 0daf 63757272 		.ascii	"curr_time\000"
 33991      5F74696D 
 33991      6500
 33992              	.LASF152:
 33993 0db9 646F7562 		.ascii	"double_encoder_on_off\000"
 33993      6C655F65 
 33993      6E636F64 
 33993      65725F6F 
 33993      6E5F6F66 
 33994              	.LASF355:
 33995 0dcf 64726976 		.ascii	"drive_slave\000"
 33995      655F736C 
 33995      61766500 
 33996              	.LASF164:
 33997 0ddb 5350495F 		.ascii	"SPI_read_delay\000"
 33997      72656164 
 33997      5F64656C 
 33997      617900
 33998              	.LASF75:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 731


 33999 0dea 61636B6E 		.ascii	"acknowledgment_values\000"
 33999      6F776C65 
 33999      64676D65 
 33999      6E745F76 
 33999      616C7565 
 34000              	.LASF239:
 34001 0e00 4D4F544F 		.ascii	"MOTOR_IDX\000"
 34001      525F4944 
 34001      5800
 34002              	.LASF306:
 34003 0e0a 6D656D52 		.ascii	"memRestore\000"
 34003      6573746F 
 34003      726500
 34004              	.LASF263:
 34005 0e15 6E5F696D 		.ascii	"n_imu_str\000"
 34005      755F7374 
 34005      7200
 34006              	.LASF277:
 34007 0e1f 696E666F 		.ascii	"info_string\000"
 34007      5F737472 
 34007      696E6700 
 34008              	.LASF283:
 34009 0e2b 70726570 		.ascii	"prepare_SD_info\000"
 34009      6172655F 
 34009      53445F69 
 34009      6E666F00 
 34010              	.LASF349:
 34011 0e3b 66736D5F 		.ascii	"fsm_state\000"
 34011      73746174 
 34011      6500
 34012              	.LASF9:
 34013 0e45 6C6F6E67 		.ascii	"long long unsigned int\000"
 34013      206C6F6E 
 34013      6720756E 
 34013      7369676E 
 34013      65642069 
 34014              	.LASF84:
 34015 0e5c 54595045 		.ascii	"TYPE_INT32\000"
 34015      5F494E54 
 34015      333200
 34016              	.LASF238:
 34017 0e67 6175785F 		.ascii	"aux_uint32\000"
 34017      75696E74 
 34017      333200
 34018              	.LASF103:
 34019 0e72 6C656E67 		.ascii	"length\000"
 34019      746800
 34020              	.LASF251:
 34021 0e79 55534552 		.ascii	"USER_ID_PARAM\000"
 34021      5F49445F 
 34021      50415241 
 34021      4D00
 34022              	.LASF201:
 34023 0e87 73745F69 		.ascii	"st_imu_data\000"
 34023      6D755F64 
 34023      61746100 
 34024              	.LASF205:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 732


 34025 0e93 6D61675F 		.ascii	"mag_value\000"
 34025      76616C75 
 34025      6500
 34026              	.LASF91:
 34027 0e9d 6F6E6F66 		.ascii	"onoff\000"
 34027      6600
 34028              	.LASF45:
 34029 0ea3 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 34029      4745545F 
 34029      41434345 
 34029      4C00
 34030              	.LASF314:
 34031 0eb1 636D645F 		.ascii	"cmd_get_velocities\000"
 34031      6765745F 
 34031      76656C6F 
 34031      63697469 
 34031      657300
 34032              	.LASF305:
 34033 0ec4 6D656D52 		.ascii	"memRecall\000"
 34033      6563616C 
 34033      6C00
 34034              	.LASF374:
 34035 0ece 74696D65 		.ascii	"timer_value0\000"
 34035      725F7661 
 34035      6C756530 
 34035      00
 34036              	.LASF48:
 34037 0edb 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 34037      5345545F 
 34037      42415544 
 34037      52415445 
 34037      00
 34038              	.LASF124:
 34039 0eec 6B5F705F 		.ascii	"k_p_c\000"
 34039      6300
 34040              	.LASF267:
 34041 0ef2 696D755F 		.ascii	"imu_table_str\000"
 34041      7461626C 
 34041      655F7374 
 34041      7200
 34042              	.LASF375:
 34043 0f00 6465765F 		.ascii	"dev_tension\000"
 34043      74656E73 
 34043      696F6E00 
 34044              	.LASF135:
 34045 0f0c 6D6F746F 		.ascii	"motor_driver_type\000"
 34045      725F6472 
 34045      69766572 
 34045      5F747970 
 34045      6500
 34046              	.LASF333:
 34047 0f1e 6D756C74 		.ascii	"mult_1\000"
 34047      5F3100
 34048              	.LASF279:
 34049 0f25 70726570 		.ascii	"prepare_counter_info\000"
 34049      6172655F 
 34049      636F756E 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 733


 34049      7465725F 
 34049      696E666F 
 34050              	.LASF23:
 34051 0f3a 72656738 		.ascii	"reg8\000"
 34051      00
 34052              	.LASF190:
 34053 0f3f 70726F70 		.ascii	"prop_err_fb_gain\000"
 34053      5F657272 
 34053      5F66625F 
 34053      6761696E 
 34053      00
 34054              	.LASF290:
 34055 0f50 636F6D6D 		.ascii	"commWrite_old_id\000"
 34055      57726974 
 34055      655F6F6C 
 34055      645F6964 
 34055      00
 34056              	.LASF243:
 34057 0f61 6D616E61 		.ascii	"manage_param_list\000"
 34057      67655F70 
 34057      6172616D 
 34057      5F6C6973 
 34057      7400
 34058              	.LASF30:
 34059 0f73 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 34059      52455354 
 34059      4F52455F 
 34059      50415241 
 34059      4D5300
 34060              	.LASF389:
 34061 0f86 73644669 		.ascii	"sdFile\000"
 34061      6C6500
 34062              	.LASF281:
 34063 0f8d 70726570 		.ascii	"prepare_SD_param_info\000"
 34063      6172655F 
 34063      53445F70 
 34063      6172616D 
 34063      5F696E66 
 34064              	.LASF325:
 34065 0fa3 63757272 		.ascii	"curr_diff\000"
 34065      5F646966 
 34065      6600
 34066              	.LASF185:
 34067 0fad 736C6176 		.ascii	"slave_comm_active\000"
 34067      655F636F 
 34067      6D6D5F61 
 34067      63746976 
 34067      6500
 34068              	.LASF284:
 34069 0fbf 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 34069      6172655F 
 34069      53445F45 
 34069      4D475F48 
 34069      6973746F 
 34070              	.LASF291:
 34071 0fdd 6F6C645F 		.ascii	"old_id\000"
 34071      696400
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 734


 34072              	.LASF404:
 34073 0fe4 5F5F5245 		.ascii	"__REV16\000"
 34073      56313600 
 34074              	.LASF385:
 34075 0fec 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 34075      636F6465 
 34075      725F4C69 
 34075      6E655F43 
 34075      6F6E6E65 
 34076              	.LASF121:
 34077 1005 6465765F 		.ascii	"dev_type\000"
 34077      74797065 
 34077      00
 34078              	.LASF172:
 34079 100e 73745F75 		.ascii	"st_user\000"
 34079      73657200 
 34080              	.LASF321:
 34081 1016 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 34081      6765745F 
 34081      63757272 
 34081      5F616E64 
 34081      5F6D6561 
 34082              	.LASF155:
 34083 102c 67656172 		.ascii	"gears_params\000"
 34083      735F7061 
 34083      72616D73 
 34083      00
 34084              	.LASF166:
 34085 1039 73745F65 		.ascii	"st_expansion\000"
 34085      7870616E 
 34085      73696F6E 
 34085      00
 34086              	.LASF160:
 34087 1046 656D675F 		.ascii	"emg_calibration_flag\000"
 34087      63616C69 
 34087      62726174 
 34087      696F6E5F 
 34087      666C6167 
 34088              	.LASF93:
 34089 105b 73745F6D 		.ascii	"st_meas\000"
 34089      65617300 
 34090              	.LASF55:
 34091 1063 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 34091      4745545F 
 34091      4144435F 
 34091      52415700 
 34092              	.LASF182:
 34093 1073 6A6F7973 		.ascii	"joystick_threshold\000"
 34093      7469636B 
 34093      5F746872 
 34093      6573686F 
 34093      6C6400
 34094              	.LASF73:
 34095 1086 4D41584F 		.ascii	"MAXON_24V\000"
 34095      4E5F3234 
 34095      5600
 34096              	.LASF66:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 735


 34097 1090 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 34097      545F4D4F 
 34097      44455F45 
 34097      4D475F50 
 34097      524F504F 
 34098              	.LASF51:
 34099 10af 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 34099      4745545F 
 34099      494D555F 
 34099      50415241 
 34099      4D00
 34100              	.LASF368:
 34101 10c1 675F6662 		.ascii	"g_fb_meas\000"
 34101      5F6D6561 
 34101      7300
 34102              	.LASF53:
 34103 10cb 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 34103      4745545F 
 34103      454E434F 
 34103      4445525F 
 34103      52415700 
 34104              	.LASF331:
 34105 10df 636D645F 		.ascii	"cmd_store_params\000"
 34105      73746F72 
 34105      655F7061 
 34105      72616D73 
 34105      00
 34106              	.LASF370:
 34107 10f0 675F6D65 		.ascii	"g_mem\000"
 34107      6D00
 34108              	.LASF40:
 34109 10f6 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 34109      4745545F 
 34109      4D454153 
 34109      5552454D 
 34109      454E5453 
 34110              	.LASF367:
 34111 110b 675F6164 		.ascii	"g_adc_measOld\000"
 34111      635F6D65 
 34111      61734F6C 
 34111      6400
 34112              	.LASF340:
 34113 1119 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 34113      6765745F 
 34113      656E636F 
 34113      6465725F 
 34113      72617700 
 34114              	.LASF13:
 34115 112d 75696E74 		.ascii	"uint8\000"
 34115      3800
 34116              	.LASF213:
 34117 1133 636F6D6D 		.ascii	"commProcess\000"
 34117      50726F63 
 34117      65737300 
 34118              	.LASF180:
 34119 113f 73745F4A 		.ascii	"st_JOY_spec\000"
 34119      4F595F73 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 736


 34119      70656300 
 34120              	.LASF2:
 34121 114b 73686F72 		.ascii	"short int\000"
 34121      7420696E 
 34121      7400
 34122              	.LASF310:
 34123 1155 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 34123      6E69745F 
 34123      41697243 
 34123      68616D62 
 34123      65727346 
 34124              	.LASF271:
 34125 116b 6964735F 		.ascii	"ids_str_len\000"
 34125      7374725F 
 34125      6C656E00 
 34126              	.LASF129:
 34127 1177 6B5F645F 		.ascii	"k_d_dl\000"
 34127      646C00
 34128              	.LASF231:
 34129 117e 6964785F 		.ascii	"idx_menu\000"
 34129      6D656E75 
 34129      00
 34130              	.LASF98:
 34131 1187 6A6F7973 		.ascii	"joystick\000"
 34131      7469636B 
 34131      00
 34132              	.LASF198:
 34133 1190 6D6F746F 		.ascii	"motor\000"
 34133      7200
 34134              	.LASF391:
 34135 1196 4E5F494D 		.ascii	"N_IMU_Connected\000"
 34135      555F436F 
 34135      6E6E6563 
 34135      74656400 
 34136              	.LASF39:
 34137 11a6 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 34137      4745545F 
 34137      494E5055 
 34137      545300
 34138              	.LASF114:
 34139 11b5 68775F6D 		.ascii	"hw_maint_date\000"
 34139      61696E74 
 34139      5F646174 
 34139      6500
 34140              	.LASF264:
 34141 11c3 6964735F 		.ascii	"ids_str\000"
 34141      73747200 
 34142              	.LASF54:
 34143 11cb 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 34143      4745545F 
 34143      4144435F 
 34143      434F4E46 
 34143      00
 34144              	.LASF27:
 34145 11dc 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 34145      5345545F 
 34145      5A45524F 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 737


 34145      5300
 34146              	.LASF272:
 34147 11ea 6D61675F 		.ascii	"mag_param_str_len\000"
 34147      70617261 
 34147      6D5F7374 
 34147      725F6C65 
 34147      6E00
 34148              	.LASF258:
 34149 11fc 6E756D5F 		.ascii	"num_imus_id_params\000"
 34149      696D7573 
 34149      5F69645F 
 34149      70617261 
 34149      6D7300
 34150              	.LASF235:
 34151 120f 6175785F 		.ascii	"aux_int16\000"
 34151      696E7431 
 34151      3600
 34152              	.LASF398:
 34153 1219 656D675F 		.ascii	"emg_history\000"
 34153      68697374 
 34153      6F727900 
 34154              	.LASF400:
 34155 1225 45455052 		.ascii	"EEPROM_ADDR\000"
 34155      4F4D5F41 
 34155      44445200 
 34156              	.LASF115:
 34157 1231 73746174 		.ascii	"stats_period_begin_date\000"
 34157      735F7065 
 34157      72696F64 
 34157      5F626567 
 34157      696E5F64 
 34158              	.LASF393:
 34159 1249 696D7573 		.ascii	"imus_data_size\000"
 34159      5F646174 
 34159      615F7369 
 34159      7A6500
 34160              	.LASF360:
 34161 1258 49544D5F 		.ascii	"ITM_RxBuffer\000"
 34161      52784275 
 34161      66666572 
 34161      00
 34162              	.LASF44:
 34163 1265 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 34163      4745545F 
 34163      56454C4F 
 34163      43495449 
 34163      455300
 34164              	.LASF377:
 34165 1278 706F775F 		.ascii	"pow_tension\000"
 34165      74656E73 
 34165      696F6E00 
 34166              	.LASF34:
 34167 1284 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 34167      4745545F 
 34167      50415241 
 34167      4D5F4C49 
 34167      535400
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 738


 34168              	.LASF78:
 34169 1297 64617461 		.ascii	"data_types\000"
 34169      5F747970 
 34169      657300
 34170              	.LASF17:
 34171 12a2 696E7431 		.ascii	"int16\000"
 34171      3600
 34172              	.LASF168:
 34173 12a8 72656164 		.ascii	"read_exp_port_flag\000"
 34173      5F657870 
 34173      5F706F72 
 34173      745F666C 
 34173      616700
 34174              	.LASF161:
 34175 12bb 73776974 		.ascii	"switch_emg\000"
 34175      63685F65 
 34175      6D6700
 34176              	.LASF134:
 34177 12c6 61637469 		.ascii	"activate_pwm_rescaling\000"
 34177      76617465 
 34177      5F70776D 
 34177      5F726573 
 34177      63616C69 
 34178              	.LASF127:
 34179 12dd 6B5F705F 		.ascii	"k_p_dl\000"
 34179      646C00
 34180              	.LASF94:
 34181 12e4 65737469 		.ascii	"estim_curr\000"
 34181      6D5F6375 
 34181      727200
 34182              	.LASF376:
 34183 12ef 6465765F 		.ascii	"dev_pwm_limit\000"
 34183      70776D5F 
 34183      6C696D69 
 34183      7400
 34184              	.LASF169:
 34185 12fd 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 34185      5F414443 
 34185      5F73656E 
 34185      736F7273 
 34185      5F706F72 
 34186              	.LASF386:
 34187 1318 456E636F 		.ascii	"Encoder_Value\000"
 34187      6465725F 
 34187      56616C75 
 34187      6500
 34188              	.LASF339:
 34189 1326 636D645F 		.ascii	"cmd_get_encoder_map\000"
 34189      6765745F 
 34189      656E636F 
 34189      6465725F 
 34189      6D617000 
 34190              	.LASF120:
 34191 133a 75736572 		.ascii	"user_id\000"
 34191      5F696400 
 34192              	.LASF12:
 34193 1342 75696E74 		.ascii	"uint32_t\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 739


 34193      33325F74 
 34193      00
 34194              	.LASF234:
 34195 134b 6175785F 		.ascii	"aux_float\000"
 34195      666C6F61 
 34195      7400
 34196              	.LASF392:
 34197 1355 494D555F 		.ascii	"IMU_connected\000"
 34197      636F6E6E 
 34197      65637465 
 34197      6400
 34198              	.LASF225:
 34199 1363 4E554D5F 		.ascii	"NUM_MENU\000"
 34199      4D454E55 
 34199      00
 34200              	.LASF237:
 34201 136c 6175785F 		.ascii	"aux_int32\000"
 34201      696E7433 
 34201      3200
 34202              	.LASF119:
 34203 1376 62617564 		.ascii	"baud_rate\000"
 34203      5F726174 
 34203      6500
 34204              	.LASF327:
 34205 1380 745F656E 		.ascii	"t_end\000"
 34205      6400
 34206              	.LASF193:
 34207 1386 66617374 		.ascii	"fast_act_threshold\000"
 34207      5F616374 
 34207      5F746872 
 34207      6573686F 
 34207      6C6400
 34208              	.LASF220:
 34209 1399 696E666F 		.ascii	"info_type\000"
 34209      5F747970 
 34209      6500
 34210              	.LASF50:
 34211 13a3 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 34211      4745545F 
 34211      494D555F 
 34211      52454144 
 34211      494E4753 
 34212              	.LASF299:
 34213 13b8 4C435243 		.ascii	"LCRChecksum\000"
 34213      6865636B 
 34213      73756D00 
 34214              	.LASF336:
 34215 13c4 6B5F696D 		.ascii	"k_imu\000"
 34215      7500
 34216              	.LASF3:
 34217 13ca 73686F72 		.ascii	"short unsigned int\000"
 34217      7420756E 
 34217      7369676E 
 34217      65642069 
 34217      6E7400
 34218              	.LASF148:
 34219 13dd 73745F65 		.ascii	"st_encoder\000"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 740


 34219      6E636F64 
 34219      657200
 34220              	.LASF366:
 34221 13e8 675F6164 		.ascii	"g_adc_meas\000"
 34221      635F6D65 
 34221      617300
 34222              	.LASF188:
 34223 13f3 6D61785F 		.ascii	"max_residual_current\000"
 34223      72657369 
 34223      6475616C 
 34223      5F637572 
 34223      72656E74 
 34224              	.LASF278:
 34225 1408 454E435F 		.ascii	"ENC_L\000"
 34225      4C00
 34226              	.LASF195:
 34227 140e 73745F65 		.ascii	"st_eeprom\000"
 34227      6570726F 
 34227      6D00
 34228              	.LASF222:
 34229 1418 54595045 		.ascii	"TYPES\000"
 34229      5300
 34230              	.LASF361:
 34231 141e 675F7265 		.ascii	"g_ref\000"
 34231      6600
 34232              	.LASF18:
 34233 1424 696E7433 		.ascii	"int32\000"
 34233      3200
 34234              	.LASF383:
 34235 142a 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 34235      4F465F41 
 34235      4E414C4F 
 34235      475F494E 
 34235      50555453 
 34236              	.LASF217:
 34237 143f 696E666F 		.ascii	"infoGet\000"
 34237      47657400 
 34238              	.LASF123:
 34239 1447 73745F6D 		.ascii	"st_motor\000"
 34239      6F746F72 
 34239      00
 34240              	.LASF397:
 34241 1450 6D617374 		.ascii	"master_mode\000"
 34241      65725F6D 
 34241      6F646500 
 34242              	.LASF89:
 34243 145c 46535F46 		.ascii	"FS_FILE\000"
 34243      494C4500 
 34244              	.LASF136:
 34245 1464 706F735F 		.ascii	"pos_lim_flag\000"
 34245      6C696D5F 
 34245      666C6167 
 34245      00
 34246              	.LASF365:
 34247 1471 675F6D65 		.ascii	"g_measOld\000"
 34247      61734F6C 
 34247      6400
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 741


 34248              	.LASF68:
 34249 147b 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 34249      524F4C5F 
 34249      414E474C 
 34249      4500
 34250              	.LASF319:
 34251 1489 636D645F 		.ascii	"cmd_activate\000"
 34251      61637469 
 34251      76617465 
 34251      00
 34252              	.LASF5:
 34253 1496 5F5F696E 		.ascii	"__int32_t\000"
 34253      7433325F 
 34253      7400
 34254              	.LASF247:
 34255 14a0 7370695F 		.ascii	"spi_delay_menu\000"
 34255      64656C61 
 34255      795F6D65 
 34255      6E7500
 34256              	.LASF110:
 34257 14af 77697265 		.ascii	"wire_disp\000"
 34257      5F646973 
 34257      7000
 34258              	.LASF158:
 34259 14b9 656D675F 		.ascii	"emg_max_value\000"
 34259      6D61785F 
 34259      76616C75 
 34259      6500
 34260              	.LASF252:
 34261 14c7 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 34261      4F4D5F50 
 34261      4152414D 
 34261      5F534554 
 34261      00
 34262              	.LASF402:
 34263 14d8 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 34263      72635C63 
 34263      6F6D6D61 
 34263      6E645F70 
 34263      726F6365 
 34264              	.LASF142:
 34265 14f4 63757272 		.ascii	"current_limit\000"
 34265      656E745F 
 34265      6C696D69 
 34265      7400
 34266              	.LASF58:
 34267 1502 53485F69 		.ascii	"SH_input_mode\000"
 34267      6E707574 
 34267      5F6D6F64 
 34267      6500
 34268              	.LASF80:
 34269 1510 54595045 		.ascii	"TYPE_INT8\000"
 34269      5F494E54 
 34269      3800
 34270              	.LASF192:
 34271 151a 61637469 		.ascii	"activation_mode\000"
 34271      76617469 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccwC2dxH.s 			page 742


 34271      6F6E5F6D 
 34271      6F646500 
 34272              	.LASF289:
 34273 152a 494D555F 		.ascii	"IMU_reading_info\000"
 34273      72656164 
 34273      696E675F 
 34273      696E666F 
 34273      00
 34274              	.LASF14:
 34275 153b 75696E74 		.ascii	"uint16\000"
 34275      313600
 34276              	.LASF403:
 34277 1542 443A5C50 		.ascii	"D:\\Program Files\\Google Drive\\HapticLab\\3_Utils"
 34277      726F6772 
 34277      616D2046 
 34277      696C6573 
 34277      5C476F6F 
 34278 1571 5C716272 		.ascii	"\\qbrobotics\\qb_psoc5_firmware\\CUFF.cydsn\000"
 34278      6F626F74 
 34278      6963735C 
 34278      71625F70 
 34278      736F6335 
 34279              	.LASF177:
 34280 159a 72657374 		.ascii	"rest_delay\000"
 34280      5F64656C 
 34280      617900
 34281              	.LASF233:
 34282 15a5 6175785F 		.ascii	"aux_str\000"
 34282      73747200 
 34283              	.LASF26:
 34284 15ad 434D445F 		.ascii	"CMD_PING\000"
 34284      50494E47 
 34284      00
 34285              	.LASF132:
 34286 15b6 6B5F645F 		.ascii	"k_d_c_dl\000"
 34286      635F646C 
 34286      00
 34287              	.LASF210:
 34288 15bf 64697265 		.ascii	"direction\000"
 34288      6374696F 
 34288      6E00
 34289              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
