ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_MOTORS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_MOTORS_initVar
  20              		.bss
  21              		.type	PWM_MOTORS_initVar, %object
  22              		.size	PWM_MOTORS_initVar, 1
  23              	PWM_MOTORS_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_MOTORS_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_MOTORS_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM_MOTORS_Start, %function
  31              	PWM_MOTORS_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM_MOTORS.c"
   1:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_MOTORS.c **** * File Name: PWM_MOTORS.c
   3:Generated_Source\PSoC5/PWM_MOTORS.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_MOTORS.c **** *
   5:Generated_Source\PSoC5/PWM_MOTORS.c **** * Description:
   6:Generated_Source\PSoC5/PWM_MOTORS.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_MOTORS.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_MOTORS.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_MOTORS.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_MOTORS.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_MOTORS.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_MOTORS.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_MOTORS.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  15:Generated_Source\PSoC5/PWM_MOTORS.c **** * Note:
  16:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  17:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_MOTORS.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_MOTORS.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_MOTORS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_MOTORS.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  24:Generated_Source\PSoC5/PWM_MOTORS.c **** #include "PWM_MOTORS.h"
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 2


  25:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  26:Generated_Source\PSoC5/PWM_MOTORS.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_MOTORS.c **** #ifdef PWM_MOTORS_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_MOTORS.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_MOTORS.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* PWM_MOTORS_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  32:Generated_Source\PSoC5/PWM_MOTORS.c **** uint8 PWM_MOTORS_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  34:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  35:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_Start
  37:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  39:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_MOTORS.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_MOTORS.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_MOTORS.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  44:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
  46:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  47:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
  48:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
  49:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  50:Generated_Source\PSoC5/PWM_MOTORS.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_MOTORS.c **** *  PWM_MOTORS_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_MOTORS.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  54:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_Start(void) 
  56:Generated_Source\PSoC5/PWM_MOTORS.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_MOTORS.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_MOTORS.c ****     if(PWM_MOTORS_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
  60:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_MOTORS_Init
  61:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
  63:Generated_Source\PSoC5/PWM_MOTORS.c ****     PWM_MOTORS_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_MOTORS_Enable
  64:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  65:Generated_Source\PSoC5/PWM_MOTORS.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM_MOTORS_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM_MOTORS_Start, .-PWM_MOTORS_Start
  68              		.section	.text.PWM_MOTORS_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM_MOTORS_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM_MOTORS_Init, %function
  74              	PWM_MOTORS_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  67:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  68:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_Init
  70:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  72:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_MOTORS.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_MOTORS.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_MOTORS.c **** *  PWM_MOTORS_Start().
  76:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  77:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
  79:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  80:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
  81:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
  82:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  83:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_Init(void) 
  85:Generated_Source\PSoC5/PWM_MOTORS.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction || PWM_MOTORS_UseControl)
  87:Generated_Source\PSoC5/PWM_MOTORS.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction || PWM_MOTORS_UseControl) */
  89:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  90:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if(!PWM_MOTORS_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UseStatus)
  92:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_MOTORS.c ****             uint8 PWM_MOTORS_interruptState;
  94:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UseStatus) */
  95:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (!PWM_MOTORS_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  97:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL |= PWM_MOTORS_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_CONTROL |= PWM_MOTORS_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 104:Generated_Source\PSoC5/PWM_MOTORS.c ****         ctrl = PWM_MOTORS_CONTROL3 & ((uint8 )(~PWM_MOTORS_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL3 = ctrl | PWM_MOTORS_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 107:Generated_Source\PSoC5/PWM_MOTORS.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_RT1 &= ((uint8)(~PWM_MOTORS_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_RT1 |= PWM_MOTORS_SYNC;
 110:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 111:Generated_Source\PSoC5/PWM_MOTORS.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_RT1 &= ((uint8)(~PWM_MOTORS_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_RT1 |= PWM_MOTORS_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 115:Generated_Source\PSoC5/PWM_MOTORS.c ****     #elif (PWM_MOTORS_UseControl)
 116:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_MOTORS.c ****         ctrl = PWM_MOTORS_CONTROL & ((uint8)(~PWM_MOTORS_CTRL_CMPMODE2_MASK)) &
  88              		.loc 1 117 0
  89 0006 124B     		ldr	r3, .L6
  90 0008 1B78     		ldrb	r3, [r3]
  91 000a DBB2     		uxtb	r3, r3
  92 000c 23F03F03 		bic	r3, r3, #63
  93 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/PWM_MOTORS.c ****                 ((uint8)(~PWM_MOTORS_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL = ctrl | PWM_MOTORS_DEFAULT_COMPARE2_MODE |
  94              		.loc 1 119 0
  95 0012 0F4A     		ldr	r2, .L6
  96 0014 FB79     		ldrb	r3, [r7, #7]
  97 0016 43F01203 		orr	r3, r3, #18
  98 001a DBB2     		uxtb	r3, r3
  99 001c 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/PWM_MOTORS.c ****                                    PWM_MOTORS_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 123:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (!PWM_MOTORS_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_AUX_CONTROLDP0 |= (PWM_MOTORS_AUX_CTRL_FIFO0_CLR);
 100              		.loc 1 126 0
 101 001e 0D4A     		ldr	r2, .L6+4
 102 0020 0C4B     		ldr	r3, .L6+4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 5


 103 0022 1B78     		ldrb	r3, [r3]
 104 0024 DBB2     		uxtb	r3, r3
 105 0026 43F00103 		orr	r3, r3, #1
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else /* (PWM_MOTORS_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_AUX_CONTROLDP0 |= (PWM_MOTORS_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_AUX_CONTROLDP1 |= (PWM_MOTORS_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 133:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_WriteCounter(PWM_MOTORS_INIT_PERIOD_VALUE);
 108              		.loc 1 133 0
 109 002e 6420     		movs	r0, #100
 110 0030 FFF7FEFF 		bl	PWM_MOTORS_WriteCounter
 134:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (!PWM_MOTORS_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 136:Generated_Source\PSoC5/PWM_MOTORS.c ****     PWM_MOTORS_WritePeriod(PWM_MOTORS_INIT_PERIOD_VALUE);
 111              		.loc 1 136 0
 112 0034 6420     		movs	r0, #100
 113 0036 FFF7FEFF 		bl	PWM_MOTORS_WritePeriod
 137:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 138:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteCompare(PWM_MOTORS_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 141:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteCompare1(PWM_MOTORS_INIT_COMPARE_VALUE1);
 114              		.loc 1 141 0
 115 003a 0020     		movs	r0, #0
 116 003c FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
 142:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteCompare2(PWM_MOTORS_INIT_COMPARE_VALUE2);
 117              		.loc 1 142 0
 118 0040 0020     		movs	r0, #0
 119 0042 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
 143:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 145:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteKillTime(PWM_MOTORS_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 149:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteDeadTime(PWM_MOTORS_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 153:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UseStatus || PWM_MOTORS_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_SetInterruptMode(PWM_MOTORS_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UseStatus || PWM_MOTORS_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 157:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_ENABLE |= PWM_MOTORS_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL2 |= PWM_MOTORS_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_MOTORS.c ****     #else
 163:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UseStatus)
 164:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 165:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Enter Critical Region*/
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 6


 167:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_STATUS_AUX_CTRL |= PWM_MOTORS_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 171:Generated_Source\PSoC5/PWM_MOTORS.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_MOTORS.c ****             CyExitCriticalSection(PWM_MOTORS_interruptState);
 173:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 174:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Clear the FIFO to enable the PWM_MOTORS_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_MOTORS.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UseStatus) */
 178:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 120              		.loc 1 179 0
 121 0046 00BF     		nop
 122 0048 0837     		adds	r7, r7, #8
 123              		.cfi_def_cfa_offset 8
 124 004a BD46     		mov	sp, r7
 125              		.cfi_def_cfa_register 13
 126              		@ sp needed
 127 004c 80BD     		pop	{r7, pc}
 128              	.L7:
 129 004e 00BF     		.align	2
 130              	.L6:
 131 0050 75650040 		.word	1073767797
 132 0054 9A650040 		.word	1073767834
 133              		.cfi_endproc
 134              	.LFE1:
 135              		.size	PWM_MOTORS_Init, .-PWM_MOTORS_Init
 136              		.section	.text.PWM_MOTORS_Enable,"ax",%progbits
 137              		.align	2
 138              		.global	PWM_MOTORS_Enable
 139              		.thumb
 140              		.thumb_func
 141              		.type	PWM_MOTORS_Enable, %function
 142              	PWM_MOTORS_Enable:
 143              	.LFB2:
 180:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 181:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 182:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_Enable
 184:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 186:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_MOTORS.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 189:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 191:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 192:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
 193:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 194:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 195:Generated_Source\PSoC5/PWM_MOTORS.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_MOTORS.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 198:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_Enable(void) 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 7


 200:Generated_Source\PSoC5/PWM_MOTORS.c **** {
 144              		.loc 1 200 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149 0000 80B4     		push	{r7}
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 7, -4
 152 0002 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_MOTORS.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_ENABLE |= PWM_MOTORS_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_STBY_ENABLE |= PWM_MOTORS_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 207:Generated_Source\PSoC5/PWM_MOTORS.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UseControl || PWM_MOTORS_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL |= PWM_MOTORS_CTRL_ENABLE;
 154              		.loc 1 209 0
 155 0004 054A     		ldr	r2, .L9
 156 0006 054B     		ldr	r3, .L9
 157 0008 1B78     		ldrb	r3, [r3]
 158 000a DBB2     		uxtb	r3, r3
 159 000c 63F07F03 		orn	r3, r3, #127
 160 0010 DBB2     		uxtb	r3, r3
 161 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UseControl || PWM_MOTORS_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 162              		.loc 1 211 0
 163 0014 00BF     		nop
 164 0016 BD46     		mov	sp, r7
 165              		.cfi_def_cfa_register 13
 166              		@ sp needed
 167 0018 80BC     		pop	{r7}
 168              		.cfi_restore 7
 169              		.cfi_def_cfa_offset 0
 170 001a 7047     		bx	lr
 171              	.L10:
 172              		.align	2
 173              	.L9:
 174 001c 75650040 		.word	1073767797
 175              		.cfi_endproc
 176              	.LFE2:
 177              		.size	PWM_MOTORS_Enable, .-PWM_MOTORS_Enable
 178              		.section	.text.PWM_MOTORS_Stop,"ax",%progbits
 179              		.align	2
 180              		.global	PWM_MOTORS_Stop
 181              		.thumb
 182              		.thumb_func
 183              		.type	PWM_MOTORS_Stop, %function
 184              	PWM_MOTORS_Stop:
 185              	.LFB3:
 212:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 213:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 214:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 8


 215:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_Stop
 216:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 218:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_MOTORS.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_MOTORS.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 222:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 224:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 225:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
 226:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 227:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 228:Generated_Source\PSoC5/PWM_MOTORS.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_MOTORS.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_MOTORS.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 232:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_Stop(void) 
 234:Generated_Source\PSoC5/PWM_MOTORS.c **** {
 186              		.loc 1 234 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191 0000 80B4     		push	{r7}
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 7, -4
 194 0002 00AF     		add	r7, sp, #0
 195              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UseControl || PWM_MOTORS_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL &= ((uint8)(~PWM_MOTORS_CTRL_ENABLE));
 196              		.loc 1 236 0
 197 0004 054A     		ldr	r2, .L12
 198 0006 054B     		ldr	r3, .L12
 199 0008 1B78     		ldrb	r3, [r3]
 200 000a DBB2     		uxtb	r3, r3
 201 000c 03F07F03 		and	r3, r3, #127
 202 0010 DBB2     		uxtb	r3, r3
 203 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UseControl || PWM_MOTORS_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 239:Generated_Source\PSoC5/PWM_MOTORS.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_ENABLE &= ((uint8)(~PWM_MOTORS_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_MOTORS_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 204              		.loc 1 244 0
 205 0014 00BF     		nop
 206 0016 BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 0018 80BC     		pop	{r7}
 210              		.cfi_restore 7
 211              		.cfi_def_cfa_offset 0
 212 001a 7047     		bx	lr
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 9


 213              	.L13:
 214              		.align	2
 215              	.L12:
 216 001c 75650040 		.word	1073767797
 217              		.cfi_endproc
 218              	.LFE3:
 219              		.size	PWM_MOTORS_Stop, .-PWM_MOTORS_Stop
 220              		.section	.text.PWM_MOTORS_WriteCounter,"ax",%progbits
 221              		.align	2
 222              		.global	PWM_MOTORS_WriteCounter
 223              		.thumb
 224              		.thumb_func
 225              		.type	PWM_MOTORS_WriteCounter, %function
 226              	PWM_MOTORS_WriteCounter:
 227              	.LFB4:
 245:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 246:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 249:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 250:Generated_Source\PSoC5/PWM_MOTORS.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Function Name: PWM_MOTORS_SetCompareMode
 252:Generated_Source\PSoC5/PWM_MOTORS.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 254:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 258:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_MOTORS.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 262:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  None
 264:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 265:Generated_Source\PSoC5/PWM_MOTORS.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_MOTORS.c ****         void PWM_MOTORS_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_MOTORS.c ****         {
 268:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(PWM_MOTORS_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 270:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #if(0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMOD
 272:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #else
 273:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 276:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL3 &= ((uint8)(~PWM_MOTORS_CTRL_CMPMODE1_MASK)); /*Clear Existing 
 277:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 279:Generated_Source\PSoC5/PWM_MOTORS.c ****             #elif (PWM_MOTORS_UseControl)
 280:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 281:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #if(0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMO
 283:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                 PWM_MOTORS_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #else
 285:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemode1masked = comparemode & PWM_MOTORS_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT) */
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 10


 287:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 288:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #if(0 != PWM_MOTORS_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMO
 290:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                PWM_MOTORS_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #else
 292:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemode2masked = comparemode & PWM_MOTORS_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 295:Generated_Source\PSoC5/PWM_MOTORS.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL &= ((uint8)(~(PWM_MOTORS_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_MOTORS.c ****                                             PWM_MOTORS_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 300:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 301:Generated_Source\PSoC5/PWM_MOTORS.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_MOTORS.c ****         }
 304:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* PWM_MOTORS_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 306:Generated_Source\PSoC5/PWM_MOTORS.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 308:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 310:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 311:Generated_Source\PSoC5/PWM_MOTORS.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Function Name: PWM_MOTORS_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_MOTORS.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 315:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 318:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_MOTORS.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 322:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  None
 324:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 325:Generated_Source\PSoC5/PWM_MOTORS.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_MOTORS.c ****         void PWM_MOTORS_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_MOTORS.c ****         {
 328:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_MOTORS.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMODE1_S
 330:Generated_Source\PSoC5/PWM_MOTORS.c ****                                            PWM_MOTORS_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 332:Generated_Source\PSoC5/PWM_MOTORS.c ****                 uint8 comparemodemasked = comparemode & PWM_MOTORS_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 335:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if (PWM_MOTORS_UseControl)
 336:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL &= ((uint8)(~PWM_MOTORS_CTRL_CMPMODE1_MASK)); /*Clear existing m
 337:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_UseControl) */
 339:Generated_Source\PSoC5/PWM_MOTORS.c ****         }
 340:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* PWM_MOTORS_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 342:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_MOTORS.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 11


 344:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 345:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 349:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 352:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_MOTORS.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 356:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 358:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 359:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 362:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 363:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(0 != PWM_MOTORS_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_MOTORS.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMODE2_SHIFT
 365:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                  PWM_MOTORS_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 367:Generated_Source\PSoC5/PWM_MOTORS.c ****             uint8 comparemodemasked = comparemode & PWM_MOTORS_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 370:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_UseControl)
 371:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_CONTROL &= ((uint8)(~PWM_MOTORS_CTRL_CMPMODE2_MASK)); /*Clear existing mode 
 372:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UseControl) */
 374:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 375:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /*PWM_MOTORS_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 377:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 379:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 380:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (!PWM_MOTORS_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 382:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 383:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteCounter
 385:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 387:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 393:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 396:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 398:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 399:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 12


 401:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 402:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_MOTORS.c ****                                        
 405:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 228              		.loc 1 405 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 0000 80B4     		push	{r7}
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 7, -4
 236 0002 83B0     		sub	sp, sp, #12
 237              		.cfi_def_cfa_offset 16
 238 0004 00AF     		add	r7, sp, #0
 239              		.cfi_def_cfa_register 7
 240 0006 0346     		mov	r3, r0
 241 0008 FB71     		strb	r3, [r7, #7]
 406:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG8(PWM_MOTORS_COUNTER_LSB_PTR, counter);
 242              		.loc 1 406 0
 243 000a 044A     		ldr	r2, .L15
 244 000c FB79     		ldrb	r3, [r7, #7]
 245 000e 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 246              		.loc 1 407 0
 247 0010 00BF     		nop
 248 0012 0C37     		adds	r7, r7, #12
 249              		.cfi_def_cfa_offset 4
 250 0014 BD46     		mov	sp, r7
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 0016 80BC     		pop	{r7}
 254              		.cfi_restore 7
 255              		.cfi_def_cfa_offset 0
 256 0018 7047     		bx	lr
 257              	.L16:
 258 001a 00BF     		.align	2
 259              	.L15:
 260 001c 0A650040 		.word	1073767690
 261              		.cfi_endproc
 262              	.LFE4:
 263              		.size	PWM_MOTORS_WriteCounter, .-PWM_MOTORS_WriteCounter
 264              		.section	.text.PWM_MOTORS_ReadCounter,"ax",%progbits
 265              		.align	2
 266              		.global	PWM_MOTORS_ReadCounter
 267              		.thumb
 268              		.thumb_func
 269              		.type	PWM_MOTORS_ReadCounter, %function
 270              	PWM_MOTORS_ReadCounter:
 271              	.LFB5:
 408:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 409:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 410:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCounter
 412:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 13


 414:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 418:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 420:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 421:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 424:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 272              		.loc 1 426 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277 0000 80B4     		push	{r7}
 278              		.cfi_def_cfa_offset 4
 279              		.cfi_offset 7, -4
 280 0002 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_MOTORS.c ****           (void)CY_GET_REG8(PWM_MOTORS_COUNTERCAP_LSB_PTR_8BIT);
 282              		.loc 1 430 0
 283 0004 044B     		ldr	r3, .L19
 284 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 432:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG8(PWM_MOTORS_CAPTURE_LSB_PTR));
 285              		.loc 1 433 0
 286 0008 044B     		ldr	r3, .L19+4
 287 000a 1B78     		ldrb	r3, [r3]
 288 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 289              		.loc 1 434 0
 290 000e 1846     		mov	r0, r3
 291 0010 BD46     		mov	sp, r7
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 0012 80BC     		pop	{r7}
 295              		.cfi_restore 7
 296              		.cfi_def_cfa_offset 0
 297 0014 7047     		bx	lr
 298              	.L20:
 299 0016 00BF     		.align	2
 300              	.L19:
 301 0018 1A650040 		.word	1073767706
 302 001c 5A650040 		.word	1073767770
 303              		.cfi_endproc
 304              	.LFE5:
 305              		.size	PWM_MOTORS_ReadCounter, .-PWM_MOTORS_ReadCounter
 306              		.section	.text.PWM_MOTORS_WritePeriod,"ax",%progbits
 307              		.align	2
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 14


 308              		.global	PWM_MOTORS_WritePeriod
 309              		.thumb
 310              		.thumb_func
 311              		.type	PWM_MOTORS_WritePeriod, %function
 312              	PWM_MOTORS_WritePeriod:
 313              	.LFB6:
 435:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 436:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UseStatus)
 437:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 438:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 439:Generated_Source\PSoC5/PWM_MOTORS.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Function Name: PWM_MOTORS_ClearFIFO
 441:Generated_Source\PSoC5/PWM_MOTORS.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 443:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 446:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  None
 448:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 449:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  None
 451:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 452:Generated_Source\PSoC5/PWM_MOTORS.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_MOTORS.c ****         void PWM_MOTORS_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_MOTORS.c ****         {
 455:Generated_Source\PSoC5/PWM_MOTORS.c ****             while(0u != (PWM_MOTORS_ReadStatusRegister() & PWM_MOTORS_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_MOTORS.c ****             {
 457:Generated_Source\PSoC5/PWM_MOTORS.c ****                 (void)PWM_MOTORS_ReadCapture();
 458:Generated_Source\PSoC5/PWM_MOTORS.c ****             }
 459:Generated_Source\PSoC5/PWM_MOTORS.c ****         }
 460:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 461:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* PWM_MOTORS_UseStatus */
 462:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 463:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* !PWM_MOTORS_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 465:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 466:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_WritePeriod
 468:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 470:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_MOTORS.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_MOTORS.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 474:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_MOTORS.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_MOTORS.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 478:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
 479:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 480:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 481:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_MOTORS.c **** {
 314              		.loc 1 483 0
 315              		.cfi_startproc
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 15


 316              		@ args = 0, pretend = 0, frame = 8
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 80B4     		push	{r7}
 320              		.cfi_def_cfa_offset 4
 321              		.cfi_offset 7, -4
 322 0002 83B0     		sub	sp, sp, #12
 323              		.cfi_def_cfa_offset 16
 324 0004 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 326 0006 0346     		mov	r3, r0
 327 0008 FB71     		strb	r3, [r7, #7]
 484:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if(PWM_MOTORS_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG16(PWM_MOTORS_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_MOTORS.c ****     #else
 487:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG8(PWM_MOTORS_PERIOD_LSB_PTR, period);
 328              		.loc 1 487 0
 329 000a 044A     		ldr	r2, .L22
 330 000c FB79     		ldrb	r3, [r7, #7]
 331 000e 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 332              		.loc 1 489 0
 333 0010 00BF     		nop
 334 0012 0C37     		adds	r7, r7, #12
 335              		.cfi_def_cfa_offset 4
 336 0014 BD46     		mov	sp, r7
 337              		.cfi_def_cfa_register 13
 338              		@ sp needed
 339 0016 80BC     		pop	{r7}
 340              		.cfi_restore 7
 341              		.cfi_def_cfa_offset 0
 342 0018 7047     		bx	lr
 343              	.L23:
 344 001a 00BF     		.align	2
 345              	.L22:
 346 001c 4A650040 		.word	1073767754
 347              		.cfi_endproc
 348              	.LFE6:
 349              		.size	PWM_MOTORS_WritePeriod, .-PWM_MOTORS_WritePeriod
 350              		.section	.text.PWM_MOTORS_WriteCompare1,"ax",%progbits
 351              		.align	2
 352              		.global	PWM_MOTORS_WriteCompare1
 353              		.thumb
 354              		.thumb_func
 355              		.type	PWM_MOTORS_WriteCompare1, %function
 356              	PWM_MOTORS_WriteCompare1:
 357              	.LFB7:
 490:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 491:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 493:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 494:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteCompare
 496:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 498:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 16


 499:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 505:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 508:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 510:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 511:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 515:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_MOTORS.c ****                                        
 518:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 519:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 522:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG8(PWM_MOTORS_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 525:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_PWMMode == PWM_MOTORS__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(PWM_MOTORS_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_MOTORS.c ****                 CY_SET_REG16(PWM_MOTORS_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 529:Generated_Source\PSoC5/PWM_MOTORS.c ****                 CY_SET_REG8(PWM_MOTORS_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_PWMMode == PWM_MOTORS__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 533:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 534:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 535:Generated_Source\PSoC5/PWM_MOTORS.c **** #else
 536:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 537:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 538:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteCompare1
 540:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 542:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 548:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 551:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 553:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 554:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteCompare1(uint8 compare) \
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 17


 556:Generated_Source\PSoC5/PWM_MOTORS.c ****                                         
 557:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 358              		.loc 1 557 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 8
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363 0000 80B4     		push	{r7}
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 7, -4
 366 0002 83B0     		sub	sp, sp, #12
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 0346     		mov	r3, r0
 371 0008 FB71     		strb	r3, [r7, #7]
 558:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 561:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG8(PWM_MOTORS_COMPARE1_LSB_PTR, compare);
 372              		.loc 1 561 0
 373 000a 044A     		ldr	r2, .L25
 374 000c FB79     		ldrb	r3, [r7, #7]
 375 000e 1370     		strb	r3, [r2]
 562:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 376              		.loc 1 563 0
 377 0010 00BF     		nop
 378 0012 0C37     		adds	r7, r7, #12
 379              		.cfi_def_cfa_offset 4
 380 0014 BD46     		mov	sp, r7
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 0016 80BC     		pop	{r7}
 384              		.cfi_restore 7
 385              		.cfi_def_cfa_offset 0
 386 0018 7047     		bx	lr
 387              	.L26:
 388 001a 00BF     		.align	2
 389              	.L25:
 390 001c 2A650040 		.word	1073767722
 391              		.cfi_endproc
 392              	.LFE7:
 393              		.size	PWM_MOTORS_WriteCompare1, .-PWM_MOTORS_WriteCompare1
 394              		.section	.text.PWM_MOTORS_WriteCompare2,"ax",%progbits
 395              		.align	2
 396              		.global	PWM_MOTORS_WriteCompare2
 397              		.thumb
 398              		.thumb_func
 399              		.type	PWM_MOTORS_WriteCompare2, %function
 400              	PWM_MOTORS_WriteCompare2:
 401              	.LFB8:
 564:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 565:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 566:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteCompare2
 568:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 18


 569:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 570:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 577:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 580:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 582:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 583:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_MOTORS.c ****                                         
 586:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 402              		.loc 1 586 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 8
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407 0000 80B4     		push	{r7}
 408              		.cfi_def_cfa_offset 4
 409              		.cfi_offset 7, -4
 410 0002 83B0     		sub	sp, sp, #12
 411              		.cfi_def_cfa_offset 16
 412 0004 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 414 0006 0346     		mov	r3, r0
 415 0008 FB71     		strb	r3, [r7, #7]
 587:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 590:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG8(PWM_MOTORS_COMPARE2_LSB_PTR, compare);
 416              		.loc 1 590 0
 417 000a 044A     		ldr	r2, .L28
 418 000c FB79     		ldrb	r3, [r7, #7]
 419 000e 1370     		strb	r3, [r2]
 591:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 420              		.loc 1 592 0
 421 0010 00BF     		nop
 422 0012 0C37     		adds	r7, r7, #12
 423              		.cfi_def_cfa_offset 4
 424 0014 BD46     		mov	sp, r7
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 0016 80BC     		pop	{r7}
 428              		.cfi_restore 7
 429              		.cfi_def_cfa_offset 0
 430 0018 7047     		bx	lr
 431              	.L29:
 432 001a 00BF     		.align	2
 433              	.L28:
 434 001c 3A650040 		.word	1073767738
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 19


 435              		.cfi_endproc
 436              	.LFE8:
 437              		.size	PWM_MOTORS_WriteCompare2, .-PWM_MOTORS_WriteCompare2
 438              		.section	.text.PWM_MOTORS_ReadControlRegister,"ax",%progbits
 439              		.align	2
 440              		.global	PWM_MOTORS_ReadControlRegister
 441              		.thumb
 442              		.thumb_func
 443              		.type	PWM_MOTORS_ReadControlRegister, %function
 444              	PWM_MOTORS_ReadControlRegister:
 445              	.LFB9:
 593:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 595:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 597:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 598:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 602:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 605:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 608:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 610:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 611:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 614:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(!PWM_MOTORS_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG8(PWM_MOTORS_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 618:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_DEADBAND_COUNT &= ((uint8)(~PWM_MOTORS_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 622:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(PWM_MOTORS_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_MOTORS_DEADBAND_COUNT_
 625:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                     PWM_MOTORS_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 627:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_DEADBAND_COUNT |= deadtime & PWM_MOTORS_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 630:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (!PWM_MOTORS_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 632:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 633:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 634:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 638:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 20


 639:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 641:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 643:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 644:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 647:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 650:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(!PWM_MOTORS_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_MOTORS.c ****             return (CY_GET_REG8(PWM_MOTORS_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 654:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 655:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(PWM_MOTORS_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_MOTORS.c ****                 return ((uint8)(((uint8)(PWM_MOTORS_DEADBAND_COUNT & PWM_MOTORS_DEADBAND_COUNT_MASK
 658:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                                            PWM_MOTORS_DEADBAND_COUN
 659:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 660:Generated_Source\PSoC5/PWM_MOTORS.c ****                 return (PWM_MOTORS_DEADBAND_COUNT & PWM_MOTORS_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (!PWM_MOTORS_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 664:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 666:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseStatus || PWM_MOTORS_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 668:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 669:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 673:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 677:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 680:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 682:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 683:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 686:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG8(PWM_MOTORS_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 688:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 689:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 690:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 694:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function returns the current state of the status register.
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 21


 696:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 697:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 699:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 700:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 710:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 713:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG8(PWM_MOTORS_STATUS_PTR));
 714:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 715:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 716:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* (PWM_MOTORS_UseStatus || PWM_MOTORS_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 718:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 719:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseControl)
 720:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 721:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 722:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 726:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 730:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 732:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 733:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 736:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 446              		.loc 1 738 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 83B0     		sub	sp, sp, #12
 455              		.cfi_def_cfa_offset 16
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_MOTORS.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_MOTORS.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 22


 741:Generated_Source\PSoC5/PWM_MOTORS.c ****         result = CY_GET_REG8(PWM_MOTORS_CONTROL_PTR);
 458              		.loc 1 741 0
 459 0006 044B     		ldr	r3, .L32
 460 0008 1B78     		ldrb	r3, [r3]
 461 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (result);
 462              		.loc 1 742 0
 463 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 464              		.loc 1 743 0
 465 000e 1846     		mov	r0, r3
 466 0010 0C37     		adds	r7, r7, #12
 467              		.cfi_def_cfa_offset 4
 468 0012 BD46     		mov	sp, r7
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 0014 80BC     		pop	{r7}
 472              		.cfi_restore 7
 473              		.cfi_def_cfa_offset 0
 474 0016 7047     		bx	lr
 475              	.L33:
 476              		.align	2
 477              	.L32:
 478 0018 75650040 		.word	1073767797
 479              		.cfi_endproc
 480              	.LFE9:
 481              		.size	PWM_MOTORS_ReadControlRegister, .-PWM_MOTORS_ReadControlRegister
 482              		.section	.text.PWM_MOTORS_WriteControlRegister,"ax",%progbits
 483              		.align	2
 484              		.global	PWM_MOTORS_WriteControlRegister
 485              		.thumb
 486              		.thumb_func
 487              		.type	PWM_MOTORS_WriteControlRegister, %function
 488              	PWM_MOTORS_WriteControlRegister:
 489              	.LFB10:
 744:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 745:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 746:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 750:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 754:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 761:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 763:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 764:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 23


 766:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 490              		.loc 1 766 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495 0000 80B4     		push	{r7}
 496              		.cfi_def_cfa_offset 4
 497              		.cfi_offset 7, -4
 498 0002 83B0     		sub	sp, sp, #12
 499              		.cfi_def_cfa_offset 16
 500 0004 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 502 0006 0346     		mov	r3, r0
 503 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG8(PWM_MOTORS_CONTROL_PTR, control);
 504              		.loc 1 767 0
 505 000a 044A     		ldr	r2, .L35
 506 000c FB79     		ldrb	r3, [r7, #7]
 507 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 508              		.loc 1 768 0
 509 0010 00BF     		nop
 510 0012 0C37     		adds	r7, r7, #12
 511              		.cfi_def_cfa_offset 4
 512 0014 BD46     		mov	sp, r7
 513              		.cfi_def_cfa_register 13
 514              		@ sp needed
 515 0016 80BC     		pop	{r7}
 516              		.cfi_restore 7
 517              		.cfi_def_cfa_offset 0
 518 0018 7047     		bx	lr
 519              	.L36:
 520 001a 00BF     		.align	2
 521              	.L35:
 522 001c 75650040 		.word	1073767797
 523              		.cfi_endproc
 524              	.LFE10:
 525              		.size	PWM_MOTORS_WriteControlRegister, .-PWM_MOTORS_WriteControlRegister
 526              		.section	.text.PWM_MOTORS_ReadCapture,"ax",%progbits
 527              		.align	2
 528              		.global	PWM_MOTORS_ReadCapture
 529              		.thumb
 530              		.thumb_func
 531              		.type	PWM_MOTORS_ReadCapture, %function
 532              	PWM_MOTORS_ReadCapture:
 533              	.LFB11:
 769:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 770:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* (PWM_MOTORS_UseControl) */
 771:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 772:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 773:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (!PWM_MOTORS_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 775:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 776:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCapture
 778:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 24


 779:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 780:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 783:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 785:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 786:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 789:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 534              		.loc 1 791 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539 0000 80B4     		push	{r7}
 540              		.cfi_def_cfa_offset 4
 541              		.cfi_offset 7, -4
 542 0002 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG8(PWM_MOTORS_CAPTURE_LSB_PTR));
 544              		.loc 1 792 0
 545 0004 034B     		ldr	r3, .L39
 546 0006 1B78     		ldrb	r3, [r3]
 547 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 548              		.loc 1 793 0
 549 000a 1846     		mov	r0, r3
 550 000c BD46     		mov	sp, r7
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 000e 80BC     		pop	{r7}
 554              		.cfi_restore 7
 555              		.cfi_def_cfa_offset 0
 556 0010 7047     		bx	lr
 557              	.L40:
 558 0012 00BF     		.align	2
 559              	.L39:
 560 0014 5A650040 		.word	1073767770
 561              		.cfi_endproc
 562              	.LFE11:
 563              		.size	PWM_MOTORS_ReadCapture, .-PWM_MOTORS_ReadCapture
 564              		.section	.text.PWM_MOTORS_ReadCompare1,"ax",%progbits
 565              		.align	2
 566              		.global	PWM_MOTORS_ReadCompare1
 567              		.thumb
 568              		.thumb_func
 569              		.type	PWM_MOTORS_ReadCompare1, %function
 570              	PWM_MOTORS_ReadCompare1:
 571              	.LFB12:
 794:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 795:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* (!PWM_MOTORS_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 797:Generated_Source\PSoC5/PWM_MOTORS.c **** 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 25


 798:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 800:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 801:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCompare
 803:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 805:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 809:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 811:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 812:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 815:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 818:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_MOTORS.c ****             return ((uint8)CY_GET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 821:Generated_Source\PSoC5/PWM_MOTORS.c ****             return (CY_GET_REG8(PWM_MOTORS_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 824:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 825:Generated_Source\PSoC5/PWM_MOTORS.c **** #else
 826:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 827:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 828:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCompare1
 830:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 832:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 835:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 837:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 838:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 841:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 572              		.loc 1 843 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              		.cfi_def_cfa_offset 4
 579              		.cfi_offset 7, -4
 580 0002 00AF     		add	r7, sp, #0
 581              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG8(PWM_MOTORS_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 26


 582              		.loc 1 844 0
 583 0004 034B     		ldr	r3, .L43
 584 0006 1B78     		ldrb	r3, [r3]
 585 0008 DBB2     		uxtb	r3, r3
 845:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 586              		.loc 1 845 0
 587 000a 1846     		mov	r0, r3
 588 000c BD46     		mov	sp, r7
 589              		.cfi_def_cfa_register 13
 590              		@ sp needed
 591 000e 80BC     		pop	{r7}
 592              		.cfi_restore 7
 593              		.cfi_def_cfa_offset 0
 594 0010 7047     		bx	lr
 595              	.L44:
 596 0012 00BF     		.align	2
 597              	.L43:
 598 0014 2A650040 		.word	1073767722
 599              		.cfi_endproc
 600              	.LFE12:
 601              		.size	PWM_MOTORS_ReadCompare1, .-PWM_MOTORS_ReadCompare1
 602              		.section	.text.PWM_MOTORS_ReadCompare2,"ax",%progbits
 603              		.align	2
 604              		.global	PWM_MOTORS_ReadCompare2
 605              		.thumb
 606              		.thumb_func
 607              		.type	PWM_MOTORS_ReadCompare2, %function
 608              	PWM_MOTORS_ReadCompare2:
 609              	.LFB13:
 846:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 847:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 848:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCompare2
 850:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 852:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 855:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 857:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 858:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 861:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 610              		.loc 1 863 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615 0000 80B4     		push	{r7}
 616              		.cfi_def_cfa_offset 4
 617              		.cfi_offset 7, -4
 618 0002 00AF     		add	r7, sp, #0
 619              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 27


 864:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG8(PWM_MOTORS_COMPARE2_LSB_PTR));
 620              		.loc 1 864 0
 621 0004 034B     		ldr	r3, .L47
 622 0006 1B78     		ldrb	r3, [r3]
 623 0008 DBB2     		uxtb	r3, r3
 865:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 624              		.loc 1 865 0
 625 000a 1846     		mov	r0, r3
 626 000c BD46     		mov	sp, r7
 627              		.cfi_def_cfa_register 13
 628              		@ sp needed
 629 000e 80BC     		pop	{r7}
 630              		.cfi_restore 7
 631              		.cfi_def_cfa_offset 0
 632 0010 7047     		bx	lr
 633              	.L48:
 634 0012 00BF     		.align	2
 635              	.L47:
 636 0014 3A650040 		.word	1073767738
 637              		.cfi_endproc
 638              	.LFE13:
 639              		.size	PWM_MOTORS_ReadCompare2, .-PWM_MOTORS_ReadCompare2
 640              		.section	.text.PWM_MOTORS_ReadPeriod,"ax",%progbits
 641              		.align	2
 642              		.global	PWM_MOTORS_ReadPeriod
 643              		.thumb
 644              		.thumb_func
 645              		.type	PWM_MOTORS_ReadPeriod, %function
 646              	PWM_MOTORS_ReadPeriod:
 647              	.LFB14:
 866:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 867:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* (PWM_MOTORS_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 869:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 870:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_ReadPeriod
 872:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 874:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_MOTORS.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 877:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 879:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 880:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
 881:Generated_Source\PSoC5/PWM_MOTORS.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 883:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_MOTORS.c **** uint8 PWM_MOTORS_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_MOTORS.c **** {
 648              		.loc 1 885 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653 0000 80B4     		push	{r7}
 654              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 28


 655              		.cfi_offset 7, -4
 656 0002 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if(PWM_MOTORS_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_MOTORS.c ****         return ((uint8)CY_GET_REG16(PWM_MOTORS_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_MOTORS.c ****     #else
 889:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG8(PWM_MOTORS_PERIOD_LSB_PTR));
 658              		.loc 1 889 0
 659 0004 034B     		ldr	r3, .L51
 660 0006 1B78     		ldrb	r3, [r3]
 661 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 662              		.loc 1 891 0
 663 000a 1846     		mov	r0, r3
 664 000c BD46     		mov	sp, r7
 665              		.cfi_def_cfa_register 13
 666              		@ sp needed
 667 000e 80BC     		pop	{r7}
 668              		.cfi_restore 7
 669              		.cfi_def_cfa_offset 0
 670 0010 7047     		bx	lr
 671              	.L52:
 672 0012 00BF     		.align	2
 673              	.L51:
 674 0014 4A650040 		.word	1073767754
 675              		.cfi_endproc
 676              	.LFE14:
 677              		.size	PWM_MOTORS_ReadPeriod, .-PWM_MOTORS_ReadPeriod
 678              		.text
 679              	.Letext0:
 680              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 681              		.section	.debug_info,"",%progbits
 682              	.Ldebug_info0:
 683 0000 66020000 		.4byte	0x266
 684 0004 0400     		.2byte	0x4
 685 0006 00000000 		.4byte	.Ldebug_abbrev0
 686 000a 04       		.byte	0x4
 687 000b 01       		.uleb128 0x1
 688 000c 13000000 		.4byte	.LASF36
 689 0010 0C       		.byte	0xc
 690 0011 87020000 		.4byte	.LASF37
 691 0015 88010000 		.4byte	.LASF38
 692 0019 00000000 		.4byte	.Ldebug_ranges0+0
 693 001d 00000000 		.4byte	0
 694 0021 00000000 		.4byte	.Ldebug_line0
 695 0025 02       		.uleb128 0x2
 696 0026 01       		.byte	0x1
 697 0027 06       		.byte	0x6
 698 0028 30030000 		.4byte	.LASF0
 699 002c 02       		.uleb128 0x2
 700 002d 01       		.byte	0x1
 701 002e 08       		.byte	0x8
 702 002f E0010000 		.4byte	.LASF1
 703 0033 02       		.uleb128 0x2
 704 0034 02       		.byte	0x2
 705 0035 05       		.byte	0x5
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 29


 706 0036 DC020000 		.4byte	.LASF2
 707 003a 02       		.uleb128 0x2
 708 003b 02       		.byte	0x2
 709 003c 07       		.byte	0x7
 710 003d FE000000 		.4byte	.LASF3
 711 0041 02       		.uleb128 0x2
 712 0042 04       		.byte	0x4
 713 0043 05       		.byte	0x5
 714 0044 16030000 		.4byte	.LASF4
 715 0048 02       		.uleb128 0x2
 716 0049 04       		.byte	0x4
 717 004a 07       		.byte	0x7
 718 004b 34010000 		.4byte	.LASF5
 719 004f 02       		.uleb128 0x2
 720 0050 08       		.byte	0x8
 721 0051 05       		.byte	0x5
 722 0052 59020000 		.4byte	.LASF6
 723 0056 02       		.uleb128 0x2
 724 0057 08       		.byte	0x8
 725 0058 07       		.byte	0x7
 726 0059 0D020000 		.4byte	.LASF7
 727 005d 03       		.uleb128 0x3
 728 005e 04       		.byte	0x4
 729 005f 05       		.byte	0x5
 730 0060 696E7400 		.ascii	"int\000"
 731 0064 02       		.uleb128 0x2
 732 0065 04       		.byte	0x4
 733 0066 07       		.byte	0x7
 734 0067 EE010000 		.4byte	.LASF8
 735 006b 04       		.uleb128 0x4
 736 006c 46010000 		.4byte	.LASF12
 737 0070 02       		.byte	0x2
 738 0071 E401     		.2byte	0x1e4
 739 0073 2C000000 		.4byte	0x2c
 740 0077 02       		.uleb128 0x2
 741 0078 04       		.byte	0x4
 742 0079 04       		.byte	0x4
 743 007a 11010000 		.4byte	.LASF9
 744 007e 02       		.uleb128 0x2
 745 007f 08       		.byte	0x8
 746 0080 04       		.byte	0x4
 747 0081 81010000 		.4byte	.LASF10
 748 0085 02       		.uleb128 0x2
 749 0086 01       		.byte	0x1
 750 0087 08       		.byte	0x8
 751 0088 1F030000 		.4byte	.LASF11
 752 008c 04       		.uleb128 0x4
 753 008d 2F010000 		.4byte	.LASF13
 754 0091 02       		.byte	0x2
 755 0092 8E02     		.2byte	0x28e
 756 0094 98000000 		.4byte	0x98
 757 0098 05       		.uleb128 0x5
 758 0099 6B000000 		.4byte	0x6b
 759 009d 02       		.uleb128 0x2
 760 009e 08       		.byte	0x8
 761 009f 04       		.byte	0x4
 762 00a0 24030000 		.4byte	.LASF14
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 30


 763 00a4 02       		.uleb128 0x2
 764 00a5 04       		.byte	0x4
 765 00a6 07       		.byte	0x7
 766 00a7 50020000 		.4byte	.LASF15
 767 00ab 06       		.uleb128 0x6
 768 00ac 44030000 		.4byte	.LASF16
 769 00b0 01       		.byte	0x1
 770 00b1 37       		.byte	0x37
 771 00b2 00000000 		.4byte	.LFB0
 772 00b6 24000000 		.4byte	.LFE0-.LFB0
 773 00ba 01       		.uleb128 0x1
 774 00bb 9C       		.byte	0x9c
 775 00bc 07       		.uleb128 0x7
 776 00bd 1F010000 		.4byte	.LASF19
 777 00c1 01       		.byte	0x1
 778 00c2 54       		.byte	0x54
 779 00c3 00000000 		.4byte	.LFB1
 780 00c7 58000000 		.4byte	.LFE1-.LFB1
 781 00cb 01       		.uleb128 0x1
 782 00cc 9C       		.byte	0x9c
 783 00cd E0000000 		.4byte	0xe0
 784 00d1 08       		.uleb128 0x8
 785 00d2 4B020000 		.4byte	.LASF27
 786 00d6 01       		.byte	0x1
 787 00d7 57       		.byte	0x57
 788 00d8 6B000000 		.4byte	0x6b
 789 00dc 02       		.uleb128 0x2
 790 00dd 91       		.byte	0x91
 791 00de 77       		.sleb128 -9
 792 00df 00       		.byte	0
 793 00e0 09       		.uleb128 0x9
 794 00e1 FB010000 		.4byte	.LASF17
 795 00e5 01       		.byte	0x1
 796 00e6 C7       		.byte	0xc7
 797 00e7 00000000 		.4byte	.LFB2
 798 00eb 20000000 		.4byte	.LFE2-.LFB2
 799 00ef 01       		.uleb128 0x1
 800 00f0 9C       		.byte	0x9c
 801 00f1 09       		.uleb128 0x9
 802 00f2 3B020000 		.4byte	.LASF18
 803 00f6 01       		.byte	0x1
 804 00f7 E9       		.byte	0xe9
 805 00f8 00000000 		.4byte	.LFB3
 806 00fc 20000000 		.4byte	.LFE3-.LFB3
 807 0100 01       		.uleb128 0x1
 808 0101 9C       		.byte	0x9c
 809 0102 0A       		.uleb128 0xa
 810 0103 C4020000 		.4byte	.LASF20
 811 0107 01       		.byte	0x1
 812 0108 9301     		.2byte	0x193
 813 010a 00000000 		.4byte	.LFB4
 814 010e 20000000 		.4byte	.LFE4-.LFB4
 815 0112 01       		.uleb128 0x1
 816 0113 9C       		.byte	0x9c
 817 0114 28010000 		.4byte	0x128
 818 0118 0B       		.uleb128 0xb
 819 0119 17010000 		.4byte	.LASF22
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 31


 820 011d 01       		.byte	0x1
 821 011e 9301     		.2byte	0x193
 822 0120 6B000000 		.4byte	0x6b
 823 0124 02       		.uleb128 0x2
 824 0125 91       		.byte	0x91
 825 0126 77       		.sleb128 -9
 826 0127 00       		.byte	0
 827 0128 0C       		.uleb128 0xc
 828 0129 6A010000 		.4byte	.LASF31
 829 012d 01       		.byte	0x1
 830 012e A901     		.2byte	0x1a9
 831 0130 6B000000 		.4byte	0x6b
 832 0134 00000000 		.4byte	.LFB5
 833 0138 20000000 		.4byte	.LFE5-.LFB5
 834 013c 01       		.uleb128 0x1
 835 013d 9C       		.byte	0x9c
 836 013e 0A       		.uleb128 0xa
 837 013f 24020000 		.4byte	.LASF21
 838 0143 01       		.byte	0x1
 839 0144 E201     		.2byte	0x1e2
 840 0146 00000000 		.4byte	.LFB6
 841 014a 20000000 		.4byte	.LFE6-.LFB6
 842 014e 01       		.uleb128 0x1
 843 014f 9C       		.byte	0x9c
 844 0150 64010000 		.4byte	0x164
 845 0154 0B       		.uleb128 0xb
 846 0155 E0000000 		.4byte	.LASF23
 847 0159 01       		.byte	0x1
 848 015a E201     		.2byte	0x1e2
 849 015c 6B000000 		.4byte	0x6b
 850 0160 02       		.uleb128 0x2
 851 0161 91       		.byte	0x91
 852 0162 77       		.sleb128 -9
 853 0163 00       		.byte	0
 854 0164 0A       		.uleb128 0xa
 855 0165 AB020000 		.4byte	.LASF24
 856 0169 01       		.byte	0x1
 857 016a 2B02     		.2byte	0x22b
 858 016c 00000000 		.4byte	.LFB7
 859 0170 20000000 		.4byte	.LFE7-.LFB7
 860 0174 01       		.uleb128 0x1
 861 0175 9C       		.byte	0x9c
 862 0176 8A010000 		.4byte	0x18a
 863 017a 0B       		.uleb128 0xb
 864 017b 3C030000 		.4byte	.LASF25
 865 017f 01       		.byte	0x1
 866 0180 2B02     		.2byte	0x22b
 867 0182 6B000000 		.4byte	0x6b
 868 0186 02       		.uleb128 0x2
 869 0187 91       		.byte	0x91
 870 0188 77       		.sleb128 -9
 871 0189 00       		.byte	0
 872 018a 0A       		.uleb128 0xa
 873 018b A1000000 		.4byte	.LASF26
 874 018f 01       		.byte	0x1
 875 0190 4802     		.2byte	0x248
 876 0192 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 32


 877 0196 20000000 		.4byte	.LFE8-.LFB8
 878 019a 01       		.uleb128 0x1
 879 019b 9C       		.byte	0x9c
 880 019c B0010000 		.4byte	0x1b0
 881 01a0 0B       		.uleb128 0xb
 882 01a1 3C030000 		.4byte	.LASF25
 883 01a5 01       		.byte	0x1
 884 01a6 4802     		.2byte	0x248
 885 01a8 6B000000 		.4byte	0x6b
 886 01ac 02       		.uleb128 0x2
 887 01ad 91       		.byte	0x91
 888 01ae 77       		.sleb128 -9
 889 01af 00       		.byte	0
 890 01b0 0D       		.uleb128 0xd
 891 01b1 C1000000 		.4byte	.LASF39
 892 01b5 01       		.byte	0x1
 893 01b6 E102     		.2byte	0x2e1
 894 01b8 6B000000 		.4byte	0x6b
 895 01bc 00000000 		.4byte	.LFB9
 896 01c0 1C000000 		.4byte	.LFE9-.LFB9
 897 01c4 01       		.uleb128 0x1
 898 01c5 9C       		.byte	0x9c
 899 01c6 DA010000 		.4byte	0x1da
 900 01ca 0E       		.uleb128 0xe
 901 01cb BA000000 		.4byte	.LASF28
 902 01cf 01       		.byte	0x1
 903 01d0 E302     		.2byte	0x2e3
 904 01d2 6B000000 		.4byte	0x6b
 905 01d6 02       		.uleb128 0x2
 906 01d7 91       		.byte	0x91
 907 01d8 77       		.sleb128 -9
 908 01d9 00       		.byte	0
 909 01da 0A       		.uleb128 0xa
 910 01db 67020000 		.4byte	.LASF29
 911 01df 01       		.byte	0x1
 912 01e0 FD02     		.2byte	0x2fd
 913 01e2 00000000 		.4byte	.LFB10
 914 01e6 20000000 		.4byte	.LFE10-.LFB10
 915 01ea 01       		.uleb128 0x1
 916 01eb 9C       		.byte	0x9c
 917 01ec 00020000 		.4byte	0x200
 918 01f0 0B       		.uleb128 0xb
 919 01f1 4C010000 		.4byte	.LASF30
 920 01f5 01       		.byte	0x1
 921 01f6 FD02     		.2byte	0x2fd
 922 01f8 6B000000 		.4byte	0x6b
 923 01fc 02       		.uleb128 0x2
 924 01fd 91       		.byte	0x91
 925 01fe 77       		.sleb128 -9
 926 01ff 00       		.byte	0
 927 0200 0C       		.uleb128 0xc
 928 0201 E7000000 		.4byte	.LASF32
 929 0205 01       		.byte	0x1
 930 0206 1603     		.2byte	0x316
 931 0208 6B000000 		.4byte	0x6b
 932 020c 00000000 		.4byte	.LFB11
 933 0210 18000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 33


 934 0214 01       		.uleb128 0x1
 935 0215 9C       		.byte	0x9c
 936 0216 0C       		.uleb128 0xc
 937 0217 E6020000 		.4byte	.LASF33
 938 021b 01       		.byte	0x1
 939 021c 4A03     		.2byte	0x34a
 940 021e 6B000000 		.4byte	0x6b
 941 0222 00000000 		.4byte	.LFB12
 942 0226 18000000 		.4byte	.LFE12-.LFB12
 943 022a 01       		.uleb128 0x1
 944 022b 9C       		.byte	0x9c
 945 022c 0C       		.uleb128 0xc
 946 022d FE020000 		.4byte	.LASF34
 947 0231 01       		.byte	0x1
 948 0232 5E03     		.2byte	0x35e
 949 0234 6B000000 		.4byte	0x6b
 950 0238 00000000 		.4byte	.LFB13
 951 023c 18000000 		.4byte	.LFE13-.LFB13
 952 0240 01       		.uleb128 0x1
 953 0241 9C       		.byte	0x9c
 954 0242 0C       		.uleb128 0xc
 955 0243 54010000 		.4byte	.LASF35
 956 0247 01       		.byte	0x1
 957 0248 7403     		.2byte	0x374
 958 024a 6B000000 		.4byte	0x6b
 959 024e 00000000 		.4byte	.LFB14
 960 0252 18000000 		.4byte	.LFE14-.LFB14
 961 0256 01       		.uleb128 0x1
 962 0257 9C       		.byte	0x9c
 963 0258 0F       		.uleb128 0xf
 964 0259 00000000 		.4byte	.LASF40
 965 025d 01       		.byte	0x1
 966 025e 20       		.byte	0x20
 967 025f 6B000000 		.4byte	0x6b
 968 0263 05       		.uleb128 0x5
 969 0264 03       		.byte	0x3
 970 0265 00000000 		.4byte	PWM_MOTORS_initVar
 971 0269 00       		.byte	0
 972              		.section	.debug_abbrev,"",%progbits
 973              	.Ldebug_abbrev0:
 974 0000 01       		.uleb128 0x1
 975 0001 11       		.uleb128 0x11
 976 0002 01       		.byte	0x1
 977 0003 25       		.uleb128 0x25
 978 0004 0E       		.uleb128 0xe
 979 0005 13       		.uleb128 0x13
 980 0006 0B       		.uleb128 0xb
 981 0007 03       		.uleb128 0x3
 982 0008 0E       		.uleb128 0xe
 983 0009 1B       		.uleb128 0x1b
 984 000a 0E       		.uleb128 0xe
 985 000b 55       		.uleb128 0x55
 986 000c 17       		.uleb128 0x17
 987 000d 11       		.uleb128 0x11
 988 000e 01       		.uleb128 0x1
 989 000f 10       		.uleb128 0x10
 990 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 34


 991 0011 00       		.byte	0
 992 0012 00       		.byte	0
 993 0013 02       		.uleb128 0x2
 994 0014 24       		.uleb128 0x24
 995 0015 00       		.byte	0
 996 0016 0B       		.uleb128 0xb
 997 0017 0B       		.uleb128 0xb
 998 0018 3E       		.uleb128 0x3e
 999 0019 0B       		.uleb128 0xb
 1000 001a 03       		.uleb128 0x3
 1001 001b 0E       		.uleb128 0xe
 1002 001c 00       		.byte	0
 1003 001d 00       		.byte	0
 1004 001e 03       		.uleb128 0x3
 1005 001f 24       		.uleb128 0x24
 1006 0020 00       		.byte	0
 1007 0021 0B       		.uleb128 0xb
 1008 0022 0B       		.uleb128 0xb
 1009 0023 3E       		.uleb128 0x3e
 1010 0024 0B       		.uleb128 0xb
 1011 0025 03       		.uleb128 0x3
 1012 0026 08       		.uleb128 0x8
 1013 0027 00       		.byte	0
 1014 0028 00       		.byte	0
 1015 0029 04       		.uleb128 0x4
 1016 002a 16       		.uleb128 0x16
 1017 002b 00       		.byte	0
 1018 002c 03       		.uleb128 0x3
 1019 002d 0E       		.uleb128 0xe
 1020 002e 3A       		.uleb128 0x3a
 1021 002f 0B       		.uleb128 0xb
 1022 0030 3B       		.uleb128 0x3b
 1023 0031 05       		.uleb128 0x5
 1024 0032 49       		.uleb128 0x49
 1025 0033 13       		.uleb128 0x13
 1026 0034 00       		.byte	0
 1027 0035 00       		.byte	0
 1028 0036 05       		.uleb128 0x5
 1029 0037 35       		.uleb128 0x35
 1030 0038 00       		.byte	0
 1031 0039 49       		.uleb128 0x49
 1032 003a 13       		.uleb128 0x13
 1033 003b 00       		.byte	0
 1034 003c 00       		.byte	0
 1035 003d 06       		.uleb128 0x6
 1036 003e 2E       		.uleb128 0x2e
 1037 003f 00       		.byte	0
 1038 0040 3F       		.uleb128 0x3f
 1039 0041 19       		.uleb128 0x19
 1040 0042 03       		.uleb128 0x3
 1041 0043 0E       		.uleb128 0xe
 1042 0044 3A       		.uleb128 0x3a
 1043 0045 0B       		.uleb128 0xb
 1044 0046 3B       		.uleb128 0x3b
 1045 0047 0B       		.uleb128 0xb
 1046 0048 27       		.uleb128 0x27
 1047 0049 19       		.uleb128 0x19
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 35


 1048 004a 11       		.uleb128 0x11
 1049 004b 01       		.uleb128 0x1
 1050 004c 12       		.uleb128 0x12
 1051 004d 06       		.uleb128 0x6
 1052 004e 40       		.uleb128 0x40
 1053 004f 18       		.uleb128 0x18
 1054 0050 9642     		.uleb128 0x2116
 1055 0052 19       		.uleb128 0x19
 1056 0053 00       		.byte	0
 1057 0054 00       		.byte	0
 1058 0055 07       		.uleb128 0x7
 1059 0056 2E       		.uleb128 0x2e
 1060 0057 01       		.byte	0x1
 1061 0058 3F       		.uleb128 0x3f
 1062 0059 19       		.uleb128 0x19
 1063 005a 03       		.uleb128 0x3
 1064 005b 0E       		.uleb128 0xe
 1065 005c 3A       		.uleb128 0x3a
 1066 005d 0B       		.uleb128 0xb
 1067 005e 3B       		.uleb128 0x3b
 1068 005f 0B       		.uleb128 0xb
 1069 0060 27       		.uleb128 0x27
 1070 0061 19       		.uleb128 0x19
 1071 0062 11       		.uleb128 0x11
 1072 0063 01       		.uleb128 0x1
 1073 0064 12       		.uleb128 0x12
 1074 0065 06       		.uleb128 0x6
 1075 0066 40       		.uleb128 0x40
 1076 0067 18       		.uleb128 0x18
 1077 0068 9642     		.uleb128 0x2116
 1078 006a 19       		.uleb128 0x19
 1079 006b 01       		.uleb128 0x1
 1080 006c 13       		.uleb128 0x13
 1081 006d 00       		.byte	0
 1082 006e 00       		.byte	0
 1083 006f 08       		.uleb128 0x8
 1084 0070 34       		.uleb128 0x34
 1085 0071 00       		.byte	0
 1086 0072 03       		.uleb128 0x3
 1087 0073 0E       		.uleb128 0xe
 1088 0074 3A       		.uleb128 0x3a
 1089 0075 0B       		.uleb128 0xb
 1090 0076 3B       		.uleb128 0x3b
 1091 0077 0B       		.uleb128 0xb
 1092 0078 49       		.uleb128 0x49
 1093 0079 13       		.uleb128 0x13
 1094 007a 02       		.uleb128 0x2
 1095 007b 18       		.uleb128 0x18
 1096 007c 00       		.byte	0
 1097 007d 00       		.byte	0
 1098 007e 09       		.uleb128 0x9
 1099 007f 2E       		.uleb128 0x2e
 1100 0080 00       		.byte	0
 1101 0081 3F       		.uleb128 0x3f
 1102 0082 19       		.uleb128 0x19
 1103 0083 03       		.uleb128 0x3
 1104 0084 0E       		.uleb128 0xe
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 36


 1105 0085 3A       		.uleb128 0x3a
 1106 0086 0B       		.uleb128 0xb
 1107 0087 3B       		.uleb128 0x3b
 1108 0088 0B       		.uleb128 0xb
 1109 0089 27       		.uleb128 0x27
 1110 008a 19       		.uleb128 0x19
 1111 008b 11       		.uleb128 0x11
 1112 008c 01       		.uleb128 0x1
 1113 008d 12       		.uleb128 0x12
 1114 008e 06       		.uleb128 0x6
 1115 008f 40       		.uleb128 0x40
 1116 0090 18       		.uleb128 0x18
 1117 0091 9742     		.uleb128 0x2117
 1118 0093 19       		.uleb128 0x19
 1119 0094 00       		.byte	0
 1120 0095 00       		.byte	0
 1121 0096 0A       		.uleb128 0xa
 1122 0097 2E       		.uleb128 0x2e
 1123 0098 01       		.byte	0x1
 1124 0099 3F       		.uleb128 0x3f
 1125 009a 19       		.uleb128 0x19
 1126 009b 03       		.uleb128 0x3
 1127 009c 0E       		.uleb128 0xe
 1128 009d 3A       		.uleb128 0x3a
 1129 009e 0B       		.uleb128 0xb
 1130 009f 3B       		.uleb128 0x3b
 1131 00a0 05       		.uleb128 0x5
 1132 00a1 27       		.uleb128 0x27
 1133 00a2 19       		.uleb128 0x19
 1134 00a3 11       		.uleb128 0x11
 1135 00a4 01       		.uleb128 0x1
 1136 00a5 12       		.uleb128 0x12
 1137 00a6 06       		.uleb128 0x6
 1138 00a7 40       		.uleb128 0x40
 1139 00a8 18       		.uleb128 0x18
 1140 00a9 9742     		.uleb128 0x2117
 1141 00ab 19       		.uleb128 0x19
 1142 00ac 01       		.uleb128 0x1
 1143 00ad 13       		.uleb128 0x13
 1144 00ae 00       		.byte	0
 1145 00af 00       		.byte	0
 1146 00b0 0B       		.uleb128 0xb
 1147 00b1 05       		.uleb128 0x5
 1148 00b2 00       		.byte	0
 1149 00b3 03       		.uleb128 0x3
 1150 00b4 0E       		.uleb128 0xe
 1151 00b5 3A       		.uleb128 0x3a
 1152 00b6 0B       		.uleb128 0xb
 1153 00b7 3B       		.uleb128 0x3b
 1154 00b8 05       		.uleb128 0x5
 1155 00b9 49       		.uleb128 0x49
 1156 00ba 13       		.uleb128 0x13
 1157 00bb 02       		.uleb128 0x2
 1158 00bc 18       		.uleb128 0x18
 1159 00bd 00       		.byte	0
 1160 00be 00       		.byte	0
 1161 00bf 0C       		.uleb128 0xc
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 37


 1162 00c0 2E       		.uleb128 0x2e
 1163 00c1 00       		.byte	0
 1164 00c2 3F       		.uleb128 0x3f
 1165 00c3 19       		.uleb128 0x19
 1166 00c4 03       		.uleb128 0x3
 1167 00c5 0E       		.uleb128 0xe
 1168 00c6 3A       		.uleb128 0x3a
 1169 00c7 0B       		.uleb128 0xb
 1170 00c8 3B       		.uleb128 0x3b
 1171 00c9 05       		.uleb128 0x5
 1172 00ca 27       		.uleb128 0x27
 1173 00cb 19       		.uleb128 0x19
 1174 00cc 49       		.uleb128 0x49
 1175 00cd 13       		.uleb128 0x13
 1176 00ce 11       		.uleb128 0x11
 1177 00cf 01       		.uleb128 0x1
 1178 00d0 12       		.uleb128 0x12
 1179 00d1 06       		.uleb128 0x6
 1180 00d2 40       		.uleb128 0x40
 1181 00d3 18       		.uleb128 0x18
 1182 00d4 9742     		.uleb128 0x2117
 1183 00d6 19       		.uleb128 0x19
 1184 00d7 00       		.byte	0
 1185 00d8 00       		.byte	0
 1186 00d9 0D       		.uleb128 0xd
 1187 00da 2E       		.uleb128 0x2e
 1188 00db 01       		.byte	0x1
 1189 00dc 3F       		.uleb128 0x3f
 1190 00dd 19       		.uleb128 0x19
 1191 00de 03       		.uleb128 0x3
 1192 00df 0E       		.uleb128 0xe
 1193 00e0 3A       		.uleb128 0x3a
 1194 00e1 0B       		.uleb128 0xb
 1195 00e2 3B       		.uleb128 0x3b
 1196 00e3 05       		.uleb128 0x5
 1197 00e4 27       		.uleb128 0x27
 1198 00e5 19       		.uleb128 0x19
 1199 00e6 49       		.uleb128 0x49
 1200 00e7 13       		.uleb128 0x13
 1201 00e8 11       		.uleb128 0x11
 1202 00e9 01       		.uleb128 0x1
 1203 00ea 12       		.uleb128 0x12
 1204 00eb 06       		.uleb128 0x6
 1205 00ec 40       		.uleb128 0x40
 1206 00ed 18       		.uleb128 0x18
 1207 00ee 9742     		.uleb128 0x2117
 1208 00f0 19       		.uleb128 0x19
 1209 00f1 01       		.uleb128 0x1
 1210 00f2 13       		.uleb128 0x13
 1211 00f3 00       		.byte	0
 1212 00f4 00       		.byte	0
 1213 00f5 0E       		.uleb128 0xe
 1214 00f6 34       		.uleb128 0x34
 1215 00f7 00       		.byte	0
 1216 00f8 03       		.uleb128 0x3
 1217 00f9 0E       		.uleb128 0xe
 1218 00fa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 38


 1219 00fb 0B       		.uleb128 0xb
 1220 00fc 3B       		.uleb128 0x3b
 1221 00fd 05       		.uleb128 0x5
 1222 00fe 49       		.uleb128 0x49
 1223 00ff 13       		.uleb128 0x13
 1224 0100 02       		.uleb128 0x2
 1225 0101 18       		.uleb128 0x18
 1226 0102 00       		.byte	0
 1227 0103 00       		.byte	0
 1228 0104 0F       		.uleb128 0xf
 1229 0105 34       		.uleb128 0x34
 1230 0106 00       		.byte	0
 1231 0107 03       		.uleb128 0x3
 1232 0108 0E       		.uleb128 0xe
 1233 0109 3A       		.uleb128 0x3a
 1234 010a 0B       		.uleb128 0xb
 1235 010b 3B       		.uleb128 0x3b
 1236 010c 0B       		.uleb128 0xb
 1237 010d 49       		.uleb128 0x49
 1238 010e 13       		.uleb128 0x13
 1239 010f 3F       		.uleb128 0x3f
 1240 0110 19       		.uleb128 0x19
 1241 0111 02       		.uleb128 0x2
 1242 0112 18       		.uleb128 0x18
 1243 0113 00       		.byte	0
 1244 0114 00       		.byte	0
 1245 0115 00       		.byte	0
 1246              		.section	.debug_aranges,"",%progbits
 1247 0000 8C000000 		.4byte	0x8c
 1248 0004 0200     		.2byte	0x2
 1249 0006 00000000 		.4byte	.Ldebug_info0
 1250 000a 04       		.byte	0x4
 1251 000b 00       		.byte	0
 1252 000c 0000     		.2byte	0
 1253 000e 0000     		.2byte	0
 1254 0010 00000000 		.4byte	.LFB0
 1255 0014 24000000 		.4byte	.LFE0-.LFB0
 1256 0018 00000000 		.4byte	.LFB1
 1257 001c 58000000 		.4byte	.LFE1-.LFB1
 1258 0020 00000000 		.4byte	.LFB2
 1259 0024 20000000 		.4byte	.LFE2-.LFB2
 1260 0028 00000000 		.4byte	.LFB3
 1261 002c 20000000 		.4byte	.LFE3-.LFB3
 1262 0030 00000000 		.4byte	.LFB4
 1263 0034 20000000 		.4byte	.LFE4-.LFB4
 1264 0038 00000000 		.4byte	.LFB5
 1265 003c 20000000 		.4byte	.LFE5-.LFB5
 1266 0040 00000000 		.4byte	.LFB6
 1267 0044 20000000 		.4byte	.LFE6-.LFB6
 1268 0048 00000000 		.4byte	.LFB7
 1269 004c 20000000 		.4byte	.LFE7-.LFB7
 1270 0050 00000000 		.4byte	.LFB8
 1271 0054 20000000 		.4byte	.LFE8-.LFB8
 1272 0058 00000000 		.4byte	.LFB9
 1273 005c 1C000000 		.4byte	.LFE9-.LFB9
 1274 0060 00000000 		.4byte	.LFB10
 1275 0064 20000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 39


 1276 0068 00000000 		.4byte	.LFB11
 1277 006c 18000000 		.4byte	.LFE11-.LFB11
 1278 0070 00000000 		.4byte	.LFB12
 1279 0074 18000000 		.4byte	.LFE12-.LFB12
 1280 0078 00000000 		.4byte	.LFB13
 1281 007c 18000000 		.4byte	.LFE13-.LFB13
 1282 0080 00000000 		.4byte	.LFB14
 1283 0084 18000000 		.4byte	.LFE14-.LFB14
 1284 0088 00000000 		.4byte	0
 1285 008c 00000000 		.4byte	0
 1286              		.section	.debug_ranges,"",%progbits
 1287              	.Ldebug_ranges0:
 1288 0000 00000000 		.4byte	.LFB0
 1289 0004 24000000 		.4byte	.LFE0
 1290 0008 00000000 		.4byte	.LFB1
 1291 000c 58000000 		.4byte	.LFE1
 1292 0010 00000000 		.4byte	.LFB2
 1293 0014 20000000 		.4byte	.LFE2
 1294 0018 00000000 		.4byte	.LFB3
 1295 001c 20000000 		.4byte	.LFE3
 1296 0020 00000000 		.4byte	.LFB4
 1297 0024 20000000 		.4byte	.LFE4
 1298 0028 00000000 		.4byte	.LFB5
 1299 002c 20000000 		.4byte	.LFE5
 1300 0030 00000000 		.4byte	.LFB6
 1301 0034 20000000 		.4byte	.LFE6
 1302 0038 00000000 		.4byte	.LFB7
 1303 003c 20000000 		.4byte	.LFE7
 1304 0040 00000000 		.4byte	.LFB8
 1305 0044 20000000 		.4byte	.LFE8
 1306 0048 00000000 		.4byte	.LFB9
 1307 004c 1C000000 		.4byte	.LFE9
 1308 0050 00000000 		.4byte	.LFB10
 1309 0054 20000000 		.4byte	.LFE10
 1310 0058 00000000 		.4byte	.LFB11
 1311 005c 18000000 		.4byte	.LFE11
 1312 0060 00000000 		.4byte	.LFB12
 1313 0064 18000000 		.4byte	.LFE12
 1314 0068 00000000 		.4byte	.LFB13
 1315 006c 18000000 		.4byte	.LFE13
 1316 0070 00000000 		.4byte	.LFB14
 1317 0074 18000000 		.4byte	.LFE14
 1318 0078 00000000 		.4byte	0
 1319 007c 00000000 		.4byte	0
 1320              		.section	.debug_line,"",%progbits
 1321              	.Ldebug_line0:
 1322 0000 6B010000 		.section	.debug_str,"MS",%progbits,1
 1322      02004700 
 1322      00000201 
 1322      FB0E0D00 
 1322      01010101 
 1323              	.LASF40:
 1324 0000 50574D5F 		.ascii	"PWM_MOTORS_initVar\000"
 1324      4D4F544F 
 1324      52535F69 
 1324      6E697456 
 1324      617200
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 40


 1325              	.LASF36:
 1326 0013 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1326      43313120 
 1326      352E342E 
 1326      31203230 
 1326      31363036 
 1327 0046 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1327      20726576 
 1327      6973696F 
 1327      6E203233 
 1327      37373135 
 1328 0079 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1328      66756E63 
 1328      74696F6E 
 1328      2D736563 
 1328      74696F6E 
 1329              	.LASF26:
 1330 00a1 50574D5F 		.ascii	"PWM_MOTORS_WriteCompare2\000"
 1330      4D4F544F 
 1330      52535F57 
 1330      72697465 
 1330      436F6D70 
 1331              	.LASF28:
 1332 00ba 72657375 		.ascii	"result\000"
 1332      6C7400
 1333              	.LASF39:
 1334 00c1 50574D5F 		.ascii	"PWM_MOTORS_ReadControlRegister\000"
 1334      4D4F544F 
 1334      52535F52 
 1334      65616443 
 1334      6F6E7472 
 1335              	.LASF23:
 1336 00e0 70657269 		.ascii	"period\000"
 1336      6F6400
 1337              	.LASF32:
 1338 00e7 50574D5F 		.ascii	"PWM_MOTORS_ReadCapture\000"
 1338      4D4F544F 
 1338      52535F52 
 1338      65616443 
 1338      61707475 
 1339              	.LASF3:
 1340 00fe 73686F72 		.ascii	"short unsigned int\000"
 1340      7420756E 
 1340      7369676E 
 1340      65642069 
 1340      6E7400
 1341              	.LASF9:
 1342 0111 666C6F61 		.ascii	"float\000"
 1342      7400
 1343              	.LASF22:
 1344 0117 636F756E 		.ascii	"counter\000"
 1344      74657200 
 1345              	.LASF19:
 1346 011f 50574D5F 		.ascii	"PWM_MOTORS_Init\000"
 1346      4D4F544F 
 1346      52535F49 
 1346      6E697400 
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 41


 1347              	.LASF13:
 1348 012f 72656738 		.ascii	"reg8\000"
 1348      00
 1349              	.LASF5:
 1350 0134 6C6F6E67 		.ascii	"long unsigned int\000"
 1350      20756E73 
 1350      69676E65 
 1350      6420696E 
 1350      7400
 1351              	.LASF12:
 1352 0146 75696E74 		.ascii	"uint8\000"
 1352      3800
 1353              	.LASF30:
 1354 014c 636F6E74 		.ascii	"control\000"
 1354      726F6C00 
 1355              	.LASF35:
 1356 0154 50574D5F 		.ascii	"PWM_MOTORS_ReadPeriod\000"
 1356      4D4F544F 
 1356      52535F52 
 1356      65616450 
 1356      6572696F 
 1357              	.LASF31:
 1358 016a 50574D5F 		.ascii	"PWM_MOTORS_ReadCounter\000"
 1358      4D4F544F 
 1358      52535F52 
 1358      65616443 
 1358      6F756E74 
 1359              	.LASF10:
 1360 0181 646F7562 		.ascii	"double\000"
 1360      6C6500
 1361              	.LASF38:
 1362 0188 443A5C50 		.ascii	"D:\\Program Files\\Google Drive\\HapticLab\\3_Utils"
 1362      726F6772 
 1362      616D2046 
 1362      696C6573 
 1362      5C476F6F 
 1363 01b7 5C716272 		.ascii	"\\qbrobotics\\qb_psoc5_firmware\\CUFF.cydsn\000"
 1363      6F626F74 
 1363      6963735C 
 1363      71625F70 
 1363      736F6335 
 1364              	.LASF1:
 1365 01e0 756E7369 		.ascii	"unsigned char\000"
 1365      676E6564 
 1365      20636861 
 1365      7200
 1366              	.LASF8:
 1367 01ee 756E7369 		.ascii	"unsigned int\000"
 1367      676E6564 
 1367      20696E74 
 1367      00
 1368              	.LASF17:
 1369 01fb 50574D5F 		.ascii	"PWM_MOTORS_Enable\000"
 1369      4D4F544F 
 1369      52535F45 
 1369      6E61626C 
 1369      6500
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 42


 1370              	.LASF7:
 1371 020d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1371      206C6F6E 
 1371      6720756E 
 1371      7369676E 
 1371      65642069 
 1372              	.LASF21:
 1373 0224 50574D5F 		.ascii	"PWM_MOTORS_WritePeriod\000"
 1373      4D4F544F 
 1373      52535F57 
 1373      72697465 
 1373      50657269 
 1374              	.LASF18:
 1375 023b 50574D5F 		.ascii	"PWM_MOTORS_Stop\000"
 1375      4D4F544F 
 1375      52535F53 
 1375      746F7000 
 1376              	.LASF27:
 1377 024b 6374726C 		.ascii	"ctrl\000"
 1377      00
 1378              	.LASF15:
 1379 0250 73697A65 		.ascii	"sizetype\000"
 1379      74797065 
 1379      00
 1380              	.LASF6:
 1381 0259 6C6F6E67 		.ascii	"long long int\000"
 1381      206C6F6E 
 1381      6720696E 
 1381      7400
 1382              	.LASF29:
 1383 0267 50574D5F 		.ascii	"PWM_MOTORS_WriteControlRegister\000"
 1383      4D4F544F 
 1383      52535F57 
 1383      72697465 
 1383      436F6E74 
 1384              	.LASF37:
 1385 0287 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_MOTORS.c\000"
 1385      72617465 
 1385      645F536F 
 1385      75726365 
 1385      5C50536F 
 1386              	.LASF24:
 1387 02ab 50574D5F 		.ascii	"PWM_MOTORS_WriteCompare1\000"
 1387      4D4F544F 
 1387      52535F57 
 1387      72697465 
 1387      436F6D70 
 1388              	.LASF20:
 1389 02c4 50574D5F 		.ascii	"PWM_MOTORS_WriteCounter\000"
 1389      4D4F544F 
 1389      52535F57 
 1389      72697465 
 1389      436F756E 
 1390              	.LASF2:
 1391 02dc 73686F72 		.ascii	"short int\000"
 1391      7420696E 
 1391      7400
ARM GAS  C:\Users\Cino\AppData\Local\Temp\ccpKHnvG.s 			page 43


 1392              	.LASF33:
 1393 02e6 50574D5F 		.ascii	"PWM_MOTORS_ReadCompare1\000"
 1393      4D4F544F 
 1393      52535F52 
 1393      65616443 
 1393      6F6D7061 
 1394              	.LASF34:
 1395 02fe 50574D5F 		.ascii	"PWM_MOTORS_ReadCompare2\000"
 1395      4D4F544F 
 1395      52535F52 
 1395      65616443 
 1395      6F6D7061 
 1396              	.LASF4:
 1397 0316 6C6F6E67 		.ascii	"long int\000"
 1397      20696E74 
 1397      00
 1398              	.LASF11:
 1399 031f 63686172 		.ascii	"char\000"
 1399      00
 1400              	.LASF14:
 1401 0324 6C6F6E67 		.ascii	"long double\000"
 1401      20646F75 
 1401      626C6500 
 1402              	.LASF0:
 1403 0330 7369676E 		.ascii	"signed char\000"
 1403      65642063 
 1403      68617200 
 1404              	.LASF25:
 1405 033c 636F6D70 		.ascii	"compare\000"
 1405      61726500 
 1406              	.LASF16:
 1407 0344 50574D5F 		.ascii	"PWM_MOTORS_Start\000"
 1407      4D4F544F 
 1407      52535F53 
 1407      74617274 
 1407      00
 1408              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
